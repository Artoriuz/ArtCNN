// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(-0.0034217108, -0.013032992, -0.0147677455, -0.051989064);
    V4 result1 = V4(-0.027175335, -0.0058977553, 0.0043106847, -0.0025464462);
    V4 result2 = V4(0.031404115, -0.0037436953, -0.005443443, -0.003938218);
    V4 result3 = V4(0.0031688788, -0.00056534435, 0.01302484, -0.0593559);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.017355725, -0.1272226, 0.013794183, 0.035479683) * inp_0_0_0;
    result0 += V4(0.04159214, 0.15772346, 0.123082735, 0.12617736) * inp_0_1_0;
    result0 += V4(-0.006001073, 0.1023707, -0.10597256, 0.06403432) * inp_0_2_0;
    result0 += V4(0.0013455746, 0.06548326, 0.020499984, 0.16880694) * inp_0_0_1;
    result0 += V4(-0.044097528, -0.075467475, -0.37467578, 0.28208548) * inp_0_1_1;
    result0 += V4(-0.20835781, -0.1304871, 0.11732407, 0.11159204) * inp_0_2_1;
    result0 += V4(0.005363703, 0.1340314, -0.03256456, 0.09441861) * inp_0_0_2;
    result0 += V4(0.06502655, -0.11767157, 0.22592723, -0.011395368) * inp_0_1_2;
    result0 += V4(0.15753949, 0.01165136, 0.0077063562, 0.09315343) * inp_0_2_2;
    result1 += V4(0.08034301, -0.074152365, -0.09804304, 0.015302619) * inp_0_0_0;
    result1 += V4(-0.068057716, -0.016083555, -0.013927321, -0.19129129) * inp_0_1_0;
    result1 += V4(0.050047427, 0.11752872, 0.06644818, 0.1402565) * inp_0_2_0;
    result1 += V4(-0.047512747, 0.08240356, 0.10208728, -0.027831465) * inp_0_0_1;
    result1 += V4(0.11171128, -0.173408, 0.1324849, 0.18125615) * inp_0_1_1;
    result1 += V4(-0.12865543, 0.24094024, -0.19069876, -0.12353704) * inp_0_2_1;
    result1 += V4(0.058193427, -0.014857029, 0.02566868, 0.0031201437) * inp_0_0_2;
    result1 += V4(0.07173001, -0.23135054, -0.1230302, 0.027145829) * inp_0_1_2;
    result1 += V4(-0.08399424, 0.064099506, 0.09394689, -0.022571975) * inp_0_2_2;
    result2 += V4(-0.060677122, 0.12638353, -0.11492292, -0.06448084) * inp_0_0_0;
    result2 += V4(0.09193593, -0.027439637, 0.15869, -0.0101908455) * inp_0_1_0;
    result2 += V4(0.0656743, -0.008791743, 0.015995275, -0.008406226) * inp_0_2_0;
    result2 += V4(-0.1780776, 0.3185613, 0.327611, 0.18318714) * inp_0_0_1;
    result2 += V4(-0.29378676, -0.72771597, -0.33143166, -0.07906369) * inp_0_1_1;
    result2 += V4(0.1464831, 0.12108001, -0.056621436, -0.029098725) * inp_0_2_1;
    result2 += V4(0.03788559, 0.119298585, -0.12824391, -0.032265544) * inp_0_0_2;
    result2 += V4(0.20911208, 0.07675744, 0.1095804, 0.14364682) * inp_0_1_2;
    result2 += V4(-0.15374622, -0.011014488, 0.019215362, -0.09952276) * inp_0_2_2;
    result3 += V4(0.054233838, -0.10239603, 0.2310311, -0.09560392) * inp_0_0_0;
    result3 += V4(-0.16309689, 0.18183963, 0.3665231, 0.17594658) * inp_0_1_0;
    result3 += V4(0.008716498, -0.03386698, 0.06706068, 0.046588052) * inp_0_2_0;
    result3 += V4(0.039412256, -0.0067339004, 0.028306916, -0.19841406) * inp_0_0_1;
    result3 += V4(0.016865809, -0.16341674, -0.4262838, 0.009490841) * inp_0_1_1;
    result3 += V4(0.035599563, 0.12815899, -0.16931285, 0.20523645) * inp_0_2_1;
    result3 += V4(-0.06359925, 0.11382599, -0.05165437, -0.08452815) * inp_0_0_2;
    result3 += V4(0.090967625, -0.051854506, -0.15347196, -0.0032057308) * inp_0_1_2;
    result3 += V4(-0.018586067, -0.06928295, -0.010201286, 0.13432404) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0039001424, 0.011704859, 0.07068047, 0.014668223);
    V4 result1 = V4(0.050426736, -0.006426879, -0.006302912, 0.016379612);
    V4 result2 = V4(0.015031309, 0.030278023, 0.0072358884, 0.013653899);
    V4 result3 = V4(0.01759964, 0.0032511232, 0.0075689075, -0.02917903);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06055208, 0.4023973, -0.039941672, 0.025026722, 0.117629305, 0.11994269, 0.059539683, -0.024838531, -0.32149807, 0.24027972, -0.065556705, -0.08583512, -0.012618429, -0.06360244, -0.13347091, 0.02800092) * inp_0_0_0;
    result0 += M4(-0.26175737, 0.10852047, 0.047071394, 0.020460756, 0.63412327, 0.20369908, -0.015737327, 0.1009211, -0.591593, -0.54107153, -0.06856534, -0.08016476, -0.38561782, 0.10181499, 0.045049325, 0.11032035) * inp_0_1_0;
    result0 += M4(0.3138127, -0.084319726, 0.12643288, -0.011693059, 0.13404876, -0.16417174, 0.19005804, -0.0895551, -0.2647874, 0.037068747, -0.03799033, 0.06073632, -0.100580096, -0.014307862, -0.09462104, -0.06421259) * inp_0_2_0;
    result0 += M4(-0.1756089, -0.08695333, -0.010817981, -0.1784846, -0.24934383, -0.16997708, 0.2296542, -0.18738173, 0.25892064, 0.15723631, -0.00617573, 0.020698987, 0.021466024, 0.08504118, -0.013704561, 0.024918422) * inp_0_0_1;
    result0 += M4(-0.09176648, -0.15269808, -0.0415013, -0.1104896, -0.4798826, 0.25430635, 0.08548038, -0.038624737, -0.49169663, 0.67245203, 0.019649234, -0.39480248, 0.024319865, 0.038619988, 0.11714667, 0.12797453) * inp_0_1_1;
    result0 += M4(-0.41135594, 0.024221536, -0.07961285, -0.066806525, -0.41371647, -0.104912475, -0.055972997, -0.042835988, 0.17851688, 0.11908058, 0.070153944, -0.1390678, -0.059025668, 0.07132075, 0.06386127, 0.03728893) * inp_0_2_1;
    result0 += M4(0.091922686, 0.060259253, -0.003183932, 0.22981974, -0.10365741, -0.09454743, 0.01057653, 0.30466983, 0.33909145, -0.20400941, 0.040742423, -0.105717465, -0.064174145, -0.058577012, -0.11559791, -0.022077234) * inp_0_0_2;
    result0 += M4(0.019224409, 0.03139768, -0.028198615, 0.13755585, 0.0719188, 0.08488312, -0.059940033, 0.50344163, 0.29403603, -0.1621827, -0.24938683, 0.91105896, -0.012946836, -0.039360188, -0.059541836, 0.024109209) * inp_0_1_2;
    result0 += M4(-0.21644367, -0.047781244, 0.013478069, 0.051689308, 0.1872986, -0.24122746, -0.112037934, -0.17143029, 0.07032951, -0.09959938, 0.08410245, -0.079813674, 0.02651549, -0.07303581, 0.044329178, -0.08106807) * inp_0_2_2;
    result1 += M4(-0.09461768, -0.020552479, 0.06686701, 0.19091232, -0.059617653, 0.0406596, 0.038815137, 0.06706008, 0.07370444, -0.036961667, -0.00040531583, 0.022258576, 0.0787827, -0.071452856, -0.061967418, -0.12581892) * inp_0_0_0;
    result1 += M4(0.14635105, -0.03578827, 0.10160412, -0.07238729, -0.1416483, 0.12935945, 0.16946791, 0.062340826, -0.053937998, 0.010534412, -0.0058468636, -0.0064014103, 0.14324678, -0.05545282, -0.11505004, -0.045194328) * inp_0_1_0;
    result1 += M4(0.101066045, 0.055744972, 0.055874325, -0.114027426, -0.10058522, 0.30144045, -0.011657711, -0.03277972, 0.086373314, 0.1208038, -0.09315613, 0.11031629, -0.11396184, -0.0374678, -0.060418602, 0.15530592) * inp_0_2_0;
    result1 += M4(-0.028825108, 0.24700715, -0.06061584, 0.39584014, -0.08123004, -0.035858996, 0.16808851, 0.18325719, -0.038478214, 0.30455783, 0.00038816596, 0.07296102, 0.06341645, -0.060367137, -0.03671101, -0.111709595) * inp_0_0_1;
    result1 += M4(0.13659087, -0.1972435, 0.24515499, -0.030618962, 0.19897139, -0.24098723, -0.052745063, -0.11286986, -0.18904369, 0.1531614, 0.9636047, -0.039314106, 0.17536178, 0.07555577, -0.110882424, -0.086408176) * inp_0_1_1;
    result1 += M4(0.09105794, -0.16890027, -0.056219943, -0.09889173, -0.04747413, -0.17415062, 0.23796694, -0.052014083, 0.43047637, -0.17311369, 0.10779327, 0.06084627, -0.20665504, 0.09376652, -0.030814432, 0.027168812) * inp_0_2_1;
    result1 += M4(0.03355884, -0.056050055, -0.07622262, -0.19078134, 0.16560972, -0.4901743, -0.1598982, -0.07453915, 0.057638012, 0.027226388, -0.07134545, 0.25452378, -0.017355535, -0.061945822, 0.1247322, -0.04425715) * inp_0_0_2;
    result1 += M4(0.12514713, -0.11924816, -0.14085871, -0.015449593, 0.104149476, 0.027507717, -0.5142952, -0.32027623, -0.005781021, -0.4561064, -0.6849962, -0.18093291, 0.08144803, 0.04319328, 0.08854471, 0.07219466) * inp_0_1_2;
    result1 += M4(0.19280432, -0.08726464, -0.08412812, -0.000388088, -0.0038850065, -0.0021563626, -0.051879767, -0.06807696, 0.04231139, -0.115699075, -0.12895232, -0.08994893, -0.14166664, -0.12018102, 0.06893301, 0.099851884) * inp_0_2_2;
    result2 += M4(-0.22902311, -0.08193343, -0.45453236, -0.7658536, 0.07851574, -0.07202502, 0.023303412, -0.42789537, -0.22120945, -0.20741056, 0.36588994, -0.3172954, 0.013688637, -0.08481341, 0.037112158, 0.036030132) * inp_0_0_0;
    result2 += M4(0.097805135, 0.12981318, 0.08934071, 0.024404969, 0.00807831, 0.0119895665, 0.01594096, -0.190621, 0.12813497, 0.17351824, 0.06010411, -0.50231546, 0.059594627, 0.111761816, -0.05239048, -0.10355281) * inp_0_1_0;
    result2 += M4(0.09349453, 0.3382766, -0.092165284, -0.21123143, 0.051804174, 0.059796587, 0.13371345, -0.37149623, -0.06660308, 0.3030439, -0.2897926, -0.19645216, -0.052810162, -0.17317434, -0.10464716, -0.027914112) * inp_0_2_0;
    result2 += M4(-0.117752165, -0.11874362, 0.6008578, -0.1002829, -0.012828548, -0.15454498, 0.43036738, -0.081211776, -0.08010755, -0.13072628, -0.4951275, 0.42225957, 0.07297397, 0.08863404, -0.032640725, 0.08761746) * inp_0_0_1;
    result2 += M4(-0.1464991, 0.033606857, 0.13296938, 0.15827858, -0.11315324, 0.110208735, 0.14366992, 0.08668618, -0.48334792, -0.13915901, 0.14471246, 0.16483186, 0.22739616, 0.087395854, 0.12395691, 0.07090149) * inp_0_1_1;
    result2 += M4(-0.18036196, -0.013568546, 0.22526689, -0.059802514, -0.050235685, 0.32803464, -0.06137091, 0.120649114, -0.0906347, 0.27005905, -0.03973339, 0.18661389, 0.09537638, -0.045963377, 0.08843222, 0.15282935) * inp_0_2_1;
    result2 += M4(-0.14897764, -0.038672533, -0.23027472, 0.1299164, 0.10234016, -0.11556188, -0.49757382, 0.32956216, 0.025521366, 0.02858246, 0.5509006, -0.05472962, -0.07635566, -0.020362116, -0.0022329958, -0.09170401) * inp_0_0_2;
    result2 += M4(0.08498683, -0.051317412, 0.034837414, 0.15279382, 0.46250287, 0.07494946, -0.07858968, 0.18243103, 0.54903364, 0.0077071334, -0.021151805, 0.005774744, -0.19975936, 0.110844776, -0.023770893, -0.15675816) * inp_0_1_2;
    result2 += M4(0.017956574, 0.16725753, -0.104840234, -0.010804116, -0.07714145, 0.095797755, -0.114508286, 0.025927067, 0.0045455997, -0.113341376, -0.14834262, -0.017413931, -0.074370295, -0.09274458, -0.03761155, -0.06294184) * inp_0_2_2;
    result3 += M4(0.2049806, 0.14235608, 0.20913273, -0.15958573, 0.0870034, -0.080866426, 0.14393786, 0.072776176, 0.045422517, -0.14501189, -0.12699941, -0.016366268, -0.02767687, -0.041157786, -0.004578503, 0.16063029) * inp_0_0_0;
    result3 += M4(-0.13183656, -0.046519145, -0.092379786, -0.048450444, 0.030547267, 0.0262009, 0.11237172, 0.09465746, 0.113963984, -0.07315889, -0.3573019, 0.013286302, -0.0026151221, 0.06574586, -0.0051388964, -0.049954455) * inp_0_1_0;
    result3 += M4(-0.21297617, 0.09480295, 0.075719975, 0.0657791, -0.052385997, -0.09845598, 0.060237356, 0.023581322, -0.20921612, -0.28905487, 0.15938076, 0.07484075, 0.008621241, 0.06307118, -0.0063695996, -0.09781311) * inp_0_2_0;
    result3 += M4(0.23144202, 0.035913695, -0.31303662, 0.12714796, 0.17722037, -0.10039958, 0.07734262, 0.14688319, 0.10788693, -0.17197393, 0.060889736, -0.48254734, -0.14969485, -0.12528637, 0.032941747, 0.10260647) * inp_0_0_1;
    result3 += M4(-0.0706212, 0.013930257, -0.028069103, -0.0457902, -0.31732836, 0.083979174, -0.19923079, 0.14809608, 0.47240517, 0.053513113, 0.45918575, 0.24358545, -0.02184454, 0.107647985, -0.054980777, 0.02022716) * inp_0_1_1;
    result3 += M4(-0.0050764633, 0.082227506, -0.1151399, 0.045742806, -0.35881484, -0.14857087, -0.3011396, -0.015302222, -0.3634841, -0.33028316, 0.036353666, 0.013846636, 0.14654653, -0.116726995, -0.09362897, -0.030130018) * inp_0_2_1;
    result3 += M4(0.030837122, 0.051494196, -0.080059804, 0.015506094, 0.042347074, 0.5679895, 0.16347359, 0.06947753, -0.1558564, -0.070636734, 0.18636942, -0.0341696, -0.072464526, -0.035407178, -0.0401845, 0.04224141) * inp_0_0_2;
    result3 += M4(-0.020493498, -0.29054672, 0.012533852, -0.0687587, 0.008250127, 0.04034954, -0.59834015, -0.14662358, 0.003136157, 0.8849247, -0.26526067, 0.10960483, 0.020460937, 0.13531154, 0.0039795605, -0.011966754) * inp_0_1_2;
    result3 += M4(-0.09269886, 0.18160398, -0.25136912, 0.08006275, 0.12219142, 0.10119408, 0.11254251, -0.14468426, -0.08772762, 0.15980971, -0.32625505, 0.001744469, 0.04755529, 0.008746624, -0.011831145, -0.014572004) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.8766275, -0.03278345, -0.07274605, 0.047310963, -0.2799822, 0.0764049, 0.23511523, -0.026807599, -0.78000486, 0.5759064, -0.0904355, -0.0379449, -0.3566732, 0.6999416, -0.056405768, -0.0116031915) * inp_1_0_0;
    result0 += M4(-0.36025122, 0.12161484, 0.08720317, 0.027120177, 0.65008247, -0.37727535, -0.026558528, -0.24006437, 0.81805193, -0.08773047, 0.03500579, -0.0459696, -0.29915267, -0.10194633, -0.13005698, 0.03484528) * inp_1_1_0;
    result0 += M4(0.28294396, 0.21392995, -0.07402611, 0.02448612, 0.18849073, 0.049328953, 0.018300805, 0.03153707, -0.43033245, -0.45439973, 0.103170335, 0.16975518, 0.05360967, -0.101528555, -0.19358517, -0.023100216) * inp_1_2_0;
    result0 += M4(-0.3618065, -0.07699396, 0.111002006, -0.10635401, -0.124216594, -0.019767487, -0.15530564, 0.036059733, -0.049460333, -0.3545939, -0.02143922, 0.10383173, -0.35827556, 0.49069446, 0.2073556, 0.14474435) * inp_1_0_1;
    result0 += M4(0.19022872, -0.38032666, 0.118406326, 0.0907159, -0.101746164, 0.2648977, 0.023742285, 0.078173585, 0.009377905, 0.2573197, 0.12951738, -0.026984178, 0.8833483, -0.7648104, -0.21672921, 0.27863157) * inp_1_1_1;
    result0 += M4(-0.17918757, 0.06925319, -0.12725423, -0.17224653, -0.20928574, -0.05284427, -0.13650253, 0.10654556, -0.11951489, 0.30485895, -0.0875369, -0.16422802, 0.44236884, 0.5908852, -0.06429654, 0.13146724) * inp_1_2_1;
    result0 += M4(0.038810536, 0.14693326, -0.04308188, 0.12151634, 0.0992324, -0.15794101, -0.044739526, 0.06899047, 0.2836171, 0.14164206, -0.18045413, -0.04543648, -0.026136048, 0.025720896, -0.30190685, 0.30746868) * inp_1_0_2;
    result0 += M4(0.103383616, -0.035244543, 0.11942731, -0.16257232, 0.052977305, -0.009137919, -0.0024130705, 0.17013367, -0.043340612, 0.08600821, 0.12650548, 0.1290501, -0.07898112, -0.021304797, 0.34790653, -0.906739) * inp_1_1_2;
    result0 += M4(-0.13200949, 0.15811682, -0.2434606, 0.003647896, 0.15352581, -0.031839352, -0.049937613, -0.16027378, 0.22664711, -0.41157195, 0.13476518, -0.094703294, 0.025939688, -0.44579202, 0.0879159, -0.15198903) * inp_1_2_2;
    result1 += M4(-0.31784934, -0.16029675, 0.014129548, -0.0023456337, 0.32535458, 0.4184622, 0.08455765, 0.16111043, 0.12910506, 0.10883708, 0.2112621, -0.121103846, 0.011468999, -0.056711875, -0.25282437, -0.14325535) * inp_1_0_0;
    result1 += M4(0.11051014, 0.034186315, -0.06418442, -0.022111902, -0.23395838, 0.11428608, 0.18173909, -0.10134513, 0.10480006, -0.05191984, 0.18770652, 0.2797757, 0.139309, -0.17438002, -0.01287237, 0.02913593) * inp_1_1_0;
    result1 += M4(0.13644022, 0.07253382, 0.08768766, -0.051811885, -0.055902105, -0.07154701, 0.12548889, -0.018852264, -0.28075108, 0.28647792, -0.17866129, 0.06572987, 0.17515068, -0.15498228, -0.055482335, -0.020924756) * inp_1_2_0;
    result1 += M4(-0.023435159, -0.61996794, 0.05634147, -0.36913484, 0.13594984, 0.45465845, 0.030501066, 0.4824891, -0.109876335, -0.14607649, -0.061580066, 0.13699254, -0.25319457, -0.47763705, -0.022529785, -0.46880105) * inp_1_0_1;
    result1 += M4(0.36504522, 0.07229885, -0.16849867, 0.17082325, -0.29847917, 0.025948271, -0.13502331, -0.32763422, 0.13390617, -0.2162393, -0.40325984, -0.28783068, 0.39524046, 0.083164826, -0.22546382, 0.122321576) * inp_1_1_1;
    result1 += M4(0.2548078, 0.07121781, 0.14384514, 0.013845708, -0.09699479, 0.068760455, 0.010507272, -0.16193154, -0.24528337, -0.19400375, 0.14286184, 0.14679086, 0.10306438, 0.08979767, -0.15399888, -0.06926055) * inp_1_2_1;
    result1 += M4(-0.15111503, -0.4859285, -0.018700995, -0.28639537, 0.34599802, 0.4759296, -0.15379132, 0.9540678, -0.18731648, -0.109482616, -0.08852982, -0.17709568, 0.22913356, 0.03979304, -0.071747236, 0.3174932) * inp_1_0_2;
    result1 += M4(0.101020664, 0.02115231, 0.19674191, 0.24317238, -0.16202392, -0.044214778, -0.36206928, -0.20424137, 0.25549766, 0.2812148, 0.08302868, -0.28674203, -0.07350931, 0.65434635, 0.94783723, 0.26165035) * inp_1_1_2;
    result1 += M4(0.2240392, -0.10689696, -0.2023312, -0.14763959, -0.25139326, 0.13544671, -0.032198988, 0.01017424, -0.059350006, 0.11617318, 0.16625836, 0.0683385, -0.22334011, -0.13069183, 0.19545208, 0.07213477) * inp_1_2_2;
    result2 += M4(-0.07326224, 0.01613177, 0.6198661, -0.5172335, 0.23475827, 0.13056993, -0.24892779, 0.7349069, -0.17346981, -0.092626974, -0.94132864, -0.29564747, -0.06866205, -0.11152186, 0.30074152, -0.65773517) * inp_1_0_0;
    result2 += M4(-0.050737824, 0.1243303, 0.19584474, -0.04454785, -0.10267797, -0.26722163, 0.002699325, -0.16422722, -0.195195, 0.19158597, 0.14722167, 0.16367394, -0.21672527, -0.018755356, 0.033582654, -0.0740067) * inp_1_1_0;
    result2 += M4(0.0023725883, -0.0071639954, 0.34067893, -0.062032625, 0.019394819, 0.00083315803, 0.12868686, 0.09790405, 0.1943796, -0.30152544, -0.116193235, 0.16248144, 0.093360946, 0.03520784, -0.11227356, 0.5977628) * inp_1_2_0;
    result2 += M4(-0.37585923, -0.058265124, -0.28127515, -0.36480495, 0.2685026, 0.06344658, 0.007626552, 0.4998172, 0.0039062353, -0.077210285, 1.3086716, -0.13682751, -0.54144305, -0.13126557, 0.7321748, 0.24055272) * inp_1_0_1;
    result2 += M4(-0.06308649, 0.24020243, -0.38899204, -0.19424556, -0.024402317, -0.2663695, 0.0005716789, 0.058656644, 0.49825156, 0.03276643, 0.24311207, -0.07267594, 0.2105089, 0.13210218, -0.3433501, -0.52764595) * inp_1_1_1;
    result2 += M4(-0.060234528, -0.12277555, -0.1847663, 0.014878638, 0.11159259, 0.19921356, 0.073975585, -0.079521425, 0.109011635, 0.11284591, 0.06300515, -0.08873108, -0.121236496, 0.03956759, -0.040326044, 0.45371753) * inp_1_2_1;
    result2 += M4(-0.080027595, -0.19825208, 0.05632097, -0.24502441, 0.30146343, -0.04715106, -0.057773616, 0.5021341, -0.075211115, -0.11537281, -1.2327908, 0.22953978, 0.7186916, -0.42145556, -0.8191982, -0.32876256) * inp_1_0_2;
    result2 += M4(0.26012126, 0.029895224, -0.03245512, 0.15469578, 0.19402894, -0.20834891, -0.13991222, 0.21793588, -0.17661065, 0.02378984, 0.21320465, 0.121024296, -0.39389935, 0.30899376, 0.05769315, 0.067903936) * inp_1_1_2;
    result2 += M4(-0.0037294545, -0.015132446, -0.056965724, 0.12638937, -0.033872552, -0.03127083, -0.054378267, -0.045160774, -0.15795065, 0.20091571, 0.15923515, -0.007681015, -0.19942142, 0.22839269, -0.0055801813, 0.14404464) * inp_1_2_2;
    result3 += M4(0.00073574757, 0.15340349, 0.14829965, 0.197713, 0.00035734754, -0.10384939, -0.15195665, -0.27916965, -0.08775611, 0.2289424, 0.22618763, -0.039187275, 0.037139002, -0.011632797, -0.43661144, 0.17438595) * inp_1_0_0;
    result3 += M4(0.098301165, 0.12080671, -0.17299712, 0.03235183, 0.12554671, -0.1437443, -0.017401302, 0.1737847, 0.19842647, -0.003237153, 0.57056516, -0.086509675, 0.121171765, 0.016184263, 0.043453395, -0.029789733) * inp_1_1_0;
    result3 += M4(-0.10551503, -0.013796249, -0.16300306, 0.023776794, -0.20437658, -0.04024737, 0.017088154, 0.04020764, 0.21049929, -0.0935953, -0.18926464, 0.02857443, -0.061152842, -0.26293784, 0.16718784, 0.03741578) * inp_1_2_0;
    result3 += M4(0.035363514, 0.42567644, 0.004544172, 0.34856334, 0.059847582, -0.28197417, 0.23113546, -0.75765663, 0.20040971, -0.08638526, -0.3813472, 0.54138356, -0.07383323, 0.041985966, -0.6141828, 0.60959905) * inp_1_0_1;
    result3 += M4(-0.40403414, 0.009591103, -0.34188542, -0.06982958, 0.5970768, 0.056291025, 0.13549978, 0.3234685, -0.53354853, 0.06705661, -0.23338273, -0.15904677, -0.7608169, -0.036391318, -0.5288416, -0.57638824) * inp_1_1_1;
    result3 += M4(0.11898215, 0.083234, 0.18584852, 0.025058623, -0.18912493, -0.11162116, -0.040628783, 0.07192737, 0.011992811, -0.088456236, -0.105443805, -0.0059604724, 0.36954403, -0.12956314, 0.55043954, -0.16205904) * inp_1_2_1;
    result3 += M4(0.027498502, 0.23442198, -0.0647947, -0.08195292, -0.120554514, -0.25363648, 0.0648468, -0.061931238, -0.10457117, 0.11107527, 0.08420664, -0.15376468, 0.0035390328, 0.37179658, 0.07697731, -0.06274719) * inp_1_0_2;
    result3 += M4(-0.0511047, -0.1444687, -0.008592613, -0.120406725, 0.18012485, 0.04815998, -0.22830871, 0.10766083, -0.031314593, -0.18635032, -0.12848358, -0.12987758, 0.26473, -0.019600302, 0.7088151, 0.12724325) * inp_1_1_2;
    result3 += M4(0.05177647, 0.026280299, 0.27249148, 0.0631501, -0.02349153, -0.04968559, -0.028678125, 0.023169588, 0.142902, 0.13289955, 0.120284304, 0.050369974, -0.035043236, 0.4883327, 0.38150433, 0.039002813) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.036705047, -0.09291434, -0.07034647, 0.014714857, -0.17074221, 0.28523368, 0.031886347, -0.08911522, 0.33425343, 0.46780494, 0.010297233, -0.013126269, 0.87803656, 0.24150734, 0.0022759328, 0.0033447256) * inp_2_0_0;
    result0 += M4(-0.65546316, -0.1858368, -0.10657906, 0.043108333, -0.025283959, -0.47650728, -0.054015804, -0.039132107, 0.04858882, -0.38719308, 0.0742152, 0.033806056, -1.1112988, -0.18255003, 0.0493628, 0.09425892) * inp_2_1_0;
    result0 += M4(-0.22179814, 0.12506028, 0.14365996, -0.0005838013, -0.19358727, 0.2553399, 0.030160302, -0.029067563, -0.73136026, -0.19093397, -0.15150152, 0.053515136, 0.42686242, 0.07544383, 0.06590528, 0.014249471) * inp_2_2_0;
    result0 += M4(0.060966525, 0.19867587, -0.068581015, -0.046465438, 0.18771125, -0.020903228, -0.11209869, -0.024696354, 0.09233782, -0.47206196, 0.14375609, -0.16642469, -0.20052214, -0.045175396, 0.1784669, -0.05743766) * inp_2_0_1;
    result0 += M4(-0.1667709, 0.45943502, 0.06853499, -0.3527158, -0.060232878, 0.14863497, 0.23239617, -0.6141875, -0.16573289, 0.7054795, 0.14176634, -0.4061471, 0.2519653, 0.24098307, -0.21209192, -0.2093702) * inp_2_1_1;
    result0 += M4(-0.09499369, 0.18353899, 0.09506183, -0.03040926, 0.16998824, -0.12954114, -0.07478533, -0.094915316, 0.021412829, -0.18854868, -0.10913201, 0.20451167, -0.042774104, 0.0916371, -0.06462309, -0.021986058) * inp_2_2_1;
    result0 += M4(0.19626033, 0.016807958, -0.26964912, 0.13007861, -0.0014480413, -0.028768087, 0.019354802, 0.03469191, -0.02056912, 0.02853561, -0.04782246, 0.07989507, -0.113321416, 0.07934441, -0.07415064, 0.15758651) * inp_2_0_2;
    result0 += M4(-0.37115315, 0.057337333, -0.26315123, 0.7352271, -0.22172175, 0.15017319, 0.09465811, 0.40110263, 0.02570555, 0.010166355, -0.20519534, 0.5407193, 0.13454962, -0.2808508, 0.084483676, -0.0036271187) * inp_2_1_2;
    result0 += M4(0.116295084, -0.14939643, -0.01846568, -0.045159664, -0.08653732, 0.086230725, 0.08853336, 0.17820577, 0.18149665, -0.046918023, 0.046831924, -0.16212222, -0.06314578, -0.18339, 0.01040464, -0.01274659) * inp_2_2_2;
    result1 += M4(-0.064010814, -0.11626423, -0.20301482, -0.11899603, 0.25257728, 0.3331744, 0.10634956, 0.11432182, -0.11889171, 0.05077619, 0.06792727, 0.08818384, -0.2057741, -0.021541122, -0.20715383, 0.15568636) * inp_2_0_0;
    result1 += M4(-0.10186941, 0.20309792, 0.08033628, 0.06917748, 0.073649116, 0.06744194, 0.23190269, -0.09426607, 0.1107457, -0.059201118, -0.12618676, -0.0861537, 0.10051351, 0.16242826, -0.14745708, -0.054329153) * inp_2_1_0;
    result1 += M4(0.06783679, 0.008005541, -0.09071963, 0.029273449, -0.07545447, 0.17927216, -0.06957236, -0.041968938, -0.19690606, -0.25446093, 0.17690395, 0.05014741, -0.05727226, -0.1492974, 0.15170231, -0.05264332) * inp_2_2_0;
    result1 += M4(0.11359558, 0.17724979, -0.0023980117, -0.20383382, 0.22314405, 0.2994453, -0.033838324, -0.159475, -0.13431582, 0.14347552, 0.042336974, 0.34318182, 0.046686046, 0.12375519, 0.09315024, -0.43386474) * inp_2_0_1;
    result1 += M4(-0.105632715, 0.4545289, 0.8397516, -0.0205419, -0.14520557, -0.13029508, 0.9163109, -0.092366196, 0.09901194, 0.119667016, 0.34942037, -0.3193682, 0.12775782, 0.0012967819, 0.41892883, 0.37802377) * inp_2_1_1;
    result1 += M4(0.36914518, -0.050134778, 0.038768716, 0.11072558, -0.3338787, -0.051562402, 0.16050743, -0.09860484, -0.21363357, 0.2595678, 0.19478184, 0.21424417, -0.10794147, -0.10018976, -0.15679647, 0.030538807) * inp_2_2_1;
    result1 += M4(0.20543192, -0.14526716, -0.13864343, 0.6002908, 0.16100436, 0.49663904, -0.18262997, 0.6908201, -0.25640908, -0.14188178, -0.12560856, 0.08641643, 0.014545421, -0.37611842, 0.0016976399, -0.0032502902) * inp_2_0_2;
    result1 += M4(-0.15251902, -0.28439575, -0.44842643, 0.025748933, 0.09376204, -0.18941312, -0.57277405, -0.2301425, 0.60308164, -0.015284347, -0.5553858, -0.701655, 0.10137835, 0.3707055, -0.1664355, -0.34685594) * inp_2_1_2;
    result1 += M4(0.27966687, -0.27174452, 0.036217425, 0.10671305, -0.29680622, -0.106230944, -0.16044495, 0.023282226, -0.28050014, -0.31328613, -0.075237565, 0.065591164, -0.09972489, 0.063005395, 0.12977132, 0.16834605) * inp_2_2_2;
    result2 += M4(-0.105033986, -0.0400981, 0.38895568, -0.1645191, 0.0020840238, 0.08644606, 0.084841534, -0.2614037, -0.052709755, 0.0038100004, 0.44636288, 0.0031632537, -0.043733407, 0.0036163284, 0.8788793, -0.6312468) * inp_2_0_0;
    result2 += M4(0.17508362, -0.103707775, 0.28923517, -0.92926097, 0.075771295, -0.027603112, 0.0584883, -0.28412563, 0.13155589, -0.17357834, -0.48643315, 0.4738452, 0.10722626, 0.06596581, -0.41980064, 0.26982403) * inp_2_1_0;
    result2 += M4(0.070913255, 0.0005252035, -0.24770032, -0.09844561, -0.06973744, 0.050812494, -0.089780234, 0.04972326, -0.08525319, 0.12756726, -0.35000902, -0.5798428, -0.0064079063, -0.103646815, -0.124369465, -0.09820611) * inp_2_2_0;
    result2 += M4(0.010843376, -0.09233212, -0.22408633, 0.61298877, -0.14385207, 0.05161948, -0.2289656, 0.60232085, -0.15734924, 0.053242322, 0.3711207, 0.052876845, -0.070295274, 0.0010428168, -0.2246563, -0.21776056) * inp_2_0_1;
    result2 += M4(-0.34884998, -0.20119694, 0.055116497, 0.0075577674, -0.48627928, -0.56758136, -0.14165013, -0.08419221, -0.31078973, -0.7003565, 0.19291289, -0.10814556, -0.12144451, -0.015854813, 0.34332684, -0.24836808) * inp_2_1_1;
    result2 += M4(-0.1948781, -0.07339255, 0.01102711, -0.060841102, 0.012657834, 0.6606247, 0.20236266, 0.05821426, 0.19819848, 1.0849949, 0.35452136, -0.11965989, 0.1272737, 0.045783725, -0.09991259, 0.08973904) * inp_2_2_1;
    result2 += M4(0.18198547, -0.123944394, 0.34026825, 0.051962115, 0.2360532, 0.052094292, 0.13089883, 0.32658148, 0.12171172, -0.2242764, 0.08958572, 0.4319116, 0.20306309, -0.05304728, -0.24325246, 0.65372497) * inp_2_0_2;
    result2 += M4(0.20480621, -0.011840058, -0.16777943, -0.013589086, 0.29044285, -0.20910412, -0.065596685, 0.15201214, 0.4887873, 0.11878509, -0.62859076, 0.13734621, 0.017814867, -0.10371383, -0.16627885, 0.15307231) * inp_2_1_2;
    result2 += M4(-0.060417637, -0.08589874, -0.16625097, -0.19640127, 0.05621089, -0.058743007, -0.13298558, 0.09561969, -0.245311, -0.093854, -0.0062346957, -0.07132934, -0.25463727, 0.11114011, 0.008749653, 0.11530908) * inp_2_2_2;
    result3 += M4(0.09366343, -0.16890015, -0.6898038, -0.09825294, 0.025247943, -0.12374423, -0.33186853, -0.30860138, 0.116643265, 0.02731906, -0.040524926, 0.017424455, 0.14492017, -0.116212286, -0.1192489, 0.041132305) * inp_2_0_0;
    result3 += M4(0.18175198, -0.0449298, -0.1718105, 0.0003262191, 0.2533291, -0.057008587, -0.20016094, 0.22471367, 0.068657055, -0.08440493, 0.44103476, -0.18728752, 0.019964162, 0.04922437, -0.14975233, -0.10743369) * inp_2_1_0;
    result3 += M4(0.021125061, 0.12023684, 0.20397314, 0.049049523, -0.18510588, -0.076382756, -0.004164042, 0.09303775, -0.24712959, 0.007850754, -0.32607347, -0.015334663, -0.11345983, -0.15249388, -0.14203411, 0.08357962) * inp_2_2_0;
    result3 += M4(0.03259598, -0.080247775, -0.11590894, -0.87678075, 0.07758298, -0.0755368, -0.13874517, -0.5069238, -0.08708398, -0.077210896, 0.3361723, -0.33512285, -0.14034057, 0.3312082, -0.11734651, 0.18599696) * inp_2_0_1;
    result3 += M4(0.44411314, 0.044354465, 0.18883787, 0.11435578, 0.46644107, -0.39821434, 0.4524983, 0.78054804, 0.49271706, 0.10579129, 0.7039358, 1.1412308, -0.19911225, -0.03243824, 0.030978898, 0.13225617) * inp_2_1_1;
    result3 += M4(-0.081276976, -0.08585102, -0.11640383, 0.12598605, -0.8157121, 0.071693525, -0.20122923, -0.0895651, -0.98584425, 0.32805476, 0.012381898, -0.090623215, -0.30697468, 0.34552827, 0.16248566, -0.12927617) * inp_2_2_1;
    result3 += M4(-0.021442711, -0.16101041, 0.111306004, -0.2441555, 0.049136844, -0.29570955, 0.050140884, -0.19970037, 0.040633705, -0.13644233, 0.18070613, -0.001553192, 0.16687521, -0.103794515, 0.38396928, -0.09861028) * inp_2_0_2;
    result3 += M4(0.15419616, 0.43846527, -0.0011282201, 0.1430962, 0.2054776, 0.3599864, -0.2663016, 0.2784373, 0.093887694, 0.57395786, -0.71776766, -0.28847966, 0.29541606, 0.21974933, -0.1450168, -0.13325359) * inp_2_1_2;
    result3 += M4(0.043952458, 0.08540641, -0.19092575, -0.08993677, -0.22174497, -0.17312463, -0.16874018, 0.06068343, 0.3372126, -0.26448578, -0.36906096, 0.050548982, 0.055903867, -0.45300126, 0.23618734, 0.18011966) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.3462136, 0.016525162, 0.09239663, -0.062257644, 0.6159892, -0.49789187, 0.18316345, 0.00374441, 0.13220312, -0.0070193973, 0.056943253, 0.010805924, -0.0011207401, 0.1600167, -0.024149604, -0.010613652) * inp_3_0_0;
    result0 += M4(-0.29049096, -0.16211554, -0.061524373, 0.028804455, -0.3751416, 0.33146238, -0.05623774, 0.05573926, 0.24942781, -0.12805098, -0.04341372, -0.02720274, 0.06658629, -0.10847049, 0.033837732, -0.005694782) * inp_3_1_0;
    result0 += M4(0.29254138, 0.06284461, -0.05839545, -0.07066622, 0.43313047, -0.008090364, 0.2516638, -0.13737325, -0.08903147, 0.052224245, -0.034565788, 0.017057825, 0.30503666, -0.0389632, 0.052107226, 0.0014520164) * inp_3_2_0;
    result0 += M4(-0.028211113, 0.10574556, 0.026256295, -6.779749e-05, 0.21275935, -0.26565397, -0.13198945, -0.021854106, -0.26154253, 0.034532685, 0.018039765, -0.024023328, -0.007832, -0.054660987, -0.03553059, -0.08048249) * inp_3_0_1;
    result0 += M4(0.20863277, -0.06874772, 0.0068229446, -0.011008268, -0.4652316, 0.43255234, 0.11619344, 0.052123014, -0.47769383, 0.4020397, 0.074676536, 0.013000464, -0.2442822, 0.07670153, 0.09367923, 0.07473975) * inp_3_1_1;
    result0 += M4(0.14546746, 0.03562083, -0.14525491, 0.07017848, -0.4202141, -0.22246048, -0.061955657, -0.15909502, 0.011894128, 0.0968957, -0.01824423, 0.14300738, -0.16894569, 0.10268654, 0.070169955, -0.025356123) * inp_3_2_1;
    result0 += M4(-0.10040913, -0.016977724, -0.08507489, 0.023853531, -0.11437632, 0.25796822, 0.30180302, -0.093776524, -0.11438504, -0.17969656, -0.11406561, 0.2892405, -0.09658933, 0.09216248, -0.0066167815, 0.11936138) * inp_3_0_2;
    result0 += M4(0.07075045, -0.0071160765, 0.06664645, -0.599854, 0.057925593, -0.037269607, -0.1252767, 0.4253286, 0.30258828, -0.006134464, -0.1466058, 1.4511498, -0.05199534, 0.08246067, -0.028195113, 0.3958425) * inp_3_1_2;
    result0 += M4(-0.029228838, -0.015375065, -0.038582455, -0.13810557, 0.07368858, 0.04731917, -0.11702664, -0.051257398, -0.23628585, -0.0066540563, 0.0024044514, 0.23395549, -0.08849811, 0.016987314, -0.14720154, 0.20048937) * inp_3_2_2;
    result1 += M4(0.046045076, -0.074847795, 0.08141613, 0.041014124, -0.09495961, 0.084255554, 0.08284578, 0.118704826, -0.109554686, 0.12687273, 0.08052357, 0.07817709, 0.07111913, 0.070258066, 0.06334092, -0.0071813543) * inp_3_0_0;
    result1 += M4(-0.12292034, -0.06378903, -0.13967979, -0.023061663, 0.007191872, 0.11970648, 0.090462595, 0.17640279, 0.044065136, -0.21019189, -0.0966327, -0.05064908, -0.25459272, -0.045858983, 0.0065645203, 0.06458238) * inp_3_1_0;
    result1 += M4(-0.16590492, -0.10825926, 0.111352935, -0.011284742, -0.19500253, 0.14697467, 0.040772565, -0.11383335, 0.07871707, -0.08319522, -0.016547095, -0.031543117, 0.2278967, -0.039260194, -0.03887127, -0.078431964) * inp_3_2_0;
    result1 += M4(0.0028366202, 0.042985737, -0.031008003, -0.087725915, 0.31824964, 0.027598137, 0.13742557, -0.28766522, -0.29870683, 0.13982283, -0.0213776, 0.30405334, 0.19444375, 0.44835305, 0.010145289, 0.45901668) * inp_3_0_1;
    result1 += M4(-0.02086944, 0.031675518, 0.05618238, 0.11856581, -0.08330224, -0.056077406, 0.07015672, 0.11522322, 0.0047762687, -0.02963937, -0.12576275, -0.1956844, -0.35690847, 0.016050532, -0.015134611, 0.06747572) * inp_3_1_1;
    result1 += M4(-0.010096019, -0.04740733, 0.00977548, -0.07289515, -0.044013094, -0.33122382, 0.11788507, -0.028387325, 0.03426112, -0.029769411, 0.030298207, -0.08690451, 0.5111281, -0.026621427, 0.056268, 0.003822694) * inp_3_2_1;
    result1 += M4(0.28293002, 0.28224558, 0.05617075, 0.070584506, -0.045078013, 0.2920692, -0.04810211, 0.31266257, 0.00055960304, -0.8528551, -0.23963022, 0.28015333, 0.14127104, 0.14075081, -0.10473576, 0.41918334) * inp_3_0_2;
    result1 += M4(-0.043323986, 0.2180289, 0.46299985, 0.05881075, -0.18390036, -0.10595848, -0.422178, -0.300837, 0.56929153, -0.6218426, -1.0597719, -0.24260044, -0.3182442, -0.16105892, -0.13492231, -0.016584566) * inp_3_1_2;
    result1 += M4(-0.26706222, 0.029592626, 0.15557869, 0.026698925, 0.019199872, 0.024129413, -0.056596465, -0.029504238, 0.058126755, -0.2869603, -0.22633038, -0.07339428, 0.2547111, -0.1858129, -0.10155046, -0.027542448) * inp_3_2_2;
    result2 += M4(0.022862887, 0.0714956, 0.29393855, 0.15313789, 0.2752571, 0.10119249, 0.614441, 0.23401065, 0.035895888, -0.0071473042, -0.18609087, 0.32011536, -0.030826718, 0.044555824, 0.022357492, 0.3937869) * inp_3_0_0;
    result2 += M4(0.13531977, -0.13106574, 0.09865848, -0.124346375, -0.14779356, -0.045474026, -0.039523754, -0.6072563, -0.095280565, -0.07077234, 0.07457895, 0.106179126, -0.008165933, -0.13554893, -0.04269671, -0.0069479486) * inp_3_1_0;
    result2 += M4(0.086244866, 0.3297561, 0.14602944, 0.14205597, -0.011189718, -0.14197323, 0.20291023, -0.1428334, 0.03464854, 0.1375054, -0.003736814, -0.055214662, 0.0845341, 0.1379161, 0.049468324, -0.11953334) * inp_3_2_0;
    result2 += M4(-0.039104737, 0.015962403, -0.39470214, -0.0640337, 0.12831718, 0.29462278, -0.69740874, 0.16494447, 0.09504477, -0.14135368, 0.045298398, -0.0049537886, 5.3267107e-05, 0.08361215, 0.003988506, -0.06142588) * inp_3_0_1;
    result2 += M4(-0.096652664, -0.15770508, -0.25704983, -0.46862528, 0.15062745, -0.2987621, 0.076733015, 0.14512089, -0.13459258, 0.08518688, -0.008006187, 0.05520833, 0.065043464, -0.35452875, -0.0036049562, 0.091129236) * inp_3_1_1;
    result2 += M4(-0.09636501, 0.037369203, 0.033017993, -0.040950015, -0.14291777, 0.052459594, -0.35316244, 0.14503294, 0.15703355, 0.22202024, 0.1390026, -0.24387476, -0.17866968, -0.16135144, -0.10487261, 0.044234745) * inp_3_2_1;
    result2 += M4(0.039288502, 0.06537318, 0.045680057, 0.3878776, -0.07316467, 0.086495906, 0.32721764, 0.27052993, 0.096167594, -0.106474325, 0.16452433, -0.09832399, 0.12816782, -0.027749639, 0.14623205, 0.044751864) * inp_3_0_2;
    result2 += M4(-0.37236294, -0.110878445, -0.121135056, 0.1743552, 0.27660078, -0.06515891, -0.4396236, -0.091299, 0.6432696, 0.15303198, 0.029317513, 0.07582662, 0.19827214, -0.14925383, 0.1392485, -0.0096434895) * inp_3_1_2;
    result2 += M4(-0.43889394, -0.030802844, 0.11733344, 0.13830414, -0.010398212, -0.056065854, 0.1954452, -0.09110237, 0.22371982, -0.122344956, -0.1687735, -0.03813335, 0.14749728, 0.18036543, -0.030520499, -0.049512055) * inp_3_2_2;
    result3 += M4(-0.0052121626, -0.005668635, -0.12482075, 0.06682599, -0.08800342, -0.3260873, 0.072621375, 0.078286655, 0.023658741, 0.003500789, 0.06741546, -0.09145012, -0.019546898, -0.047540482, -0.07622136, -0.13318981) * inp_3_0_0;
    result3 += M4(0.044348706, -0.099383496, -0.060695466, 0.038951, -0.022331221, -0.006175181, -0.25582445, 0.14382863, -0.043275118, 0.09270086, 0.17141274, 0.095118985, 0.18525288, -0.0020135308, -0.11628532, -0.004465248) * inp_3_1_0;
    result3 += M4(-0.15905266, 0.02839051, -0.11179645, 0.01663307, -0.092102215, 0.13552943, -0.093444616, 0.06291291, -0.045943215, -0.056321226, -0.07377208, -0.00345473, 0.066993654, 0.033443954, -0.08109629, -0.0005996353) * inp_3_2_0;
    result3 += M4(-0.05190733, 0.27988547, 0.18751527, -0.005844109, -0.031382643, 0.23454939, 0.26836717, -0.44854742, 0.13779779, -0.07917714, 0.007034974, -0.20769517, 0.107941344, -0.024893567, 0.057298567, -0.36715043) * inp_3_0_1;
    result3 += M4(0.1626871, -0.05147944, -0.041432735, 0.2000922, 0.59524953, 0.044829182, 0.024185311, -0.03140724, 0.11317419, 0.1346931, 0.2786316, 0.22542585, 0.13217981, 0.0347176, -0.021780545, -0.61556864) * inp_3_1_1;
    result3 += M4(-0.12306976, 0.15334892, 0.29165426, 0.04806543, -0.17082639, 0.08360419, 0.021110602, 0.0334088, -0.35096657, 0.018681044, -0.32405356, 0.16981405, 0.16941614, 0.10131986, 0.26609835, 0.005119907) * inp_3_2_1;
    result3 += M4(0.047676455, -0.3654892, -0.08525811, -0.14701954, 0.0072314963, -0.22132982, 0.0041501257, -0.097919375, 0.0040422627, 0.36146685, -0.20188613, -0.059726816, 0.09177452, -0.19359957, -0.12890916, -0.15412821) * inp_3_0_2;
    result3 += M4(0.09699574, -0.5304722, 0.3171832, -0.10205124, -0.12602815, 0.0431491, -0.4999099, 0.017314838, 0.12508325, 0.5761739, -0.43542853, 0.114250466, 0.104228206, 0.066583805, 0.031093018, -0.02785667) * inp_3_1_2;
    result3 += M4(-0.18692051, -0.3204207, 0.13332608, 0.06206617, 0.050053127, -0.08102545, 0.24761586, 0.14059691, -0.21033093, 0.13181911, -0.27170202, -0.033438683, -0.023952555, 0.14210288, -0.07733213, 0.07072727) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.010155336, -0.015944311, -0.018873105, 0.028441943);
    V4 result1 = V4(-0.00028240238, 0.016499477, -0.01517745, 0.01740939);
    V4 result2 = V4(0.026138023, 0.05823488, -0.049034752, -0.0053411284);
    V4 result3 = V4(-0.040873103, -0.024268664, 0.002712963, 0.01499337);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.025253015, 0.13759162, -0.07011692, 0.03964373, 0.043518376, -0.0439973, 0.009335711, -0.017325979, -0.18106374, 0.35435078, -0.10344914, -0.026227772, 0.010887938, -0.0123023, 0.0037492532, -0.08904317) * inp_0_0_0;
    result0 += M4(-0.07774341, -0.07384829, 0.06798095, 0.030470802, -0.08036835, 0.059708305, -0.03329064, -0.0063816877, 0.1817185, -0.19589585, 0.016536087, -0.10863441, -0.18194492, 0.46720934, 0.051482942, 0.16833332) * inp_0_1_0;
    result0 += M4(0.119453624, 0.010540114, 0.058384154, -0.008353303, -0.061197914, -0.012624427, -0.018696908, -0.014635974, 0.035511944, 0.09911698, -0.05713558, 0.0149664795, 0.023810381, 0.08494936, 0.056855123, 0.016570406) * inp_0_2_0;
    result0 += M4(-0.009269815, -0.3868033, 0.13617949, -0.06982773, -0.05376375, 0.045258068, 0.012694799, -0.03695856, 0.13612396, 0.19927613, 0.13758503, 0.043456573, 0.08059224, -0.06869482, -0.045087334, -0.03179283) * inp_0_0_1;
    result0 += M4(-0.05789568, 0.41327062, -0.21921423, 0.016989212, -0.03755868, -0.011742401, -0.0110850595, 0.036956057, -0.013082108, -0.10932908, 0.044173263, 0.20048176, -0.6501172, 0.083751544, -0.24465448, 0.040842947) * inp_0_1_1;
    result0 += M4(-0.0463681, -0.030057007, 0.10578171, 0.09029724, -0.0020224717, 0.24407336, 0.014191316, 0.0437587, -0.15277533, -0.09972502, 0.04838591, -0.0013795822, -0.67057335, 0.021923713, 0.07646182, 0.044593364) * inp_0_2_1;
    result0 += M4(-0.022883069, 0.31989592, -0.18831955, -0.18530524, -0.04293537, 0.06430658, 0.037858635, 0.042120088, 0.0892244, 0.14835541, -0.0730477, -0.16359451, 0.09592052, -0.26658726, 0.04926311, -0.015664019) * inp_0_0_2;
    result0 += M4(0.45861363, 0.089484066, 0.44356456, 0.31153026, 0.14274767, 0.18397973, 0.09570886, -0.085594304, -0.28083318, -0.20857677, -0.2027745, -0.22220065, 0.11294063, 0.010397114, 0.014377958, 0.029687518) * inp_0_1_2;
    result0 += M4(-0.3820072, -0.13811514, -0.46106395, -0.25111756, 0.047080435, 0.021486731, -0.08069984, -0.06075755, 0.26695007, 0.06259564, 0.13273002, 0.101519085, -0.28224984, 0.09394587, -0.017205201, 0.0008764357) * inp_0_2_2;
    result1 += M4(0.064963445, -0.118736565, 0.015197189, -0.0034405123, 0.042541303, 0.10526687, 0.039446853, 0.06293058, -0.33403397, 0.0031911402, 0.04474779, -0.1251691, -0.2196438, -0.253476, 0.06984938, 0.34984395) * inp_0_0_0;
    result1 += M4(-0.014089901, -0.03965188, 0.010894135, -0.03765282, 0.040491037, 0.09036513, 0.11727054, 0.09727451, 0.18921933, -0.19821158, 0.10565688, -0.06493542, -0.69595855, -0.9332126, 0.12661453, -0.1630098) * inp_0_1_0;
    result1 += M4(0.050476477, 0.10923265, -0.036501147, 0.12895711, 0.12782529, 0.0155821, -0.022106208, 0.14727582, -0.040205553, 0.24579927, -0.06891063, 0.21525484, -0.16861066, -0.47334573, -0.21842863, 0.10280839) * inp_0_2_0;
    result1 += M4(-0.1676247, 0.0005341182, -0.15118653, 0.044613995, -0.050250325, 0.17520674, 0.076913446, 0.009138183, 0.049738087, -0.158767, 0.16804084, -0.047775943, -0.21202841, -0.055881012, -0.023841597, 0.0054276492) * inp_0_0_1;
    result1 += M4(0.025911149, 0.14766827, 0.4764001, -0.033781357, -0.111626826, 0.23198082, 0.15632598, 0.025500115, -0.23539409, -0.06923875, -0.58918196, -0.5370974, -0.19862038, -0.37260622, 0.261803, 0.4564811) * inp_0_1_1;
    result1 += M4(0.1625117, -0.13400511, -0.31922692, 0.041286334, 0.16074492, 0.23013185, 0.11583566, -0.012921919, -0.030881489, 0.46945345, 0.2529256, 0.454707, -0.05854364, -0.33486155, 0.019511998, 0.006060746) * inp_0_2_1;
    result1 += M4(0.06490663, 0.2186897, 0.24136841, 0.14315622, 0.12527815, 0.08858051, 0.119886085, 0.021418197, 0.049854722, -0.14224821, -0.12805696, -0.076431915, -0.08205441, 0.007983502, -0.04089961, -0.02938197) * inp_0_0_2;
    result1 += M4(-0.1472117, -0.4252342, -1.0505325, -1.1013972, 0.16461515, 0.069379516, 0.119561255, -0.098530896, 0.3215494, -0.19915237, -0.02115099, -0.081506185, -0.22368315, -0.072797455, 0.050438214, -0.3565676) * inp_0_1_2;
    result1 += M4(-0.32202315, -0.060946535, 0.6899819, 0.07082247, 0.02743694, 0.22140951, 0.22880237, 0.07386735, 0.19765125, -0.077128485, 0.032448564, 0.04140482, 0.043941874, -0.1856951, 0.040911775, 0.19443694) * inp_0_2_2;
    result2 += M4(-0.020302659, 0.050676726, 0.0059257816, -0.08981316, 0.019385519, -0.04069984, 0.064428516, 0.104384035, -0.15875402, 0.12195936, -0.17929344, 0.09993171, 0.15084146, 0.13135594, -0.109598726, -0.47723183) * inp_0_0_0;
    result2 += M4(0.080977865, -0.09307585, -0.010630958, -0.0031764212, -0.044394985, -0.090084925, 0.15091045, 0.06657205, 0.07255296, -0.059366763, 0.057363242, 0.026227608, -0.012666959, -0.025666514, -0.31499115, -0.13921934) * inp_0_1_0;
    result2 += M4(0.093689255, -0.050760936, -0.00031641085, 0.047108267, -0.18083198, -0.06251204, 0.113400325, 0.027301094, 0.087482795, -0.087492704, -0.086461924, 0.21390809, 0.1568183, -0.03561057, -0.15690602, -0.19607137) * inp_0_2_0;
    result2 += M4(0.3725982, 0.140407, -0.0059001427, 0.022138074, -0.11657774, -0.063913345, 0.059890218, 0.24451548, -0.17652729, -0.28136364, -0.24155346, -0.04314135, 0.16264048, 0.0063398867, -0.4614754, -0.23666559) * inp_0_0_1;
    result2 += M4(-0.015586656, -0.367096, 0.098783225, -0.08063767, -0.14996575, 0.040946417, 0.15907015, 0.1741101, 0.020885605, -0.19755268, -0.4118171, -0.14584215, 0.15198503, -0.4680977, -2.8778296, -0.35563615) * inp_0_1_1;
    result2 += M4(-0.39859357, 0.16617095, -0.05591244, 0.031635974, -0.14849323, -0.14735512, 0.19509809, 0.14682665, -0.09140802, 0.2527981, -0.26653826, 0.05066969, 0.24798875, 0.034039065, 0.10686875, -0.30623972) * inp_0_2_1;
    result2 += M4(-0.14756744, -0.123859435, 0.40206534, -0.21992058, -0.03721947, -0.06361345, 0.12469508, 0.48601076, 0.2895845, 0.025188059, -0.043807145, 0.036772396, -0.23843569, 0.047518007, 0.01400219, -0.024115086) * inp_0_0_2;
    result2 += M4(0.33557495, 1.5376346, -0.43329415, 0.006799853, -0.22171295, 0.062023547, -0.030533979, 0.47441345, -0.119781286, -0.37687114, 1.2762504, -0.300638, 0.11098447, -0.30276918, -0.380211, -0.4929634) * inp_0_1_2;
    result2 += M4(-0.04407768, -0.40379846, 0.024454083, -0.19073853, 0.07104595, -0.19097374, 0.21539344, 0.23489524, -0.052832037, 0.11174795, 0.1946189, 0.1680088, 0.14756125, 0.021252804, -0.06368144, -0.19593935) * inp_0_2_2;
    result3 += M4(0.013343591, 0.07782498, -0.014500813, -0.022540258, 0.00497511, -0.0102538485, 0.025600566, 0.0054746466, -0.020720067, -0.025025045, -0.1037087, -0.043594614, -0.0069757435, -0.031606596, -0.048344254, -0.060920157) * inp_0_0_0;
    result3 += M4(0.045531552, 0.00594698, 0.011042258, -0.0023147343, 0.04405963, -0.020327162, 0.018451056, 0.09985642, 0.056102544, -0.036021665, 0.05161539, -0.14830804, 0.06454613, -0.12075308, 0.0075974753, -0.15714458) * inp_0_1_0;
    result3 += M4(-0.054941375, 0.022896165, 0.04985015, -0.03294567, 0.07033395, 0.050559744, -0.006493033, 0.07837896, -0.04730393, -0.06857704, 0.03600029, -0.09419902, 0.1803219, 0.102196775, 0.05428056, 0.0077479887) * inp_0_2_0;
    result3 += M4(0.041586135, 0.17183045, 0.0020847165, 0.007321055, 0.023245972, -0.019861517, 0.02647007, 0.046417195, 0.06529219, 0.1927976, -0.0031051002, -0.1353212, -0.10514742, 0.14122795, 0.018444173, -0.1129114) * inp_0_0_1;
    result3 += M4(0.27093074, -0.045541793, -0.040827185, 0.21347986, -0.04140011, 0.07124222, 0.039135527, 0.29128894, 0.18970786, 0.08895691, -0.07706709, 0.03522195, -0.32965848, 0.34677008, 0.45394063, -0.30022523) * inp_0_1_1;
    result3 += M4(-0.2635953, 0.14006859, 0.053619485, -0.28921896, 0.06053114, -0.038151715, 0.047827717, 0.22998281, 0.18398236, -0.012789721, -0.08713474, 0.0763839, -0.38061708, 0.23878786, 0.11174794, 0.037657052) * inp_0_2_1;
    result3 += M4(-0.125783, -0.99649984, -0.16824721, -0.68395466, -0.02008708, -0.44784358, -0.023343664, 0.0620424, -0.019247744, -2.9726467, -0.091104664, 0.1561665, 0.054214995, 0.21463399, 0.053612642, 0.10783381) * inp_0_0_2;
    result3 += M4(0.16470966, -0.7905649, 0.07032385, 0.89609885, 0.08105748, -0.904616, 0.10606599, 0.2848897, -0.01588496, -3.0362937, 0.06484724, -0.15820128, 0.00024972053, 0.1772854, -0.020799728, -0.015430229) * inp_0_1_2;
    result3 += M4(0.34035343, -0.03004339, -0.24667907, 0.28925374, 0.07995059, -0.57220775, -0.04536991, 0.34198198, 0.071356684, -2.6526272, 0.12097754, -0.12817211, -0.12693685, 0.34858185, -0.08605196, 0.103883564) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.01812063, 0.05102223, -0.0011000071, -0.0144433705, -0.02006243, 0.05988009, 0.058969438, 0.004312242, 0.07317458, -0.31763375, -0.045822147, 0.05129854, -0.030219916, -0.003257151, 0.013023077, 0.05192284) * inp_1_0_0;
    result0 += M4(0.119277, 0.014379525, -0.033891033, 0.06828705, -0.07684004, 0.54318106, 0.026561482, 0.07434284, -0.11324658, -0.81062955, -0.13282034, -0.0015719674, 0.039778363, 0.15585676, -0.035979453, -0.06476786) * inp_1_1_0;
    result0 += M4(0.114838466, -0.00804554, 0.018469306, -0.084541045, -0.034278903, 0.18058433, 0.039431825, -0.02226749, 0.22082771, -0.123333, 0.005969186, 0.043304056, 0.18230091, 0.022689762, 0.076660514, 0.0689046) * inp_1_2_0;
    result0 += M4(-0.075461194, -0.014637142, 0.095242746, 0.016230436, -0.14164984, 0.036521465, 0.018066542, 0.017205616, 0.0076616304, -0.325594, 0.03660601, 0.068971194, 0.20350769, 0.0041656434, -0.02479177, -0.029758971) * inp_1_0_1;
    result0 += M4(0.17852148, 0.2263005, -0.015656538, -0.08934711, -0.11361244, 0.16549583, -0.023248345, 0.09176208, 0.3381827, 0.114954345, 0.757897, 0.25955415, 0.12146261, -0.39147598, 0.13339189, 0.08486166) * inp_1_1_1;
    result0 += M4(-0.3918148, -0.022086782, -0.05180977, -0.03920777, -0.6924131, 0.12943536, 0.084869884, -0.0049145846, 0.4972586, -0.09234433, -0.062443428, 0.021948136, 0.42625338, -0.33779892, -0.01634204, 0.009314149) * inp_1_2_1;
    result0 += M4(-0.09147832, 0.020700617, 0.013573558, 0.0063288556, -0.023338228, 0.028399102, -0.03586696, -0.018887477, -0.020261692, -0.008899206, 0.055688456, 0.075890325, -0.04937195, -0.087271035, 0.041092496, 0.0489516) * inp_1_0_2;
    result0 += M4(-0.09609723, -0.027493455, 0.103936106, 0.111991845, -0.05983447, 0.092979245, -0.036559485, -0.047228232, 0.24800497, 0.034523353, 0.012484218, 0.03674629, -0.073297545, -0.045622878, 0.036467925, 0.016931312) * inp_1_1_2;
    result0 += M4(0.37422454, 0.024816608, -0.03246697, 0.029726028, -0.09017661, 0.11693597, -0.041736178, -0.03307466, 0.025152877, -0.14982668, -0.03211207, -0.0265009, 0.012748011, -0.039771367, 0.012202585, -0.00629445) * inp_1_2_2;
    result1 += M4(0.3274233, 0.15060765, -0.28365257, -0.17110553, 0.016236287, 0.08590773, -0.029372197, 0.034315318, 0.027187118, -0.08434585, -0.048980925, -0.18214968, 0.06559746, -0.09833392, 0.019569404, -0.0062945606) * inp_1_0_0;
    result1 += M4(-0.16390972, -0.050383, 0.09858311, -0.44413313, 0.18064466, 0.22031493, 0.054187503, 0.17721918, -0.24359705, -0.6635818, 0.15032661, 0.16844417, 0.1513035, -0.08986137, 0.071361974, -0.4761782) * inp_1_1_0;
    result1 += M4(0.03187979, 0.11212127, -0.08097332, -0.08595422, 0.18820365, 1.1404657, -0.15214379, 0.20278311, 0.047341414, -0.8433247, 0.15650271, -0.44565782, -0.19812742, -1.0067906, -0.1324136, 0.1264939) * inp_1_2_0;
    result1 += M4(0.10335342, 0.19771612, -0.18620531, 0.13771588, -0.019339902, -0.081821755, -0.034300443, 0.026017832, -0.16545741, 0.06828658, -0.030930009, 0.003271638, 0.010766704, -0.015549363, -0.08071312, -0.10117995) * inp_1_0_1;
    result1 += M4(0.36100337, -0.11278428, 0.089471556, -0.6441053, 0.2174691, 0.04246567, -0.20296536, 0.30554226, -0.5078141, -0.30090263, 0.43185428, -0.08084424, -0.11010693, 0.040776175, -0.07988588, 0.13524774) * inp_1_1_1;
    result1 += M4(-0.14845054, -0.2007492, -0.025601415, 0.53013533, -0.004342744, 0.37153506, -0.0043797283, 0.8036651, 0.07633318, -0.12841626, -0.2072663, -0.73035884, -0.026718328, -0.41521034, -0.40642482, -0.08121867) * inp_1_2_1;
    result1 += M4(0.10995325, 0.038431946, -0.115531586, 0.2896748, 0.02927018, 0.10540165, 0.023272999, 0.061908107, -0.019045416, 0.009685718, 0.047180064, -0.028830387, 0.030705966, -0.0372189, -0.0010695326, -0.021502525) * inp_1_0_2;
    result1 += M4(-0.04330994, -0.073977195, 0.13880281, 0.34047586, -0.0018240423, -0.08242779, -0.03230464, 0.3471949, 0.019649103, -0.020988453, -0.0006072452, -0.3293438, 0.0838234, -0.032861646, -0.0052691083, -0.09156588) * inp_1_1_2;
    result1 += M4(-0.07210766, 0.19752732, 0.12788711, -0.27466086, 0.0060679205, -0.09959762, -0.03652059, 0.4341218, -0.121043086, 0.021207953, -0.035371803, -0.24987574, 0.044970136, -0.11931361, -0.064381145, -0.21594696) * inp_1_2_2;
    result2 += M4(-0.046041608, -0.15125452, 0.27522242, 0.16560642, 0.09680174, 0.021805454, -0.00495517, -0.1547193, 0.11183543, -0.06273172, -0.032715738, 0.19480498, 0.10414378, -0.04089565, -0.065799676, 0.09827934) * inp_1_0_0;
    result2 += M4(-0.083019964, 0.091313116, 0.00868682, -0.011747693, 0.045430534, -0.093567945, -0.0003139587, -0.11579623, -0.44186604, -0.21104284, 0.10904223, 0.06397232, -0.02879344, -0.20493728, -0.123404585, -0.009321915) * inp_1_1_0;
    result2 += M4(0.010488325, -0.15414144, 0.18542863, 0.009337488, 0.0757555, 0.048227817, 0.10787813, 0.041629713, -0.004788034, 0.07989291, -0.04064619, 0.123204045, -0.23472837, -0.040701177, -0.2686024, -0.017188434) * inp_1_2_0;
    result2 += M4(-0.18270563, -0.37837908, 0.34946907, -0.00873477, 0.041536413, 0.046727423, -0.006638223, -0.24600351, -0.1769704, 0.020084666, 0.3029322, -0.21079606, -0.12175807, -0.1427379, 0.049104873, 0.114734955) * inp_1_0_1;
    result2 += M4(0.14995947, -0.31441438, -0.31663114, 0.29331225, 0.56634295, -0.09718157, -0.56514853, -0.72742814, -0.09995171, 0.36400405, 0.25471666, 0.034797084, -0.17986862, 0.070565, 0.43573225, 0.5185222) * inp_1_1_1;
    result2 += M4(-0.06475803, 0.09812859, -0.18213952, -0.03969628, 0.072628684, 0.10610133, 0.38663036, -0.30426025, -0.17691797, 0.096555576, -0.23114137, 0.08524303, 0.37416866, 0.15892547, -4.2837877, 0.34239918) * inp_1_2_1;
    result2 += M4(0.09564758, -0.15059225, -0.015080437, -0.08789013, 0.053645767, -0.006212295, -0.05334034, -0.18336634, -0.04566797, -0.050080746, -0.15800694, -0.0003361415, 0.0005771456, -0.022288773, 0.0061706994, 0.05089974) * inp_1_0_2;
    result2 += M4(0.07439837, 0.2012589, 0.3852674, -0.059348118, 0.017416963, 0.07664996, 0.20320433, -0.4934064, -0.01705972, 0.14904532, -1.8100375, 0.27083468, -0.11025646, -0.12002146, -0.16516657, 0.33211613) * inp_1_1_2;
    result2 += M4(0.021198949, 0.079844415, -0.1285991, -0.040182445, 0.10164499, -0.036790546, -2.2787917, -0.41325286, -0.12501547, 0.0073821465, 0.107942894, 0.045327082, -0.13087529, -0.1054498, 0.12631355, 0.32215297) * inp_1_2_2;
    result3 += M4(0.014142137, -0.03976613, -0.09025717, -0.19829483, 0.005894837, 0.022732668, 0.018199157, 0.02118572, 0.008100347, -0.0075287814, 0.008145083, -0.08473883, -0.083054446, -0.12202643, -0.03205985, 0.023123119) * inp_1_0_0;
    result3 += M4(0.18561818, 0.08616413, -0.048720997, -0.09483944, 0.023528343, 0.016014094, -0.021447586, -0.010448839, -0.047323085, 0.07556216, -0.07091928, -0.11519435, -0.045222368, 0.24849938, 0.0940298, 0.01579391) * inp_1_1_0;
    result3 += M4(-0.46517673, 0.16444615, 0.02546884, -0.081614815, -0.373022, 0.012864754, 0.07988359, -0.047171995, -0.81969994, -0.050343458, 0.020576883, -0.15769117, -0.5707907, -0.20494683, -0.04952868, -0.08454443) * inp_1_2_0;
    result3 += M4(0.034656495, -0.6121868, 0.12419565, -0.11074853, 0.029110996, -0.051223762, 0.028296337, 0.010981675, -0.05547313, -0.9108052, -0.009106828, -0.016685808, 0.04526078, 0.26155424, 0.001453312, -0.046976324) * inp_1_0_1;
    result3 += M4(0.51221156, 0.20218699, 0.1378735, -0.3431037, 0.082234435, -0.10502424, -0.020451825, 0.06664607, -0.1284139, -1.0400132, -0.21081996, 0.020985046, 0.15526347, 0.49750525, -0.009744958, -0.029118234) * inp_1_1_1;
    result3 += M4(-0.062268548, -0.11706891, -0.063554116, -0.01864, 0.11942141, -0.15848586, 0.07381805, -0.008271234, -0.07719851, -1.080321, -0.018788673, -0.18165931, -0.07485723, -0.6217073, -0.018653583, -0.19341739) * inp_1_2_1;
    result3 += M4(-0.014309692, 0.5153995, -0.06829257, 0.0050528636, -0.007016421, -0.28428957, -0.023787038, 0.032771707, 0.0053593065, 0.17054263, 0.07473438, -0.089016944, 0.03521481, -0.25980026, 0.042528436, 0.024468942) * inp_1_0_2;
    result3 += M4(0.2389371, -1.2507182, -0.02586891, 0.18833336, -0.10060829, -0.84530693, 0.02516187, -0.038065, 0.06343729, 0.44244757, -0.043918576, -0.032223057, -0.015573898, -1.9235467, 0.02571201, 0.006797033) * inp_1_1_2;
    result3 += M4(0.07572999, -0.09998481, 0.02603503, 0.041330833, -0.07157095, 0.31843096, -0.042625774, 0.008526724, 0.062391024, -1.7721179, 0.059259776, -0.0053819795, -0.028280826, -2.4740841, 0.002386438, 0.0383249) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.042305507, 0.04198171, 0.07656724, 0.0838352, -0.17604247, -0.12604398, 0.16412689, -0.01853991, -0.058797117, -0.04571791, 0.034161285, 0.012311175, 0.003948091, -0.09450636, -0.036704946, 0.04043357) * inp_2_0_0;
    result0 += M4(0.1109313, -0.19804835, -0.029204737, 0.0075284336, -0.29716545, 0.26848903, -0.19576412, -0.065325744, -0.039380103, -0.12649208, -0.0011727788, -0.014704037, 0.01962867, 0.011383215, 0.04895123, -0.0022790714) * inp_2_1_0;
    result0 += M4(-0.042227373, 0.11386402, -0.036865834, -0.03440619, -0.052322537, 0.009933889, 0.073046625, 0.005587815, -0.06506452, 0.042061616, -0.055751547, -0.021860855, 0.05673559, -0.115369774, -0.016754726, 0.040785905) * inp_2_2_0;
    result0 += M4(-0.03835578, 0.32621396, 0.06086074, 0.029123744, 0.13150315, 0.14520046, 0.0012686617, 0.54339546, -0.08081473, 0.03249318, 0.0052031986, 0.058579396, 0.01131503, -0.111855224, -0.013084314, 0.034447744) * inp_2_0_1;
    result0 += M4(0.66475815, -0.28176484, 0.23770578, 0.13540503, 0.20478907, -0.43452495, 0.22883207, 0.080841124, -0.055270083, 0.03067088, -0.041499346, -0.035575356, 0.008491329, -0.42331225, 0.020896636, 0.023841143) * inp_2_1_1;
    result0 += M4(0.5976755, -0.09888726, -0.007429701, -0.04094522, 0.02174118, -0.07003961, -0.02301402, 0.073763095, -0.08448232, 0.118394226, -0.038955484, 0.018916683, 0.20681532, -0.34772336, -0.02879091, -0.034923077) * inp_2_2_1;
    result0 += M4(-0.10773365, 0.17375879, -0.069694415, 0.0027004639, 0.09940911, 0.08312457, 0.28046507, 0.15924971, 0.07668679, 0.04146873, 0.07783422, 0.031207722, 0.050848003, -0.07947351, 0.10349617, 0.08384748) * inp_2_0_2;
    result0 += M4(-0.2761801, -0.042543985, 0.061847404, -0.011008392, -0.121497326, -0.097363934, -0.024103558, -0.09992942, 0.1686496, 0.0006941294, 0.08895071, 0.0060972297, 0.11101824, -0.30879107, 0.23330267, 0.11703029) * inp_2_1_2;
    result0 += M4(0.36244962, -0.026166612, 0.0028877691, 0.0010581289, -0.033992395, 0.050713442, 0.053084113, 0.014861123, -0.04070427, 0.08398651, -0.010229176, -0.0054892446, 0.53393584, -0.13725375, 0.06278119, 0.019822454) * inp_2_2_2;
    result1 += M4(0.042833522, 0.12990671, 0.019733744, -0.08197086, 0.08939814, -0.08940457, -0.10406682, 0.44867566, -0.025929704, 0.057784796, 0.02237124, 0.034410395, -0.0059470925, -0.014378962, 0.025064297, 0.0020293272) * inp_2_0_0;
    result1 += M4(-0.18494917, -0.23307541, 0.29695895, 0.055016853, -0.26815993, 0.5674245, 0.04385818, 0.51404893, -0.19499734, 0.17748205, 0.022148732, -0.0380447, 0.012716196, -0.15601507, -0.03541737, 0.0009055382) * inp_2_1_0;
    result1 += M4(0.17476083, 0.083750844, 0.007108988, 0.22266512, 0.16791117, -0.05903628, 0.00067441113, 0.19506805, -0.21759415, 0.0226317, 0.06792606, 0.06365546, 0.0076414775, 0.10678557, 0.050174836, -0.093178056) * inp_2_2_0;
    result1 += M4(0.17985398, -0.15265134, 0.051770568, -0.034852363, 0.08185446, 0.52827466, 0.303037, -0.07197299, -0.14465792, 0.12705167, 0.10205131, 0.09366953, -0.14940017, 0.067459784, 0.06500904, 0.0037714317) * inp_2_0_1;
    result1 += M4(0.24468195, 0.7508575, -0.1538426, -0.48819155, -0.03860358, -0.85573345, 0.1562516, -1.2270951, 0.017189428, 0.14730684, 0.107785046, 0.15213339, 0.0021736221, 0.23100206, -0.024790537, -0.13778527) * inp_2_1_1;
    result1 += M4(-0.047582775, 0.1772935, 0.010495035, 0.22129132, 0.03600109, 0.05964361, -0.11626624, -0.29530424, -0.16079833, 0.10250902, 0.24675046, 0.14933683, -0.17479023, 0.10195815, -0.0589641, -0.51165) * inp_2_2_1;
    result1 += M4(0.12323407, -0.053586934, 0.024752405, -0.018363649, -0.06356524, 0.141164, 0.1310598, 0.62189347, -0.033220254, 0.1281354, 0.085473955, 0.14134707, -0.036753923, 0.06642106, 0.08826541, 0.043477196) * inp_2_0_2;
    result1 += M4(-0.021922622, 0.08123128, -0.057709306, 0.5249896, 0.18739285, 0.5332112, 0.09184725, 0.095155515, -0.06011073, 0.14344706, 0.0037938158, 0.06615757, 0.015576382, 0.17499825, 0.19083618, -0.20576471) * inp_2_1_2;
    result1 += M4(0.02915353, 0.0905363, -0.06237374, -0.30731526, 0.046609327, -0.08624815, 0.051740702, -0.08907991, -0.102601804, 0.22412203, 0.07917181, 0.17175683, -0.022925844, 0.18210351, -0.13989447, -0.5911984) * inp_2_2_2;
    result2 += M4(0.19366632, -0.043543976, 0.06783687, 0.11484833, 0.019827502, 0.048550528, 0.11966071, -0.013143815, 0.015994927, 0.10814665, 0.110306054, -0.10864433, -0.06247967, 0.016044257, 0.019222522, 0.09024208) * inp_2_0_0;
    result2 += M4(0.17773372, 0.35188642, 0.17453517, 0.08119738, 0.14480452, 0.04650102, 0.22168283, 0.122542635, -0.07918735, 0.13680406, 0.0929861, -0.17878097, -0.06148677, -0.015742399, 0.012168004, 0.03446173) * inp_2_1_0;
    result2 += M4(-0.25727794, 0.20473918, 0.189742, 0.14907931, 0.06537414, 0.10103203, -0.016120926, 0.035963204, -0.17783502, 0.20418441, 0.12165051, -0.108524054, 0.065045096, 0.07240508, 0.013817474, -0.0011177233) * inp_2_2_0;
    result2 += M4(0.07155261, 0.014828331, 0.037005138, 0.011945604, -0.30308568, -0.16954382, 0.13570528, 0.1371766, -0.051870856, 0.13992788, 0.09012031, -0.20328489, -0.20839792, 0.058881793, 0.046438046, 0.1170154) * inp_2_0_1;
    result2 += M4(-0.074192956, 0.37808013, 0.26757658, -0.22655034, 0.02140068, -0.10874363, 0.1439725, -0.21399969, -0.12699458, 0.25177786, 0.12618446, -0.37898943, -0.45373726, 0.18898165, 0.07216645, 0.049260806) * inp_2_1_1;
    result2 += M4(-0.04597998, -0.036144078, 0.01588944, 0.027604723, -0.0661176, -0.06319823, -0.08496709, -0.06277707, -0.22451492, 0.07573195, 0.28700912, -0.17190334, -0.2140576, 0.25392565, 0.04964378, -0.039321747) * inp_2_2_1;
    result2 += M4(0.24974357, 0.015236784, 0.080588534, -0.048782986, -0.12275961, 0.03831882, 0.53792346, 0.07537713, -0.11833332, 0.07673714, 0.14968084, -0.07515387, -0.12921984, 0.07961146, 0.019426268, 0.07840296) * inp_2_0_2;
    result2 += M4(-0.12702613, 0.23584454, 0.26286379, -0.16996345, -0.30257845, 0.10775224, -0.41662088, -0.20350605, -0.001387985, 0.14480215, 0.121343866, -0.37511387, -0.5151533, 0.121576324, 0.1930832, 0.14239697) * inp_2_1_2;
    result2 += M4(-0.10379347, -0.05423649, -0.030162876, 0.15081878, 0.06254565, -0.04631696, 0.2788257, 0.097803965, 0.107665, 0.1515373, -0.034062456, -0.23036423, -0.48448664, 0.11418678, -0.052782487, 0.10805014) * inp_2_2_2;
    result3 += M4(-0.0701435, -0.028956838, 0.12193208, 0.14019485, 0.09168751, -0.06340139, 0.069954336, 0.1664444, 0.045702282, -0.028735107, 0.042401034, -0.022078076, 0.015015497, 0.00016687259, -0.020233715, -0.05549913) * inp_2_0_0;
    result3 += M4(-0.24725157, -0.021562293, -0.028737634, 0.07800722, 0.08302277, 0.08892572, -0.11143099, 0.23452684, 0.08765731, -0.0018366636, 0.04051702, -0.06732829, -0.014884667, 0.02971229, 0.046756405, -0.023417942) * inp_2_1_0;
    result3 += M4(-0.02385649, -0.020563398, -0.057448827, -0.11520022, 0.05442205, 0.0027103643, 0.02055367, -0.021080978, 0.027479215, 0.045679543, -0.047121696, -0.04247537, -0.01649853, 0.0013691509, -0.0030723205, -0.021991884) * inp_2_2_0;
    result3 += M4(0.1437451, 0.274507, 0.056681488, 0.1747204, -0.08647618, 0.06662072, 0.14500539, 0.13457312, -0.018907756, 0.044107188, -0.00034947795, 0.025743973, -0.021573054, 0.021928895, -0.0073485035, -0.03971808) * inp_2_0_1;
    result3 += M4(0.45982227, 0.27402976, 0.34553146, 0.16896218, 0.25156426, 0.21048667, 0.17653587, -0.03095319, -0.13697344, -0.0038107429, -0.05039305, -0.07785347, 0.05967433, -0.077982984, -0.007585095, -0.01363754) * inp_2_1_1;
    result3 += M4(0.17794684, 0.23014155, -0.028584393, -0.036194906, 0.04798093, 0.03043206, -0.035410695, 0.06786557, 0.040415186, -0.083771616, 0.09969111, 0.060616467, 0.03665312, 0.090808794, -0.055181313, 0.06594008) * inp_2_2_1;
    result3 += M4(-0.03216577, 0.010310791, -0.080698155, -0.0069795656, -0.006254536, -0.14425248, 0.04903118, 0.06177464, -0.010214802, 0.4558705, 0.06461779, -0.014627625, -0.05405436, -0.01853442, 0.060177654, -0.011433566) * inp_2_0_2;
    result3 += M4(-0.031549707, -0.55820656, 0.06005794, -0.017837554, 0.11301109, -0.7691727, 0.029500602, 0.13452946, 0.023120599, 0.0582575, 0.03739586, -0.1374155, -0.0038260994, -0.49480414, 0.27414402, -0.052273717) * inp_2_1_2;
    result3 += M4(0.06447061, -0.38162673, 0.07482301, -0.09416357, 0.061131693, -0.31450966, 0.05793916, 0.009296001, 0.070711054, 0.7472685, -0.07764507, -0.16418956, 0.024796303, -0.8387801, 0.062837504, -0.13253318) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.07549642, -0.13471998, 0.051537633, 0.01813871, -0.032593675, 0.235412, -0.064880125, 0.027063088, -0.0034223555, 0.056483872, 0.06496148, -0.0071148286, 0.094090514, -0.080529876, 0.043201696, 0.015998876) * inp_3_0_0;
    result0 += M4(-0.005876394, -0.18662734, 0.09319997, 0.14900824, 0.40554395, -0.3027397, -0.01345034, -0.10621264, -0.11975606, 0.34336993, 0.0029276495, 0.022181358, 0.14072734, -0.055907432, -0.09685541, 0.059064984) * inp_3_1_0;
    result0 += M4(-0.022918198, 0.002603806, 0.030578366, 0.037660122, -0.3086532, -0.21830516, -0.10075409, 0.0070660883, -0.14607297, 0.1451945, -0.040336467, -0.0023511476, 0.16780247, -0.020134738, 0.063494794, -0.01402823) * inp_3_2_0;
    result0 += M4(-0.016495727, -0.43515852, 0.22842893, -0.44150653, 0.15150812, 0.21615405, -0.04004611, -0.032901976, -0.2444171, 0.14355856, -0.053013973, 0.0015476038, 0.012303618, -0.060293064, -0.0049303584, -0.05223085) * inp_3_0_1;
    result0 += M4(-0.10697183, 0.34596413, 0.020884978, 0.023959646, 0.023581484, -0.10294868, 0.13894603, 0.032870356, -0.24812959, -0.030444326, 0.08576107, 0.11529785, -0.32041118, -0.0034803355, 0.051888976, 0.5534732) * inp_3_1_1;
    result0 += M4(0.13680187, -0.024350163, -0.010385195, -0.040119328, 0.015681911, 0.09192237, 0.0762529, 0.05641882, -0.20909265, 0.20659281, 0.03860169, 0.049510177, -0.20952727, 0.146129, -0.028521806, -0.050537456) * inp_3_2_1;
    result0 += M4(0.055337653, 0.21378839, -0.009364642, -0.09130203, 0.0053983224, 0.24456371, -0.06924519, -0.0832727, -0.15056801, -0.0374463, 0.047571413, 0.042854797, -0.10648751, -0.08007155, -0.0017745828, 0.05465815) * inp_3_0_2;
    result0 += M4(-0.40867534, 0.22974011, 0.03669567, 0.078281656, 0.048804536, -0.012464544, -0.1293294, -0.06608053, -0.12876888, -0.00050626206, 0.038128864, 0.0039407993, 0.05418934, 0.12353149, 0.0756009, 0.03253945) * inp_3_1_2;
    result0 += M4(0.022463296, -0.03569933, -0.0271889, -0.013570656, 0.021820482, -0.0070670038, 0.013352377, -0.03804694, -0.167385, 0.07485812, 0.048130974, 0.0472787, 0.24832866, -0.018337132, 0.014607705, 0.05210272) * inp_3_2_2;
    result1 += M4(-0.04396501, 0.02637946, 0.07472472, 0.056764793, -0.05023349, 0.1318446, 0.06902554, -0.07583335, -0.026409913, 0.05562231, -0.017746355, 0.022702381, 0.0063869464, -0.009584043, -0.0057636844, 0.020714412) * inp_3_0_0;
    result1 += M4(0.0018269904, -0.6551956, -0.0505808, -0.31574687, -0.020622868, 0.58530724, -0.32125187, -0.2448844, -0.10166562, -0.05038749, 0.012938394, 0.052850038, 0.10844227, -0.056687407, -0.12849207, -0.2966149) * inp_3_1_0;
    result1 += M4(0.061781112, 0.042789023, -0.0072101722, -0.18380395, -0.072563805, 0.5567589, 0.22519806, 0.18952473, -0.09260729, 0.16444142, 0.024806114, 0.260404, 0.30279303, -0.5376148, -0.15378049, -0.00078615436) * inp_3_2_0;
    result1 += M4(0.00023446487, -0.08819549, 0.014141566, 0.3472442, 0.0519334, -0.020042256, -0.031597346, 0.124934085, 0.07819345, -0.04191214, -0.006412463, -0.041732457, 0.08550537, 0.056094844, -0.012803581, -0.02507454) * inp_3_0_1;
    result1 += M4(0.19165982, -0.7524112, 0.5946074, 0.10782962, -0.026949925, 0.008124619, 0.13711809, -0.059557278, 0.1441748, 0.24769367, 0.008004455, -0.03446594, -0.22325666, -0.3883175, 0.59621036, 0.065436654) * inp_3_1_1;
    result1 += M4(0.07218369, -0.13299052, -0.02728927, -0.43535066, 0.113415845, 0.16821745, -0.15364091, 0.08219498, 0.040622838, 0.05365274, 0.18773709, 0.5315708, 0.20235224, -1.2332554, -0.12282, -1.3385117) * inp_3_2_1;
    result1 += M4(0.06329573, -0.13845837, -0.09578007, -0.5014414, 0.1123034, 0.032321315, 0.026289362, 0.030310383, 0.016246585, -0.0031078416, 0.095329665, 9.915458e-05, -0.08726254, -0.038421277, 0.04821174, 0.0013147467) * inp_3_0_2;
    result1 += M4(-0.005824019, 0.19160803, 0.43424013, -0.36856046, 0.2056703, 0.14782684, 0.056978986, -0.06499332, 0.034209643, 0.21803069, 0.02862642, 0.15879099, 0.053531315, -0.0052001006, 0.12741975, -0.28503332) * inp_3_1_2;
    result1 += M4(-0.014729149, -0.065570846, -0.012064711, -0.08505738, 0.13792427, 0.2470136, 0.02336931, 0.04529633, 0.117543295, 0.12694794, 0.05052908, 0.12506157, 0.023967005, -0.15303896, -0.037710108, -0.49843448) * inp_3_2_2;
    result2 += M4(-0.073571295, -0.20897882, 0.074957624, 0.028530361, -0.23162803, -0.020242706, 0.068491474, 0.39786157, 0.1151009, -0.0009680781, 0.056811474, -0.1499523, -0.009002415, -0.0043245596, -0.04716834, -0.08430634) * inp_3_0_0;
    result2 += M4(-0.06371073, -0.18752083, -0.20450172, -0.010629183, 0.31482953, 0.026582617, 0.13791555, 0.17112966, 0.19304733, -0.14522222, 0.039493766, -0.09497495, 0.03593123, 0.026240101, -0.2267607, -0.07065767) * inp_3_1_0;
    result2 += M4(-0.0063775307, -0.02055533, 0.008041324, -0.011283543, 0.0003593953, -0.33972794, 0.038617715, 0.13017404, 0.030746365, -0.031994324, 0.008485373, -0.0614668, -0.0377649, -0.09854622, -0.04367304, -0.06519376) * inp_3_2_0;
    result2 += M4(0.16557874, -0.09902288, 0.09210737, 0.1335419, 0.03036152, 0.06930261, 0.041651037, 0.17636941, 0.06491955, -0.06395455, 0.057891294, -0.3199026, -0.027656004, -0.017688222, -0.009331894, -0.008372184) * inp_3_0_1;
    result2 += M4(0.14571278, 0.24792518, -0.056653634, 0.10539074, 0.10462566, -0.0041351453, -1.2495646, 0.061467126, 0.38681707, -0.3882255, -0.014003789, -0.26797256, 0.06169559, 0.085846394, -0.12127793, 0.1066074) * inp_3_1_1;
    result2 += M4(-0.0076592374, -0.0032418296, 0.080416165, 0.07883264, -0.20589529, -0.1953789, 0.012097133, 0.10129216, 0.18203108, -0.08500097, 0.092362344, -0.13080762, 0.010059489, -0.4129222, 0.045464374, 0.2055221) * inp_3_2_1;
    result2 += M4(0.2929279, -0.18093349, -0.2033021, 0.024561387, -0.04434901, 0.015621352, 0.18874748, -0.15231745, 0.14069478, -0.07007225, 0.11818189, 0.037597343, 0.11011933, 0.053396966, -0.040151082, 0.013198986) * inp_3_0_2;
    result2 += M4(0.0721456, -0.2512332, 0.5856018, 0.0045991056, 0.0791088, 0.09927165, 0.1718191, -0.04352173, 0.05377746, -0.059527673, 0.4577263, -0.17792594, 0.064862, 0.090951964, -2.5287478, -0.03277085) * inp_3_1_2;
    result2 += M4(-0.0021307156, 0.0540218, -0.090884395, -0.016289538, -0.10089701, -0.025031265, 0.24052021, 0.09699989, 0.19055323, -0.0836809, 0.062053535, -0.11858161, 0.232467, -0.051287305, 0.022853676, -0.07108335) * inp_3_2_2;
    result3 += M4(0.0785969, -0.02285062, 0.06500414, -0.028701825, -0.064498216, -0.016385188, -0.04502251, -0.064806096, 0.03716497, 0.040964663, 0.041671515, 0.039943617, -0.008527679, 0.054429658, 0.03766917, 0.009940459) * inp_3_0_0;
    result3 += M4(-0.032827467, -0.056324214, 0.007643226, -0.024497196, 0.18357986, 0.27833742, 0.1190522, 0.017591901, 0.09526806, -0.011066134, 9.577908e-05, 0.043317273, -0.06878322, 0.041754957, -0.07570868, -0.020350168) * inp_3_1_0;
    result3 += M4(0.022209251, -0.0016400072, 0.009615758, 0.019559016, 0.057089504, -0.1392849, -0.08808158, 0.2524638, 0.091537334, -0.009312833, 0.02451457, -0.08859987, -0.009106301, 0.0014857664, 0.069896296, -0.008787002) * inp_3_2_0;
    result3 += M4(-0.4031032, -0.098868966, 0.291329, -0.07041957, -0.010689671, -0.19069082, -0.10811495, -0.078414306, 0.03335306, -0.024708575, -0.0028414761, 0.056079738, 0.058691327, 0.049680628, 0.062569425, 0.0529138) * inp_3_0_1;
    result3 += M4(0.07628105, 0.02844479, 0.021786112, 0.52509993, -0.09646489, 0.33545262, 0.062495593, -0.12492066, -0.04341055, 0.122733735, -0.054101937, 0.17088772, -0.031947963, -0.25537476, -0.057059597, 0.42245328) * inp_3_1_1;
    result3 += M4(-0.09996959, 0.020796975, 0.056643955, -0.010645033, -0.099434204, -0.23995073, -0.02842357, -0.28634113, 0.12993522, 0.01942907, 0.068404555, -0.013165009, -0.73246425, 0.05721341, 0.05849812, -0.27236047) * inp_3_2_1;
    result3 += M4(0.051480204, 0.3869061, -0.006619217, -0.021320367, -0.023387508, 0.28142366, -0.042071585, -0.08960654, 0.005339592, 0.5834455, 0.060310453, 0.047243543, -0.028118094, -0.068041384, -0.008638382, 0.08018321) * inp_3_0_2;
    result3 += M4(0.0036717257, 1.045822, -0.0037775007, 0.2135833, 0.0069379336, -0.84412557, -0.079293706, -0.095348544, 0.047177758, -0.3947968, -0.005114101, 0.06413504, -0.069473095, -1.9509116, 0.049267907, 0.10471393) * inp_3_1_2;
    result3 += M4(0.055863217, 0.43518156, -0.00038004224, 0.01104674, 0.1162917, 0.39819664, 0.018329889, -0.12999307, -0.02603645, -0.22072873, 0.012710337, 0.056499995, -0.08015569, -2.3557167, 0.088302106, 0.040553153) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.011978708, -0.0318248, -0.017654868, -0.005756709);
    V4 result1 = V4(-0.022381019, 0.010822217, 0.0041029984, 0.037273698);
    V4 result2 = V4(0.0009626419, 0.015632957, -0.026078835, 0.0074761193);
    V4 result3 = V4(-0.0016754689, 0.008114044, 0.020136518, 0.014313271);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06642513, -0.40662655, 0.36937898, 0.12468242, 0.17676671, 0.07239858, 0.043989725, -0.011622253, 0.02709264, -0.041460417, -0.13202822, 0.016861452, 0.079779536, 0.055086855, 0.07780727, 0.0042500054) * inp_0_0_0;
    result0 += M4(-0.45249885, -0.4745551, 0.11046537, -0.09074424, 0.1206166, -0.16375941, -0.107549936, -0.042683914, -0.09866649, 0.04085906, -0.38444492, 0.081759445, -0.0010725361, -0.30623817, 0.093819104, -0.16594462) * inp_0_1_0;
    result0 += M4(-0.2711912, -0.008459451, -0.072442904, 0.05309575, 0.06406038, -0.041988805, 0.00516996, 0.05438972, -0.09596894, -0.026451277, -0.1386883, -0.0663163, -0.018720975, -0.014224763, -0.0071193883, -0.029957714) * inp_0_2_0;
    result0 += M4(-0.034991715, 0.09296695, -0.21395372, -0.08994284, -0.003918549, 0.07947379, -0.18307897, 0.32317278, 0.09344793, -0.1359228, -0.029103754, 0.024797885, -0.13718913, -0.09947308, -0.040125348, 0.18299787) * inp_0_0_1;
    result0 += M4(-0.16759966, 0.22417481, -0.37302348, -0.12674601, -0.04118178, -0.09889313, 0.13194159, -0.107227, -0.24529868, -0.0082149, 0.32323578, -0.07138797, 0.078812875, 0.3585088, 0.33482075, -0.4084596) * inp_0_1_1;
    result0 += M4(0.08127412, -0.009167361, -0.05993508, 0.040748462, -0.2128793, -0.03503922, 0.27689663, -0.13245523, -0.046481073, -0.15972197, -0.009291785, -0.049059175, -0.032740045, 0.18519226, -0.05798553, 0.24849531) * inp_0_2_1;
    result0 += M4(0.028848568, -0.032729004, -0.2259041, 0.0047424366, -0.097705774, -0.11265205, 0.27867886, 0.18873894, -0.057467856, -0.015906686, 0.0283716, -0.054690044, -0.21014798, 0.08091023, -0.024112755, 0.08829265) * inp_0_0_2;
    result0 += M4(-0.14851789, 0.011811993, -0.17205298, -0.016034152, 0.1260548, 0.16888005, -0.034983322, 0.013026504, 0.13914295, -0.0016568903, 0.1741321, 0.022972366, 0.023023814, 0.04687804, -0.27564186, 0.006147446) * inp_0_1_2;
    result0 += M4(-0.115017556, -0.028159011, -0.07213002, -0.0490371, 0.0866522, 0.22104692, 0.09983336, -0.075454526, 0.086083256, 0.065758705, 0.108732045, 0.06448064, -0.116580024, -0.19287255, -0.21421051, -0.081952795) * inp_0_2_2;
    result1 += M4(0.27707282, -0.0075875893, -0.06400163, -0.13113135, -0.061036333, 0.00050714484, 0.022411227, 0.1041603, 0.049873617, -0.024648275, -0.00897419, -0.1452479, 0.033306167, 0.009233575, 0.016020108, -0.08820416) * inp_0_0_0;
    result1 += M4(0.16452742, -0.04237243, 0.0010979687, -0.0010204109, 0.14148577, -0.05631406, 0.007933555, -0.31435424, -0.0029926472, -0.008730428, -0.021937896, 0.0013452815, -0.040925745, 0.002036099, 0.015775178, -0.095910646) * inp_0_1_0;
    result1 += M4(0.017987808, 0.01884802, -0.024337457, 0.053905476, 0.23050883, -0.006846825, 0.027301239, -0.56600815, -0.07254151, -0.028476609, 0.04496018, -0.13641475, 0.0780023, 0.06994808, -0.021499174, 0.09540415) * inp_0_2_0;
    result1 += M4(-0.37733737, 0.009043205, -0.18258835, -0.014781052, 0.12731475, 0.0011948695, 0.06642978, 0.37162003, -0.05931506, 0.032365397, 0.0024821153, 0.039741028, -0.03190483, 0.11739873, -0.0337072, 0.091257095) * inp_0_0_1;
    result1 += M4(-0.24204832, 0.12107999, 0.04886453, -0.12528591, -0.18275152, -0.07096632, -0.04344469, -0.3645178, -0.029565679, 0.38741243, 0.062057823, -0.08397212, 0.15974587, 0.3084478, -0.09880972, -0.07670527) * inp_0_1_1;
    result1 += M4(0.017982615, -0.03321348, -0.00049436616, 0.0595481, -0.17552689, 0.022720937, -0.027784424, -0.034023996, -0.19823904, 0.024520176, 0.008457767, 0.13085139, 0.13820797, -0.029117474, -0.0033063223, -0.4113164) * inp_0_2_1;
    result1 += M4(-0.16613838, -0.08772219, -0.106666386, 0.13407938, -0.0027468759, 0.014363105, 0.049645584, 0.4076605, -0.038443588, 0.03303446, 0.095184095, 0.01837797, -0.028196258, -0.046879053, -0.124758855, -0.25048012) * inp_0_0_2;
    result1 += M4(0.020010512, 0.016720133, 0.0051065544, -0.017977986, -0.018451512, 0.056558684, 0.026387671, -0.0787512, 0.09240574, 0.0401413, 0.057692915, 0.028448123, -0.12212554, 0.032422606, -0.16191226, 0.21138822) * inp_0_1_2;
    result1 += M4(-0.10941523, 0.040287316, -0.0046780156, -0.034270704, 0.067758955, 0.07326103, -0.10067958, 0.09632412, 0.047068276, -0.005725326, -0.08241343, 0.08767267, -0.08448063, 0.028549016, 0.16699116, -0.24362558) * inp_0_2_2;
    result2 += M4(-0.19556305, 0.06632584, 0.029859731, 0.025019197, -0.00093333237, 0.01659974, -0.0039326325, -0.053761568, 0.004301145, 0.105167694, -0.11558289, 0.026714098, 0.028482873, -0.0065282295, 0.032166984, -0.025050754) * inp_0_0_0;
    result2 += M4(-0.05490356, -0.19203813, -0.0077064675, -0.058749598, 0.06435009, 0.10457628, -0.03866629, 0.058408983, 0.06642505, -0.0072845677, -0.21251217, -0.07755434, 0.101654135, -0.081200175, 0.15787598, 0.049704872) * inp_0_1_0;
    result2 += M4(-0.042624135, 0.0060304157, 0.01710569, 0.08668913, 0.03896268, 0.101026654, -0.050197147, 0.06877042, -0.099193536, 0.082226425, -0.07545588, -0.09905341, 0.09921614, -0.14641471, 0.06430871, -0.04976458) * inp_0_2_0;
    result2 += M4(-0.22277276, 0.5176128, -0.111615434, -0.01090602, 0.16849257, -0.16472453, -0.044557698, -0.21089886, 0.015503094, -0.12115554, -0.082617946, 0.0636595, 0.13898455, -0.09695622, 0.043080468, -0.115608215) * inp_0_0_1;
    result2 += M4(-0.12745701, -0.24028622, 0.16014422, -0.044069003, -0.18585114, 0.035341088, 0.004637669, -0.26950437, 0.40259963, -0.25107488, -0.008500605, -0.018622313, -0.19019255, -0.20996042, 0.55862325, 0.099445805) * inp_0_1_1;
    result2 += M4(-0.071633376, -0.0014711099, -0.014750949, 0.04307105, 0.03267359, -0.19416772, 0.052765623, -0.14521432, 0.054343455, -0.06238555, 0.054608542, 0.013506321, -0.0545975, 0.19924079, -0.15276001, 0.11062422) * inp_0_2_1;
    result2 += M4(-0.13195877, -0.10793099, -0.013720061, -0.011544961, 0.22646359, -0.28714183, 0.0627821, -0.13373345, 0.00728049, 0.0990357, -0.029574534, -0.001916044, 0.009568676, 0.019769387, -0.033834893, 0.14214358) * inp_0_0_2;
    result2 += M4(0.001000043, -0.10773863, -0.004587285, -0.07138392, 0.11334601, 0.4749102, -0.014570226, -0.124138296, 0.049671948, -0.03964756, 0.021522712, 0.021263251, -0.11631113, -0.14807875, 0.005519402, -0.29567137) * inp_0_1_2;
    result2 += M4(-0.034606278, -0.022223042, 0.017589739, -0.0018756888, 0.037230767, -0.004621432, 0.10251524, -0.054907314, -0.0007381422, 0.10970039, -0.047983725, 0.07580606, -0.09973399, -0.019008879, 0.081289016, -0.090423964) * inp_0_2_2;
    result3 += M4(-0.07487091, -0.12714145, 0.04795083, 0.0065148333, 0.014461429, 0.0074130464, -0.030847335, -0.031641774, 0.009653099, -0.03624112, -0.056272008, 0.02159683, 0.018755693, 0.06672484, 0.04428068, 0.01338486) * inp_0_0_0;
    result3 += M4(0.13337997, -0.30507427, 0.016103342, -0.057066366, -0.07018555, 0.094724014, 0.023347761, 0.045534406, 0.024077863, 0.13443758, 0.08145114, -0.05504551, -0.0034327626, 0.03283899, -0.009291367, 0.056043867) * inp_0_1_0;
    result3 += M4(0.052866112, -0.2830024, -0.0023568778, 0.027177023, 0.0017905221, 0.089063674, -0.021814244, -0.5173615, -0.09812259, -0.08626007, -0.006995904, -0.5351432, 0.01310505, -0.08376991, 0.047445986, 0.025958452) * inp_0_2_0;
    result3 += M4(-0.041727036, -0.6713717, -0.018121116, -0.09112368, 0.010318661, 0.40171823, -0.009697549, -0.05840255, 0.06645137, -0.06421192, 0.077952534, 0.0059793876, 0.033034083, -0.07821446, 0.045974832, -0.056026142) * inp_0_0_1;
    result3 += M4(0.15995616, -0.6818025, 0.07997847, -0.038579322, -0.090616584, 0.30421054, -0.12686464, -0.08412867, -0.20642585, -0.2701814, 0.13277769, 0.102673076, 0.018866397, -0.37400585, -0.2299168, -0.041818507) * inp_0_1_1;
    result3 += M4(-0.009738874, -0.18196487, 0.0052042357, 0.021115696, -0.13487773, 0.15678588, -0.030097906, 0.16231173, -0.051121525, -0.04876211, 0.084426686, 0.15018874, 0.13143197, 0.04025623, -0.028718567, -0.3226127) * inp_0_2_1;
    result3 += M4(-0.027897429, -0.22805254, -0.0563487, -0.006062067, 0.028904786, 0.09267052, -0.0060462207, -0.016702639, 0.0044791135, -0.016033929, 0.05967778, 0.026855899, -0.015068015, -0.13758424, -0.017821236, 0.0015509722) * inp_0_0_2;
    result3 += M4(0.0433086, -0.36359262, 0.06602166, -0.04349946, -0.067111805, 0.30082366, -0.007924818, 0.12111686, 0.03442772, -0.0209041, 0.079309195, 0.08754818, -0.070741326, -0.04413363, -0.21562095, -0.042696003) * inp_0_1_2;
    result3 += M4(0.00082908804, -0.15230042, -0.023097575, -0.040270135, -0.002678261, 0.105584584, 0.06905071, 0.0780617, -0.03389684, -0.10141765, -0.014948466, 0.0141353, -0.004797898, 0.004250873, 0.030235065, -0.06761777) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.041737046, 0.036227684, 0.031843152, 0.06031453, 0.21030092, -0.11403126, 0.117142685, 0.04744285, -0.059665512, 0.018754175, -0.081699684, -0.053062726, -0.10270254, 0.16380769, 0.08277141, 0.04243838) * inp_1_0_0;
    result0 += M4(0.136805, -0.10267481, 0.24730198, 0.021981064, -0.11895713, -0.2940525, 0.16862577, -0.21384124, 0.041960705, 0.33047244, -0.20852005, 0.04627371, -0.011068595, 0.04565881, 0.38262278, -0.17627102) * inp_1_1_0;
    result0 += M4(0.076629095, -0.022537291, 0.015387658, 0.017906971, 0.020945285, 0.025076674, 0.011701008, 0.072973385, 0.098358996, 0.12770249, -0.06426181, 0.077760905, -0.01979994, -0.0012350589, -0.04540727, -0.15447143) * inp_1_2_0;
    result0 += M4(0.15310198, -0.08303873, 0.1790423, -0.013344328, -0.4426073, -0.15302639, 0.05184564, -0.0022440103, 0.03829645, 0.079238564, 0.012034153, -0.23566484, -0.10880129, 0.24265511, -0.18070984, -0.041971013) * inp_1_0_1;
    result0 += M4(-0.24108936, -0.40257832, -0.3079532, -0.10880627, -0.3776721, -0.07786001, -0.1217868, 0.05033376, 0.46296692, -0.05469084, -0.08393795, 0.1384136, -0.19108579, 0.49662927, 0.021184076, -0.27819395) * inp_1_1_1;
    result0 += M4(0.10820925, -0.20922568, -0.02978921, 0.16053165, -0.019453669, -0.120977074, 0.05223196, -0.2841913, 0.17870758, 0.07371577, 0.022799024, 0.2054334, 0.22519249, 0.049635187, 0.08272066, 0.05689867) * inp_1_2_1;
    result0 += M4(0.100182705, 0.074141316, -0.06298476, 0.010594385, -0.327467, 0.006130846, -0.23935935, 0.09191029, 0.29015592, -0.027859077, 0.09166116, -0.07074277, 0.014788694, -0.16315037, 0.08108328, 0.03681837) * inp_1_0_2;
    result0 += M4(-0.070570074, 0.46066466, -0.13445807, -0.011518448, -0.437741, 0.045848165, -0.22397463, -0.12382639, -0.124960564, -0.012172272, 0.36831146, 0.0060789925, 0.09508676, -0.2425436, -0.15302591, -0.07954659) * inp_1_1_2;
    result0 += M4(0.088802435, 0.10911164, 0.015881488, 0.035945676, 0.13215804, 0.12084558, -0.023932118, -0.22232272, 0.062226318, -0.1802173, 0.15555353, 0.11422937, -0.15331121, 0.108899534, 0.031749208, -0.0748128) * inp_1_2_2;
    result1 += M4(0.061143734, 0.05826085, 0.020914126, 0.22163066, 0.007851252, 0.010254812, -0.00043661706, -0.055357784, -0.0092623485, 0.04831822, -0.001347474, 0.12112294, 0.035118863, 0.06319977, -0.033860117, -0.28885695) * inp_1_0_0;
    result1 += M4(-0.15657008, 0.017735343, -0.03553138, -0.11584268, 0.032440376, -0.0111781275, 0.0030227797, 0.22864254, -0.17838441, 0.08128744, -0.010424614, 0.054534685, -0.20494239, 0.03434468, 0.040159978, -0.71330833) * inp_1_1_0;
    result1 += M4(0.07559141, 0.0060114805, 0.0067984387, -0.04172047, 0.078689, -0.07893377, 0.014949774, -0.01443666, -0.12608008, 0.017844103, -0.016305653, 0.007863864, -0.09658131, -0.024318878, 0.04976071, -0.1612996) * inp_1_2_0;
    result1 += M4(0.05870344, 0.05344323, 0.047326665, 0.16377273, 0.04979082, -0.048046764, -0.09758038, -0.16961308, -0.02428331, 0.13619626, 0.08397098, 0.104273856, 0.07172054, -0.07018417, -0.119219065, -0.25643137) * inp_1_0_1;
    result1 += M4(-0.05991821, 0.13092048, -0.019575698, 0.07930901, 0.15128888, 0.012266006, 0.027349478, -0.55569744, -0.18214956, 0.09272451, 0.024137184, 0.26569104, 0.39500582, 0.32214653, 0.009880973, 0.06990261) * inp_1_1_1;
    result1 += M4(0.07422583, -0.034366455, -0.00517347, 0.09816656, 0.09048884, 0.013945315, 0.015849033, 0.030691281, 0.004568103, 0.00530455, -0.04714525, 0.19128034, 0.058920804, 0.043985594, 0.043953594, -1.8794633) * inp_1_2_1;
    result1 += M4(-0.07214802, 0.09761968, 0.09744382, 0.22500713, -0.10518838, 0.0020592203, -0.09267666, -0.18928668, 0.16101117, 0.031667825, 0.15724444, 0.15094313, -0.03175256, -0.018309698, 0.03814354, 0.18020976) * inp_1_0_2;
    result1 += M4(-0.087919116, 0.029063907, -0.051705755, -0.15708065, -0.20708969, 0.05272765, -0.01741135, -0.17323488, 0.48474222, -0.04091102, -0.012176987, 0.0023655444, -0.037735272, -0.16509016, -0.17236067, 0.25214863) * inp_1_1_2;
    result1 += M4(-0.03984358, -0.002963972, 0.06501627, -0.023799885, -0.008995441, -0.029848756, 0.02758988, 0.30874452, 0.108289704, 0.010000818, -0.0149847595, 0.27969322, 0.062948145, 0.020986032, 0.14692102, -0.043770283) * inp_1_2_2;
    result2 += M4(0.06355816, -0.0009090645, 0.04052807, -0.057085928, 0.0674143, -0.005722839, -0.0387163, -0.03865243, -0.080868185, 0.0560071, 0.02891696, 0.0019409526, 0.05031261, -0.11597322, 0.04548886, -0.076751344) * inp_1_0_0;
    result2 += M4(-0.1275991, 0.064335175, 0.050087508, 0.0014292409, 0.07918019, 0.01303164, -0.061950825, -0.040647205, -0.12524004, 0.01023322, 0.00023149494, -0.019244237, -0.018024249, 0.05571249, 0.040541317, -0.14465098) * inp_1_1_0;
    result2 += M4(-0.042424414, -0.013333834, -0.02190433, 0.012958913, 0.01657313, 0.058717772, -0.07956813, 0.023792055, -0.0939985, -0.0008953396, -0.0070128907, 0.034289375, -0.010596287, 0.08791052, 0.00035684698, -0.07209833) * inp_1_2_0;
    result2 += M4(0.007069167, 0.028689293, 0.12483953, 0.1085749, -0.20973642, 0.16934822, 0.02400346, -0.118767, -0.037498426, -0.07100478, 0.20462051, 0.061903846, 0.012523478, 0.46508124, 0.036530185, -0.13702796) * inp_1_0_1;
    result2 += M4(0.103881404, 0.040993195, 0.109038204, -0.09632459, -0.2703399, 0.28965148, 0.058535445, -0.48601425, 0.38627788, -0.07484848, 0.06440352, 0.5096292, 0.254803, -0.05360349, 0.14571378, -0.20525368) * inp_1_1_1;
    result2 += M4(-0.031745207, 0.07252667, -0.026128424, 0.027813137, -0.07157474, -0.013641622, -0.015313674, 0.075285256, -0.0061048465, 0.13956074, -0.06320301, -0.023491777, 0.0029487684, 0.036454536, 0.025196042, 0.16188005) * inp_1_2_1;
    result2 += M4(0.008407062, 0.03499851, 0.08282708, -0.04614026, -0.2814045, 0.20098266, -0.05808574, -0.16534485, 0.015879456, -0.08219183, 0.03596092, -0.15042496, 0.096645325, -0.20310733, -0.03335996, -0.10555335) * inp_1_0_2;
    result2 += M4(0.10826501, -0.12540457, -0.009292791, 0.08244875, -0.21196896, 0.14853793, 0.04266921, -0.19130313, 0.012054792, 0.00893692, 0.0051445533, 0.05855371, -0.097345114, -0.23933585, -0.07131779, -0.3230614) * inp_1_1_2;
    result2 += M4(0.0038928, 0.035864383, 0.005574275, 0.043723237, 0.057824112, 0.07859539, 0.0022075458, 0.06385026, -0.054415375, 0.08584795, 0.0072577083, 0.14899948, 0.027360085, 0.04940559, 0.0042842114, 0.008279885) * inp_1_2_2;
    result3 += M4(-0.0022745011, 0.0066490276, -0.015079326, 0.056688227, -0.021369124, 0.06802893, 0.014925879, 0.09604876, 0.0066836635, -0.16952147, -0.008260246, 0.026349368, -0.041108675, 0.30265093, 0.06167773, -0.022721095) * inp_1_0_0;
    result3 += M4(0.014161789, -1.6811802e-05, 0.033045676, 0.06096157, 0.071498945, -0.050124936, -0.062516, 0.08121308, 0.07615363, 0.08453056, 0.042271562, -0.06773657, 0.13958658, -0.113511354, -0.04570323, 0.05711139) * inp_1_1_0;
    result3 += M4(0.015348635, 0.025586572, -0.016289415, 0.017520962, 0.020952983, 0.01721878, -0.041470736, 0.15749466, -0.015678208, -0.084863216, 0.006282526, -0.18770972, 0.026737949, -0.14179204, 0.021456072, -0.033285487) * inp_1_2_0;
    result3 += M4(0.029634537, -0.16718021, 0.07643151, -0.0416129, -0.051798005, 0.32006615, 0.017980399, -0.05147171, 0.03474779, -0.03722175, 0.09158235, 0.11037595, -0.015644183, 0.23569703, -0.035179287, 0.031785138) * inp_1_0_1;
    result3 += M4(-0.025788207, 0.23582782, 0.13818115, 0.017040608, 0.049737547, -0.23667012, 0.16906941, -0.24048795, 0.072029196, -0.039753027, 0.110753335, 0.110509165, 0.06353003, 0.017210566, 0.2928895, 0.07952117) * inp_1_1_1;
    result3 += M4(0.10490857, 0.11867485, 0.0054912246, -0.20604895, 0.07980662, 0.01451658, -0.031543497, 0.13363914, 0.027039146, 0.014358163, -0.019388802, -0.029412126, 0.060716063, 0.12957357, -0.025647968, -0.11835209) * inp_1_2_1;
    result3 += M4(-0.0008713284, 0.12427615, 0.034739304, 0.06199472, -0.011267594, -1.0491364, -0.05222074, -0.048903666, -0.011776102, 0.26706538, -0.017207114, 0.020441834, 0.010940477, 0.09126513, 0.008248708, 0.07566705) * inp_1_0_2;
    result3 += M4(-0.008379826, 0.06469985, -0.028135737, 0.08806694, -0.033575267, 0.26067322, -0.04736203, 0.066790506, 0.030537741, 0.22497189, 0.06803532, 0.05613669, -0.01680811, 0.24823418, -0.08935874, -0.055855114) * inp_1_1_2;
    result3 += M4(-0.02083442, -0.08016813, 0.006738218, -0.029976046, -0.0005256645, 0.018536048, -0.009797518, -0.016407566, 0.045602497, 0.053143356, 0.02448104, 0.09018671, -0.04572232, 0.035228267, 0.014789851, -0.06276343) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.06301509, -0.07162685, 0.02061501, -0.060849287, 0.00961073, 0.17975518, -0.10393126, 0.095467694, 0.15801327, 0.20054096, 0.2764772, -0.024347516, -0.26961094, -0.07644679, 0.23326245, 0.27106488) * inp_2_0_0;
    result0 += M4(-0.04150342, -0.13118513, 0.16809545, -0.044748116, -0.09484373, -0.15592083, 0.09798903, -0.034782674, -0.4490366, -0.58416545, -1.2002342, 0.19997975, 0.13167937, -0.16566257, -0.16249703, -0.44604248) * inp_2_1_0;
    result0 += M4(-0.11794258, -0.27345872, 0.15229264, -0.10952313, -0.024598973, 0.010164912, 0.098912805, -0.094505794, -0.3193523, 0.038915135, -0.032645073, -0.35416487, -0.16211884, -0.0010630116, 0.17509833, -0.20898527) * inp_2_2_0;
    result0 += M4(0.025062753, 0.05405158, -0.044355147, -0.03831994, -0.27672416, 0.028667178, -0.13316008, 0.12116004, 0.18410654, 0.06153353, -0.043514937, -0.03715544, 0.0026758013, 0.13987376, 0.018262431, 0.011958578) * inp_2_0_1;
    result0 += M4(0.032641347, 0.06813082, -0.18967037, 0.16427119, -0.3146022, 0.20190834, -0.073571116, 0.15858164, -0.56462294, 0.10429105, -0.12750077, 0.10911957, -0.02677596, -0.08152035, -0.30191574, 0.04008892) * inp_2_1_1;
    result0 += M4(-0.006551186, -0.19837834, -0.26966625, -0.28325585, 0.08112266, 0.12525891, 0.06597807, -0.09588268, 0.0363241, 0.13790233, 0.10662852, -0.16805162, 0.12550786, -0.073828585, 0.25482088, 0.036820367) * inp_2_2_1;
    result0 += M4(0.063774444, -0.0048854863, -0.098994024, 0.008520354, 0.06408624, 0.00487829, 0.20731063, 0.037354648, 0.17479405, -0.04680112, 0.14079541, 0.046832826, -0.05717123, 0.05293786, 0.003414841, -0.0071693994) * inp_2_0_2;
    result0 += M4(-0.11850353, 0.034921117, -0.11179663, -0.10659575, -0.16055667, 0.081654094, -0.024710476, -0.1294818, 0.19496302, -0.038192112, -0.09924689, -0.021535836, -0.15613125, 0.08006137, 0.17602444, 0.12403518) * inp_2_1_2;
    result0 += M4(-0.026151877, 0.027458513, -0.023547146, -0.018777523, -0.00032468783, -0.0070641334, -0.08888088, -0.11558048, 0.00892239, -0.076576285, -0.038372863, -0.054974962, 0.0423218, 0.205403, -0.02046861, -0.07405538) * inp_2_2_2;
    result1 += M4(-0.08052414, 0.042711284, -0.049221598, -0.43888715, 0.06411606, 0.029976722, -0.022676697, 0.00287396, 0.13950178, -0.17492467, -0.15697657, -0.37566355, -0.002930867, 0.12501867, 0.029598674, 0.22888131) * inp_2_0_0;
    result1 += M4(0.10775207, 0.010959625, -0.039984666, 0.0061846343, 0.06790097, -0.03125531, 0.002560581, -0.057349745, 0.41864192, -0.14561209, 0.12764353, -0.3718315, 0.018274298, -0.05971079, 0.03427641, -0.4959226) * inp_2_1_0;
    result1 += M4(0.20128663, -0.009825475, 0.011828028, -0.031943843, -0.017713955, 0.010707028, 0.013758285, 0.07793561, 0.027219037, 0.0027088441, 0.0008928181, 0.16100733, -0.1718703, -0.058538806, -0.034212507, 0.48506764) * inp_2_2_0;
    result1 += M4(0.058433115, 0.056000024, -0.077184804, -0.28331053, 0.036939856, -0.0064217304, -0.0040275813, -0.13161243, -0.20530304, -0.06377092, -0.32441956, 0.14527981, -0.038087547, -0.018612958, 0.025165213, -0.27880517) * inp_2_0_1;
    result1 += M4(-0.21605769, -0.041690733, -0.07552337, -0.19142441, -0.093170464, -0.18092774, -0.03311695, -0.5026489, -0.48466304, 0.048286833, 0.1637465, -0.3721001, -0.21251768, -0.026703367, -0.09126028, 0.3544417) * inp_2_1_1;
    result1 += M4(-0.20255008, 0.02852359, 0.040055547, -0.19585462, 0.25195417, 0.017597653, 0.0009964987, -0.21615458, -0.039760225, 0.0065755504, -0.017038237, 0.31020665, 0.029365933, 0.036879864, -0.11436906, -0.16128561) * inp_2_2_1;
    result1 += M4(-0.08617276, 0.015575468, -0.074360274, -0.18196669, 0.1707695, 0.0687249, -0.045623705, -0.11663381, 0.07289199, -0.07786332, -0.121453315, 0.08537121, -0.020992668, -0.010175051, -0.035472896, -0.05414261) * inp_2_0_2;
    result1 += M4(-0.13552237, -0.046894565, -0.05728702, -0.31228903, -0.12781997, -0.13867909, -0.076771565, 0.021996476, 0.019228468, -0.080935955, -0.044926256, 0.21225788, 0.05085358, -0.08235673, -0.030822435, 0.26241425) * inp_2_1_2;
    result1 += M4(-0.11905685, -0.006741613, 0.007842953, -0.115763195, 0.02026594, -0.06464563, 0.08284938, -0.18815532, 0.0793985, -0.051202796, 0.010099219, 0.25240934, -0.038053896, -0.03357944, 0.08907784, -0.1757149) * inp_2_2_2;
    result2 += M4(-0.03313119, -0.03703288, 0.11226103, -0.023699002, 0.02216531, -0.005574096, -0.0246807, 0.078410976, -0.18097232, 0.32518202, -0.19426927, 0.08730648, 0.16300565, -0.17198874, 0.13943785, 0.049638275) * inp_2_0_0;
    result2 += M4(-0.058103185, -0.023338748, -0.037867356, -0.10337629, -0.015849471, 0.0716526, -0.10900074, 0.024557337, -0.5084406, 0.4103274, -0.076763615, -0.38506773, -0.10999699, 0.14993702, -0.10346753, 0.17446546) * inp_2_1_0;
    result2 += M4(0.085963525, -0.090737075, -0.0055674496, 0.011383786, 0.080252446, -0.009087983, -0.0024371934, -0.07584904, -0.06601244, 0.08058946, -0.0393987, -0.07563449, 0.13183618, -0.17856169, -0.06441502, -0.24506591) * inp_2_2_0;
    result2 += M4(-0.007634736, 0.021037176, 0.03676394, 0.2050301, 0.13761187, 0.016733978, 0.13308695, 0.049924225, 0.16050144, 0.13683912, -0.04121858, -0.025326861, -0.112001084, -0.008404205, -0.011252449, 0.101512745) * inp_2_0_1;
    result2 += M4(-0.2617701, -0.0091729425, -0.08599418, -0.12303591, -0.29733375, 0.06388978, -0.27478954, -0.22992782, 0.10224554, 0.31629992, -0.16919354, 0.16010419, -0.033007503, -0.060579143, -0.11627114, -0.1996781) * inp_2_1_1;
    result2 += M4(-0.14194237, -0.15085319, 0.052208886, -0.17060389, 0.011433151, -0.027607346, 0.02356492, 0.06724663, 0.01926926, 0.1618997, 0.0030697652, 0.16510203, -0.2320984, -0.059748292, 0.04323996, 0.013277754) * inp_2_2_1;
    result2 += M4(-0.09477518, -0.019457597, 0.017312238, -0.11812761, 0.0381041, -0.03596448, 0.0063075116, 0.03478842, 0.01049976, 0.03257983, -0.08446109, 0.004818245, -0.041235693, 0.039679717, -0.030019203, 0.01991868) * inp_2_0_2;
    result2 += M4(-0.04904514, -0.07887571, -0.0013668276, 0.04104905, 0.0903216, 0.09821195, -0.07281871, 0.072519034, -0.087959506, -0.0015609488, 0.0009431548, -1.608688e-05, 0.19923998, -0.0181984, 0.012353233, 0.10159695) * inp_2_1_2;
    result2 += M4(0.11329707, -0.1294817, -0.035959236, -0.07609564, 0.0068203392, -0.068363644, -0.008077394, 0.041328873, -0.01707137, 0.016672976, -0.012079555, 0.037429534, 0.16366377, 0.026679728, -0.06469634, -0.021190237) * inp_2_2_2;
    result3 += M4(0.0038091938, 0.03953975, 0.008025116, 0.018743375, 0.013164484, 0.031687956, 0.0017626155, -0.0771619, -0.06335359, 0.11763502, -0.14768367, -0.016523696, 0.08301678, -0.07431069, 0.10022659, -0.06793996) * inp_2_0_0;
    result3 += M4(-0.056495197, -0.22088672, 0.033953186, -0.078301005, -0.02735913, -0.0724409, -0.0015625345, -0.20179732, 0.06166141, 0.09898468, 0.03989592, -0.53945357, -0.09923295, 0.1915479, -0.05056501, 0.054663047) * inp_2_1_0;
    result3 += M4(0.1372287, 0.020751627, -0.0046272185, 0.2659115, 0.01849525, 0.043791834, -0.01619812, 0.12718968, 0.100864425, 0.23358163, -0.009923675, 0.30555487, 0.0018567857, -0.044150494, -0.023804002, -0.14658125) * inp_2_2_0;
    result3 += M4(-0.008859567, -0.089126244, 0.042823207, 0.026695348, 0.012100703, -0.11607218, 0.050629202, 0.030161722, -0.015216133, 0.4114995, -0.02800085, 0.034851417, -0.06651222, 0.11894342, -0.025368469, -0.045839492) * inp_2_0_1;
    result3 += M4(0.10275826, 0.12243559, 0.08020648, -0.24693838, -0.034404017, 0.2598878, -0.09316282, -0.10858638, 0.10273241, 0.25482842, 0.015651003, -0.02415815, -0.00021919573, 0.44767168, 0.08377331, -0.08335213) * inp_2_1_1;
    result3 += M4(0.0367607, -0.23734125, -0.008054783, -0.06342395, 0.12541287, 0.027483797, -0.014785926, -0.124969095, 0.062949084, 0.090043545, -0.015304096, 0.06372473, 0.06984444, 0.04654289, -0.06843246, -0.11344602) * inp_2_2_1;
    result3 += M4(-0.025068576, -0.037934173, 0.0019848535, -0.029976133, 0.0074390313, 0.014815036, 0.0023259881, 0.0153942555, -0.04547002, 0.2851319, -0.10630442, 0.0034345612, 0.039903607, -0.03733698, 0.031715754, 0.0025475817) * inp_2_0_2;
    result3 += M4(0.044879828, -0.23501104, 0.03468207, -0.0073346766, -0.029134177, 0.07411453, -0.042940147, -0.07252651, -0.0021581892, 0.28865442, 0.0024308097, 0.025307626, 0.010573182, -0.23588848, -0.08393481, -0.05248331) * inp_2_1_2;
    result3 += M4(0.006043466, -0.00030027886, -0.03632799, 0.0061751786, 0.048732474, 0.19600391, -0.001150017, 0.026961317, 0.026469167, 0.11055791, -0.01764017, 0.09434696, 0.01646098, 0.07424088, 0.01726093, -0.23712572) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.08104971, -0.63787574, 0.1881271, 0.321659, 0.45415103, -0.18638816, 0.16086388, 0.12787527, -0.023238823, 0.07911849, 0.06696008, -0.011615395, -0.15405367, -0.2672579, 0.007700766, 0.038452074) * inp_3_0_0;
    result0 += M4(0.21043736, -0.15345791, 0.16345708, -0.066656135, 0.6080342, 0.10759846, 0.2211001, 0.15028378, 0.028989157, 0.07183009, 0.20895754, -0.1263909, -0.0057226624, -0.38387403, 0.023211615, 0.20829594) * inp_3_1_0;
    result0 += M4(0.05335374, -0.20119824, 0.0355639, -0.0012708487, 0.54317445, -0.15024896, 0.25418082, -0.7894863, 0.064272866, 0.017642602, -0.01611798, -0.007715584, 0.13395594, -0.07677499, -0.008897527, 0.1413154) * inp_3_2_0;
    result0 += M4(-0.2656765, 0.32281023, 0.14100038, -0.3266814, 0.083472066, -0.01050912, 0.2128578, -0.12665814, -0.14392903, -0.020841092, -0.11523457, 0.079061076, 0.22693971, 0.20615329, 0.20279731, -0.123476125) * inp_3_0_1;
    result0 += M4(-0.4314137, 0.19341692, 0.14686126, 0.18585059, -0.15515456, -0.10645424, -0.14677447, 0.07760155, 0.09273718, -0.17328264, -0.16379601, 0.07237893, -0.46387058, -0.11878909, -0.2205912, 0.062290404) * inp_3_1_1;
    result0 += M4(-0.12843335, 0.073188365, 0.009877984, -0.13306464, 0.02412414, 0.055617027, 0.27917084, 0.06484637, -0.039237678, 0.124572195, 0.05517694, -0.11354021, 0.06011818, -0.018319128, 0.070508935, 0.0016432933) * inp_3_2_1;
    result0 += M4(-0.05111259, -0.41062027, -1.1577702, 0.2687372, 0.025629908, -0.033541378, 0.11672423, -0.0048888554, -0.07239913, 0.036857285, 0.025127487, 0.0068783695, 0.054466553, -0.12827854, -0.16899215, -0.060900066) * inp_3_0_2;
    result0 += M4(0.08334478, -0.1419908, -0.32951573, 0.18499137, 0.056198634, 0.04757257, -0.029257808, -0.0013932455, -0.03447447, 8.770418e-05, -0.1255833, 0.006232391, 0.0958579, -0.27768713, -0.38728258, 0.08070163) * inp_3_1_2;
    result0 += M4(-0.019899638, 0.12387711, -0.102135, 0.009686667, 0.08425418, -0.06817345, 0.035300504, 0.049091488, -0.015484081, 0.07133344, 0.13999143, 0.0051643113, -0.010365768, 0.10225196, 0.0718309, 0.028823318) * inp_3_2_2;
    result1 += M4(-0.11504248, 0.10572289, -0.091667324, -0.7305967, 0.14224619, 0.05525491, -0.025626292, -2.5589185, -0.058628727, 0.03699018, -0.012272947, -0.022923462, 0.005721716, -0.10310511, 0.034727175, 0.20059355) * inp_3_0_0;
    result1 += M4(0.20820484, 0.016588472, -0.026291162, -0.028422114, -0.26527196, 0.5074128, -0.5347998, -1.4415015, -0.08603611, 0.07734211, 0.02867896, 0.1198334, 0.27041543, -0.077006705, 0.015537684, -0.13851644) * inp_3_1_0;
    result1 += M4(0.0111510735, -0.027445886, -0.012079515, 0.06877661, -0.2792903, 0.27595416, -0.21828032, -1.1861659, -0.06845134, 0.0175617, -0.0014322292, 0.07505101, 0.028700069, -0.07851117, -0.0103777, 0.07587998) * inp_3_2_0;
    result1 += M4(-0.6942043, -0.007905627, -0.32527757, -1.2234089, -0.0061832434, 0.01703191, 0.3507111, -0.09865637, 0.017374719, -0.15064372, -0.003168558, -0.12700212, -0.08806333, -0.095933564, 0.03499382, -0.14171955) * inp_3_0_1;
    result1 += M4(0.05724623, 0.12290566, -0.058593914, -0.27892986, -0.0052088187, 0.10600225, 0.56668097, 0.21570963, 0.3688377, -0.3218771, 0.07617625, -0.11206424, -0.27152395, -0.008441151, 0.11337684, -0.3763716) * inp_3_1_1;
    result1 += M4(0.08145415, 0.117205806, 0.022433216, -0.21450096, -0.047599696, 0.046857018, 0.12538947, 0.12012452, -0.0062651415, 0.030227317, -0.05281151, 0.10142033, 0.012307325, -0.039701317, 0.003678107, 0.17522708) * inp_3_2_1;
    result1 += M4(-0.9957383, -0.42502692, -0.7315453, 0.43845463, 0.07170407, -0.08748606, -0.053164624, 0.23818082, 0.017504055, -0.0057902928, -0.081527114, -0.09719836, -0.052232884, -0.06266801, -0.054626103, 0.17909902) * inp_3_0_2;
    result1 += M4(-0.32381368, -0.1710393, 0.054620516, 0.1800002, 0.027514733, 0.076389715, 0.13154468, -0.016052218, -0.22636855, 0.12774964, 0.11527274, -0.0055126953, -0.38383067, -0.03381459, 0.14211772, -0.14499553) * inp_3_1_2;
    result1 += M4(-0.0878406, -0.109372005, 0.029573256, -0.06593263, 0.040631503, -0.0321936, -0.02764285, 0.035626028, 0.15754983, 0.0070491508, -0.06917345, -0.040202796, -0.00835433, 0.037931368, -0.0066041993, -0.019282103) * inp_3_2_2;
    result2 += M4(-0.057736333, 0.09815931, 0.05598628, 0.20085616, 0.3748053, 0.6324958, -0.12861244, -1.0740874, 0.032589134, -0.021887757, 0.07214311, -0.015999544, 0.07555141, 0.016161116, -0.09675377, 0.05512548) * inp_3_0_0;
    result2 += M4(0.28807598, -0.15178142, 0.020107625, -0.039336685, 1.070541, -0.26355866, 0.22159265, -0.73076195, 0.012672172, -0.086733535, 0.332383, -0.09227671, 0.058566365, 0.08092568, -0.10496177, 0.18736005) * inp_3_1_0;
    result2 += M4(0.054311786, -0.020070631, 0.019682216, 0.050678022, 0.65896744, 0.09932194, -0.04703747, -0.38190734, 0.08903904, -0.00044473037, 0.08076371, 0.07415664, 0.08682933, 0.05419072, -0.07249226, 0.056065798) * inp_3_2_0;
    result2 += M4(-0.612828, 1.155687, -0.0070278896, -0.87107706, 0.039322793, -0.0961937, -0.067287505, -0.08518546, -0.024974246, 0.06182886, -0.017429788, -0.06273645, -0.14863826, 0.18299238, -0.16256621, 0.03244745) * inp_3_0_1;
    result2 += M4(-0.25367588, 0.26931527, 0.013913822, -0.12923622, 0.06682466, 0.22136255, 0.059361793, 0.1563091, -0.29947937, -0.37850296, 0.2295771, -0.10621729, -0.1893084, 0.057724703, -0.008906728, -0.38605538) * inp_3_1_1;
    result2 += M4(-0.15405533, -0.02066257, 0.10218166, 0.033489488, 0.13676453, 0.027247967, -0.10670705, 0.00306623, 0.1390871, 0.09181543, -0.030031128, -0.037762903, -0.024044517, 0.058457416, 0.02189102, 0.06277002) * inp_3_2_1;
    result2 += M4(-0.4731298, 0.6111721, -0.15025438, -0.16941369, 0.0022327923, -0.04348849, -0.009970784, -0.0054260725, -0.029573496, 0.00243378, 0.030148227, 0.013787057, -0.03805039, -0.0087860515, -0.041829553, -0.062379044) * inp_3_0_2;
    result2 += M4(-0.13794816, -0.0265475, -0.110625535, -0.029886559, -0.03737042, 0.024026, 0.02746956, -0.012550138, 0.085691616, 0.05048546, 0.0272222, 0.07787082, -0.123569675, 0.20621863, 0.027900008, 0.04901485) * inp_3_1_2;
    result2 += M4(0.13413131, -0.037724897, -0.09222849, -0.12460431, 0.024652017, 0.088002525, 0.0028681972, 0.07976331, 0.057166003, -0.025635583, -0.026573597, -0.038170815, 0.0031035375, 0.024018649, -0.0027278042, 0.005327079) * inp_3_2_2;
    result3 += M4(-0.089838535, 0.20518437, 0.041941825, -0.23650956, -0.28395703, -0.9718671, -0.14629215, 0.31980872, -0.00684272, 0.13371323, 0.084173076, -0.014263598, -0.055574816, 0.030968951, -0.07314882, 0.030706529) * inp_3_0_0;
    result3 += M4(0.16008781, -0.07229756, -0.003774455, 0.12695998, 0.059183422, -0.13909258, 0.07286151, 0.388166, -0.06633566, -0.10587098, -0.039036386, 0.049035724, 0.0060984967, -0.079470344, -0.062871315, 0.103549875) * inp_3_1_0;
    result3 += M4(-0.007502746, -0.05187746, -0.023735842, 0.18946494, -0.10261641, -0.48089972, 0.024977088, 0.3566832, -0.027147595, -0.02259228, 0.07434462, 0.25143418, -0.009565739, 0.094198905, -0.049076483, 0.07315108) * inp_3_2_0;
    result3 += M4(0.02619557, -0.12829104, 0.13451341, -0.6558064, 0.08180772, -0.30674267, 0.18340087, 0.0040878067, -0.07298573, -0.0056493906, -0.1011214, -0.0072493204, -0.037693813, 0.07509446, -0.12303189, -0.070591584) * inp_3_0_1;
    result3 += M4(0.37653705, -0.027897457, 0.0030451415, 0.23925121, 0.41440544, -0.6509782, 0.48584846, 0.082199946, 0.23973876, 0.19208913, 0.3560169, -0.02975922, -0.07399134, -0.6662189, -0.010200397, -0.017711105) * inp_3_1_1;
    result3 += M4(0.023285335, 0.008141024, 0.09752539, -0.1680914, 0.32868296, -0.8352294, -0.086944975, 0.067841694, -0.16501573, -0.12753776, -0.051941045, -0.019422134, -0.036648538, 0.061581325, -0.017711313, -0.05550369) * inp_3_2_1;
    result3 += M4(-0.00401501, -0.4170615, -0.010597533, -0.44358754, 0.05332654, 0.07228999, -0.06887763, 0.011239317, -0.002615764, -0.16845442, -0.017906591, -0.020328099, -0.0023380334, 0.07447299, -0.03462258, -0.012307639) * inp_3_0_2;
    result3 += M4(0.1732868, 0.018616037, -0.024274431, -0.07854684, -0.008214823, -0.027459128, 0.07085405, -0.0076022, 0.037666313, -0.08132763, 0.11551278, -0.019942788, -0.026999272, 0.08920392, -0.059264716, -0.11462604) * inp_3_1_2;
    result3 += M4(-0.018643538, 0.113188475, -0.09613991, 0.013806754, -0.030721791, 0.19288167, -0.02254117, 0.038051922, -0.034403168, 0.10145778, -0.0398427, 0.018653847, -0.04739209, -0.04505007, 0.012581506, -0.043693632) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0060263854, 0.002947172, 0.00602948, -0.0113692535);
    V4 result1 = V4(0.0031257803, 0.013323274, -0.0064589693, 0.01084888);
    V4 result2 = V4(-0.0061412207, -0.086418025, -0.008746051, -0.0053226296);
    V4 result3 = V4(-0.0041511557, 0.0112993885, -0.007673035, -0.007993261);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.017422805, -0.030021904, 0.003091183, -0.022523263, -0.0037462218, 0.058700316, 0.028456368, -0.028709937, -0.017076006, 0.08967241, 0.049398676, -0.089407735, 0.017453283, 0.17142652, 0.055310808, -0.033163313) * inp_0_0_0;
    result0 += M4(-0.019130796, -0.030237446, -0.042577554, 0.095827475, 0.010245823, 0.106926985, 0.048608173, -0.067140296, 0.016431604, -0.010180165, -0.040668845, 0.14421485, -0.013373486, -0.029932078, -0.048011005, 0.0378433) * inp_0_1_0;
    result0 += M4(0.0134083135, -0.028108947, -0.008824934, 0.029446362, -0.008346695, 0.016813453, 0.0049119242, 0.0007752827, -0.006511958, 0.01119, 0.0035600315, 0.010118543, 0.0032672985, 0.010805344, 0.023706554, -0.01897314) * inp_0_2_0;
    result0 += M4(-0.004946536, -0.02879844, -0.12489061, 0.10996396, -0.0018383157, -0.106401175, -0.09789919, 0.06108433, 0.0017899513, -0.29962105, -0.025103902, 0.02986919, 0.05046378, 0.4150428, -0.003364304, -0.05536004) * inp_0_0_1;
    result0 += M4(0.0047323913, 0.0024003945, 0.26548392, -0.14584899, -0.003508686, -0.029160121, -0.16569287, 0.1592699, 0.05140282, -0.05422595, 0.19946365, -0.26442686, -0.02510207, 0.056307524, -0.23633511, 0.18816635) * inp_0_1_1;
    result0 += M4(0.013944363, 0.0053502833, -0.09429561, 0.08304047, 0.0065808957, -0.016553856, -0.026335113, 0.0100334585, -0.017834453, -0.033712216, -0.034504887, -0.029450672, 0.007919778, 0.043576017, 0.112147376, -0.09670036) * inp_0_2_1;
    result0 += M4(-0.010999145, -0.1335549, -0.017575562, 0.024147628, -0.047967568, 0.010456408, 0.020183872, -0.022545917, -0.0129200965, 0.0032196695, -0.02378305, 0.054161444, 0.010309448, 0.2431008, 0.027149886, -0.033172645) * inp_0_0_2;
    result0 += M4(-0.062322393, -0.0033684191, -0.063346885, 0.09104864, 0.0854733, -0.027760675, 0.09265061, -0.0413195, -0.120894834, -0.040490843, -0.07273408, 0.041172173, -0.008954978, -0.101986825, 0.000239586, 0.017183546) * inp_0_1_2;
    result0 += M4(0.0014988134, -0.021410074, 0.009478544, -0.05281473, -0.06328832, 0.046103414, -0.0071059633, -0.008949017, 0.01690539, 0.08707258, -0.0106697725, 0.02198439, -0.022521421, 0.028490588, 0.025198098, -0.044662483) * inp_0_2_2;
    result1 += M4(-0.004718299, -0.034517843, -0.01534259, -0.10709907, 0.0054895007, 0.08040977, 0.00030077877, 0.07987097, -0.026678324, 0.11087281, 0.007944417, 0.04139721, -0.007096874, 0.015044167, 0.017482348, -0.025066243) * inp_0_0_0;
    result1 += M4(-0.07395243, -0.102277376, -0.0117595, -0.24308772, 0.06689667, 0.042913742, 0.0105151255, 0.16265745, -0.014523258, 0.0024793528, -0.008857716, -0.040755562, -0.0017143645, 0.12414188, -0.021987118, 0.18106596) * inp_0_1_0;
    result1 += M4(0.0060859965, 0.042444356, -0.010926075, 0.08222684, 0.018589843, 0.035772324, 0.00030029198, 0.022553274, -0.024321945, -0.05158295, -0.011230708, -0.075436756, -0.04178572, 0.052105, -0.0021170094, 0.042172614) * inp_0_2_0;
    result1 += M4(0.08524874, 0.11046417, -0.013638927, 0.09587077, 0.019727143, -0.1035491, -0.019952891, 0.011368095, 0.02273653, 0.051233068, -0.023283089, 0.12018587, -0.119992375, 0.013482041, 0.02445349, -0.029198688) * inp_0_0_1;
    result1 += M4(0.04359291, 0.06328103, 0.06542031, 0.105973, -0.24182202, 0.044789184, -0.0772375, -0.18951115, 0.064834885, 0.16404152, 0.014450509, 0.28463185, 0.27017438, -0.11105302, -0.0046926513, -0.06428295) * inp_0_1_1;
    result1 += M4(0.020351369, -0.08093968, -0.043637533, 0.014954229, -0.025988527, -0.035361122, -0.016312001, 0.008723501, 0.035144433, 0.09494615, 0.011182292, 0.06849059, -0.11057634, 0.011648669, 0.058049694, 0.02285568) * inp_0_2_1;
    result1 += M4(-0.024279093, -0.011852131, -0.11596154, -0.0513113, 0.004916695, 0.08377997, 0.0047823084, 0.18931867, -0.022486372, 0.027381979, -0.063495085, 0.0097967135, 0.02755262, -0.09403321, 0.07597338, -0.07998271) * inp_0_0_2;
    result1 += M4(-0.043461107, -0.19300866, 0.11227899, -0.1345365, 0.10325161, 0.19583394, 0.1486245, 0.25692323, -0.07221946, -0.26044738, -0.16536558, -0.021353764, -0.0014739129, 0.09850393, -0.21633951, -0.101327434) * inp_0_1_2;
    result1 += M4(-0.0058991215, 0.07247161, -0.054679148, 0.019594528, 0.022097621, 0.19003332, 0.022723062, 0.30111158, -0.011413256, 0.06316239, -0.04136907, -0.000653296, -0.024000637, -0.13248968, 0.12082142, -0.17755252) * inp_0_2_2;
    result2 += M4(0.0498164, -0.014658, 0.00762102, 0.032216333, -0.0022217198, 0.052580126, 0.014788071, 0.026593009, 0.00085510465, 0.064503565, 0.0074302256, 0.010149498, 0.017564738, -0.032429423, 0.016675238, 0.0022919683) * inp_0_0_0;
    result2 += M4(-0.03975841, -0.08123507, 0.022095352, 0.014707386, 0.024735492, -0.11846127, -0.03378093, 0.033620138, -0.053307373, 0.020441381, 0.044770464, -0.06271847, -0.0011026224, 0.021129219, -0.0408287, 0.01719731) * inp_0_1_0;
    result2 += M4(0.009734432, -0.10747044, -0.0645638, 0.071172126, 0.016354756, 0.075250365, 0.03231546, -0.05439474, 0.014987618, -0.021517241, -0.05524854, 0.029631907, -0.03023589, -0.09804607, -0.059271827, 0.034785908) * inp_0_2_0;
    result2 += M4(-0.07810643, -0.014373026, 0.0018257955, -0.0740169, 0.037967626, 0.038285855, -0.015127497, -0.10945062, -0.058882374, -0.027328456, -0.037399713, 0.05781211, 0.240389, 0.06687984, -0.061416674, 0.028332058) * inp_0_0_1;
    result2 += M4(0.009309121, 0.04442257, -0.019824915, 0.25752318, -0.06051042, 0.05109981, 0.083991334, -0.10514316, 0.018725067, -0.04566715, -0.04953827, -0.035825305, -0.029900426, 0.04511436, 0.15858252, 0.049939647) * inp_0_1_1;
    result2 += M4(0.026025802, -0.017639624, -0.16342206, 0.10667318, -0.00052749785, -0.053267695, -0.17724578, 0.080265485, 0.056049146, -0.02133455, -0.15185581, -0.046108548, -0.12724444, -0.08089097, 0.06597658, -0.13697799) * inp_0_2_1;
    result2 += M4(-0.005474213, -0.10664491, -0.0051722084, 0.028695945, -0.1101442, -0.10883232, 0.0052894973, 0.020982398, 0.024555324, 0.0527316, -0.0020265507, 0.04374957, 0.00512488, -0.019092556, 0.034416493, -0.046911858) * inp_0_0_2;
    result2 += M4(-0.008717515, 0.019474527, -0.00010928909, -0.028872155, -0.068882175, -0.080131084, -0.012242779, -0.06159584, 0.019935824, -0.014847923, 0.0018276805, -0.0017369583, -0.05321567, -0.061947733, -0.027710907, -0.029471878) * inp_0_1_2;
    result2 += M4(-0.1197538, -0.04287162, 0.027676282, -0.04045518, 0.014946392, 0.07699659, -0.04192499, -0.047757223, -0.1000879, 0.011693156, 0.053325474, 0.021534562, 0.060393702, -0.04410951, 0.016008161, 0.041327726) * inp_0_2_2;
    result3 += M4(-0.043727715, -0.091944054, 0.07689305, 0.055286553, 0.012700136, 0.031936947, 0.0015574077, 0.017568793, -0.09982607, 0.12855381, -0.07891075, -0.13235429, 0.025780894, 0.13887155, 0.06960517, 0.0670421) * inp_0_0_0;
    result3 += M4(0.042998433, 0.13035178, -0.12051429, 0.09152461, -0.06276343, 0.04966341, 0.0036817861, -0.064503916, 0.16309069, 0.1020349, 0.102949865, 0.0003257145, 0.04262684, 0.20589742, 0.122032955, 0.011129307) * inp_0_1_0;
    result3 += M4(0.05492605, -0.17030266, 0.021501552, -0.0030057628, 0.06564237, 0.06701135, -0.0063017053, 0.029432166, -0.0178162, -0.08218963, -0.20388594, -0.043568507, -0.06468138, 0.10912724, -0.006541491, -0.012521045) * inp_0_2_0;
    result3 += M4(0.040772807, -0.0978944, 0.2055714, 0.3447202, 0.046089668, -0.12711076, 0.041106477, -0.11950554, 0.021097502, -0.26497075, 0.020019174, 0.0993132, -0.16480199, 0.029999482, 0.13163592, -0.10328402) * inp_0_0_1;
    result3 += M4(0.32189465, 0.18702908, 0.06086876, 0.12065491, 0.02910929, 0.13137844, 0.09093376, 0.0791801, 0.14832628, -0.015648315, -0.24322763, -0.029197605, -0.13817042, -0.23458193, 0.5137517, -0.096862204) * inp_0_1_1;
    result3 += M4(-0.06278003, 6.3286876e-05, 8.84154e-05, -0.0024811781, -0.033539515, 0.019800728, -0.07353877, -0.021150993, -0.031516716, 0.032569163, 0.007747151, -0.021955349, 0.13632111, 0.23857026, -0.07227271, 0.030225772) * inp_0_2_1;
    result3 += M4(0.04461651, -0.17373595, 0.0550767, 0.102046, -0.04936386, -0.00865178, -0.091922745, 0.06873322, 0.015923006, 0.010405284, 0.03547494, -0.02489816, -0.021316372, 0.18222821, -0.062625706, 0.124261) * inp_0_0_2;
    result3 += M4(-0.091112256, 0.11808728, 0.0014122163, 0.043982264, 0.08458214, -0.26451898, -0.099554464, -0.13740288, -0.050698094, -0.024155064, -0.037543055, -0.028485816, 0.004959569, 0.08617821, 0.00736564, -0.0418711) * inp_0_1_2;
    result3 += M4(0.053110022, -0.009196242, -0.016274497, 0.0022749403, -0.006711582, -0.036055233, 0.078266144, 0.04588204, 0.027234348, 0.10676045, -0.057474185, -0.010049061, -0.049764577, 0.0713769, -0.034693185, 0.01858297) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.010456968, 0.006240712, -0.013353374, 0.003923615, -0.001238321, -0.019616965, -0.0018294381, -0.0034114108, -0.018969955, 0.3386532, -0.17232811, 0.17756048, 0.014429051, 0.09585785, 0.0016950527, -0.036968064) * inp_1_0_0;
    result0 += M4(0.01802861, -0.30876905, 0.12997226, -0.053758636, -0.052606747, -0.02805628, -0.13418935, 0.13771437, -0.051569145, 0.17895359, 0.25763765, -0.36307782, -0.0045333807, 0.028132914, -0.029008523, 0.014025651) * inp_1_1_0;
    result0 += M4(-0.0067207995, 0.074203864, 0.027223015, -0.03259708, 0.032650877, 0.037538152, -0.010825063, 0.02619582, -0.03444594, -0.08691367, -0.03929009, 0.18910816, 0.0041072387, -0.01089271, -0.012397868, -0.019716801) * inp_1_2_0;
    result0 += M4(0.024459483, -0.2930351, -0.03460746, 0.032541495, -0.048426546, -0.107275784, -0.06025452, 0.06171266, 0.0067594023, -0.15257241, -0.020126626, 0.022299, -0.02594962, 0.0062685995, 0.049095888, -0.07106712) * inp_1_0_1;
    result0 += M4(-0.031173328, 0.03967279, -0.181817, 0.08894015, -0.045085207, 0.0646405, -0.2546308, 0.2785592, 0.14274482, 0.17376867, 0.026802184, -0.060256653, 0.10616416, -0.14285764, -0.054997947, 0.124677286) * inp_1_1_1;
    result0 += M4(0.055278115, -0.004499099, -0.050957154, -0.00032142366, -0.020437771, -0.019988531, -0.07158703, 0.078996226, 0.1205375, 0.2950589, 0.022782242, 0.011105817, -0.03068854, 0.022380732, 0.07457448, -0.084878325) * inp_1_2_1;
    result0 += M4(-0.059439737, -0.084407434, 0.02471067, -0.022487985, -0.044103187, -0.22786607, -0.008952314, -0.008440305, 0.076305985, 0.29951385, -0.014092202, 0.005018336, 0.0038434435, 0.2920407, -0.001966233, -0.029274803) * inp_1_0_2;
    result0 += M4(0.10751501, 0.11794158, 0.058983207, -0.07134244, 0.093691275, 0.15567501, 0.02746626, 0.016238976, 0.016329512, 0.035947453, 0.06187994, -0.05450965, -0.105504066, -0.09302923, -0.02789873, 0.009195867) * inp_1_1_2;
    result0 += M4(-0.07318263, -0.02799576, 0.017420936, -0.017843181, -0.04015527, -0.115093164, -0.0016685654, -0.015402299, -0.07347236, -0.0071707787, 0.030905513, -0.052449252, 0.013222891, 0.09702587, 0.031404078, -0.041475125) * inp_1_2_2;
    result1 += M4(-0.017025072, -0.0009482717, -0.010107286, 0.21055469, -0.02719809, 0.016187273, -7.357752e-05, 0.015856065, 0.10867431, 0.05977283, -0.02134742, -0.046545208, -0.027621524, 0.010211311, 0.005278706, 0.12630036) * inp_1_0_0;
    result1 += M4(0.21942955, -0.033297293, 0.016931351, 0.16118257, -0.1834005, -0.12226947, -0.014960637, -0.26335385, -0.39526242, -0.11856957, 0.013249132, 0.17481336, -0.016578509, -0.15897293, -0.005803068, -0.34785268) * inp_1_1_0;
    result1 += M4(-0.00011978831, 0.10351152, 0.0005164423, 0.17253049, -0.03706098, 0.013534416, 0.0012607512, 0.0037349716, 0.16475658, -0.09180068, 0.042644914, -0.14828138, 0.028487375, 0.008276988, -0.0003025778, 0.016197527) * inp_1_2_0;
    result1 += M4(-0.015820624, -0.056817304, 0.00019980206, -0.005813248, -0.010116671, 0.06335628, 0.05614435, 0.002446241, 0.09547177, -0.09786469, -0.11793883, -0.0021158394, -0.073387675, -0.09684898, 0.0506008, -0.05179041) * inp_1_0_1;
    result1 += M4(-0.21697696, 0.047851406, -0.057561852, -0.33110586, -0.3009572, -0.065282315, 0.19572835, -0.032120593, -0.12396936, -0.449805, 0.21163683, -0.39422607, 0.1484597, 0.11491008, 0.018023023, 0.06229297) * inp_1_1_1;
    result1 += M4(-0.02734233, 0.17212361, 0.002980276, 0.044266876, -0.072376564, -0.128666, 0.025026647, -0.00059422775, 0.00997241, 0.042025797, -0.07342022, 0.12728365, -0.12839046, -0.022899568, -0.033010673, -0.024075517) * inp_1_2_1;
    result1 += M4(0.015584535, 0.06852048, -0.02441542, -0.015677124, -0.0054553947, -0.017900547, -0.009128626, -0.040974308, 0.001708585, 0.008410281, -0.055555757, 0.12390648, 0.0035203404, 0.030753069, 0.07137569, 0.019542491) * inp_1_0_2;
    result1 += M4(0.03971584, 0.26946813, 0.16848865, 0.15391201, 0.027858295, -0.068231896, 0.2880775, 0.024924938, 0.038165096, 0.291745, 0.057703756, 0.19093707, -0.025634527, -0.30345067, -0.08946552, -0.2004994) * inp_1_1_2;
    result1 += M4(0.011085887, 0.15022759, 0.0008945889, 0.0051964233, 0.01153958, -0.008861682, 0.025805268, 0.012170962, -0.020621056, 0.04861852, 0.007161367, 0.032880418, 0.0024298707, -0.05989236, 0.098251045, 0.038116623) * inp_1_2_2;
    result2 += M4(0.0075742677, -0.10737233, -0.021238511, -0.033151373, 0.014775998, -0.11223123, -0.0010402518, 0.037324384, -0.11733885, 0.025207074, 0.007528051, -0.07944442, -0.0132408915, 0.026883747, -0.0011812038, -0.044925794) * inp_1_0_0;
    result2 += M4(0.11573701, -0.028468516, -0.018528722, 0.1461329, -0.14739539, -0.10677033, -0.026626678, -0.21434835, -0.09699754, -0.028758926, -0.06709661, 0.075066656, 0.07590648, -0.0058252043, -0.008466532, -0.013077222) * inp_1_1_0;
    result2 += M4(0.025472911, -0.03772153, 0.16940358, 0.027212948, -0.00172361, -0.0494815, -0.310751, 0.10735315, 0.42138463, 0.07500746, -0.13942876, 0.24085774, -0.0123175215, 0.058866337, 0.026241973, 0.057255432) * inp_1_2_0;
    result2 += M4(0.0024848543, -0.0007373845, -0.0034942268, 0.014644412, -0.05588423, -0.06888474, -0.0094290525, -0.10764611, -0.050800312, -0.085860685, -0.01504424, 0.030807003, 0.08122049, -0.008914019, 0.02207803, 0.0550416) * inp_1_0_1;
    result2 += M4(0.14254113, -0.09005748, -0.04315773, -0.09861952, 0.14141056, -0.08706332, -0.09739846, 0.17238827, 0.15658079, 0.043919493, 0.05513318, 0.1225753, -0.012244255, -0.060869195, 0.04123875, -0.22126167) * inp_1_1_1;
    result2 += M4(-0.06544629, -0.09563165, 0.121557005, 0.0803983, -0.08597734, -0.11474331, 0.21436764, -0.015320387, -0.18383019, 0.0357121, -0.017838366, -0.19426855, -0.068001516, 0.0064474395, 0.016635504, -0.059500482) * inp_1_2_1;
    result2 += M4(-0.053904258, -0.03992895, 0.0019127775, 0.044467278, -0.035619237, -0.09130982, -0.0068910187, 0.010332217, 0.01654234, -0.0926111, -0.009021391, 0.07037841, -0.027597735, 0.056039777, -0.001165688, -0.11338636) * inp_1_0_2;
    result2 += M4(-0.037825987, -0.038791824, 0.018783633, -0.08042412, -0.02226193, -0.04515216, -0.008213561, 0.024735415, -0.03152554, -0.049390845, 0.022549612, -0.134839, -0.03982586, 0.029534109, -0.023359355, 0.026350677) * inp_1_1_2;
    result2 += M4(0.009846481, -0.10506123, -0.00843792, 0.013304674, 0.0586043, 0.024360465, 0.0008117643, -0.017911851, -0.12532139, -0.018673869, -0.018034823, -0.033460062, 0.047149245, 0.042919185, -0.09383589, -0.07746541) * inp_1_2_2;
    result3 += M4(-0.005939096, 0.05036727, -0.0012444555, -0.0052555827, 0.0013930581, -0.0656416, 0.028210364, -0.086603075, 0.06217005, -0.1917067, 0.39595908, 0.25948438, -0.03620823, 0.1814926, -0.16648167, 0.023963666) * inp_1_0_0;
    result3 += M4(0.04885205, -0.277628, -0.14953558, 0.0046815034, 0.13558504, -0.06877806, -0.027382769, 0.12321495, -0.33470094, 0.9423867, -0.34136507, 0.23613241, -0.005554177, -0.13691898, 0.18114966, -0.0028432112) * inp_1_1_0;
    result3 += M4(0.016337063, 0.08683066, -0.027860276, 0.035396494, -0.08429, 0.063832216, -0.10649796, -0.04854045, -0.059327725, 0.8531586, 0.40823624, 0.043397967, -0.050797008, 0.03477736, 0.009640782, 0.024931181) * inp_1_2_0;
    result3 += M4(0.05260782, 0.08626829, 0.015106657, -0.093971096, 0.07383528, -0.035370048, 0.12487281, 0.2397744, -0.042147383, -0.053750094, 0.12090863, -0.14677835, -0.089066975, -0.0031176351, -0.064152464, -0.103101656) * inp_1_0_1;
    result3 += M4(-0.07875934, -0.12661994, -0.057969138, -0.013420048, -0.12170025, -0.2031935, -0.18725322, -0.13065897, 0.0914297, 0.28039727, 0.23262304, 0.13066074, -0.10672372, 0.031915054, 0.12910995, 0.00013086808) * inp_1_1_1;
    result3 += M4(-0.04509519, -0.24468935, 0.009425396, 0.011314632, -0.026642198, 0.010778662, -0.0031564417, 0.041681044, 0.10102715, 0.2676195, 0.027363805, 0.005521775, 0.025765324, 0.11136663, -0.08239382, 0.0015434977) * inp_1_2_1;
    result3 += M4(-0.010673725, 0.012444063, 0.020981923, -0.013871802, -0.0499038, -0.14054708, 0.04295625, -0.032813713, 0.010102023, -0.058152236, 0.045330465, 0.14955732, 0.07294308, 0.0313405, 0.010143871, -0.088675976) * inp_1_0_2;
    result3 += M4(-0.02216366, -0.0057325843, 0.03994358, -0.025320534, 0.011353156, 0.15223874, -0.037227318, 0.03413444, 0.026636826, 0.08487408, -0.005761335, 0.015686592, 0.0044204914, 0.030644253, 0.04259687, 0.05540158) * inp_1_1_2;
    result3 += M4(0.024581358, -0.09048177, 0.06162996, 0.017638046, -0.0057620336, -0.17732984, 0.038213097, -0.011191143, 0.004710598, 0.10281461, 0.03879273, 0.011936216, 0.0073289354, 0.20380335, 0.02090857, 0.004561698) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.008452661, 0.3851647, 0.03047561, -0.0809331, 0.012742782, -0.7473713, 0.027370887, 0.0022499727, 0.01480334, -0.0096067265, 0.012450597, -0.008745583, -0.008667149, -0.17606142, -0.028573977, 0.020403994) * inp_2_0_0;
    result0 += M4(0.020773849, -0.029966883, 0.10734337, -0.11661182, -0.038023304, -0.035657167, -0.10005531, -0.097244225, -0.0049573025, -0.05695656, -0.037761718, 0.010927616, 0.009526507, -0.037315525, 0.08116603, -0.13921033) * inp_2_1_0;
    result0 += M4(-0.02117436, -0.010826502, 0.028070744, -0.035237145, 0.023932796, 0.12117794, -0.010963493, -0.02372815, 0.0020024937, 0.00751536, 0.06891233, -0.06337559, -0.01679434, -0.0100290645, 0.0004513142, -0.015821103) * inp_2_2_0;
    result0 += M4(0.021143002, 0.25134492, 0.02747716, -0.016271139, 0.0053378567, -0.2593533, 0.0026213871, -0.004861041, -0.0502036, 0.11058305, 0.07146642, -0.0603723, 0.058502156, -0.06464569, -0.12307623, 0.067783885) * inp_2_0_1;
    result0 += M4(-0.0607815, -0.10520986, 0.022191046, 0.28808624, -0.010160795, -0.18598661, -0.07637418, -0.17996675, 0.0097965775, 0.07738228, 0.2771835, -0.37179396, 0.056508616, 0.1426591, 0.083250724, 0.14437836) * inp_2_1_1;
    result0 += M4(0.03704998, 0.014658386, 0.07753481, -0.09936685, -0.087022975, -0.16408524, -0.062787354, -0.02317235, -0.008701682, 0.033312175, 0.28353375, -0.2577208, 0.011540062, -0.08668162, -0.043189548, 0.05175214) * inp_2_2_1;
    result0 += M4(-0.022319732, 0.24604408, 0.01084006, -0.011266077, 0.0696106, -0.62093455, -0.009765241, -0.0013195787, 0.101653524, 0.18591373, 0.010671886, -0.009765893, 0.036218576, 0.1351773, -0.033467174, -0.025152994) * inp_2_0_2;
    result0 += M4(-0.08166625, -0.07360337, 0.029135158, -0.04183124, -0.20846513, 0.08835378, -0.029272858, 0.022537965, -0.19897178, -0.029520182, 0.08414037, -0.06316587, 0.3628292, -0.060392275, 0.06774324, -0.08000857) * inp_2_1_2;
    result0 += M4(-0.0039995513, 0.083937936, 0.020890815, -0.009847834, -0.1295405, 0.096816935, 0.0038942883, 0.020231996, 0.005406805, 0.019668072, 0.048030015, -0.039264902, 0.06260722, 0.006382173, -0.019828936, -0.018819675) * inp_2_2_2;
    result1 += M4(-0.019291088, 0.14937109, 0.025409654, 0.15391125, -0.0069570728, 0.08899967, -0.0043491423, 0.07073835, -0.016071284, -0.0064135287, -0.0022871397, 0.0033916729, 0.031393602, 0.07729343, 0.008871371, 0.09689129) * inp_2_0_0;
    result1 += M4(0.10020076, 0.08903226, 0.01252136, 0.32330364, -0.108871356, 0.042412832, 0.0034295062, -0.65173775, 0.04779792, 0.08416466, 0.0043849205, 0.10968812, 0.10112516, 0.034365844, 0.012011432, 0.16105525) * inp_2_1_0;
    result1 += M4(-0.021971166, -0.03518636, 0.013953372, 0.063530706, -0.0073435106, 0.07988082, 0.0054783835, -0.0012091624, -0.08093885, 0.0041318927, 0.010781943, -0.016814053, 0.010948502, 0.043805443, 0.0072148675, 0.030817693) * inp_2_2_0;
    result1 += M4(-0.033030827, -0.061309006, -0.05925988, 0.06429222, 0.002173006, -0.06447181, 0.0027982732, -0.14805034, 0.079244986, -0.050267484, 0.004352191, -0.08834772, 0.060225096, -0.023611668, -0.03841164, -0.03873876) * inp_2_0_1;
    result1 += M4(0.10642954, -0.054755505, -0.1438756, 0.0809812, -0.09987468, -0.44255838, -0.02168176, -0.28229865, 0.16369388, 0.054534324, -0.037062667, -0.16335846, -0.029015612, -0.15686911, -0.09671046, -0.036366522) * inp_2_1_1;
    result1 += M4(-0.06721269, -0.050287336, -0.0018712827, 0.029027006, 0.014470745, -0.46134254, -0.01716057, -0.27447382, -0.07913872, 0.1100661, 0.09348581, 0.091067635, 0.05518816, -0.040991716, -0.023905816, -0.08382973) * inp_2_2_1;
    result1 += M4(-0.019030282, 0.31128722, 0.082660034, -0.03441237, 0.010538438, 0.06962983, 0.015221558, 0.032376938, -0.0033838437, -0.010160962, -0.06133878, 0.03393541, -0.005425865, 0.050859153, -0.12783839, 0.0764613) * inp_2_0_2;
    result1 += M4(0.04004688, 0.2791853, 0.14910094, -0.12889907, -0.039664425, -0.7056131, -0.14371234, -0.020725977, -0.0048750737, -0.13885579, -0.20975779, 0.020281509, 0.04567256, 0.32877782, 0.2527037, 0.17440403) * inp_2_1_2;
    result1 += M4(-0.0026449328, 0.1395634, 0.06418102, -0.010545683, -0.011303288, -0.28170982, -0.056090638, -0.03362625, -0.015450559, -0.17669319, 0.14392953, -0.1603835, -0.016808746, 0.19126439, -0.07002024, 0.15289459) * inp_2_2_2;
    result2 += M4(-0.059488486, -0.1052385, 0.0004634988, 0.07602711, 0.0442494, -0.117931955, 0.00074634346, 0.0729291, -0.0095376205, -0.020742496, -0.0033938957, 0.0199834, 0.06305376, -0.014845477, 0.004591406, -0.021209115) * inp_2_0_0;
    result2 += M4(0.00809024, -0.04450183, -0.043465078, -0.06914467, -0.0921966, -0.085421644, -0.042460106, -0.47158626, 0.040667474, -0.08591978, -0.022841392, -0.0076184347, 0.112332016, -0.067253895, 0.072237484, 0.046092477) * inp_2_1_0;
    result2 += M4(-0.053848006, -0.03478482, 0.16151673, -0.012265507, -0.029356085, -0.08918814, -0.37611538, -0.2673602, -0.06975999, -0.05120223, 0.0838334, 0.03382999, 0.027138926, 0.06762273, 0.033150744, -0.13665374) * inp_2_2_0;
    result2 += M4(0.09707767, -0.055240806, -0.03431233, -0.07392442, 0.019009888, -0.10646901, 0.003536348, -0.020573316, -0.026603319, -0.07641834, -0.00046136184, 0.014698812, 0.046738133, -0.071252055, -0.033641648, -0.006085634) * inp_2_0_1;
    result2 += M4(-0.12742953, -0.014045908, 0.016158689, 0.1890398, -0.29918128, 0.071689054, 0.09725607, -0.33546653, -0.07504944, -0.042791743, 0.10006362, 0.067509875, 0.3203464, -0.10418178, -0.035379604, -0.08677527) * inp_2_1_1;
    result2 += M4(-0.035875697, 0.059752893, -0.061667047, -0.108851865, -0.1219645, -0.017238319, -0.9012943, -0.26205108, -0.036038067, -0.08764379, -0.34983143, -0.12108061, 0.15777394, -0.06160989, 0.54171515, 0.04781327) * inp_2_2_1;
    result2 += M4(-0.08620003, -0.057001606, 0.010199222, 0.035891585, 0.0122108525, -0.11725318, -0.0004954377, -0.038483255, 0.094125725, -0.1062777, 0.0008360156, 0.02168572, 0.06136302, -0.013589305, 0.0035663089, 0.055494282) * inp_2_0_2;
    result2 += M4(-0.117430255, -0.1261673, -0.024313502, -0.10617921, -1.8596065e-05, -0.10595687, -0.022550123, 0.0050175954, -0.08900247, 0.017774455, 0.021954963, -0.103518, 0.123005494, 0.010852185, 0.029117325, -0.036105286) * inp_2_1_2;
    result2 += M4(0.07861899, -0.095241226, 0.0034291625, 0.016193056, -0.11640383, -0.09041552, 0.050075956, 0.015507876, 0.08838477, -0.0009033402, 0.04155961, -0.018603584, 0.046033174, -0.005958766, -0.005097589, -0.0787314) * inp_2_2_2;
    result3 += M4(-0.02867839, 0.30938232, -0.17470698, -0.049091376, 0.022892306, 0.12522706, 0.08566917, -0.051942423, -0.040511303, 0.08807003, -0.05379998, 0.03616809, -0.022765871, -0.29145223, 0.07003038, 0.07748476) * inp_2_0_0;
    result3 += M4(-0.081426926, -0.0131972805, 0.30282426, -0.051199432, 0.061214987, -0.5294588, -0.3460636, -0.080553286, 0.055717006, -0.15006438, 0.023872484, -0.052974768, -0.052854396, 0.19741851, 0.12964769, -0.12218565) * inp_2_1_0;
    result3 += M4(0.07983339, 0.07223629, -0.048327833, -0.0055904384, -0.15768762, -0.2023109, -0.091836624, 0.044490483, -0.089897834, 0.04365881, -0.015245804, 0.015098088, 0.027279431, -0.07289527, 0.037526187, 0.019018415) * inp_2_2_0;
    result3 += M4(0.048467353, -0.023725618, -0.25879836, -0.24485788, -0.037816156, -0.16023204, 0.042550724, -0.23303786, 0.052772336, 0.10724349, -0.040341772, -0.18825467, 0.07810281, -0.19954045, 0.18544427, 0.2214912) * inp_2_0_1;
    result3 += M4(0.04144451, -0.03230345, 0.20639013, -0.093147986, -0.2862097, -0.50824875, -0.1909894, -0.27962697, -0.30334482, -0.063386224, -0.014037814, -0.069947384, -0.025021806, 0.40339255, -0.13573632, -0.060348134) * inp_2_1_1;
    result3 += M4(-0.032409523, 0.0674963, -0.06786033, -0.030619826, 0.15445003, -0.3384022, -0.08259997, 0.029063655, 0.19193357, 0.106213816, -0.051347386, -0.0040699653, -0.07872301, -0.32114723, -0.05163774, 0.009000917) * inp_2_2_1;
    result3 += M4(0.047208417, 0.27254736, -0.11175765, 0.056837585, 0.021334594, 0.102479905, -0.0032298113, 0.09196215, -0.035025384, 0.091733314, -0.064887546, -0.00049924, -0.12731649, -0.070273645, 0.013041861, -0.08175761) * inp_2_0_2;
    result3 += M4(0.004643068, -0.09941921, 0.14972894, -0.07748038, -0.011408063, 0.025095794, 0.069454685, -0.0019781052, 0.12021565, 0.054907184, -0.022266828, -0.0023306848, 0.01654948, 0.09703816, -0.02599933, -0.116997674) * inp_2_1_2;
    result3 += M4(-0.0028405273, 0.15285362, 0.0025854101, 0.023931332, 0.020458153, 0.071999416, 0.014719586, 0.0015943906, -0.010349044, 0.16668506, -0.01079939, -0.025931474, -0.017822597, -0.043899603, 0.009390911, -0.013483588) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.031131592, 0.15557371, 0.06445273, -0.08296941, -0.006150061, -0.072495416, -0.07079236, -0.0034298433, -0.005098983, -0.1774598, 0.04999392, -0.023102457, 0.008148995, 0.2837696, -0.038148396, 0.016438624) * inp_3_0_0;
    result0 += M4(0.009102929, 0.1726231, -0.026704745, 0.0006202683, 0.0017114514, 0.043943923, 0.020060427, 0.0151776895, -0.02913037, -0.05741725, -0.025489543, 0.059555795, -0.040918775, -0.23617461, -0.100960635, 0.085340485) * inp_3_1_0;
    result0 += M4(-0.007792511, -0.103174396, 0.003778047, -0.0063012675, -0.002471013, 0.14388907, 0.037722, -0.0033972296, 0.0064346986, 0.021397643, -0.08730824, 0.07850865, 0.036023833, 0.1989947, 0.00048738142, 0.0021510632) * inp_3_2_0;
    result0 += M4(0.09174415, -1.036685, 0.08100989, -0.019752927, -0.093209, -0.2079995, 0.01614179, 0.058037885, 0.02750893, -0.18463284, 0.021280464, -0.023629796, -0.1376578, -0.053579718, 0.05197308, -0.09035181) * inp_3_0_1;
    result0 += M4(0.049265947, -0.03782012, 0.25208655, -0.3066952, -0.07653131, -0.14226194, -0.13773409, -0.12840074, 0.2191946, -0.06834435, -0.28744927, 0.34162575, 0.18708844, -0.027855925, 0.073712975, 0.12023724) * inp_3_1_1;
    result0 += M4(0.0021082603, 0.058364533, -0.024787072, 0.005307732, 0.0072778403, 0.043881908, 0.029495172, 0.07093841, -0.031028984, -0.090768434, -0.15888163, 0.13152093, -0.14936854, -0.008240031, 0.09734824, -0.060454324) * inp_3_2_1;
    result0 += M4(0.08285417, -0.29624945, -0.027900051, 0.058970675, 0.0642904, 0.11270631, 0.0057184664, 0.012595437, -0.02198359, -0.089133166, -0.0039698747, 0.0026561224, -0.20273484, 0.04708591, 0.0092894845, -0.08266044) * inp_3_0_2;
    result0 += M4(0.0466486, 0.044751067, 0.030757807, -0.022195276, -0.11351162, -0.0025631695, 0.042070672, 0.02915782, -0.21696529, -0.025793023, -0.0761858, 0.04582812, -0.34727627, -0.026202062, -0.072108485, 0.06912651) * inp_3_1_2;
    result0 += M4(0.0031500154, -0.099173784, -0.051150434, 0.06623205, -0.04427714, 0.05928379, -0.0039312392, -0.03262918, 0.06103822, 0.035957847, 0.00873859, -0.015405017, 0.11643756, 0.08627572, -0.0005667551, -0.011399869) * inp_3_2_2;
    result1 += M4(-0.029543066, -0.011251007, 0.018759536, -0.041857373, -0.03444531, 0.010628238, -0.0037138986, -0.06789627, 0.0012521652, -0.08480579, -0.016514948, -0.06076996, -0.06710617, -0.19926824, -0.026285313, -0.47222194) * inp_3_0_0;
    result1 += M4(0.03872109, 0.04008929, -0.008862508, 0.083724506, -0.092629924, -0.22171596, -0.013343391, -0.2227955, 0.2885717, -0.22960849, -0.01630142, -0.29091933, 0.0212884, -0.036094643, -0.032898333, -0.20788047) * inp_3_1_0;
    result1 += M4(0.00030217963, -0.13604991, 0.00038919158, -0.0991543, 0.07669144, 0.024764005, -0.025410071, 0.18914032, 0.113502845, 0.014890986, -0.0152531285, -0.05826281, -0.05550597, 0.006789499, 0.016499724, -0.088624336) * inp_3_2_0;
    result1 += M4(-0.029598169, -0.095855705, 0.0038981268, 0.08806214, 0.08126499, 0.121292606, 4.3959517e-05, 0.09808491, -0.09093928, 0.030258793, 0.029839884, 0.04290329, 0.0076109255, 0.24391815, 0.059418384, 0.31765655) * inp_3_0_1;
    result1 += M4(-0.30794588, 0.09934663, -0.0061889407, -0.12690017, -0.14397644, -0.016161231, 0.08170111, -0.20538126, 0.25303322, 0.1565343, -0.25133476, 0.29170647, 0.16618854, 0.21578906, 0.090562746, 0.35877866) * inp_3_1_1;
    result1 += M4(0.06329397, 0.101383865, -0.026677944, 0.10542013, -0.017446378, -0.11778081, -0.074066505, -0.3058798, 0.19035113, -0.1680236, -0.14315568, -0.09035258, 0.003403274, 0.25942695, 0.034948535, 0.3259793) * inp_3_2_1;
    result1 += M4(-0.025930084, -0.032925006, 0.11698655, -0.17857566, -0.064652964, -0.18921469, -0.0524219, 0.06418736, 0.016631136, -0.049817313, 0.053767636, -0.058549654, -0.029331164, -0.70360786, -0.007666524, -0.1134763) * inp_3_0_2;
    result1 += M4(-0.015898474, -0.17045824, 0.21295562, 0.0555747, 0.054624267, -0.26111642, -0.14527752, 0.094784945, -0.020169938, -0.15582944, -0.21139036, -0.191163, 0.008873249, -0.20364074, -0.098083094, -0.120214716) * inp_3_1_2;
    result1 += M4(-0.0019176323, 0.01955745, -0.04249547, 0.013219079, -0.01787143, 0.20512582, 0.038862478, 0.08134378, 0.029502524, 0.025358174, -0.19468631, -0.06353059, -0.036888313, -0.08808017, 0.062192068, -0.05931064) * inp_3_2_2;
    result2 += M4(-0.022844294, -0.07724673, 0.0063957665, 0.15083241, -0.059459984, -0.039621595, -0.008950695, -0.1796467, -0.028222965, -0.020045893, -0.0005421153, -0.029775733, -0.04373912, -0.10226679, -0.041960396, -0.07277813) * inp_3_0_0;
    result2 += M4(0.019863393, -0.08161441, 0.04132543, 0.016925823, -0.060746904, 0.0432713, 0.006293217, 0.2482936, 0.19814722, 0.006961925, 0.02360799, -0.04225581, 0.04830817, 0.045818537, -0.027066765, -0.086390294) * inp_3_1_0;
    result2 += M4(0.037497345, -0.07575529, 0.25031346, -0.0024910895, -0.07657466, 0.07544834, -0.031931154, -0.015463625, 0.023672303, -0.018190017, 0.15517473, -0.010214569, -0.1852279, -0.03599123, -0.013886291, 0.0070258565) * inp_3_2_0;
    result2 += M4(0.13759457, -0.015903577, 0.032416873, -0.093256004, -0.12864208, -0.116765976, 0.004918042, 0.103836775, 0.044623856, -0.013599087, 0.017592689, 0.11147611, -0.13837816, -0.04657064, 0.01619142, -0.19020204) * inp_3_0_1;
    result2 += M4(-0.15073681, -0.05219965, 0.26500246, 0.079774156, -0.32824317, 0.025128892, 0.013158656, -0.36569893, -0.05040043, 0.055445224, 0.05420326, -0.10923985, -0.2907073, 0.025240699, 0.1831796, -0.32396132) * inp_3_1_1;
    result2 += M4(0.027195211, -0.07782563, -0.24132907, -0.010219613, -0.1913709, 0.010087677, -0.068558075, 0.17920563, 0.09818582, 0.047667634, -0.16297911, 0.04130729, 0.05612475, 0.06248726, -0.22739722, -0.08514124) * inp_3_2_1;
    result2 += M4(0.0050495137, -0.0848957, 0.030726926, -0.010195268, 0.014514921, 0.07992149, -0.0049994746, 0.0063773994, 0.012222388, 0.020523055, -0.008191175, -0.06862079, -0.4492734, -0.08864594, -0.017832922, -0.37880093) * inp_3_0_2;
    result2 += M4(0.33729544, -0.024673993, 0.0908155, -0.0018870501, -0.20459686, -0.043157697, -0.0147994235, 0.15227021, -0.12936245, 0.020898525, -0.05055284, 0.10214807, -0.18435349, 0.022737768, 0.08652904, 0.13606045) * inp_3_1_2;
    result2 += M4(-0.03320756, 0.002805369, 0.009425237, 0.071503386, 0.028832378, -0.11609393, 0.005220914, -0.0691366, -0.07291264, 0.0008297719, -0.08413779, 0.023993166, 0.13777101, 0.08546449, 0.1624618, -0.036956307) * inp_3_2_2;
    result3 += M4(-0.07417266, -0.04362787, -0.13344993, 0.09903069, 0.036244042, -0.13070704, 0.023592578, 0.013567267, 0.03133698, 0.059735816, -0.121604696, -0.04078857, 0.080575556, -0.25834063, -0.14608744, 0.010878972) * inp_3_0_0;
    result3 += M4(0.014018159, -0.03641129, -0.030407786, -0.009906579, 0.0965003, -0.029931849, -0.07330497, 0.022293676, 0.040188994, -0.37898827, 0.20806812, -0.041347064, 0.09492718, 0.19260836, 0.23005143, 0.033553988) * inp_3_1_0;
    result3 += M4(0.04929527, -0.023542311, 0.05167889, 0.012933627, -0.011371383, -0.05739564, 0.06954792, 0.003927755, 0.0041674967, -0.13460925, -0.043455016, -0.030090442, -0.051911317, 0.4420075, -0.033528484, 0.025976855) * inp_3_2_0;
    result3 += M4(-0.074708074, 0.11473744, -0.19478008, 0.03951093, 0.012790655, -0.11622559, -0.019787876, -0.01649313, -0.05073231, -0.05100552, -0.011282378, -0.043405455, -0.31879064, 0.07019379, -0.29093426, -0.19329889) * inp_3_0_1;
    result3 += M4(-0.02615093, -0.041058328, -0.52722734, 0.011034701, -0.09488592, -0.351754, -0.0911959, 0.12881628, 0.11420986, -0.14099494, 0.16662012, 0.05517927, 0.20254155, -0.052631743, 0.30728343, 0.021067945) * inp_3_1_1;
    result3 += M4(-0.024148548, -0.33424515, 0.017808413, -0.04283589, 0.021348484, 0.12779331, -0.14237905, 0.032882206, -0.10559206, -0.14658992, 0.14932546, 0.023513662, 0.036226936, 0.08423775, -0.14427157, 0.054104473) * inp_3_2_1;
    result3 += M4(-0.036357168, -0.032512624, -0.06993194, -0.23066677, 0.015907492, 0.19837117, -0.07165755, -0.16239515, 0.059577543, 0.01899648, 0.010121276, -0.025113344, -0.30323678, -0.32785764, -0.14422682, -0.13581829) * inp_3_0_2;
    result3 += M4(0.019319799, 0.16235052, -0.04018648, 0.046027385, 0.050303556, -0.23479655, 0.065723546, -0.0018386866, -0.097064346, -0.18272257, 0.011781494, 0.09412433, -0.29288444, -0.110221095, -0.015380108, -0.11926877) * inp_3_1_2;
    result3 += M4(-0.016407162, -0.089858316, 0.032239, -0.027956754, 0.00885589, -0.04481044, -0.038445197, 0.031871516, 0.026543899, -0.07158463, -0.034657218, -0.03800863, 0.0052235564, 0.21476243, 0.0371264, 0.0397482) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0012286246, 0.0053982623, 0.017425068, -0.014678645);
    V4 result1 = V4(-0.000405638, 0.0051159183, -0.0020859544, 0.0014673995);
    V4 result2 = V4(0.010225408, 0.011023273, 0.006088034, 0.0013941311);
    V4 result3 = V4(-0.004944283, 0.0022381735, 0.0369293, -0.019342115);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.19144565, -0.23653503, -0.22337316, 0.014691704, 0.014003228, 0.07238487, 0.083325446, -0.0626078, 0.062897146, 0.012917763, -0.1383261, 0.07454382, -0.13416071, -0.06341126, 0.183163, -0.05897992) * inp_0_0_0;
    result0 += M4(-0.44527206, -0.9645655, -0.2335607, -0.32356453, 0.11156351, 0.11247717, 0.070441045, -0.029313382, 0.0067502437, -0.031449467, -0.009265904, -0.008592178, -0.08332505, 0.048563585, 0.02686559, 0.047129765) * inp_0_1_0;
    result0 += M4(0.55094254, -0.32605997, -0.6623921, -0.29016823, 0.11579974, 0.08445317, 0.075935245, -0.15983474, -0.032999523, -0.09187478, -0.033454612, 0.016052723, 0.0048142667, 0.043517463, 0.024085127, -0.0026368056) * inp_0_2_0;
    result0 += M4(0.0033234353, 0.08759559, 0.06489242, 0.11267205, 0.048196767, 0.11984475, 0.10983032, -0.004038118, -0.07849581, -0.09398854, -0.0070598396, -0.04707023, 0.04172219, 0.03864658, -0.102725565, 0.021096408) * inp_0_0_1;
    result0 += M4(0.1674616, 0.13250737, 0.22043656, 0.26426977, 0.18377145, 0.13356885, 0.50314677, 0.16281146, 0.29324108, -0.7310456, 0.028417472, -0.14623763, -0.5296149, 0.68187183, -0.08622816, 0.021165434) * inp_0_1_1;
    result0 += M4(0.16581166, -0.010986409, -0.16440703, 0.06732607, -0.03930176, 0.3526971, -0.13050401, -0.050865006, -0.1583293, -0.12969539, 0.05736755, 0.093793824, 0.2098459, 0.15875636, -0.04205355, -0.1255059) * inp_0_2_1;
    result0 += M4(-0.0023138218, 0.00056197384, 0.00023920173, -0.0015798637, -0.014847557, 0.05769588, 0.040743366, -0.060760386, -0.0461542, -0.08754279, 0.10356886, 0.020812893, -0.03749594, 0.02865586, -0.1821995, -0.01797226) * inp_0_0_2;
    result0 += M4(0.12484695, -0.123029016, 0.2344575, 0.050769225, 0.14844985, 0.079695456, -0.2352859, -0.028621662, -0.028522551, -0.05419501, 0.009753344, 0.04603904, -0.32021713, 0.104957014, -0.4321042, -0.014493865) * inp_0_1_2;
    result0 += M4(-0.023023875, 0.02056391, -0.07009992, -0.0022467405, -0.100643404, 0.17656918, 0.014412723, -0.024551077, 0.12144304, 0.023097923, -0.03816311, 0.022417676, -0.269686, 0.084421486, -0.11468477, -0.0031276895) * inp_0_2_2;
    result1 += M4(0.32795706, 0.16748285, -0.03294634, 0.45502076, -0.09451798, -0.0008629604, -0.009009234, -0.0010381378, 0.046461463, 0.10971128, -0.0276479, 0.09654902, -0.014386373, -0.1445297, 0.12602101, -0.06933076) * inp_0_0_0;
    result1 += M4(-0.15581487, -0.3344128, -0.16600789, 1.6143185, -0.19411133, -0.09203587, -0.044692468, -0.019736907, 0.039675172, -0.0099766925, -0.077616334, 0.04317901, 0.036403928, 0.052633006, 0.093959816, 0.042138543) * inp_0_1_0;
    result1 += M4(-0.8365047, -0.3443521, 0.72519773, 0.49168044, -0.17270291, -0.13139838, -0.120812245, -0.008068203, 0.038843963, -0.025370484, 0.00083362457, 0.009292154, -0.02952602, -0.010170226, -0.023313113, 0.02316705) * inp_0_2_0;
    result1 += M4(0.08527246, -0.015659818, 0.07073802, 0.051266417, -0.16447975, 0.0076703834, -0.071306735, -0.07665225, 0.097599365, -0.0723052, 0.10895416, 0.010141297, -0.07093324, -0.023368863, -0.14431171, 0.05069749) * inp_0_0_1;
    result1 += M4(0.21235739, -0.009277196, -0.24510495, -0.075398274, -0.12673263, -0.042048458, -0.021757333, 0.1606982, 0.45496452, 0.14800672, 0.020209322, -0.12232633, -0.34674394, -0.21126376, 0.013433329, 0.1451142) * inp_0_1_1;
    result1 += M4(0.09607884, -0.23190778, 0.14312854, 0.13781139, -0.4166723, -0.23903407, 0.017745784, -0.052397437, 0.05334405, -0.10094314, -0.21524034, 0.07199233, -0.0051497472, 0.057973173, 0.23659444, 0.13720953) * inp_0_2_1;
    result1 += M4(-0.00020864663, 0.018483547, 0.011496126, 0.0007720607, -0.095068395, -0.010974694, 0.03562844, -0.07416831, 0.037641104, 0.06647432, 0.095125325, -0.002798369, 0.042491112, -0.14733522, -0.07427007, -0.08440547) * inp_0_0_2;
    result1 += M4(0.0053807716, 0.03435788, 0.13063726, 0.22666153, -0.17333648, -0.15638958, -0.35169482, -0.09284213, 0.020750944, -0.14974149, -0.0064860214, -0.07420335, -0.029385779, -0.03598726, -0.013397904, -0.23516598) * inp_0_1_2;
    result1 += M4(0.021507934, -0.013284207, -0.025750095, -0.07628093, -0.10193082, -0.046347592, 0.12861696, -0.08512699, -0.08508787, -0.034567557, 0.022474991, -0.05493056, 0.13916822, -0.016809555, -0.1360123, -0.15710439) * inp_0_2_2;
    result2 += M4(0.2465126, -0.123007655, -0.47637242, -0.04857891, -0.025913503, 0.025384378, -0.0039552962, -0.019040609, 0.032642342, -0.03224201, 0.05062097, -0.007836341, 0.045522116, 0.02107885, -0.16709583, 0.03097993) * inp_0_0_0;
    result2 += M4(-0.48900437, 0.35635284, -1.4903048, -0.5236811, -0.21463147, 0.037590705, 0.06984298, 0.08417607, 0.025686897, -0.012700258, -0.11797609, -0.016936015, 0.0005678455, 0.033638317, 0.23341702, 0.08737441) * inp_0_1_0;
    result2 += M4(-0.5533161, 0.016221546, -0.6572845, -0.15836668, -0.2636526, -0.03223971, 0.15651909, 0.100301094, 0.07352821, 0.016676145, -0.009951057, -0.0117919035, -0.056757756, -0.010601885, -0.0015199494, 0.007087898) * inp_0_2_0;
    result2 += M4(0.06875549, 0.005485244, 0.025429178, 0.044868063, -0.10184397, -0.01726668, 0.08847435, 0.03995601, 0.14343473, -0.02526649, -0.04650106, 0.0035175874, -0.13912094, 0.016911965, -0.08491062, 0.033978112) * inp_0_0_1;
    result2 += M4(-0.025028236, -0.050846312, -0.12702048, -0.23557137, -0.3465145, -0.096905895, 0.110548325, 0.26438, 0.5156135, -0.09870317, -0.14592376, 0.029527046, -0.6296605, 0.22112855, -0.026904922, 0.30978137) * inp_0_1_1;
    result2 += M4(-0.17456827, -0.022235932, -0.034670103, 0.07590447, -0.34179994, 0.013102903, -0.21764125, -0.13402024, 0.044002824, 0.08983337, 0.050658017, -0.02023112, -0.098825976, -0.10073899, -0.031189855, 0.19803107) * inp_0_2_1;
    result2 += M4(-0.016104242, 0.0072848927, 0.016323106, 0.0071844896, -0.059102386, -0.02761887, 0.0034062222, -0.019761324, 0.007252813, -0.022131026, 0.03472481, 0.102931306, -0.0068802093, -0.042974517, -0.067475, -0.0644668) * inp_0_0_2;
    result2 += M4(0.05870105, 0.11723078, 0.023660252, -0.12113274, -0.22860655, -0.013239415, 0.08461104, -0.15550669, 0.11072517, 0.053067423, 0.08172303, 0.045125335, -0.11306682, -0.1358162, -0.19153239, -0.11328536) * inp_0_1_2;
    result2 += M4(0.01877281, -0.036803562, -0.0701221, 0.07318576, -0.12674393, -0.07723082, 0.18996835, 0.094703645, -0.10214621, -0.007934704, -0.039493352, -0.08540907, 0.1068234, -0.050377205, -0.030556086, 0.18284559) * inp_0_2_2;
    result3 += M4(-0.016406389, 0.5692822, -0.14930062, -0.19896418, -0.009101843, 0.08869351, -0.05314973, -0.06915735, 0.053762957, 0.01474862, -0.037371404, 0.016417265, -0.021519583, -0.050552964, 0.037222296, 0.08987408) * inp_0_0_0;
    result3 += M4(-0.13837065, 0.7916723, 0.077684544, -0.27440733, 0.18008931, 0.21189265, -0.06859565, -0.0686768, 0.2170059, -0.035045538, -0.019902715, -0.019116703, -0.35922185, -0.00024750474, -0.039354708, 0.09312613) * inp_0_1_0;
    result3 += M4(-0.05710514, 0.6290366, 0.2163295, -0.14692944, -0.13067734, 0.055456538, -0.012258207, -0.09823332, 0.079566576, 0.034261953, -0.055297095, 0.010773705, -0.01647951, 0.01805689, 0.042853374, 0.008308883) * inp_0_2_0;
    result3 += M4(-0.041393798, -0.04333181, -0.069621034, 0.1086582, -0.0018807322, 0.15231486, -0.017580759, -0.009972597, 0.021285184, -0.23132698, 0.0021025452, 0.03691461, -0.028353032, 0.17477953, 0.025309004, 0.055865627) * inp_0_0_1;
    result3 += M4(0.20379032, -0.16616303, -0.24768987, -0.05443621, -0.21251243, 0.5856768, -0.035752952, -0.024308551, 0.49048856, 0.14517912, -0.038959954, 0.19916955, -0.5301428, -0.13746335, 0.07423235, -0.029450927) * inp_0_1_1;
    result3 += M4(-0.12819017, 0.030710505, 0.008691137, 0.10526748, 0.15462784, 0.3152612, 0.012685981, -0.18739064, 0.10209174, 0.13090076, -0.11119899, 0.22577561, -0.28992808, -0.15037082, 0.20818415, -0.16750436) * inp_0_2_1;
    result3 += M4(-0.026258703, 0.0077907564, 0.007251613, -0.018168792, 0.066843, 0.15504213, 0.0103833005, -0.026971744, 0.09980403, 0.046087887, 0.0018035372, 0.04542229, -0.037689526, -0.03249779, -0.009045975, -0.06623203) * inp_0_0_2;
    result3 += M4(0.014171319, -0.04186516, -0.03110719, 0.044549607, -0.0875628, 0.2112633, 0.0010873553, -0.03432536, 0.30061635, -0.21839583, -0.031159168, 0.11291192, -0.06254304, 0.15898778, 0.09047732, -0.17282313) * inp_0_1_2;
    result3 += M4(-0.021378722, -0.034123313, 0.0121218255, -0.06626168, 0.07461372, 0.20467798, -0.03208334, -0.0536059, 0.042284865, -0.020354051, 0.013685134, 0.022782357, 0.0028788152, -0.04211739, -0.03707816, -0.09492582) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.01717919, 0.07229584, -0.0132413795, -0.042294797, 0.038114525, 0.055714168, -0.0613564, 0.09472327, -0.023311881, -0.08831861, -0.13418595, 0.01185158, 0.06379156, 0.042305566, -0.098056026, 0.006052271) * inp_1_0_0;
    result0 += M4(0.17478164, 0.07307741, -0.18124272, -0.06009517, -0.16667315, 0.39416736, 0.5229811, 0.122799195, -0.17517214, -0.18856496, 0.24669716, 0.041914172, 0.11102599, 0.031534404, -0.24259987, 0.00416422) * inp_1_1_0;
    result0 += M4(0.07787405, 0.13831082, 0.08932769, 0.039664485, 0.20247364, 0.106431484, -0.042002756, -0.07938024, -0.14333694, -0.20818892, -0.13201682, 0.07727678, 0.037215527, -0.015383143, -0.03557981, 0.02883349) * inp_1_2_0;
    result0 += M4(0.015579597, 0.06590649, 0.13274662, 0.026759245, 0.02078328, 0.086680114, -0.0146965915, -0.0044243606, 0.013113913, -0.02583992, -0.06974074, -0.0069232704, -0.09345661, -0.08982449, -0.046558548, -0.09813785) * inp_1_0_1;
    result0 += M4(0.42558354, 0.26422006, 0.13359, 0.06971204, 0.3606817, 0.11863242, 0.33183378, 0.0131411115, 0.39476055, -0.24956995, 0.39815402, -0.07745927, 0.6358698, -0.3676431, 0.00311323, 0.23263143) * inp_1_1_1;
    result0 += M4(0.014303046, 0.10503611, 0.02205384, -0.09312564, -0.06615566, 0.0138505725, -0.009691459, -0.086845264, -0.0026911602, -0.029306037, 0.06495358, 0.02375125, -0.093184106, -0.09400618, 0.1065624, -0.021369245) * inp_1_2_1;
    result0 += M4(0.019022083, 0.048470438, -0.011008236, -0.044882357, 0.008801847, 0.07447885, 0.0072700414, -0.038515937, -0.013922935, 0.00855737, 0.023546834, 0.010096717, -0.0035548024, -0.08830121, 0.24341087, -0.0045056837) * inp_1_0_2;
    result0 += M4(0.103940554, -0.004989376, 0.12099957, 0.08844202, 0.2043108, -0.038994238, 0.07186147, 0.01880626, 0.08897649, 0.08931546, 0.13811949, -0.0314193, -0.04347388, -0.22383216, 0.058478758, -0.0158883) * inp_1_1_2;
    result0 += M4(0.05276969, -0.0053747953, -0.049575664, -0.017894154, 0.034893584, -0.03136049, 0.10450013, -0.024225894, -0.06746522, -0.04198198, -0.039275996, -0.008777248, 0.028532395, -0.009869829, -0.12629947, -0.036103927) * inp_1_2_2;
    result1 += M4(-0.07861182, 0.020557515, -0.073303975, -0.055305656, 0.14338063, 0.12233309, -0.049786624, 0.055185374, 0.22661187, 0.086355135, -0.029698856, -0.017579034, -0.015645776, 0.072178036, -0.15384802, 0.009220788) * inp_1_0_0;
    result1 += M4(-0.0800566, 0.014029104, 0.0776752, -0.19619481, -0.05022006, -0.10314377, -0.22461224, 0.0019323352, 0.23085071, 0.16326693, -0.2521573, -0.1254824, -0.057450738, 0.02593124, 0.1301365, -0.08661131) * inp_1_1_0;
    result1 += M4(-0.10537055, -0.008703222, -0.057837214, -0.14414448, -0.09893733, 0.14042619, 0.31375545, -0.08263364, 0.14027748, 0.09482979, 0.11982146, -0.018070286, 0.016127694, 0.03433319, 0.081701025, -0.055167157) * inp_1_2_0;
    result1 += M4(-0.20080955, 0.08093271, 0.15268657, 0.11788857, -0.008512834, 0.067594245, -0.019870745, -0.03639554, 0.1094607, -0.0074395677, -0.00057815615, 0.061615616, -0.0414933, -0.09888563, 0.15438442, -0.019538755) * inp_1_0_1;
    result1 += M4(-0.45350698, -0.0958812, -0.06426021, 0.20901762, -0.018105546, 0.19628288, -0.25317284, 0.089598775, 0.10452317, 0.37333375, 0.35520297, 0.3907495, -0.0725498, 0.32793993, 0.23533341, -0.18492484) * inp_1_1_1;
    result1 += M4(-0.12423757, -0.19851477, -0.11872081, -0.07893465, 0.023880845, 0.056067724, 0.20762265, 0.20019706, -0.0019810195, 0.12153696, 0.100417584, 0.14929643, -0.06900703, -0.22080652, -0.29876792, 0.08119458) * inp_1_2_1;
    result1 += M4(-0.091860145, -0.03687194, -0.028836226, -0.0011456229, -0.062127136, -0.015764745, -0.0032957245, -0.038610354, 0.036294464, -0.0062576984, -0.005616149, -0.039295584, 0.06211086, 0.103444695, 0.12712047, 0.069723085) * inp_1_0_2;
    result1 += M4(-0.082748234, -0.05205227, 0.018326152, 0.052299436, -0.008012326, 0.1275895, 0.031714804, 0.031385742, 0.01258511, 0.0639129, 0.027165487, -0.067249455, -0.13017693, -0.22716442, 0.12077018, 0.07939389) * inp_1_1_2;
    result1 += M4(-0.094315976, -0.06315411, 0.046406344, 0.037721597, 0.00024592367, 0.035642914, 0.051400717, 0.18058689, 0.034379043, 0.0058487793, 0.014548346, -0.033186726, -0.023096891, -0.041047517, -0.061386876, -0.256502) * inp_1_2_2;
    result2 += M4(-0.07581786, 0.015329874, 0.12742122, -0.06078065, 0.13221619, 0.066140145, 0.0838576, -0.002108902, 0.1754065, -0.12061313, 0.10515786, 0.026414875, -0.08036299, -0.051014, 0.14119585, -0.06545954) * inp_1_0_0;
    result2 += M4(0.07154507, -0.089326665, 0.07080787, 0.028486924, -0.23055612, 0.25592375, -0.08960647, -0.07001877, 0.11038392, -0.061866883, -0.09975043, -0.38832235, 0.092187524, -0.04231657, -0.10931354, -0.12238778) * inp_1_1_0;
    result2 += M4(-0.18435012, -0.04256084, 0.0384927, -0.0200316, -0.057008494, -0.026867723, 0.05628105, -0.091941535, 0.2118147, 0.09304015, 0.042406995, -0.11947255, 0.038523953, -0.007088447, -0.085955456, -0.07293532) * inp_1_2_0;
    result2 += M4(-0.027542064, 0.061715778, 0.055207115, 0.15545581, 0.08869565, -0.005794658, 0.03954148, 0.06310153, 0.07792157, 0.040574495, -0.035927355, -0.061511, 0.06214119, 0.0019658348, 0.08506676, 0.06300814) * inp_1_0_1;
    result2 += M4(0.17781168, -0.013394348, 0.11838401, -0.024998283, -0.06654774, 0.169764, 0.11444584, -0.2214439, -0.118139, 0.11998131, -0.11574397, -0.001992336, 0.4006306, -0.12548272, -0.12510462, -0.28530794) * inp_1_1_1;
    result2 += M4(-0.17238985, -0.052994218, -0.082635514, -0.025218507, 0.053182922, -0.033711545, 0.052361246, -0.05229026, 0.06472957, 0.006954082, 0.0003181078, 0.042731855, -0.14861315, -0.005232763, 0.0067839394, 0.07640325) * inp_1_2_1;
    result2 += M4(-0.045976307, -0.01817335, 0.033213668, -0.02869067, -0.055957954, -0.0061311936, -0.012102014, -0.04326787, -0.002370824, 0.0113570215, -0.005379124, 0.0056308084, -0.00049345905, -0.03543101, 0.09018987, 0.14156507) * inp_1_0_2;
    result2 += M4(-0.05060871, 0.059862014, 0.10674364, -0.04572238, 0.011937616, 0.048500724, 0.09239138, 0.06148048, -0.07972212, -0.025916573, 0.03921239, -0.005500175, 0.031437084, 0.11267733, 0.1092927, -0.31529984) * inp_1_1_2;
    result2 += M4(-0.057628296, 0.008033186, -0.05259611, -0.03035586, 0.024612142, 0.008463154, -0.022969203, 0.03643485, 0.03209112, 0.0021887813, 0.04683756, 0.030793736, -0.008716328, 0.020250069, -0.022505835, -0.088392995) * inp_1_2_2;
    result3 += M4(0.015543146, -0.054893274, -0.0047631618, -0.07078138, -0.18092373, 0.05314738, -0.08606997, -0.007916782, -0.13328892, -0.05271192, 0.011059092, 0.04784212, 0.033275437, -0.009326162, 0.03802503, -0.056497652) * inp_1_0_0;
    result3 += M4(0.24810086, -0.029199414, -0.008440512, -0.10280234, -0.45371205, 0.31710637, 0.03258666, 0.17833829, -0.47474054, 0.17880785, -0.06568609, 0.06993474, 0.33208165, -0.06509323, 0.019902576, -0.12346378) * inp_1_1_0;
    result3 += M4(-0.025779637, -0.024473693, -0.01633568, -0.00835478, -0.36017862, -0.15803201, -0.0090089, -0.13938099, -0.1195302, -0.035360485, -0.11256216, 0.15287249, 0.029018546, -0.0592649, 0.010998043, -0.019095495) * inp_1_2_0;
    result3 += M4(0.16832381, 0.08486718, 0.0111046815, -0.018775467, -0.1407532, 0.054070838, -0.016632507, 0.019857451, -0.19433945, -0.23462242, 0.022669023, 0.049387217, 0.11539355, -0.33334273, 0.05132475, -0.04507184) * inp_1_0_1;
    result3 += M4(0.75232816, -0.36894894, -0.055692103, -0.057279177, -0.6357523, 0.12955312, -0.121035494, -0.014082833, -0.42931014, -0.12932637, 0.19557258, 0.23045278, 0.7337335, -0.16207358, 0.08691264, 0.01703985) * inp_1_1_1;
    result3 += M4(0.40154845, 0.12279795, 0.07018953, -0.09748351, 0.003478369, 0.05397611, 0.05484118, -0.2273046, -0.14897446, -0.0376909, -0.0055906465, -0.002930306, 0.36009455, 0.22736955, 0.13927297, 0.14216325) * inp_1_2_1;
    result3 += M4(0.024322387, -0.007031961, 0.017673187, -0.008077891, -0.046372533, 0.059295006, 0.0067089545, -0.013395092, -0.036204435, 0.01766712, -0.0157038, -0.014062981, 0.06823228, 0.09364788, -0.0013410178, 0.0111873755) * inp_1_0_2;
    result3 += M4(0.17761952, 0.037017506, -0.028364887, 0.05133251, -0.24889463, -0.06332982, -0.040040635, 0.02668162, -0.18634237, 0.16921376, -0.05275205, -0.10350649, 0.5774478, -0.06733789, 0.08504893, 0.1295601) * inp_1_1_2;
    result3 += M4(0.06714392, 0.094151296, 0.021183863, -0.020983048, 0.012711087, 0.083559185, 0.028280666, 0.0019538365, -0.03792968, -0.016979083, -0.0035897575, -0.01959751, 0.018689148, -0.13348468, 0.0049819616, -0.021232419) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.022940319, 0.0027635137, -0.065396816, 0.060759906, 0.01043447, 0.092202805, -0.09171569, -0.03883004, -0.089510724, 0.038533576, 0.3509749, 0.025949355, 0.04982687, 0.045277916, -0.01025991, -0.027422814) * inp_2_0_0;
    result0 += M4(-0.025441917, -0.021444798, 0.03504155, 0.038447227, -0.029337537, -0.008868439, -0.04167906, -0.06619399, -0.18537965, -0.00082542375, -0.14573595, 0.16786018, 0.13128163, -0.010446205, -0.13630044, 0.0503954) * inp_2_1_0;
    result0 += M4(-0.09060972, -0.019397762, 0.035776723, 0.0553404, -0.048079047, 0.042770423, 0.053348888, 0.084555335, 0.008469584, -0.026319997, -0.05648998, -0.02805421, 0.1618792, 0.10430555, -0.057269733, -0.035401892) * inp_2_2_0;
    result0 += M4(-0.066376224, -0.13483182, 0.11555711, -0.027472738, -0.026963396, -0.011331717, -0.017524635, 0.013313806, -0.65025085, 0.26146415, 0.116541095, -0.6392231, 0.2447449, -0.22117329, 0.08951356, -0.07466241) * inp_2_0_1;
    result0 += M4(-0.03735978, -0.2754026, 0.1837747, -0.017617946, -0.03447717, -0.007931301, 0.022444516, 0.01137906, 0.00798726, 0.105157286, -0.0689077, 0.21488358, -0.0145452, 0.23951241, -0.08588295, 0.017588994) * inp_2_1_1;
    result0 += M4(0.05455522, -0.04016854, 0.011661838, -0.04763912, 0.04433437, 0.021604886, -0.080075495, 0.008978513, -0.02579531, 0.016665008, 0.08321572, 0.02920149, 0.13902101, 0.2525222, 0.19135556, -0.0034415924) * inp_2_2_1;
    result0 += M4(-0.019818258, 0.031980596, -0.047092512, 0.024408612, 0.0032004921, -0.016115414, 0.08201733, 0.07634017, -0.7434996, 0.06787612, -0.6660795, -0.23518866, -0.025710298, -0.01332278, -0.023433572, 0.071859576) * inp_2_0_2;
    result0 += M4(-0.19564524, 0.048567303, -0.27522394, -0.03380622, -0.06150802, 0.04270748, 0.042948585, -0.053188212, 0.009113249, -0.11721671, 0.028561836, 0.1912253, 0.16353902, 0.00015817731, 0.20306283, 0.022082526) * inp_2_1_2;
    result0 += M4(-0.08541579, 0.063648164, -0.12979653, -0.025443545, 0.079861715, 0.032185156, -0.018914247, -0.027425049, 0.025220357, -0.014690148, -0.06587794, 0.050682154, 0.3302037, -0.1103352, 0.16420364, -0.0081863785) * inp_2_2_2;
    result1 += M4(0.060131088, 0.07669431, -0.00061798445, 0.050517295, 0.06767987, 0.084255934, 0.017503556, -0.043905303, -0.04300824, -0.19961815, -0.04989208, -0.47742045, -0.17419134, -0.104776405, -0.2173584, -0.13849771) * inp_2_0_0;
    result1 += M4(0.12211753, 0.02991488, -0.07596968, 0.02965024, -0.06608359, 0.006616294, -0.016477201, -0.043433655, 0.07155221, 0.11575986, 0.03807922, 0.17971568, -0.021474143, -0.009355747, 0.20258382, -0.25650328) * inp_2_1_0;
    result1 += M4(0.04949402, 0.00646876, -0.0442634, -0.025595272, 0.08118563, -0.08962775, -0.029021315, 0.08649146, -0.013358513, -0.015917417, 0.042311065, 0.102815725, -0.10835419, -0.0015604955, 0.0794346, 0.0487434) * inp_2_2_0;
    result1 += M4(0.105378196, 0.027217831, 0.122081615, 0.010044551, 0.0036587052, 0.08715355, 0.0052011055, -0.08597988, 0.13689895, -0.40062827, -0.06376936, -0.9221604, 0.06821964, -0.001156682, -0.1235149, 0.4133848) * inp_2_0_1;
    result1 += M4(0.07811531, -0.2327291, 0.12009926, -0.24734108, -0.086380206, -0.054919805, 0.007884124, -0.030823363, 0.05267597, 0.2621047, -0.22900862, -0.22365868, 0.04187199, 0.31173798, -0.20188569, 0.9546206) * inp_2_1_1;
    result1 += M4(0.06447751, -0.0141933765, 0.008448909, 0.07011556, -0.048290547, -0.09649447, -0.08509216, 0.08143409, 0.043439902, 0.034023985, -0.055979468, -0.009592567, -0.044978287, 0.11606853, -0.14015381, -0.15329911) * inp_2_2_1;
    result1 += M4(-0.037815303, 0.038038537, -0.020346213, -0.03388066, 0.041667093, -0.01118344, -0.096430995, 0.009540745, -0.13417009, -0.37489766, -0.075363725, -1.3396627, 0.108216666, -0.10821877, -0.029508863, -0.07294846) * inp_2_0_2;
    result1 += M4(0.14537762, -0.09570222, -0.11416127, -0.32381958, 0.011035263, -0.07237088, 0.046599608, -0.06920069, 0.010433329, 0.14478152, 0.052905455, 0.038167365, -0.15567546, 0.23710407, 0.012765169, 0.39965588) * inp_2_1_2;
    result1 += M4(0.006523724, -0.017063271, -0.029506005, -0.052377716, -0.047481764, -0.036112417, 0.005038041, -0.041753452, -0.050412007, -0.01061309, 0.07232927, -0.06210457, -0.21737218, -0.017290767, 0.2010697, 0.2847174) * inp_2_2_2;
    result2 += M4(0.05881496, 0.018121807, 0.04614294, 0.0008776133, -0.027098956, 0.0022694108, 0.06716693, -0.008903501, -0.087521285, -0.12473835, 0.2805176, 0.15386967, -0.3304574, -0.03949303, 0.13186951, -0.08347937) * inp_2_0_0;
    result2 += M4(0.15646876, -0.027804818, 0.018481076, 0.03975931, -0.093545236, -0.05359343, 0.07531833, 0.072005846, 0.041252032, 0.06225396, 0.10729178, -0.08657197, 0.034255344, 0.01871608, -0.19017367, -0.13482417) * inp_2_1_0;
    result2 += M4(0.06511436, 0.02486485, 0.04505411, -0.037801277, -0.026564771, -0.080996364, 0.06822473, 0.09197096, 0.002780099, 0.0028318753, -0.07206578, 0.018203257, -0.14226586, -0.03618081, -0.04525185, 0.031511463) * inp_2_2_0;
    result2 += M4(0.036053088, -0.0071323444, -0.037148137, 0.025793334, 0.08689824, -0.032491103, -0.048958447, -0.04647563, 0.05727962, -0.33650777, 0.37414894, 0.014987867, -0.043979883, -0.056343477, -0.11698814, 0.08047135) * inp_2_0_1;
    result2 += M4(-0.17690293, 0.11189804, 0.18332313, -0.15668552, 0.05641999, 0.028694794, 0.09959211, 0.08715385, -0.12719136, -0.057080623, -0.33487418, 0.30281982, 0.64498216, 0.21670046, -0.009895167, -0.060540967) * inp_2_1_1;
    result2 += M4(-0.011178827, -0.0059082154, -0.005532538, 0.14520738, -0.033756696, 0.08514533, -0.09248061, -0.08675989, 0.03604971, 0.004398878, -0.008864027, 0.018495487, -0.02241478, -0.048858114, -0.076377966, -0.012860242) * inp_2_2_1;
    result2 += M4(0.016792482, -0.00062996824, 0.03443006, 0.015567313, 0.025763098, -0.06094391, 0.0028403094, 0.028606864, -0.11630881, -0.4027015, 0.21422069, 0.25911933, -0.032986414, -0.025531849, -0.085311696, -0.0016088791) * inp_2_0_2;
    result2 += M4(0.10373984, 0.001999647, -0.066836834, 0.16354093, -0.061977047, 0.089908935, -0.043155704, 0.04524456, -0.19681016, -0.027957628, 0.053540044, -0.36909214, -0.031335376, -0.033602357, 0.084500305, 0.12676093) * inp_2_1_2;
    result2 += M4(0.017337179, -0.034345, -0.05165717, 0.061847262, 0.088050775, -0.020337163, 0.04347781, -0.05951906, -0.04772137, -0.011545339, 0.055851195, -0.044757467, -0.1549195, 0.051191673, 0.038171276, -0.308526) * inp_2_2_2;
    result3 += M4(-0.0044893846, -0.0470915, 0.034397766, 0.021962494, 0.082612045, -0.083734825, -0.017789993, -0.08766367, -0.18566301, -0.0069955997, -0.014206515, 0.36896527, 0.07637486, -0.021777203, 0.037217714, -0.052579366) * inp_2_0_0;
    result3 += M4(0.055441648, 0.053818192, 0.014443972, 0.060024716, 0.08987157, -0.087987445, -0.06371025, 0.044207487, -0.033549737, 0.014548198, -0.110541254, 0.1558483, 0.23300675, -0.21383014, 0.044612024, -0.1096767) * inp_2_1_0;
    result3 += M4(0.036777396, 0.0060783825, -0.031160718, 0.068601854, -0.024619516, -0.05260157, 0.10187896, 0.05117552, 0.027376547, 0.033309337, 0.032670043, -0.01752508, -0.035202056, 0.010315464, 0.0652633, -0.06414881) * inp_2_2_0;
    result3 += M4(0.002218422, -0.0065132864, 0.012864885, -0.014987103, -0.08284383, -0.0054076766, -0.037341863, 0.077494085, -0.7685466, -0.4489289, 0.04208329, 0.37408686, -0.079972535, 0.12180722, -0.0016767485, -0.10280943) * inp_2_0_1;
    result3 += M4(-0.16220057, -0.1228141, 0.06791687, 0.15165389, -0.08609183, 0.018435229, 0.050503094, 0.04335111, 0.16859885, -0.029430345, -0.2335731, 0.18897313, 0.24081466, 0.4179983, -0.23537153, 0.07272034) * inp_2_1_1;
    result3 += M4(-0.10791057, -0.042120684, 0.13390188, 0.051605273, 0.096145876, 0.025558596, -0.010960727, 0.041396055, -0.011401653, -0.036014948, -0.027926788, 0.011973926, 0.13257556, -0.012591637, -0.10510051, -0.16438988) * inp_2_2_1;
    result3 += M4(0.033549607, -0.008286884, -0.0100738825, 0.044940237, 0.023697233, -0.039977048, -0.05719075, -0.018204976, 0.16637895, 0.31567904, -0.09685983, -0.18552077, 0.040134043, 0.105075814, -0.052035324, -0.004433222) * inp_2_0_2;
    result3 += M4(0.04692167, -0.095208965, -0.039503712, -0.047387727, -0.03495611, -0.08909441, -0.07914162, -0.061376177, -0.0802135, -0.08779037, 0.004559695, 0.3835351, -0.21368074, -0.18911418, 0.030448113, 0.116984144) * inp_2_1_2;
    result3 += M4(-0.015819388, -0.035684664, 0.019535623, -0.053763986, -0.045781873, -0.07994532, -0.06553304, 0.10416456, -0.033013564, 0.016394064, -0.016797036, 0.055102225, 0.06309797, 0.18756822, 0.091623776, 0.16804355) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.16888759, 0.06927733, -0.18318225, 0.04197302, 0.14278653, -0.045282647, -0.14411566, 0.121232204, -0.029071001, 0.077155754, 0.026024403, -0.04810493, 0.056099538, -0.003251399, -0.07871282, 0.04534906) * inp_3_0_0;
    result0 += M4(-0.10190026, -0.034602463, 0.17121682, -0.010991512, -0.25381753, -0.21698722, 0.20113975, 0.06768866, 0.10844007, 0.21292284, -0.009832399, -0.0007172699, -0.14933398, -0.14362212, 0.14793973, -0.028607907) * inp_3_1_0;
    result0 += M4(0.017702792, 0.034446433, 0.09881318, -0.0040260884, -0.03890104, -0.20811333, -0.09634848, -0.054984584, -0.020435661, 0.11899203, 0.09115857, 0.026693236, -0.054514214, -0.0390116, -0.030480545, 0.055838525) * inp_3_2_0;
    result0 += M4(-0.06020202, 0.17262623, 0.23556627, -0.00363457, 0.2090159, -0.20459864, 0.19254698, -0.076394975, -0.17746712, 0.22256872, -0.08895253, -0.004262026, -0.06972055, -0.017888818, 0.09707047, 0.0385514) * inp_3_0_1;
    result0 += M4(0.39559653, -0.65950173, 0.12161726, -0.0028271575, -0.34421974, -0.63910085, -0.41919833, -0.28580767, 0.31411728, 0.5207883, 0.30320692, 0.22162619, -0.3103268, -0.12153233, -0.25472903, 0.1782771) * inp_3_1_1;
    result0 += M4(-0.2745833, -0.0054707993, -0.17961256, 0.061247617, -0.09732512, -0.06729091, 0.07580726, 0.07597759, 0.2035206, 0.1153811, -0.048312034, -0.031871215, -0.20718086, -0.6553183, -0.27141905, -0.15336068) * inp_3_2_1;
    result0 += M4(-0.042144064, -0.053716756, 0.19311704, -0.08981389, -0.15193018, -0.20748618, 0.17649698, 0.113041796, 0.122188725, 0.0745845, -0.21428218, -0.052945375, 0.023541505, -0.029303487, -0.1338869, 0.018463718) * inp_3_0_2;
    result0 += M4(0.20316641, -0.2256328, 0.114179984, -0.002064404, -0.2502664, -0.16263388, -0.26235256, -0.0005240169, 0.17791286, 0.12531255, 0.21239336, -0.046730034, -0.07800699, 0.07670959, 0.11147525, 0.03439283) * inp_3_1_2;
    result0 += M4(-0.13897191, 0.020949684, 0.019847944, -0.0033843066, 0.22682287, -0.070974596, 0.13593964, 0.05257756, -0.024041409, 0.06048565, 0.07937034, -0.0012799605, -0.048012275, 0.035201296, -0.18306804, -0.08026287) * inp_3_2_2;
    result1 += M4(0.09909281, 0.2543975, -0.08322736, 0.113519, 0.07854881, 0.05925152, 0.009855199, 0.1465059, -0.059900604, 0.014481682, 0.016113212, -0.016030733, -0.009645403, 0.0142361205, 0.038506895, 0.029064128) * inp_3_0_0;
    result1 += M4(0.028952079, -0.12959012, -0.22131991, -0.065246016, 0.19935502, -0.005856489, -0.33970803, 0.09046305, 0.010142683, 0.12153512, 0.08948604, 0.0053265397, 0.20571885, -0.102056034, 0.25074714, 0.10250504) * inp_3_1_0;
    result1 += M4(-0.0031896136, -0.026774853, -0.05961931, -0.1749948, 0.09687415, -0.06305517, -0.03521124, 0.063844405, 0.03148689, 0.07811249, -0.012134404, -0.05627651, 0.15676631, 0.17974606, 0.20041959, 0.17916594) * inp_3_2_0;
    result1 += M4(0.08869159, 0.15220232, 0.009757684, -0.32389227, 0.36882925, 0.020464988, -0.23906699, 0.035144147, -0.27762648, -0.04461748, 0.21052285, -0.08743686, 0.14099595, 0.011092738, 0.19318467, 0.08930832) * inp_3_0_1;
    result1 += M4(-0.17560363, -0.20369954, 0.15090851, -0.872387, 0.7021713, 0.2271763, 0.18036848, 0.104706936, -0.69750416, -0.12783147, -0.012032678, -0.46924365, 0.49410608, -0.0029499093, 0.090023436, -0.6880754) * inp_3_1_1;
    result1 += M4(0.07552546, -0.14980064, -0.10013747, -0.08598112, -0.069572404, 0.049892697, -0.05258911, -0.0725911, -0.117379874, -0.010733421, 0.08470118, 0.010037933, 0.43717325, -0.3101697, 0.025152607, -0.04390491) * inp_3_2_1;
    result1 += M4(-0.1176597, 0.15109983, 0.12359189, -0.015540596, 0.28296277, 0.013827186, 0.22140317, -0.12877457, -0.19583131, -0.018556796, -0.19120672, 0.18127355, -0.039659984, 0.038324043, -0.056702625, 0.091392055) * inp_3_0_2;
    result1 += M4(0.08727892, -0.048722688, -0.025024218, -0.076994665, 0.05254556, -0.06765912, -0.13492398, -0.07378946, -0.08207731, 0.16119747, 0.15370518, 0.30456564, 0.24482848, 0.11937079, 0.07765127, 0.01793558) * inp_3_1_2;
    result1 += M4(0.14595479, 0.1911617, -0.019153364, -0.052906893, -0.12801734, 0.014089007, 0.15281063, 0.12025442, 0.09365218, 0.09938676, -0.05942338, 0.048913024, 0.06540383, -0.22810365, -0.20507906, -0.07721902) * inp_3_2_2;
    result2 += M4(0.13120589, -0.014529614, 0.23432973, 0.012669031, 0.051212173, -0.0364469, -0.059225813, 0.08085932, 0.045837022, 0.047512688, -0.009354211, -0.050447714, 0.0036722932, -0.024461906, 0.030067766, 0.057389997) * inp_3_0_0;
    result2 += M4(0.03426836, 0.0699974, -0.010539764, 0.033812627, 0.0037280421, 0.067326166, -0.028813835, -0.08980418, 0.13876389, -0.039697237, 0.09459043, 0.09859993, 0.050315283, 0.038887277, -0.20564891, 0.23417845) * inp_3_1_0;
    result2 += M4(-0.033046853, -0.020099059, 0.20607904, 0.06183204, 0.14413847, 0.040171444, -0.08208295, 0.059463795, -0.012458163, -0.012562178, 0.15659668, 0.0077787847, 0.19336234, -0.015712503, -0.1301623, -0.043420635) * inp_3_2_0;
    result2 += M4(0.0068020895, -0.10895454, 0.2757896, -0.13314398, -0.13594888, -0.1570559, 0.0813312, -0.08932295, 0.13628346, 0.099969804, -0.08124151, -0.021040713, 0.11555169, 0.03208192, -0.17362131, -0.08220797) * inp_3_0_1;
    result2 += M4(-0.36980376, -0.11026249, 0.32392403, -0.64294, 0.33314997, 0.15518273, 0.66642064, 0.053012736, -0.3858047, -0.1503951, -0.39584923, -0.27826086, -0.27345803, 0.08758351, 0.046149503, -0.31842563) * inp_3_1_1;
    result2 += M4(0.081470564, 0.059685532, 0.07388173, -0.14767554, 0.13372439, 0.13000639, 0.2588857, -0.36515692, -0.11724992, -0.076814055, -0.27777994, 0.086358756, 0.1180437, -0.031241177, 0.07753665, 0.21083009) * inp_3_2_1;
    result2 += M4(-0.05794302, -0.030842075, 0.13017817, 0.08700936, 0.043756336, -0.047414515, -0.117386535, 0.16661961, 0.08387866, 0.06889602, 0.095883675, -0.0948128, 0.112048686, 0.04587935, 0.042311605, 0.007404884) * inp_3_0_2;
    result2 += M4(0.083462186, 0.107694015, 0.12497629, -0.20115098, 0.07559475, -0.0461757, -0.17259862, 0.07979157, -0.033743285, 0.012459163, -0.031932164, -0.10699225, 0.25126573, 0.11505487, -0.13387874, 0.18972185) * inp_3_1_2;
    result2 += M4(0.11767756, -0.026603503, 0.00029704516, 0.19556497, -0.12565033, 0.03440382, 0.08015837, -0.19476259, 0.044556797, -0.0364967, -0.041787747, 0.14456826, 0.13635932, 0.03511808, -0.13051562, 0.07952706) * inp_3_2_2;
    result3 += M4(-0.10439386, 0.06907773, -0.105962425, -0.11667441, 0.054043338, 0.12274433, -0.0004864319, 0.063127734, 0.01304613, -0.004161001, -0.024520848, -0.07277488, 0.03620315, -0.008896251, -0.006625052, 0.058412477) * inp_3_0_0;
    result3 += M4(0.2178897, 0.04787565, 0.0252944, 0.103081346, -0.008471069, -0.08016267, 0.072550595, 0.09881012, -0.07037553, 0.083263904, -0.055857476, -0.014701088, -0.24998698, -0.11647069, -0.021277847, 0.07633796) * inp_3_1_0;
    result3 += M4(-0.11651491, -0.03695161, -0.044542614, 0.013600193, 0.13087854, 0.05131636, 0.043138664, 0.031106228, -0.12840417, -0.09089621, -0.10495018, -0.030375758, -0.24745157, -0.100225784, 0.037837017, -0.036612496) * inp_3_2_0;
    result3 += M4(-0.19784553, 0.15581684, -0.08669114, -0.11083282, -0.2956929, 0.17159088, -0.085932985, -0.0978436, 0.24889904, -0.09305293, 0.0068157865, 0.010446087, -0.010268893, -0.08198991, -0.0009104153, 0.11686525) * inp_3_0_1;
    result3 += M4(-0.055259142, -0.27204752, 0.03811407, 0.046654698, -0.43607017, 0.7618535, -0.2927376, 0.20412534, 0.3423048, -0.5317735, 0.25225088, -0.14842968, 0.16330318, -0.19525537, 0.1509517, -0.02837406) * inp_3_1_1;
    result3 += M4(0.159873, 0.08009659, 0.043213543, 0.10269302, -0.07257136, 0.0643342, -0.24227248, 0.080863416, 0.13319331, 0.046073284, 0.08749586, -0.13761553, 0.02723612, -0.16704063, 0.19861096, 0.038077056) * inp_3_2_1;
    result3 += M4(0.044759843, 0.12148468, 0.042371176, 0.03130568, 0.1633968, 0.26367328, -0.072684065, 0.029640015, -0.109316364, -0.46865448, 0.06414597, 0.041049942, -0.0027171695, -0.30954516, 0.033043645, 0.080750525) * inp_3_0_2;
    result3 += M4(-0.087433025, 0.003910507, -0.07399713, 0.15489763, 0.047416616, -0.040332276, 0.042857964, 0.054461844, 0.012643185, -0.056166936, 0.09967775, -0.029106457, 0.13372153, -0.12258906, -0.005524438, -0.10018285) * inp_3_1_2;
    result3 += M4(-0.14481853, -0.15831935, -0.021399653, -0.0028154124, 0.024571091, 0.12025883, 0.0032127665, 0.14543036, -0.10148422, -0.13233048, 0.00031172577, -0.07372081, 0.019727247, -0.06785501, -0.023427026, -0.18465671) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.08526971, 0.08057396, 0.08523369, 0.07727881);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.081704184, -0.0038182654, -0.022452647, -0.03354137, -0.024212204, -0.012241677, -0.044834744, -0.02469018, 0.019059544, 0.038843848, -0.0025556155, 0.010445492, 0.15021777, 0.101191714, 0.067458406, 0.09287997) * inp_0_0_0;
    result0 += M4(-0.09717895, -0.15708484, 0.015208919, 0.047075868, 0.004980264, -0.013148621, -0.10771975, -0.02064668, 0.0072176047, -0.1449918, 0.11513082, 0.04330586, 0.018077824, 0.13641581, 0.05515893, 0.009834927) * inp_0_1_0;
    result0 += M4(0.021530889, -0.04099646, -0.006257876, -0.03844126, -0.01678738, -0.0058023334, -0.030319074, -0.07106761, -0.030681701, 0.0028924956, -0.015084451, 0.040369153, 0.093062274, 0.045036525, 0.063269645, 0.033826996) * inp_0_2_0;
    result0 += M4(0.16174534, -0.07117164, -0.019020315, 0.024812575, 0.0040182383, -0.101964585, 0.14321041, -0.07543615, 0.019495854, 0.05273548, 0.07488746, 0.0071031367, 0.17275427, 0.10951427, 0.1688745, 0.12105434) * inp_0_0_1;
    result0 += M4(0.08221516, 0.25867656, -0.13574423, -0.16850695, -0.22550696, 0.16079423, -0.17610712, 0.32015988, -0.090990484, 0.013319817, -0.10101505, -0.17185576, 0.19542815, 0.1945784, 0.15227467, 0.23671669) * inp_0_1_1;
    result0 += M4(0.000631437, 0.109503135, 0.05251612, 0.039065182, 0.059604302, -0.0641261, 0.03977752, -0.104838975, -0.007300415, -0.010864975, -0.041315775, 0.06270582, 0.15566856, 0.18428902, 0.1535129, 0.21837832) * inp_0_2_1;
    result0 += M4(-0.03205898, -0.006111265, 0.038017288, 0.0067716604, 0.0049189893, -0.0022273376, 0.00079014833, 0.002146371, 0.038275503, 0.0018259687, 0.051810045, -0.00943109, 0.10428028, 0.02459941, 0.1864887, 0.003215119) * inp_0_0_2;
    result0 += M4(-0.043393403, -0.075197004, 0.06808857, 0.06083822, 0.09251029, 0.039682735, 0.09406514, -0.032323208, 0.027831126, 0.025585923, -0.093726955, 0.0763125, 0.03518274, 0.06719904, 0.063854754, 0.17840062) * inp_0_1_2;
    result0 += M4(-0.0154069355, -0.0135201765, -0.006313045, 0.06912559, 0.050270498, 0.02843231, 0.079963, 0.030479116, 0.023360591, 0.02719246, 0.0069548837, -0.07557229, 0.061415106, 0.13005805, 0.0739918, 0.10525482) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.102457404, -0.0056941784, -0.083277576, -0.06354614, -0.022569707, -0.12554866, 0.054589078, -0.0033876186, -0.032743167, 0.048855904, 0.0042643417, -0.005619581, 0.032704175, 0.064809166, -0.022489706, 0.002982694) * inp_1_0_0;
    result0 += M4(0.02586682, -0.11930153, -0.15993702, -0.011198289, 0.05744148, 0.043946657, 0.18162006, 0.001685814, 0.02326026, -0.09319861, 0.012168561, 0.019231131, 0.013140915, -0.09619964, 0.055624284, 0.03714542) * inp_1_1_0;
    result0 += M4(-0.0582953, 0.071972996, -0.021235913, -0.011924917, -0.0733834, 0.055046897, -0.023460794, 0.11315989, -0.06812134, 0.058333185, -0.016912093, 0.046112977, 0.03886953, -0.049896613, 0.016995309, -0.016039986) * inp_1_2_0;
    result0 += M4(-0.048193067, -0.11967339, 0.03919004, -0.07854072, -0.045714755, -0.034643218, -0.088080116, -0.14394617, 0.069941565, -0.004191609, -0.09296018, 0.024472337, -0.0875597, 0.0038808628, 0.05113492, 0.031656537) * inp_1_0_1;
    result0 += M4(0.18823487, 0.03305396, 0.22385672, 0.057936285, 0.09239143, 0.04823271, -0.1302214, 0.017080847, -0.05403504, 0.06865578, 0.012130532, 0.013110464, 0.12105492, 0.007895888, -0.058952328, 0.15205038) * inp_1_1_1;
    result0 += M4(0.035650894, 0.10952155, 0.00034926287, 0.04956144, 0.00043600958, 0.029347232, -0.039508756, -0.11818681, 0.035540793, -0.05244695, 0.02015392, 0.045816887, 0.014880549, 0.023600973, 0.035895396, -0.005728218) * inp_1_2_1;
    result0 += M4(-0.039332394, -0.011641472, -0.05282185, 0.020266993, -0.0062161237, -0.027745716, -0.03666799, -0.02659068, -0.007865291, -0.013456133, 0.011718394, 0.016301095, -0.008347305, 0.005462201, -0.053952005, -0.0024239721) * inp_1_0_2;
    result0 += M4(-0.005450941, 0.06212537, 0.06596139, -0.03962128, 0.015764704, -0.047651954, 0.17169325, 0.050630644, -0.010647557, 0.00017108052, -0.013565096, -0.058968242, -0.04772347, -0.007506985, -0.02515502, -0.13983348) * inp_1_1_2;
    result0 += M4(0.033433948, -0.026893495, 0.03625541, 0.05911444, -0.026790926, -0.025067067, -0.010474191, 0.097399235, 0.04432359, -0.0022269567, 0.042828273, -0.09208279, -0.023240125, -0.03247597, -0.020373283, -0.011377337) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.04602507, 0.039521705, 0.010426865, 0.026328992, -0.08805367, -0.067549855, -0.027174503, -0.056796685, 0.0033482795, 0.08206336, -0.021938775, -0.0043519763, 0.061272357, -0.061599806, -0.010695271, 0.016226374) * inp_2_0_0;
    result0 += M4(-0.09242709, 0.014302324, 0.0024484363, 0.0027669286, -0.044801656, 0.014310662, 0.036997784, 0.02421287, 0.040250793, -0.09533685, 0.044473834, 0.036334008, -0.05775007, 0.13764375, 0.027144898, -0.07179147) * inp_2_1_0;
    result0 += M4(0.036610104, -0.080205426, -0.00934784, -0.06371335, 0.05570145, 0.13696393, 0.03723379, 0.048512433, 0.009847819, 0.016048772, 0.02666372, 0.031403176, -0.025246032, 0.039470684, -0.004148915, 0.047922786) * inp_2_2_0;
    result0 += M4(0.043844398, 0.087066025, 0.042356525, 0.093621604, -0.16389664, -0.02026694, -0.19891952, -0.03667499, -0.048500426, 0.031942308, -0.035890415, 0.101515554, 0.054134578, -0.05467099, 0.09292853, -0.07991351) * inp_2_0_1;
    result0 += M4(-0.06216581, -0.24762365, -0.3351085, -0.300693, -0.4094269, -0.38854697, -0.28110015, -0.27616033, -0.05733812, -0.13176298, -0.14865854, -0.19068655, -0.039407402, -0.11050424, -0.047717046, 0.040927786) * inp_2_1_1;
    result0 += M4(-0.12071047, -0.022056177, -0.07739735, -0.06868307, 0.44377857, 0.10162384, 0.443844, 0.17052267, 0.018903345, 0.016341008, 0.05184906, 0.044283014, 0.01870549, 0.01192812, 0.061958518, 0.11282524) * inp_2_2_1;
    result0 += M4(0.037641566, 0.014742778, 0.09886711, 0.019203804, -0.06415908, 0.009920636, -0.115869276, 0.018268343, -0.00920756, 0.003926575, 0.01671011, 0.037277993, -0.021788219, 0.023168959, -0.034037028, -0.015931869) * inp_2_0_2;
    result0 += M4(0.020556936, -0.039846044, 0.14351529, 0.027534908, 0.1299199, 0.048469543, -0.06166274, -0.067874625, 0.019738168, 0.09476093, 0.06635429, -0.10499743, 0.011469278, -0.021876607, -0.09099923, -0.07828834) * inp_2_1_2;
    result0 += M4(-0.0039680796, 0.01676576, 0.005849204, -0.017833946, 0.12264916, 0.1519793, 0.16877316, 0.16122274, -0.009498235, 0.0059077214, 0.0018210721, 0.059787128, 0.0021254134, 0.04053945, 0.003231009, 0.025449682) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.036515854, 0.003349845, -0.042398565, -0.022688745, -0.014126096, 0.00654489, 0.006321417, -0.008633411, 0.009799049, -0.003888344, 0.022364628, 0.0045279735, -0.09908835, -0.07277291, -0.01672382, -0.059391785) * inp_3_0_0;
    result0 += M4(0.021317778, -0.057584338, 0.044282015, 0.0062248646, 0.009218638, 0.0011025134, -0.047616106, -0.019212015, -0.052649386, -0.08284568, -0.060280878, -0.05221357, -0.0348463, -0.072397925, 0.024165308, 0.024477819) * inp_3_1_0;
    result0 += M4(-0.03673009, 0.02718829, -0.0070378873, 0.043754276, -0.07530278, 0.070273615, -0.037440863, 0.024019739, 0.018003412, 0.05248891, 0.029602263, 0.046905972, -0.05802863, -0.09189882, -0.053748947, -0.051333673) * inp_3_2_0;
    result0 += M4(-0.041783355, -0.068973795, 0.06896358, -0.015198256, -0.032129943, 0.022329045, -0.050518416, 0.072331324, 0.019453615, -0.03927677, 0.02047612, 0.025118493, -0.03932683, 0.012419764, -0.067781374, 0.037614282) * inp_3_0_1;
    result0 += M4(0.18958189, 0.26774022, -0.23372373, -0.0747005, 0.11396125, -0.25786358, 0.10951031, -0.15997681, -0.52102685, -0.41580006, -0.39365807, -0.36156875, 0.37450704, 0.32533863, 0.35506696, 0.2616937) * inp_3_1_1;
    result0 += M4(0.031837985, 0.005773546, 0.06275207, -0.0049191713, -0.058535803, 0.13061029, -0.10686199, 0.041724913, 0.04889437, -0.01246118, 0.0055200444, 0.010526, -0.11402651, -0.1525106, -0.10584939, -0.16907966) * inp_3_2_1;
    result0 += M4(-0.015285764, -0.014697487, -0.03769185, -0.008218602, -0.007050142, 0.020716406, 0.007152881, 0.020474158, 0.09855071, 0.0603756, 0.2020231, 0.057617776, -0.03646671, 0.015023534, -0.04512926, 0.021325946) * inp_3_0_2;
    result0 += M4(-0.024534421, -0.05598726, 0.0730736, 0.0102758845, 0.05937825, -0.0043888222, 0.10264956, -0.0548215, 0.18277647, 0.18205833, 0.043332204, 0.15644693, 0.1501342, 0.057503365, 0.09446941, -0.006302408) * inp_3_1_2;
    result0 += M4(-0.015550946, -0.02356982, -0.011532238, -0.0016869503, 0.0027731762, 0.0082901595, 0.012251618, 0.08997835, 0.099176265, 0.17475237, 0.11610866, 0.15873511, -0.01570157, -0.0075754314, -0.022493713, -0.040089868) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}

