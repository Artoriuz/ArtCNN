// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DS (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(-0.005225583, -0.012542699, -0.013877259, -0.047194112);
    V4 result1 = V4(-0.030641505, -0.0064816945, -0.0014070527, 0.0044026137);
    V4 result2 = V4(0.030725269, -0.002704948, 0.0033706883, -0.0048329434);
    V4 result3 = V4(-0.00059054396, 0.011021881, 0.010122269, -0.06352128);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.034905374, -0.14847586, 0.009384425, 0.042238973) * inp_0_0_0;
    result0 += V4(0.030456437, 0.15345207, 0.11545197, 0.12349509) * inp_0_1_0;
    result0 += V4(-0.0063419, 0.117583826, -0.09263555, 0.061951544) * inp_0_2_0;
    result0 += V4(-0.025739387, 0.05119389, 0.0011516409, 0.16629738) * inp_0_0_1;
    result0 += V4(-0.047816016, -0.08245859, -0.37068012, 0.26825824) * inp_0_1_1;
    result0 += V4(-0.22344173, -0.14743842, 0.09728108, 0.111004025) * inp_0_2_1;
    result0 += V4(0.018670319, 0.17421009, -0.016062511, 0.09507917) * inp_0_0_2;
    result0 += V4(0.12256829, -0.101899065, 0.2330724, -0.002669136) * inp_0_1_2;
    result0 += V4(0.18522874, 0.0065990314, 0.036651574, 0.08790449) * inp_0_2_2;
    result1 += V4(0.07638109, -0.06619751, -0.09888524, 0.006162732) * inp_0_0_0;
    result1 += V4(-0.05989708, -0.03213484, -0.0039713373, -0.18066828) * inp_0_1_0;
    result1 += V4(0.047469657, 0.109911494, 0.058061812, 0.14695042) * inp_0_2_0;
    result1 += V4(-0.049812037, 0.09131377, 0.11720175, -0.03378387) * inp_0_0_1;
    result1 += V4(0.10153846, -0.16240022, 0.15081197, 0.1645279) * inp_0_1_1;
    result1 += V4(-0.111701995, 0.27006012, -0.20935287, -0.12693323) * inp_0_2_1;
    result1 += V4(0.051307455, -0.02375276, 0.010696088, 0.019182304) * inp_0_0_2;
    result1 += V4(0.09577211, -0.24706534, -0.119047694, 0.04027839) * inp_0_1_2;
    result1 += V4(-0.06366528, 0.06263718, 0.09287407, -0.0403665) * inp_0_2_2;
    result2 += V4(-0.05697264, 0.106490426, -0.0959198, -0.06186609) * inp_0_0_0;
    result2 += V4(0.079839304, -0.0445814, 0.14584014, 0.0027977494) * inp_0_1_0;
    result2 += V4(0.06536983, -0.0040194755, 0.021220239, -0.017913084) * inp_0_2_0;
    result2 += V4(-0.17265081, 0.27199483, 0.3316951, 0.15974882) * inp_0_0_1;
    result2 += V4(-0.27151003, -0.68436396, -0.2985558, -0.070354566) * inp_0_1_1;
    result2 += V4(0.12543276, 0.11697163, -0.07281658, -0.050627522) * inp_0_2_1;
    result2 += V4(0.037130896, 0.119165905, -0.13555786, -0.01301766) * inp_0_0_2;
    result2 += V4(0.19204715, 0.06153886, 0.086835876, 0.1730064) * inp_0_1_2;
    result2 += V4(-0.14529812, 0.00015205643, 0.015495105, -0.11772026) * inp_0_2_2;
    result3 += V4(0.057380587, -0.11901747, 0.22332801, -0.09348564) * inp_0_0_0;
    result3 += V4(-0.16678104, 0.17776923, 0.3451914, 0.1620134) * inp_0_1_0;
    result3 += V4(0.004671613, -0.025302967, 0.05627688, 0.069505885) * inp_0_2_0;
    result3 += V4(0.038948752, -0.028421652, 0.024911374, -0.1989911) * inp_0_0_1;
    result3 += V4(0.016253317, -0.14765981, -0.38007006, -0.016933853) * inp_0_1_1;
    result3 += V4(0.048160683, 0.11682623, -0.1795094, 0.20878486) * inp_0_2_1;
    result3 += V4(-0.07031915, 0.14377594, -0.062862396, -0.0856851) * inp_0_0_2;
    result3 += V4(0.094086885, -0.071062066, -0.16489467, 0.029297851) * inp_0_1_2;
    result3 += V4(-0.017154345, -0.06457714, -0.029077107, 0.17629491) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DS (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.021110939, 0.010774547, 0.09935787, 0.01474208);
    V4 result1 = V4(0.042165708, -0.009339, -0.01151345, 0.013427712);
    V4 result2 = V4(0.011670754, 0.021748539, 0.0075346734, 0.015625792);
    V4 result3 = V4(0.005118105, 0.00049432734, -0.0057988656, -0.03125583);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.102580585, 0.36181432, -0.08580778, 0.080396034, 0.12671319, 0.08196008, 0.032408547, -0.024435978, -0.32671535, 0.25757787, -0.088907026, -0.05694014, 0.0033488784, -0.058657713, -0.13072903, 0.028617011) * inp_0_0_0;
    result0 += M4(-0.27620682, 0.13373804, -0.023436373, 0.06568039, 0.6139223, 0.19995709, 0.014239319, 0.10779635, -0.5780321, -0.48734653, -0.14148207, -0.0386767, -0.34283695, 0.08897555, 0.03290767, 0.105923556) * inp_0_1_0;
    result0 += M4(0.29499257, -0.1005186, 0.040245753, 0.014731216, 0.10273326, -0.1412642, 0.15828706, -0.115807705, -0.2835618, 0.08689493, -0.055470727, 0.08836904, -0.09065689, -0.016136598, -0.10100021, -0.05307296) * inp_0_2_0;
    result0 += M4(-0.16815323, -0.122193456, -0.0028513311, -0.16844681, -0.21614225, -0.182738, 0.18809737, -0.1658422, 0.23192169, 0.13211922, -0.0051513095, -0.016684402, 0.03219917, 0.07883662, -0.019843852, 0.028219953) * inp_0_0_1;
    result0 += M4(-0.044446222, -0.15125488, -0.049370185, -0.12657166, -0.46266428, 0.2240777, 0.06417231, -0.04911897, -0.4758677, 0.62064385, 0.0059337323, -0.4036421, 0.03858827, 0.03329167, 0.098892756, 0.119527735) * inp_0_1_1;
    result0 += M4(-0.3160756, 0.0057578576, -0.0554808, -0.073966146, -0.39015347, -0.13138172, -0.045109592, -0.0396927, 0.22730692, 0.08167503, 0.06692677, -0.1497619, -0.04372681, 0.06351726, 0.052635293, 0.03964231) * inp_0_2_1;
    result0 += M4(0.07487858, 0.034215346, 0.010161417, 0.20053911, -0.038608283, -0.12629968, -0.04573685, 0.17438158, 0.27081254, -0.20713829, 0.052494347, -0.08029751, -0.043332424, -0.052369203, -0.10907035, -0.019620758) * inp_0_0_2;
    result0 += M4(0.055591747, 0.026453111, -0.05614962, 0.12823904, 0.09347497, 0.16029331, -0.07602924, 0.45631397, 0.23254731, -0.17322698, -0.21716541, 0.8307702, 0.0099748215, -0.03599321, -0.06123117, 0.021522129) * inp_0_1_2;
    result0 += M4(-0.15336795, -0.06627543, 0.006296557, -0.014506907, 0.13411711, -0.28973186, -0.15411037, -0.12960619, 0.11512263, -0.06892197, 0.10073792, -0.07153085, 0.043312415, -0.06744682, 0.038143847, -0.07352307) * inp_0_2_2;
    result1 += M4(-0.07411646, -0.060988866, -0.024343323, 0.18063986, -0.06172773, -0.0030701675, 0.016631572, 0.12479238, 0.060225815, -0.037457768, -0.06534521, 0.022786025, 0.077137284, -0.068156615, -0.061100658, -0.11160442) * inp_0_0_0;
    result1 += M4(0.1355941, -0.061783474, 0.021127734, -0.091472164, -0.10862194, 0.094719805, 0.10693978, 0.032891907, -0.06399795, 0.01613842, -0.027926214, -0.023399794, 0.13224177, -0.052926447, -0.11097134, -0.04718589) * inp_0_1_0;
    result1 += M4(0.07700091, 0.00090002926, -0.004249912, -0.101910226, -0.1132694, 0.30161873, 0.06233875, -0.022919739, 0.06048149, 0.087786175, -0.1467316, 0.09666376, -0.10830033, -0.03690201, -0.059986122, 0.13530204) * inp_0_2_0;
    result1 += M4(-0.061233725, 0.25211266, -0.04173957, 0.36452827, -0.11678055, -0.03695766, 0.16572478, 0.098676555, -0.09634252, 0.25086603, 0.01571109, 0.14263675, 0.061277173, -0.06232783, -0.040486112, -0.10438199) * inp_0_0_1;
    result1 += M4(0.109008946, -0.16626085, 0.22009619, -0.03799077, 0.20686983, -0.20959903, -0.049413554, -0.08423191, -0.19891609, 0.1955835, 0.903527, -0.059108403, 0.16431905, 0.065666124, -0.111239515, -0.084986344) * inp_0_1_1;
    result1 += M4(0.07584737, -0.15070042, -0.053709317, -0.092445515, -0.08841715, -0.15625949, 0.21711643, -0.059032835, 0.37132984, -0.098290354, 0.12717754, 0.057225406, -0.20029777, 0.08667955, -0.032247573, 0.02067876) * inp_0_2_1;
    result1 += M4(0.04301511, -0.06373897, -0.07261866, -0.17021088, 0.16059022, -0.45147106, -0.11574467, 0.12123175, 0.102359004, 0.006536645, -0.07460549, 0.26784253, -0.01198033, -0.06750771, 0.107076295, -0.035996072) * inp_0_0_2;
    result1 += M4(0.10972313, -0.10999742, -0.14253336, -0.058327965, 0.19609894, -0.036866482, -0.48921844, -0.23745048, -0.0014895517, -0.40911117, -0.6482667, -0.18525977, 0.07814435, 0.03532558, 0.07355888, 0.059423864) * inp_0_1_2;
    result1 += M4(0.19945467, -0.08399666, -0.05287292, -0.045893595, -0.018254854, 0.0119212875, -0.02971269, -0.051063232, 0.047484007, -0.10958103, -0.094855644, -0.1287921, -0.13761483, -0.108605884, 0.057539534, 0.08684663) * inp_0_2_2;
    result2 += M4(-0.10610826, -0.09996145, -0.4885289, -0.7103476, 0.058105443, -0.04636189, -0.015945733, -0.42497504, -0.10285889, -0.21267082, 0.3440213, -0.29031128, 0.016693922, -0.08054263, 0.034294903, 0.026322206) * inp_0_0_0;
    result2 += M4(0.14007205, 0.06477158, 0.01234675, 0.015162347, 0.040702403, 0.030793171, 0.043867882, -0.23328881, 0.18895271, 0.09419588, 0.021652725, -0.50485384, 0.05853941, 0.10513577, -0.05048131, -0.102345966) * inp_0_1_0;
    result2 += M4(0.1259054, 0.19484615, -0.16339913, -0.20336059, 0.043734018, 0.05776109, 0.048129473, -0.2584802, 0.02896631, 0.18275073, -0.32091007, -0.15742877, -0.048973914, -0.16452448, -0.09885265, -0.026093006) * inp_0_2_0;
    result2 += M4(-0.06846992, -0.10446843, 0.54251105, -0.10628251, -0.03988998, -0.15939872, 0.43680263, -0.0386269, -0.0113806445, -0.11556988, -0.5038261, 0.3965996, 0.07297111, 0.08326072, -0.02639837, 0.0886122) * inp_0_0_1;
    result2 += M4(-0.11066738, 0.06459564, 0.1256434, 0.12712492, -0.07674156, 0.13546124, 0.17747127, 0.08907218, -0.43063107, -0.15455195, 0.13460276, 0.10572841, 0.21583307, 0.08461753, 0.11134893, 0.06801406) * inp_0_1_1;
    result2 += M4(-0.15620542, 0.01069633, 0.223414, -0.093782224, -0.04854868, 0.29810315, -0.010261603, 0.0888509, -0.069394, 0.32140887, -0.051244773, 0.13253003, 0.09235624, -0.045471065, 0.08275652, 0.1479182) * inp_0_2_1;
    result2 += M4(-0.12939642, -0.022066716, -0.20388709, 0.088081345, 0.04416685, -0.09787585, -0.35586447, 0.21346727, 0.03211787, 0.061878655, 0.51281375, -0.10302332, -0.05283343, -0.016796703, 0.0057511455, -0.07820029) * inp_0_0_2;
    result2 += M4(0.10525734, -0.047865413, 0.022642206, 0.11335959, 0.5267199, 0.10082347, -0.10600096, 0.20544381, 0.46645302, -0.0029468979, -0.061765578, -0.014784356, -0.17552975, 0.10890886, -0.020726664, -0.14210615) * inp_0_1_2;
    result2 += M4(0.040412333, 0.07059068, -0.14493497, -0.025438493, -0.14210503, 0.03754898, -0.098003216, 0.079542756, 0.008773769, -0.1139384, -0.09258502, -0.04844582, -0.05959047, -0.08650446, -0.033490106, -0.050335236) * inp_0_2_2;
    result3 += M4(0.13310133, 0.14026676, 0.11461443, -0.12577087, 0.06965751, -0.05812959, 0.12481456, 0.11635237, -0.003152255, -0.11005606, -0.19467409, -0.019480947, -0.030962054, -0.049415786, -0.015216151, 0.1482083) * inp_0_0_0;
    result3 += M4(-0.14676812, -0.07010659, -0.14906025, -0.03182431, -0.020065429, 0.06635082, 0.116372965, 0.05435331, 0.119684555, -0.084570244, -0.3856256, 0.07616463, -0.011281586, 0.05764588, -0.010445236, -0.046091948) * inp_0_1_0;
    result3 += M4(-0.14756283, 0.05583293, -0.016287634, 0.044711336, 0.021026717, -0.09331329, 0.09792945, 0.0312346, -0.25445938, -0.25149518, 0.047980055, 0.063955784, 0.00251335, 0.057401404, -0.013112404, -0.08903361) * inp_0_2_0;
    result3 += M4(0.21316247, -0.005675675, -0.28021237, 0.14280662, 0.20425367, -0.13215022, 0.15143716, 0.14661418, 0.08044557, -0.23016821, 0.02084018, -0.44015902, -0.14373909, -0.12201199, 0.020304127, 0.09783836) * inp_0_0_1;
    result3 += M4(-0.09686519, -0.06255779, -0.016642157, -0.016145004, -0.2931912, 0.08848165, -0.16222736, 0.15771767, 0.4776146, -0.01621303, 0.4903154, 0.24149214, -0.027944408, 0.09691999, -0.05581567, 0.02051976) * inp_0_1_1;
    result3 += M4(-0.025571343, 0.014964315, -0.08784474, 0.068621576, -0.3564272, -0.20353612, -0.32601187, 0.009312911, -0.36055252, -0.35461718, 0.048972752, 0.035504494, 0.12753381, -0.1115178, -0.096694976, -0.027412921) * inp_0_2_1;
    result3 += M4(0.03216164, 0.0718089, -0.07774833, 0.039836876, 0.06827291, 0.4140557, 0.19965911, 0.04448445, -0.120783664, 0.011304155, 0.15153933, -0.013798304, -0.07480693, -0.049402244, -0.046083882, 0.042255882) * inp_0_0_2;
    result3 += M4(-0.03287276, -0.32277554, -0.050395444, -0.060016926, 0.037381846, 0.10377593, -0.49106213, -0.14742339, -0.0014586545, 0.87490857, -0.31212556, 0.12268354, 0.013197973, 0.11078273, -0.0001710868, -0.0073608984) * inp_0_1_2;
    result3 += M4(-0.029586226, 0.038820002, -0.2295408, 0.043856487, 0.22228067, -0.08825837, 0.16736329, -0.18620825, -0.071423225, 0.16337346, -0.37620988, -0.006950408, 0.041268714, -0.010261332, -0.017397907, -0.0128044365) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.8209402, -0.028074412, -0.02903254, 0.028637208, -0.22380957, 0.12786964, 0.1850211, -0.039922647, -0.76887345, 0.35390088, -0.09410289, -0.054880217, -0.29846442, 0.6270806, -0.015478075, 0.066936135) * inp_1_0_0;
    result0 += M4(-0.3591646, 0.10704409, 0.07113619, 0.017948162, 0.606137, -0.3797306, 0.0015348727, -0.2377419, 0.7495295, -0.02378392, 0.10993711, -0.031060709, -0.31289825, -0.12537226, -0.1315295, 0.055353757) * inp_1_1_0;
    result0 += M4(0.25483435, 0.21197043, -0.0069242, 0.032454293, 0.113178425, 0.077984504, 0.011872726, 0.009869244, -0.37669304, -0.5231807, 0.04361561, 0.082267575, -0.02838303, -0.054978933, -0.16881172, 0.06451404) * inp_1_2_0;
    result0 += M4(-0.32410616, -0.06952192, 0.058615427, -0.09867064, -0.114399716, 0.023782259, -0.16747883, 0.04889851, -0.06577864, -0.32485145, 0.008423673, 0.2509175, -0.28070432, 0.50523657, 0.14887996, 0.18130518) * inp_1_0_1;
    result0 += M4(0.18090609, -0.38522634, 0.060468465, 0.08837298, -0.13186231, 0.25980666, 0.026827507, 0.090661824, 0.028017279, 0.3389308, 0.12710343, 0.013573957, 0.87558484, -0.770137, -0.2193517, 0.25818437) * inp_1_1_1;
    result0 += M4(-0.1768374, 0.08688474, -0.1229679, -0.14350459, -0.23840864, -0.07074336, -0.13646051, 0.108396836, -0.10787029, 0.296277, -0.0529514, -0.14779769, 0.32694995, 0.6425124, -0.076211214, 0.16549002) * inp_1_2_1;
    result0 += M4(0.06010548, 0.15770596, -0.037148915, 0.09570981, 0.07933053, -0.16651106, -0.062099054, 0.09442953, 0.2931826, 0.1230731, -0.16459692, -0.13931577, 0.022615101, 0.18754432, -0.24076974, 0.14565338) * inp_1_0_2;
    result0 += M4(0.07028674, -0.055439692, 0.10778512, -0.15035656, 0.048604585, 0.049831543, 0.0007428856, 0.17676005, 0.023227401, 0.19289503, 0.072140165, 0.15871231, -0.17172137, -0.10398478, 0.2826475, -0.7882558) * inp_1_1_2;
    result0 += M4(-0.10051787, 0.1689855, -0.2313532, 0.047065817, 0.101758845, -0.088898554, -0.03911082, -0.12891732, 0.16854231, -0.6375033, 0.104094245, -0.11077774, -0.04206248, -0.39374647, -0.003393667, -0.10527545) * inp_1_2_2;
    result1 += M4(-0.29686186, -0.09491265, 0.044343658, 0.026264811, 0.24790913, 0.36829448, 0.09899223, 0.16228656, 0.11170856, -0.0018881473, 0.16271332, -0.09784452, 0.0024703722, -0.0762746, -0.21922503, -0.13459827) * inp_1_0_0;
    result1 += M4(0.11140646, 0.050504435, -0.04169653, -0.021152118, -0.22729172, 0.09029312, 0.17893006, -0.11137342, 0.11261282, -0.13754901, 0.107506394, 0.2703478, 0.15172867, -0.1700268, -0.017668724, 0.028935544) * inp_1_1_0;
    result1 += M4(0.11605143, 0.07657007, 0.11779908, -0.045072448, -0.06866492, -0.06611262, 0.118406214, -0.012864427, -0.2432965, 0.25566915, -0.09070458, 0.11786007, 0.15506952, -0.1816122, -0.09742771, -0.015663205) * inp_1_2_0;
    result1 += M4(-0.024866236, -0.5244487, 0.06886934, -0.36069044, 0.1091958, 0.35119247, 0.00074356544, 0.47796437, -0.05951623, -0.15123037, -0.082525104, 0.054823566, -0.21968767, -0.33423457, -0.04287394, -0.5736138) * inp_1_0_1;
    result1 += M4(0.3469355, 0.059259534, -0.15439966, 0.15814777, -0.27619973, 0.02726424, -0.13227057, -0.29784143, 0.16795924, -0.21331476, -0.43579257, -0.24832763, 0.3274971, 0.03435778, -0.21683317, 0.08374852) * inp_1_1_1;
    result1 += M4(0.25572246, 0.075531594, 0.14601304, 0.011916525, -0.14065178, 0.057880867, 0.00052033586, -0.12288959, -0.20450947, -0.224944, 0.13695346, 0.15125513, 0.21829027, 0.03886369, -0.19910166, -0.07552292) * inp_1_2_1;
    result1 += M4(-0.13496344, -0.4470536, -0.012222833, -0.1573922, 0.2805311, 0.41485512, -0.1359255, 0.8831849, -0.26916048, -0.036697824, -0.001715846, -0.27328295, 0.07634891, 0.03733933, -0.048467323, 0.3821845) * inp_1_0_2;
    result1 += M4(0.12910019, 0.016136667, 0.21202095, 0.2405178, -0.1539736, -0.026914217, -0.36115986, -0.18657222, 0.21197294, 0.22572799, 0.04553641, -0.31279215, -0.012179213, 0.6499173, 0.9242708, 0.18012065) * inp_1_1_2;
    result1 += M4(0.21223393, -0.09343501, -0.18459576, -0.128515, -0.27802292, 0.1321064, -0.010193988, 0.061895713, -0.105577864, 0.12764843, 0.18593003, 0.06820757, -0.25822628, -0.11171719, 0.13677125, 0.08630584) * inp_1_2_2;
    result2 += M4(-0.09994998, 0.01990448, 0.55700576, -0.5058712, 0.21937168, 0.11970084, -0.1363866, 0.6775337, -0.13989948, -0.06675032, -1.0260819, -0.299035, -0.1412677, -0.15939489, 0.39959306, -0.73050445) * inp_1_0_0;
    result2 += M4(-0.02878439, 0.12803246, 0.18127665, -0.0427143, -0.1504598, -0.23712805, 0.010703751, -0.1473427, -0.16525978, 0.20029436, 0.10436954, 0.19101374, -0.19970147, 0.034397975, -0.096662514, 0.09237375) * inp_1_1_0;
    result2 += M4(-0.023823967, 0.008651435, 0.32845342, -0.046774592, -0.022108477, 0.027043289, 0.13320068, 0.111736596, 0.1204632, -0.3106209, -0.10699566, 0.17252786, -0.09378016, 0.059063688, -0.07754809, 0.54336596) * inp_1_2_0;
    result2 += M4(-0.41129738, -0.05052311, -0.26854756, -0.36695376, 0.29528746, 0.048221897, 0.058295213, 0.46937963, -0.050400402, -0.039455343, 1.2925336, -0.06852266, -0.63534987, -0.10552471, 0.8307922, 0.2121819) * inp_1_0_1;
    result2 += M4(-0.041902676, 0.23359212, -0.37422207, -0.19977403, -0.046078276, -0.2745765, -0.0017347131, 0.08117283, 0.4701531, 0.16551554, 0.26685154, -0.023345083, 0.1873148, 0.17450756, -0.33492085, -0.53809255) * inp_1_1_1;
    result2 += M4(-0.07467127, -0.14233445, -0.15901336, 0.01403828, 0.11517647, 0.19659513, 0.055749822, -0.026910843, 0.10706359, 0.10149566, 0.09978935, -0.017616533, -0.14418203, -0.092555046, -0.081519805, 0.35141358) * inp_1_2_1;
    result2 += M4(-0.10285945, -0.19876966, 0.061887767, -0.22019263, 0.34650815, -0.03459264, -0.019439202, 0.45309415, -0.21666598, -0.06942341, -1.0863949, 0.26770702, 0.70205355, -0.48984435, -0.8830933, -0.24812397) * inp_1_0_2;
    result2 += M4(0.21510419, 0.032541543, -0.020345679, 0.1354823, 0.19983925, -0.19607833, -0.14149623, 0.2566219, -0.023523437, 0.036264937, 0.1985537, 0.21759304, -0.35421807, 0.24291857, 0.011237522, 0.11696041) * inp_1_1_2;
    result2 += M4(-0.01818311, 0.0052832365, -0.0501671, 0.14269473, -0.03758085, -0.022041777, -0.030405466, -0.0074512423, -0.18041675, -0.029755004, 0.037107777, 0.049302097, -0.15000753, 0.20925197, -0.05645282, 0.19760191) * inp_1_2_2;
    result3 += M4(0.02884896, 0.1487667, 0.12520808, 0.20471609, -0.025381556, -0.14801574, -0.13036075, -0.28031525, -0.059302185, 0.22902241, 0.23952161, -0.014664087, 0.01872105, 0.0010072156, -0.39850911, 0.22474676) * inp_1_0_0;
    result3 += M4(0.061874248, 0.13670342, -0.15391406, 0.038023338, 0.12740631, -0.112015195, 0.017162988, 0.14215627, 0.09934898, 0.0092409905, 0.5561949, -0.18775855, 0.100696206, 0.09486902, -0.033677552, -0.03910939) * inp_1_1_0;
    result3 += M4(-0.11455772, 0.011826304, -0.10617159, 0.03216903, -0.18511808, -0.02787129, 0.09919648, 0.056060806, 0.3504898, -0.06237712, -0.04495861, 0.014327659, -0.014952706, -0.2328732, 0.47258312, 0.07478411) * inp_1_2_0;
    result3 += M4(0.0898405, 0.38646218, -0.0023034508, 0.33418688, 0.008725049, -0.29270688, 0.12481444, -0.71333575, 0.20798314, 0.03389617, -0.24800435, 0.6150545, -0.026313353, 0.0890673, -0.51364064, 0.57759935) * inp_1_0_1;
    result3 += M4(-0.41195908, -0.018674957, -0.31461278, -0.05383604, 0.5963578, 0.08811785, 0.12092647, 0.29106137, -0.6050476, 0.13048589, -0.19087364, -0.13116926, -0.8170805, -0.055796534, -0.5482982, -0.501357) * inp_1_1_1;
    result3 += M4(0.12461368, 0.068571754, 0.20919938, 0.05635615, -0.19610685, -0.09554514, -0.102873124, 0.038424034, -0.049922764, -0.08837687, -0.20229189, -0.015912281, 0.35399237, -0.09171273, 0.56961006, -0.08665404) * inp_1_2_1;
    result3 += M4(0.07935411, 0.2111792, -0.044999547, -0.059985425, -0.15064198, -0.2562789, -0.03304853, -0.07594795, -0.06574023, 0.20131904, 0.17675398, -0.23560081, -0.024121732, 0.34092212, 0.12198312, -0.028026795) * inp_1_0_2;
    result3 += M4(-0.045895003, -0.092003345, 0.014911254, -0.06891958, 0.21823916, 0.05678134, -0.17450562, 0.08296472, -0.008454816, -0.20729701, -0.07945396, -0.19954565, 0.2268949, -0.13153844, 0.7184146, 0.08667387) * inp_1_1_2;
    result3 += M4(0.07917337, 0.075670026, 0.2335822, 0.07170506, -0.017890055, -0.053928956, -0.008215973, -0.009853138, 0.23097326, -0.062051076, 0.39761388, -0.025745835, 0.10039135, 0.35056406, 0.27685243, 0.03316756) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.051540665, -0.08031578, -0.09041288, 0.03941432, -0.15772755, 0.3169845, 0.004767167, -0.054326862, 0.28164274, 0.369574, -0.061356835, -0.0456271, 0.80911815, 0.13916165, 0.041927673, -0.0002365043) * inp_2_0_0;
    result0 += M4(-0.6145125, -0.17235413, -0.13456628, 0.061972167, -0.026265102, -0.42618513, -0.07196826, -0.019549875, 0.044105604, -0.39607793, 0.044665437, 0.028268525, -1.0340208, -0.18968129, 0.035301033, 0.08753038) * inp_2_1_0;
    result0 += M4(-0.2269583, 0.117163286, 0.10683083, 0.014372403, -0.23240156, 0.2980382, -0.014057579, 0.023013026, -0.69008005, -0.10600623, -0.16442116, 0.06612373, 0.39558464, 0.11135396, 0.09298989, 0.016213661) * inp_2_2_0;
    result0 += M4(0.072984055, 0.18309414, -0.060040634, -0.06318836, 0.16836368, -0.014757997, -0.10511433, -0.029053604, 0.050903555, -0.43316934, 0.19128998, -0.1315767, -0.19214076, -0.014401586, 0.2061953, -0.061093204) * inp_2_0_1;
    result0 += M4(-0.16079354, 0.41658485, 0.07734064, -0.34524056, -0.09064919, 0.15534411, 0.21824388, -0.5757091, -0.21341993, 0.6560367, 0.12308718, -0.40239486, 0.21760972, 0.22009018, -0.21359925, -0.20134231) * inp_2_1_1;
    result0 += M4(-0.10121169, 0.15338321, 0.07705007, -0.04013456, 0.1408363, -0.12712409, -0.08546387, -0.10477239, 0.023295935, -0.19590056, -0.10500526, 0.09901849, -0.024438398, 0.13057472, -0.064306416, -0.04591624) * inp_2_2_1;
    result0 += M4(0.18658203, 0.0061822752, -0.25778893, 0.088682756, -0.017937964, -0.036988553, -0.0031319256, 0.026809279, 0.025547018, 0.008176713, -0.060022086, 0.120750405, -0.06478997, 0.13716507, -0.062310196, 0.1496544) * inp_2_0_2;
    result0 += M4(-0.3576173, 0.045518477, -0.25119197, 0.66837543, -0.23350896, 0.1717205, 0.11729582, 0.38106972, 0.024444867, 0.054070193, -0.20356892, 0.48057806, 0.06453284, -0.2631561, 0.111551605, 0.0067024743) * inp_2_1_2;
    result0 += M4(0.0824609, -0.13466758, -0.07847924, -0.04253301, -0.0954005, 0.046644446, 0.08772993, 0.17184573, 0.19020514, 0.006888694, -0.048020933, -0.054109517, -0.05193332, -0.06718309, -0.010363323, 0.07333726) * inp_2_2_2;
    result1 += M4(-0.060133483, -0.124597676, -0.21021143, -0.12172257, 0.24383621, 0.3312448, 0.052213218, 0.13462728, -0.11460336, 0.07065727, 0.047692098, 0.035748437, -0.16860089, 0.008853127, -0.16274965, 0.12521382) * inp_2_0_0;
    result1 += M4(-0.09707542, 0.18859212, 0.061065402, 0.060602475, 0.0907789, 0.03646978, 0.19958198, -0.082976155, 0.115014404, -0.06598992, -0.07384249, -0.07530404, 0.115912296, 0.16434157, -0.078385465, -0.025410505) * inp_2_1_0;
    result1 += M4(0.071860306, -0.0101183755, -0.13132215, 0.024725758, -0.097626075, 0.16165997, -0.076906465, -0.046528623, -0.14219198, -0.25376222, 0.10416087, 0.00060749886, -0.03707229, -0.10831391, 0.14012466, -0.05832031) * inp_2_2_0;
    result1 += M4(0.0904483, 0.16421913, 0.005111787, -0.20070742, 0.1751427, 0.24877237, -0.042549092, -0.10773759, -0.1059763, 0.09923195, 0.023846164, 0.4231737, 0.052479308, 0.116431534, 0.088270396, -0.39977443) * inp_2_0_1;
    result1 += M4(-0.11600317, 0.43058068, 0.80397284, -0.014198557, -0.11570901, -0.119375646, 0.86678624, -0.07592545, 0.15901124, 0.13217781, 0.33344522, -0.32767108, 0.13453324, -0.020400405, 0.40840533, 0.3446045) * inp_2_1_1;
    result1 += M4(0.3450504, -0.045115877, 0.013281048, 0.10087956, -0.38988405, -0.019466478, 0.17266515, -0.08783144, -0.22786523, 0.23257303, 0.27252597, 0.21590507, -0.08506474, -0.09710455, -0.10363389, 0.037841685) * inp_2_2_1;
    result1 += M4(0.20308098, -0.12260598, -0.13102902, 0.5709006, 0.11905197, 0.4215819, -0.17378806, 0.6797262, -0.07107202, -0.1165286, -0.114162385, -0.22918421, 0.009668374, -0.30314603, 0.0030586773, -0.067127645) * inp_2_0_2;
    result1 += M4(-0.14091639, -0.25862965, -0.41046402, 0.0265493, 0.12857519, -0.19370422, -0.53705454, -0.17755005, 0.55259013, -0.049422853, -0.5281355, -0.66532344, 0.092181236, 0.33064917, -0.098783374, -0.29772556) * inp_2_1_2;
    result1 += M4(0.28503618, -0.26095018, 0.0027395408, 0.09041908, -0.37205842, -0.09442149, -0.13915156, 0.029408524, -0.17640367, -0.33074576, -0.15068603, -0.021335468, -0.12860431, 0.09007625, -0.0031503378, 0.12279292) * inp_2_2_2;
    result2 += M4(-0.08915699, -0.048641402, 0.38152617, -0.13824622, 0.04471419, 0.08685652, 0.16746898, -0.28814307, -0.027325135, -0.01804587, 0.33626243, -0.14280313, -0.075398326, 0.01821226, 0.7690798, -0.646322) * inp_2_0_0;
    result2 += M4(0.18831542, -0.10204622, 0.25926566, -0.86468214, 0.05955053, -0.066889144, 0.02977939, -0.25903776, 0.11300459, -0.18731065, -0.52993065, 0.3608209, 0.12245523, 0.07330959, -0.41892043, 0.22201923) * inp_2_1_0;
    result2 += M4(0.0862389, 0.002677636, -0.26051217, -0.08857464, -0.05254402, -0.012127541, -0.072575584, 0.105828315, -0.12988113, 0.084714994, -0.3556804, -0.47511038, 0.0029231778, -0.09773931, -0.10162259, -0.06292242) * inp_2_2_0;
    result2 += M4(0.018831816, -0.10053978, -0.21246439, 0.5454062, -0.07761971, 0.03994474, -0.16626087, 0.557597, -0.14216326, 0.026110597, 0.34223464, 0.101579264, -0.12344776, -0.004369899, -0.21300544, -0.122270554) * inp_2_0_1;
    result2 += M4(-0.32077873, -0.21154444, 0.052507292, -0.020986278, -0.4472826, -0.55517286, -0.12711208, -0.067792825, -0.34572563, -0.6302574, 0.22528782, -0.13345963, -0.12564856, -0.005402623, 0.35790363, -0.22472906) * inp_2_1_1;
    result2 += M4(-0.17718025, -0.06450382, -0.0070408084, -0.09931414, 0.027983716, 0.64323074, 0.21260656, 0.10232006, 0.20476575, 1.1217618, 0.25997746, -0.014120487, 0.13366973, 0.053482767, -0.1338339, 0.16771111) * inp_2_2_1;
    result2 += M4(0.18764697, -0.11808432, 0.29023093, -0.0056704693, 0.2777759, 0.035065353, 0.22929038, 0.28566256, -0.035095572, -0.0999902, 0.031239359, 0.47703826, 0.11038589, -0.04061339, -0.23804644, 0.6890554) * inp_2_0_2;
    result2 += M4(0.1801824, -0.01425534, -0.18009688, -0.041762613, 0.27721497, -0.20981038, -0.056354474, 0.17339985, 0.4512012, 0.090623125, -0.6052129, 0.19855797, -0.008462989, -0.111882724, -0.17309222, 0.1887079) * inp_2_1_2;
    result2 += M4(-0.042714957, -0.039411876, -0.16299234, -0.2165535, 0.059518185, -0.09769014, -0.069273494, 0.12279215, -0.18083377, -0.14354007, 0.10303427, -0.044388946, -0.23596114, 0.1135659, 0.11025373, 0.1046252) * inp_2_2_2;
    result3 += M4(0.05408189, -0.14524606, -0.6317993, -0.08616806, 0.0037423284, -0.13396284, -0.39155498, -0.287743, 0.11605882, 0.08605926, -0.11554306, -0.17407061, 0.16102695, -0.03548805, -0.1090271, -0.06721492) * inp_2_0_0;
    result3 += M4(0.18290693, -0.054542407, -0.18441951, 0.017609566, 0.24810389, -0.05495703, -0.2147654, 0.21110456, 0.1328485, -0.13089707, 0.42305493, -0.12484147, 0.043054327, 0.038887396, -0.13707888, -0.060388047) * inp_2_1_0;
    result3 += M4(0.0100204395, 0.072750345, 0.18199478, 0.050062247, -0.19664961, -0.058188576, -0.025266131, 0.06744522, -0.25189972, 0.09546607, -0.19361758, -0.036326863, -0.1487404, -0.1155377, -0.100249045, 0.0748409) * inp_2_2_0;
    result3 += M4(0.0062320163, -0.08918839, -0.08597986, -0.8347945, 0.03916479, -0.10377675, -0.16838054, -0.48829705, -0.053100068, -0.057213906, 0.31830165, -0.25072813, -0.09325612, 0.347456, -0.057961103, 0.2164836) * inp_2_0_1;
    result3 += M4(0.43727615, 0.021820895, 0.17675701, 0.10402952, 0.4633409, -0.37739614, 0.44378936, 0.74730945, 0.49322805, 0.11530808, 0.724742, 1.1071451, -0.19654867, -0.031863403, 0.026411043, 0.14372276) * inp_2_1_1;
    result3 += M4(-0.06674296, -0.10389297, -0.087850176, 0.12253567, -0.8140261, 0.043483045, -0.22119004, -0.09235026, -1.0120689, 0.27985469, -0.14250195, -0.079729974, -0.3104111, 0.3114078, 0.11853506, -0.1199092) * inp_2_2_1;
    result3 += M4(-0.058938984, -0.17204534, 0.10707483, -0.21505642, 0.010012332, -0.32233042, 0.0017002752, -0.19580811, 0.03958405, 0.14319983, 0.21457538, -0.14023763, 0.16259749, 0.008545032, 0.4795341, -0.16727108) * inp_2_0_2;
    result3 += M4(0.12558942, 0.38154113, -0.0058778217, 0.1408944, 0.19829547, 0.36831278, -0.24536845, 0.24024609, 0.11480881, 0.5157801, -0.7287748, -0.26195034, 0.22229749, 0.2316151, -0.10804599, -0.100913174) * inp_2_1_2;
    result3 += M4(0.04075388, 0.028132558, -0.20164482, -0.07778749, -0.2256177, -0.16618569, -0.21691418, 0.02260486, 0.38607112, -0.38226244, -0.33986259, 0.009786242, 0.038327914, -0.40333882, 0.11947595, 0.17796184) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.29981595, 0.08479162, 0.10353729, -0.039407488, 0.60652864, -0.44859526, 0.14226046, 0.043885108, 0.1195986, 0.0027398453, 0.0375656, -0.0056671402, 0.0361915, 0.15120299, -0.04316957, -0.023400486) * inp_3_0_0;
    result0 += M4(-0.34204048, -0.1773738, -0.08486143, 0.029568886, -0.29737175, 0.3404375, -0.013433833, 0.083212696, 0.27123705, -0.116382845, -0.040335916, -0.03638435, 0.06710696, -0.112886176, 0.016749311, -0.017613333) * inp_3_1_0;
    result0 += M4(0.18679325, 0.13247882, -0.043143656, -0.0041000717, 0.40831473, -0.07050649, 0.20484173, -0.18855383, -0.075404584, 0.051029254, -0.038931906, 0.020974586, 0.27638808, -0.03542758, 0.066187985, -0.010545404) * inp_3_2_0;
    result0 += M4(-0.032183617, 0.20071179, 0.030636713, 0.010455403, 0.18795967, -0.22371954, -0.12924282, -0.07694066, -0.26472962, 7.6455035e-05, 0.009125632, -0.024207002, 0.014240364, -0.05393064, -0.06687173, -0.07694573) * inp_3_0_1;
    result0 += M4(0.20057039, -0.06534938, -0.015192958, 0.0013423279, -0.47348517, 0.4399422, 0.14472452, 0.045901198, -0.45938486, 0.35092303, 0.07502292, 0.006163849, -0.22371912, 0.05745709, 0.04367533, 0.07044706) * inp_3_1_1;
    result0 += M4(0.088198125, 0.12981884, -0.14975958, 0.06446331, -0.34924236, -0.3284684, -0.04269782, -0.16820829, -0.011006086, 0.06472297, -0.049192794, 0.12642114, -0.15242921, 0.092254214, 0.06783989, -0.012533203) * inp_3_2_1;
    result0 += M4(-0.1290627, 0.07037282, -0.029817443, 0.10866912, -0.10157413, 0.11137608, 0.18373732, -0.09730064, -0.094618015, -0.18824007, -0.12646204, 0.217245, -0.08316237, 0.078873985, 0.00020035193, 0.1214373) * inp_3_0_2;
    result0 += M4(-0.007690865, -0.055051353, 0.091759734, -0.51379937, 0.09930869, 0.062028944, -0.092219025, 0.37789115, 0.29413447, -0.017630758, -0.15502818, 1.3137076, -0.023144776, 0.0716385, -0.056687575, 0.3800797) * inp_3_1_2;
    result0 += M4(-0.03221597, 0.03226028, -0.011758442, -0.06889852, 0.04704128, -0.023542592, -0.108377725, -0.015334409, -0.21978165, -0.013432547, -0.039666913, 0.17233297, -0.06572121, 0.019339345, -0.1337208, 0.19733243) * inp_3_2_2;
    result1 += M4(0.05030484, -0.036418527, 0.057296444, 0.005424026, -0.06936095, -0.0040476914, 0.07198748, 0.15282734, -0.10090742, 0.1491926, 0.101861805, 0.08060924, 0.043906055, 0.044467337, 0.055831462, -0.007187609) * inp_3_0_0;
    result1 += M4(-0.110757284, -0.06000775, -0.110526815, -0.03644927, 0.028257146, 0.08964814, 0.06797712, 0.14546828, 0.046959024, -0.18685432, -0.069675095, -0.037088025, -0.25388914, -0.033076826, -6.804285e-05, 0.045275908) * inp_3_1_0;
    result1 += M4(-0.15998994, -0.121772714, 0.015259369, -0.03527559, -0.15460065, 0.16728027, 0.12049621, -0.10758813, 0.076974936, -0.073734276, -0.0054976316, -0.036773544, 0.20095322, -0.047229365, -0.045733966, -0.066075) * inp_3_2_0;
    result1 += M4(0.01439186, 0.0227077, -0.058539998, 0.012806278, 0.25858867, -0.03972138, 0.1441289, -0.32823688, -0.2684987, 0.15316808, -0.0029246234, 0.28080997, 0.17230266, 0.40180904, 0.00603277, 0.4366369) * inp_3_0_1;
    result1 += M4(-0.018903876, 0.008886108, 0.042762388, 0.055161975, -0.082908936, -0.04802539, 0.068609074, 0.13557215, 0.015581417, -0.015336427, -0.09929034, -0.17050505, -0.34764183, 0.027181787, -0.01916493, 0.052718762) * inp_3_1_1;
    result1 += M4(-0.010543884, -0.03623891, 0.013628709, -0.056190543, -0.14954102, -0.29348475, 0.07323661, -0.051791772, 0.047523644, -0.026649231, 0.03883426, -0.08354089, 0.46417052, -0.021370793, 0.056480188, 0.010524845) * inp_3_2_1;
    result1 += M4(0.20402008, 0.26026008, 0.039806865, -0.041860275, -0.023695754, 0.27086052, -0.07657426, 0.46226227, 0.05310978, -0.8177944, -0.21932831, 0.24915825, 0.14220208, 0.11500098, -0.097190276, 0.4017152) * inp_3_0_2;
    result1 += M4(-0.072296314, 0.2751493, 0.44890827, 0.033304412, -0.17747545, -0.1503951, -0.4171126, -0.24089909, 0.58836216, -0.5990722, -0.9558718, -0.20192465, -0.30150986, -0.13664748, -0.12977271, -0.032768384) * inp_3_1_2;
    result1 += M4(-0.34087652, 0.05245985, 0.09020469, 0.0003042247, -0.05240625, 0.05392474, -0.09816745, -0.024674105, 0.12686475, -0.29183713, -0.1911801, -0.054622635, 0.24926452, -0.17545857, -0.063232206, -0.02066085) * inp_3_2_2;
    result2 += M4(0.038568832, 0.05101703, 0.36203247, 0.079894155, 0.22814652, 0.119788125, 0.55835694, 0.2680337, 0.019760208, -0.011245943, -0.16479586, 0.27143493, -0.018142497, 0.029777791, 0.018019522, 0.36743516) * inp_3_0_0;
    result2 += M4(0.08834461, -0.14171962, -0.011152121, -0.076448366, -0.09446014, -0.021733815, 0.13570899, -0.677154, -0.095580235, -0.07053493, 0.06573956, 0.07799518, -0.0033705684, -0.11990328, -0.04013607, -0.025624124) * inp_3_1_0;
    result2 += M4(0.011438603, 0.2635853, 0.20182936, 0.11874491, 0.14407848, -0.10750414, 0.0664218, -0.12162487, 0.009833096, 0.15727568, 0.002970349, -0.05215333, 0.07432882, 0.11730669, 0.019069334, -0.124255985) * inp_3_2_0;
    result2 += M4(0.00487323, 0.012860814, -0.32457635, -0.03123153, 0.1302026, 0.23651595, -0.63434154, 0.23566003, 0.064924456, -0.1427023, 0.01843965, -0.082627274, 0.03074146, 0.076047376, -0.015379837, -0.06409153) * inp_3_0_1;
    result2 += M4(-0.12356751, -0.17957069, -0.25394168, -0.43332386, 0.17544995, -0.34231526, 0.12433807, 0.18528816, -0.13456544, 0.06573139, -0.015796702, 0.021387624, 0.07166373, -0.33330002, -0.010879758, 0.07383413) * inp_3_1_1;
    result2 += M4(-0.062222186, 0.016019195, -0.009028107, 0.041498583, -0.11095853, 0.046029434, -0.3130922, 0.15278478, 0.11899188, 0.2121416, 0.13047618, -0.2604484, -0.1557533, -0.13412923, -0.10562983, 0.018249474) * inp_3_2_1;
    result2 += M4(0.11344215, 0.026385128, -0.03294051, 0.4511552, -0.017555295, 0.113515235, 0.4485804, 0.20244433, 0.06115307, -0.105480276, 0.16125354, -0.14594662, 0.13311495, -0.007265977, 0.11247295, 0.029259892) * inp_3_0_2;
    result2 += M4(-0.4153529, -0.15416458, -0.07171252, 0.21415271, 0.31806123, -0.02439744, -0.48048607, -0.07812909, 0.6017744, 0.14431328, 0.028958462, 0.03959456, 0.17994264, -0.12813084, 0.11683122, -0.016404307) * inp_3_1_2;
    result2 += M4(-0.36448196, -0.033066574, 0.15549338, 0.1639372, -0.07710033, 0.01157906, 0.25034407, -0.10406419, 0.23215105, -0.09733477, -0.16725998, -0.04438118, 0.13215397, 0.17263982, -0.04006799, -0.051362325) * inp_3_2_2;
    result3 += M4(-0.0076827765, -0.03762603, -0.14761163, 0.0033819198, -0.105463825, -0.25575483, 0.104530096, 0.107428856, 0.03895535, -0.0079355845, 0.05358952, -0.0909194, -0.044407632, -0.060271785, -0.066896506, -0.11168358) * inp_3_0_0;
    result3 += M4(0.09786556, -0.09080986, -0.048254535, 0.072794, -0.03579354, 0.0053854394, -0.24811727, 0.14405112, -0.036982138, 0.07509243, 0.16259003, 0.07705804, 0.15707408, 0.013780789, -0.09939138, 0.007416227) * inp_3_1_0;
    result3 += M4(-0.22603756, 0.06071378, -0.011688613, 0.012340095, -0.080342725, 0.078247316, -0.23040958, 0.08989109, -0.041404113, -0.038825285, -0.05452357, -0.0205384, 0.06188775, 0.041521452, -0.062391236, 0.022400463) * inp_3_2_0;
    result3 += M4(-0.07234155, 0.23878773, 0.11058223, 0.00043188295, -0.07050178, 0.1776468, 0.29327017, -0.4463821, 0.1590366, -0.07633137, 0.0072935894, -0.2109276, 0.08124178, -0.07812041, 0.026295183, -0.3241448) * inp_3_0_1;
    result3 += M4(0.17650948, -0.07109841, -0.044359732, 0.19982456, 0.5994896, 0.089250706, 0.025922172, -0.046692755, 0.12652574, 0.13296476, 0.2577168, 0.20488179, 0.120691806, 0.016712373, -0.022060819, -0.5506231) * inp_3_1_1;
    result3 += M4(-0.13939674, 0.16023068, 0.27572402, 0.028573843, -0.13522133, 0.0064284354, -0.03889735, 0.023799652, -0.33180416, 0.039936233, -0.2919565, 0.15516147, 0.16321771, 0.087064445, 0.23955224, 0.024112333) * inp_3_2_1;
    result3 += M4(0.008082494, -0.22538792, -0.11775664, -0.14783655, -0.060087364, -0.39113414, 0.09214179, -0.105305836, 0.031685933, 0.28226635, -0.21704747, -0.044873346, 0.0877323, -0.12977603, -0.14932586, -0.11847294) * inp_3_0_2;
    result3 += M4(0.08609606, -0.50687945, 0.3117611, -0.09284311, -0.12173661, 0.11610889, -0.4222082, 0.04555307, 0.12685025, 0.505151, -0.4271449, 0.105824724, 0.11461788, 0.06709625, 0.025702914, -0.01678193) * inp_3_1_2;
    result3 += M4(-0.2137579, -0.18648578, 0.048719104, 0.05914316, 0.013463268, -0.14480196, 0.23094486, 0.1310227, -0.176288, 0.09920999, -0.24475347, -0.014531233, 0.003608605, 0.12984985, -0.056680944, 0.0666035) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.030088687, 0.00043581857, 0.0014223325, 0.0042292126);
    V4 result1 = V4(-0.003558771, -0.0037618156, -0.010154583, 0.026404155);
    V4 result2 = V4(0.053847115, 0.05404062, -0.030957144, 0.0049191383);
    V4 result3 = V4(-0.027602391, -0.022539226, -0.0050214445, 0.02418193);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.026531016, 0.14149705, -0.03408235, -0.009373434, -0.032891866, -0.03529107, -0.011928034, 0.017895611, -0.09197458, 0.20974994, -0.09962372, -0.09657784, -0.012246556, -0.045337427, -0.0046931813, -0.13197854) * inp_0_0_0;
    result0 += M4(-0.021643799, -0.13779393, 0.02311364, 0.02316899, -0.15543015, -0.034164675, -0.034207694, -0.008202321, 0.23972265, -0.20755157, 0.050843775, -0.036109004, -0.16083653, 0.41662163, 0.08746989, 0.16925444) * inp_0_1_0;
    result0 += M4(0.08781509, 0.05307721, 0.039812084, -0.004883639, -0.035581715, -0.013542845, -0.06380661, -0.03427307, 0.058002938, 0.12889253, 0.009532634, 0.08320367, 0.085952595, 0.030603055, 0.08093242, 0.018464975) * inp_0_2_0;
    result0 += M4(-0.011029569, -0.33086467, 0.15210406, -0.020048415, -0.009587726, -0.14137743, 0.07376948, 0.00880669, 0.04055507, 0.2543958, 0.095724285, 0.02035877, 0.04962919, -0.03746721, -0.07391014, -0.018034978) * inp_0_0_1;
    result0 += M4(-0.10692499, 0.37315306, -0.27184957, -0.021857718, -0.20653777, 0.040427912, -0.005181136, 0.0344204, -0.05662139, -0.17192544, -0.0045668934, 0.2094742, -0.57267433, 0.01667167, -0.27847376, -0.030192265) * inp_0_1_1;
    result0 += M4(0.031036276, -0.01574494, 0.08499704, 0.070121825, -0.0684673, 0.24610826, -0.05285056, 0.014751491, -0.17856383, -0.086605296, 0.008363791, -0.016441148, -0.57907146, -0.021513607, 0.096120335, 0.103892975) * inp_0_2_1;
    result0 += M4(0.05799867, -0.09663302, 0.26624385, 0.17778078, 0.021404382, 0.0645657, -0.031467073, -0.040513083, 0.059461225, 0.13269518, -0.07718488, -0.18978766, 0.08975638, -0.2599575, 0.03474315, 0.01841383) * inp_0_0_2;
    result0 += M4(0.35236368, -0.28100663, 0.41970688, 0.3788881, 0.11774504, 0.26077384, 0.13902584, -0.021370376, -0.33580285, -0.15795411, -0.16197738, -0.08781712, 0.095933974, 0.050001044, 0.053510647, -0.0038833562) * inp_0_1_2;
    result0 += M4(-0.40966234, -0.021080544, -0.1856843, -0.071815476, -0.11892621, 0.09630142, -0.03008396, -0.025100805, 0.21985099, 0.021895818, 0.08644768, 0.028388057, -0.316125, 0.08640144, -0.015193165, 0.018586451) * inp_0_2_2;
    result1 += M4(-0.024095535, -0.012235117, -0.002648537, 0.06206957, -0.0023099084, 0.2326032, 0.07871286, -0.013403667, -0.18933807, -0.0037664124, 0.07677851, -0.1473672, -0.3990989, -0.14893356, 0.04228576, 0.331601) * inp_0_0_0;
    result1 += M4(0.05202895, -0.09653539, 0.036825098, -0.052296214, 0.0015683784, 0.060310602, 0.036863912, 0.088116035, 0.2505437, -0.18822534, 0.114694126, -0.060135573, -0.5867803, -0.53755295, 0.085377686, -0.14386033) * inp_0_1_0;
    result1 += M4(0.030140247, 0.066777304, -0.042946793, 0.07508265, 0.0984948, -0.078235075, -0.030795336, 0.07000285, -0.018129526, 0.2606887, -0.002011007, 0.3361304, -0.24676512, -0.32365805, -0.22897384, 0.06838447) * inp_0_2_0;
    result1 += M4(-0.15974228, -0.005832013, -0.099436685, -0.03350154, -0.00033675483, 0.23803519, 0.08584708, 0.07179717, -0.025056913, -0.1930262, 0.12530151, -0.0719018, -0.16231202, -0.07204316, -0.009453103, 0.0054957373) * inp_0_0_1;
    result1 += M4(-0.082005225, 0.12785268, 0.38675663, -0.074965715, -0.14366429, 0.31311342, 0.17024903, 0.028459905, -0.118220046, -0.0021661858, -0.5481128, -0.6269196, -0.12957074, -0.3585606, 0.18422967, 0.3928634) * inp_0_1_1;
    result1 += M4(0.09734737, -0.12990928, -0.28358302, 0.19830482, 0.10475432, 0.12348779, 0.03686924, -0.18922809, -0.06356086, 0.5173837, 0.19496687, 0.3682141, -0.13132924, -0.33596313, 0.031126136, -0.026425911) * inp_0_2_1;
    result1 += M4(-0.3956107, -0.24370842, 0.41076368, 0.3146143, 0.058733154, 0.12426172, 0.043952446, 0.03395422, 0.09437952, -0.06676857, -0.09970933, 0.09194248, -0.057071153, -0.009867054, -0.0061228885, -0.026347246) * inp_0_0_2;
    result1 += M4(-0.18436246, 0.07645274, -1.0228072, -1.0878338, 0.21362966, 0.08699484, 0.10571401, 0.046896476, 0.24305534, -0.18768512, 0.09558934, 0.04033773, -0.15668981, -0.034821156, 0.045272265, -0.27636755) * inp_0_1_2;
    result1 += M4(-0.4627253, 0.3599676, 0.49605495, 0.36150825, 0.055285648, 0.14549689, 0.18598528, 0.082445994, 0.16595638, -0.17925428, 0.021708943, -0.13894026, 0.016410844, -0.13575898, 0.021682275, 0.13081974) * inp_0_2_2;
    result2 += M4(-0.069066964, 0.007830491, 0.03255672, -0.06548148, -0.024737986, -0.1057056, 0.08746869, 0.15982065, -0.10428447, 0.05314511, -0.09596219, 0.051785376, 0.13045844, 0.14524655, -0.12870659, -0.50578743) * inp_0_0_0;
    result2 += M4(0.040868632, 0.028164798, -0.009832622, 0.030487552, -0.059568737, -0.12797593, 0.21520622, 0.060800638, 0.08672962, -0.012058464, 0.110300556, 0.089393094, 0.027489504, 0.123898864, -0.2890939, -0.17446296) * inp_0_1_0;
    result2 += M4(0.16198319, -0.09944514, 0.03867683, 0.03758289, -0.26074204, -0.06616394, 0.12338078, 0.032348502, 0.025834939, -0.18368267, -0.14710598, 0.078817345, 0.15755117, -0.020055968, -0.042145632, -0.17801759) * inp_0_2_0;
    result2 += M4(0.3157678, 0.06725525, -0.024134565, -0.012617991, -0.021996727, -0.054384165, 0.046362247, 0.18222302, -0.18441898, -0.17129643, -0.22395337, -0.01669602, 0.16345531, 0.11708638, -0.4852835, -0.40437937) * inp_0_0_1;
    result2 += M4(-0.041840654, -0.32752013, 0.118765965, 0.041789774, -0.20593952, 0.08684281, -0.02301439, 0.16659129, 0.03687156, -0.18341239, -0.37264553, -0.1498102, 0.094311394, -0.24003802, -2.2047315, -0.41913527) * inp_0_1_1;
    result2 += M4(-0.29014674, 0.22589631, -0.04688896, 0.066481106, -0.14969143, -0.15867867, 0.19233978, -0.021700658, -0.102858014, 0.23100942, -0.3033441, 0.090039775, 0.16698016, 0.08901353, 0.15465702, -0.20250943) * inp_0_2_1;
    result2 += M4(-0.42207173, -0.10908387, -0.36398986, -0.7064423, -0.016146053, -0.0814654, 0.25626358, 0.2538402, 0.29006967, 0.05502566, -0.03871421, 0.1376918, -0.19469903, 0.021636816, -0.041106455, -0.2629209) * inp_0_0_2;
    result2 += M4(0.18813567, 1.5771466, -0.77155113, -0.29620472, -0.4317411, -0.077858835, -0.16737194, 0.31484592, -0.12254456, -0.25510728, 1.1225178, -0.30000594, 0.0448987, -0.18855637, -0.3953245, -0.5766973) * inp_0_1_2;
    result2 += M4(0.2297966, -0.46684515, -0.6481775, -0.16095057, 0.037504327, -0.2034723, 0.25460145, 0.0288377, -0.001746023, 0.12059946, 0.22407666, 0.16435598, 0.10089057, 0.002208633, -0.04864915, -0.22258939) * inp_0_2_2;
    result3 += M4(-0.005959858, 0.05919021, -0.030411903, -0.04025837, 0.01093117, -0.008651571, -0.01095097, 0.04935944, -0.06772359, -0.042416327, -0.116102554, 0.0038321724, 0.0034478307, 0.08266832, 0.0021408708, -0.056338593) * inp_0_0_0;
    result3 += M4(0.0022677686, -0.028477767, 0.03599066, 0.020192571, 0.0028703248, -0.03947322, 0.022122625, 0.09241678, 0.063194185, 0.043833293, 0.02162451, -0.09033039, 0.10714674, -0.081053555, -0.10411215, -0.06916655) * inp_0_1_0;
    result3 += M4(-0.033181373, 0.016638475, 0.027181936, -0.023142101, 0.07078166, 0.027140377, -0.04288673, 0.08089439, -0.13250425, 0.01925584, 0.094616875, 0.013257235, 0.17452364, 0.19277285, 0.02948897, -0.04146943) * inp_0_2_0;
    result3 += M4(-0.0057354923, 0.11928786, -0.06953872, -0.050327808, 0.02451121, -0.002517158, 0.07668741, 0.08039059, 0.09291715, 0.10315833, 0.01319752, -0.08158594, -0.098399416, 0.14370312, -0.06032128, -0.05818736) * inp_0_0_1;
    result3 += M4(0.19773535, -0.08216149, 0.0862632, 0.1778213, -0.0028167574, -0.12544884, 0.018341295, 0.28929415, 0.2036785, 0.053416885, 0.021984087, 0.078296445, -0.2506534, 0.33859938, 0.48580796, -0.08381625) * inp_0_1_1;
    result3 += M4(-0.1673712, 0.17444134, -0.056324407, -0.18722548, 0.09196774, 0.042889684, 0.006040457, 0.1641028, 0.18774001, 0.003830646, -0.12815917, 0.016674677, -0.18279122, 0.2094974, 0.0805086, 0.09734567) * inp_0_2_1;
    result3 += M4(-0.07757443, -0.91869384, 0.241511, -0.08756463, 0.03779917, -0.5436135, -0.06654644, 0.09046758, -0.01744723, -3.0275605, -0.0589334, 0.04055352, 0.0021870325, 0.1698566, 0.027292982, 0.112789616) * inp_0_0_2;
    result3 += M4(0.24747692, -0.7955319, 0.26396865, 0.89186335, 0.0588394, -0.84869105, 0.07575127, 0.060591646, -0.10156171, -3.0688777, -0.02048623, -0.16883835, -0.058211125, 0.16858885, -0.037033517, -0.12198588) * inp_0_1_2;
    result3 += M4(0.32129344, -0.03167974, -0.12540013, 0.21219599, 0.11220118, -0.68502456, 0.053491555, 0.26863563, 0.0056467648, -2.4288588, 0.12586354, -0.041398734, -0.053963665, 0.29245064, -0.025671389, 0.06991391) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0489454, 0.03246594, -0.0074302545, 0.021642933, -0.008892344, -0.007166717, 0.107386194, -0.0032470403, 0.07994943, -0.26257423, -0.083797716, 0.13753547, -0.025151394, 0.10090112, -0.015767936, 0.046738427) * inp_1_0_0;
    result0 += M4(0.092604406, 0.027353419, -0.06793646, 0.0060851728, -0.1489424, 0.4774179, -0.0280113, 0.040123593, -0.1867411, -0.5977258, -0.14895882, -0.04606397, 0.024728676, 0.15282455, -0.10974085, -0.0868754) * inp_1_1_0;
    result0 += M4(0.12504615, -0.016312566, -0.0037795545, -0.025182318, -0.081033885, 0.10266838, 0.0821986, 0.0020039326, 0.27128318, -0.054043047, -0.009042936, 0.023842612, 0.22860877, -0.004326021, 0.122049145, 0.1546792) * inp_1_2_0;
    result0 += M4(-0.021958433, -0.08005717, 0.07962653, 0.047043253, -0.15546063, 0.021446452, 0.040417757, 0.042549804, 0.010075185, -0.32549396, -0.00022250005, 0.032656692, 0.18096086, -0.023334976, -0.1035813, -0.09218108) * inp_1_0_1;
    result0 += M4(0.1815501, 0.20937902, -0.017188797, -0.063413486, -0.029560847, 0.1953118, 0.010164876, 0.12041099, 0.29565343, 0.08010249, 0.7420463, 0.2943821, 0.066832334, -0.3857619, 0.10920364, 0.08077311) * inp_1_1_1;
    result0 += M4(-0.39677832, -0.008932654, -0.09281547, -0.0549505, -0.563678, 0.06592322, 0.10217418, 0.080009855, 0.5002725, -0.023415979, -0.009512317, -0.011756344, 0.3957926, -0.33875817, -0.04272925, -0.05361525) * inp_1_2_1;
    result0 += M4(-0.1914313, 0.02395437, 0.0202771, -0.015921535, -0.00570451, 0.03103696, -0.012623716, -0.038925834, 0.021536335, -0.03584084, 0.0308516, 0.048683878, -0.041197564, -0.14022179, 0.070920505, 0.032782596) * inp_1_0_2;
    result0 += M4(-0.04225487, -0.0928244, 0.07328021, 0.09395603, -0.069183916, -0.036859106, -1.5336678e-05, 0.009022613, 0.22939079, 0.047247272, 0.024683958, 0.008454429, -0.005758444, -0.058679678, 0.071247764, 0.025207315) * inp_1_1_2;
    result0 += M4(0.3421259, 0.0063796286, 0.06547209, 0.04331158, -0.05788669, 0.10892488, -0.043576553, -0.007914403, 0.044538263, -0.17740618, -0.011920595, -0.0011275952, 0.038001314, -0.08687745, -0.015058118, -0.0065800976) * inp_1_2_2;
    result1 += M4(0.31280223, 0.081365906, -0.2586465, -0.095562726, -0.0040231687, 0.029521143, -0.035674017, 0.112086385, 0.0642671, -0.13771442, -0.031169351, -0.24954674, 0.06819212, -0.0060837115, -0.01687626, -0.035679612) * inp_1_0_0;
    result1 += M4(-0.101156116, -0.09591153, 0.1099995, -0.44181713, 0.06498, 0.21138741, 0.13007206, 0.088636205, -0.26207024, -0.28889984, 0.10840898, 0.10436311, 0.18939129, -0.045146696, 0.051099923, -0.39683473) * inp_1_1_0;
    result1 += M4(0.08895462, 0.17837685, -0.050450932, -0.20874251, 0.19267465, 0.0028926323, -0.12277047, 0.22732241, 0.03537748, -0.6135792, 0.13096261, -0.4456642, -0.19765644, -1.1546485, -0.21874984, 0.123767875) * inp_1_2_0;
    result1 += M4(0.20667343, 0.22002164, -0.08915607, 0.21400997, 0.008882614, -0.07664504, -0.014991874, 0.07915169, -0.2614302, 0.07963772, 0.020076128, 0.07042749, 0.054915976, -0.022769198, -0.024855431, -0.0015751733) * inp_1_0_1;
    result1 += M4(0.34336215, -0.0006817361, 0.13343395, -0.58625495, 0.17110088, 0.06815211, -0.22524925, 0.115299836, -0.44043174, -0.3119599, 0.41005757, -0.11105738, -0.14090306, 0.02846199, 0.0016579117, 0.14317873) * inp_1_1_1;
    result1 += M4(-0.18993244, -0.18052381, -0.02260583, 0.5150415, -0.07808713, 0.12521204, 0.09874436, 0.8369668, 0.102047265, -0.043160412, -0.19832197, -0.6846374, -0.023397554, -0.36136967, -0.43126848, -0.053991035) * inp_1_2_1;
    result1 += M4(0.14018013, -0.03696913, -0.097953096, 0.2019946, 0.021700919, -0.01587691, 0.0057303794, -0.007104569, -0.03326705, 0.09075631, 0.035798997, -0.024208788, 0.027132785, 0.033939872, -0.028607486, -0.06819161) * inp_1_0_2;
    result1 += M4(-0.026380677, 0.016989069, 0.11762846, 0.25800082, 0.0068367673, -0.109406516, -0.00045323846, 0.35537308, 0.045035493, 0.060603816, -0.011286468, -0.34430116, 0.06995962, 0.07401124, 0.03211484, -0.09446165) * inp_1_1_2;
    result1 += M4(-0.04134731, 0.14576916, 0.1303338, -0.2923826, 0.03829334, -0.3665781, -0.04243323, 0.3578415, -0.116896026, 0.18212149, -0.041926663, -0.21917541, 0.05997639, -0.028679935, -0.095668465, -0.29798222) * inp_1_2_2;
    result2 += M4(-0.08616264, -0.18807255, 0.31614906, 0.36914107, 0.09971342, 0.052116722, 0.0045208973, -0.15228057, 0.11896894, -0.08307731, 0.020640403, 0.17804903, 0.11867145, -0.100455135, -0.030220756, 0.18545477) * inp_1_0_0;
    result2 += M4(-0.07757235, 0.097787544, -0.0057817665, 0.06105257, 0.03528635, -0.0611392, 0.010144174, -0.0045424206, -0.38909283, -0.18923783, 0.08826971, 0.10532615, 0.0007623795, -0.10626851, -0.033593997, -0.010892403) * inp_1_1_0;
    result2 += M4(-0.018605327, -0.10819343, 0.17549643, 0.041473743, 0.08229028, 0.06631676, -0.008708616, 0.00039086852, -0.08554596, 0.1128784, 0.07515507, 0.08443981, -0.20083699, -0.019241793, -0.17629226, -0.055261075) * inp_1_2_0;
    result2 += M4(-0.08602267, -0.34486896, 0.39942402, 0.25494152, -0.0017674057, 0.06424033, -0.0060599903, -0.24613295, -0.13725169, 0.024959555, 0.36845192, -0.21610229, -0.119569525, -0.13856949, 0.07969358, 0.16028486) * inp_1_0_1;
    result2 += M4(0.16797014, -0.29974434, -0.254283, 0.20244823, 0.52817035, -0.1759029, -0.56655604, -0.8249045, -0.07130206, 0.3486788, 0.2042618, -0.062843665, -0.13830571, 0.089817755, 0.3586872, 0.5017827) * inp_1_1_1;
    result2 += M4(-0.04483387, 0.10622038, -0.13503344, 0.0027083831, 0.064782076, 0.06577839, 0.32672924, -0.31764534, -0.114206694, 0.03597314, -0.11664189, 0.012823181, 0.36581758, 0.13408716, -2.6565852, 0.27987075) * inp_1_2_1;
    result2 += M4(0.14579684, -0.15106326, -0.04393229, -0.12827158, 0.077695824, 0.014204735, -0.106099054, -0.25616235, -0.025251806, -0.040713202, -0.18458639, -0.059359334, -0.048656207, 0.012114746, 0.05720941, 0.06917207) * inp_1_0_2;
    result2 += M4(0.06090735, 0.18125427, 0.3734681, -0.0980949, 0.006557981, 0.029963424, 0.14897394, -0.46222347, -0.02592443, 0.14498058, -1.1304655, 0.1855128, -0.13953917, -0.103838705, -0.14956032, 0.28660294) * inp_1_1_2;
    result2 += M4(-0.031337384, 0.021688115, -0.1549965, -0.10108959, 0.10093219, -0.043544404, -2.24508, -0.3693585, -0.07985633, 0.023664014, 0.151641, 0.02392942, -0.08624757, -0.10655817, 0.0705643, 0.22353305) * inp_1_2_2;
    result3 += M4(0.01182759, -0.058927234, -0.12033607, -0.19289847, 0.018500514, 0.057073496, 0.0459615, -0.014865268, -0.11505269, -0.03938988, -0.05224365, -0.035754576, -0.026656963, -0.06352024, -0.04333868, -0.015892453) * inp_1_0_0;
    result3 += M4(0.18398061, 0.15863861, 0.03220451, -0.018305436, 0.041167155, 0.003518383, 0.02792899, -0.020176107, -0.009849091, 0.12970799, 0.015565135, -0.21825024, 0.014984828, 0.3615064, 0.048814103, 0.026795972) * inp_1_1_0;
    result3 += M4(-0.3719062, 0.09493918, -0.0421351, -0.080467865, -0.33345523, -0.046415634, 0.043457236, -0.044866063, -0.14820395, -0.112075634, -0.010652678, -0.1013934, -0.33086598, -0.25104028, -0.08052852, -0.087971225) * inp_1_2_0;
    result3 += M4(0.04074498, -0.65123755, 0.04487438, -0.18291967, 0.009918597, -0.09785619, 0.07113772, 0.017103184, -0.049147315, -1.0533491, 0.020527106, 0.005276246, -0.015217643, 0.20172451, -0.076186165, -0.07483353) * inp_1_0_1;
    result3 += M4(0.5143393, 0.3077907, 0.14512336, -0.27704522, -0.01664564, 0.085069686, 0.03183247, 0.046061408, -0.1339595, -1.1864556, -0.18391788, -0.04131573, 0.10666497, 0.43592727, -0.098399036, -0.019022863) * inp_1_1_1;
    result3 += M4(-0.08676661, -0.15329202, 0.03395247, 0.007491607, 0.06262347, -0.07393426, 0.02895081, 0.06137035, -0.06732346, -1.0473261, 0.009087277, -0.2108436, -0.05205389, -0.64258605, 0.016246399, -0.16709514) * inp_1_2_1;
    result3 += M4(-0.06639662, 0.39556292, -0.039094094, 0.016548054, 0.0032174096, -0.44729733, 0.0005131951, 0.046706244, 0.027115908, 0.13556781, 0.0024302548, -0.072251454, 0.025468772, -0.3853201, 0.059870616, 0.008452898) * inp_1_0_2;
    result3 += M4(0.21684264, -1.1829195, 0.051614296, 0.14477888, -0.101505086, -0.83207065, 0.0537546, 0.060239222, 0.07865775, 0.3628942, 0.056586865, -0.060589448, -0.007723413, -1.7828684, 0.092726976, 0.0011013247) * inp_1_1_2;
    result3 += M4(0.06078857, -0.15216479, 0.0072399955, -0.032632895, -0.07783431, 0.2682431, -0.010678667, 0.06735801, 0.030337648, -1.6595252, -0.030252563, -0.044095542, 2.435461e-05, -1.5572976, 0.019439586, -0.042515513) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.044091273, 0.10561542, 0.05500462, 0.04247584, -0.1415605, -0.15034316, 0.09766159, 0.14262691, -0.10164093, -0.08449407, 0.033414084, 0.029725797, -0.03329632, -0.07253248, -0.03539245, 0.001761691) * inp_2_0_0;
    result0 += M4(0.10933021, -0.1783371, -0.014239151, 0.06988873, -0.27770102, 0.21340545, -0.12710704, -0.10341676, -0.04719983, -0.13329817, -0.00048469656, 0.014077587, 0.011119598, -0.08923714, 0.028921532, 0.029968841) * inp_2_1_0;
    result0 += M4(-0.10123497, 0.14947343, -0.033788428, -0.038417444, -0.004309891, 0.013359872, 0.030069489, -0.013030726, -0.036527786, -0.01993159, -0.03564952, -0.0036167984, 0.051614955, -0.09574284, -0.016541338, 0.016165579) * inp_2_2_0;
    result0 += M4(0.004694128, 0.21138687, 0.029477207, 0.018455934, 0.10934661, 0.06042447, -0.198524, 0.5982816, -0.08322014, 0.042982258, -0.028366959, 0.055381026, -0.022317067, -0.09143038, -0.05058102, 0.01834386) * inp_2_0_1;
    result0 += M4(0.6090808, -0.20496392, 0.20569097, 0.1548709, 0.179026, -0.36301082, 0.26403546, 0.21013458, -0.17688785, 0.08780972, -0.034685608, 0.0020015151, 0.010160537, -0.35737395, 0.039695594, 0.04418427) * inp_2_1_1;
    result0 += M4(0.43910432, -0.06381077, 0.013718376, -0.008114591, -0.020560348, -0.059407704, 0.03341757, 0.09260655, -0.03520111, 0.11531454, -0.008200985, -0.013422671, 0.21517855, -0.2894904, -0.052331988, -0.091847725) * inp_2_2_1;
    result0 += M4(-0.102442704, 0.20111674, -0.051537544, -0.029561302, 0.10615592, 0.021350818, 0.28291374, 0.30454433, 0.08821489, 0.08032046, 0.0748627, 0.032032546, 0.08880545, -0.08239346, 0.09767358, 0.056148916) * inp_2_0_2;
    result0 += M4(-0.15448757, -0.16668093, 0.05210947, 0.023436464, -0.15909743, -0.04845882, -0.02807737, -0.14292781, 0.23761925, 0.05898981, 0.08963214, 0.010759872, 0.050391793, -0.328945, 0.30733955, 0.17621683) * inp_2_1_2;
    result0 += M4(0.2857378, -0.020469468, 0.01393453, -0.008733094, -0.04465231, 0.0555266, 0.011984298, -0.014735452, -0.12615208, 0.1322342, 0.0674489, 0.020487035, 0.3965553, -0.12345499, 0.078203954, 0.0017232271) * inp_2_2_2;
    result1 += M4(-0.02334883, 0.053151105, -0.0045943907, -0.06796948, 0.1804385, -0.17403568, -0.04248516, 0.3669218, -0.08899406, 0.057284724, 0.008081538, -0.022391267, 0.009460721, 0.0071210144, -0.021865385, -0.059945345) * inp_2_0_0;
    result1 += M4(-0.09751654, -0.33526647, 0.2911714, 0.13296504, -0.30156982, 0.49601164, 0.008857957, 0.42237875, -0.2049718, 0.1140601, 0.031710356, 0.022263056, -0.077177376, -0.099039175, -0.01648841, 0.0015732949) * inp_2_1_0;
    result1 += M4(0.08746276, -0.0024695024, 0.017536893, 0.22256763, 0.04237065, -0.132347, 0.03186618, 0.2248246, -0.14809012, 0.21317033, 0.045845732, 0.073828265, 0.05477433, -0.17580079, 0.017792158, -0.049741603) * inp_2_2_0;
    result1 += M4(0.18667053, -0.12268529, 0.013764415, -0.10068044, 0.19511244, 0.4047776, 0.31197897, 0.067983806, -0.13644882, 0.16352947, 0.11157543, 0.022712499, -0.13763516, 0.047382176, 0.07611798, -0.07466796) * inp_2_0_1;
    result1 += M4(0.23139845, 0.8158442, -0.14782336, -0.37645248, -0.08359563, -0.84882164, 0.12044248, -1.1721771, -0.021166846, -0.011841822, 0.15467928, 0.106497444, -0.17168194, 0.13191879, -0.07315275, -0.1094808) * inp_2_1_1;
    result1 += M4(-0.047739387, 0.22334933, 0.008805618, 0.15615125, 0.0913781, 0.06687676, -0.12821986, -0.15268843, -0.25232014, 0.22830732, 0.2266124, 0.067872375, -0.13033535, 0.022074956, 0.03900924, -0.40635413) * inp_2_2_1;
    result1 += M4(0.09925081, -0.044268925, 0.0059697526, 0.0069991876, -0.02507644, 0.20543094, 0.14792673, 0.5760718, -0.10785224, 0.10785271, 0.07629057, 0.16499592, -0.10152111, 0.11966707, 0.044946365, -0.10170724) * inp_2_0_2;
    result1 += M4(0.0013668131, 0.057833303, -0.076227926, 0.42432797, 0.1431441, 0.36559317, 0.039128803, -0.01223158, -0.12582938, 0.15485045, 0.035830893, -0.0053825146, -0.0022727526, 0.14823154, 0.18955496, -0.19610551) * inp_2_1_2;
    result1 += M4(0.04332419, 0.03772255, -0.043448914, -0.21003951, 0.04176331, -0.050904028, -0.0052363137, -0.036601648, -0.051562518, 0.28487304, 0.08056095, 0.062354736, -0.0064018676, -0.013914218, -0.14114927, -0.41868207) * inp_2_2_2;
    result2 += M4(0.18530485, 0.02008116, -0.010085877, 0.087090895, -0.10326905, 0.10686365, 0.024637105, -0.011463841, -0.009961747, 0.13677233, 0.10155162, -0.07993954, -0.037872344, -0.03769073, 0.011678187, 0.09620268) * inp_2_0_0;
    result2 += M4(0.18926162, 0.25961572, 0.040073875, -0.033742595, 0.006287816, -0.001858983, 0.16919431, 0.057687957, -0.029189652, 0.19377066, 0.21855503, 0.037940413, -0.03654901, -0.02331652, 0.053066764, 0.0794941) * inp_2_1_0;
    result2 += M4(-0.25094795, 0.12639181, 0.071853235, 0.15712602, 0.107473545, 0.055317022, -0.03669796, -0.00027815244, -0.11318835, 0.1059144, 0.18670964, 0.02333761, 0.016607145, 0.04957298, -0.046684843, 0.062516786) * inp_2_2_0;
    result2 += M4(0.0349839, -0.048843194, -0.05048048, 0.022075243, -0.24434388, -0.27657348, 0.10916958, 0.123027846, -0.018905153, 0.13644175, 0.13939321, -0.07084623, -0.21737969, 0.052076783, 0.054009333, 0.07729741) * inp_2_0_1;
    result2 += M4(-0.102231495, 0.18794917, -0.10844631, -0.19499254, 0.014000302, -0.06492171, 0.08597915, -0.13671966, -0.19111235, 0.1701637, 0.23999888, -0.040120628, -0.45772642, 0.1605487, 0.12865187, 0.11572304) * inp_2_1_1;
    result2 += M4(-0.0512223, -0.08341112, -0.11504715, -0.055802345, 0.01694343, -0.019653134, -0.07159168, -0.025840659, -0.3146684, 0.26224878, 0.25142708, -0.08474749, -0.21887939, 0.22791353, 0.11990678, 0.05766208) * inp_2_2_1;
    result2 += M4(0.19950183, 0.021307478, 0.10963274, 0.037098266, -0.09418343, 0.029745787, -0.098435245, -0.0009150262, -0.15622094, 0.04874757, 0.063664585, -0.017053274, -0.08291942, 0.094769426, -0.02289701, 0.041204173) * inp_2_0_2;
    result2 += M4(-0.037837736, 0.16494627, 0.3325645, -0.13938121, -0.22181143, 0.11319139, -0.34316805, -0.10740539, 0.026151313, 0.12590636, 0.039685618, -0.144486, -0.54042, 0.1141294, 0.1095311, 0.16351539) * inp_2_1_2;
    result2 += M4(-0.07533317, -0.035648983, -0.0456683, 0.03926509, 0.015553118, -0.037287753, 0.26352018, 0.08351518, 0.098328136, 0.04777241, -0.048314527, -0.17884871, -0.4425296, 0.060975846, -0.51669645, 0.08728125) * inp_2_2_2;
    result3 += M4(-0.08578404, -0.04394842, 0.07120439, 0.10636415, -0.0379473, -0.014665134, -0.03434255, 0.110576846, 0.03070998, -0.012012038, 0.044947796, -0.022231396, 0.018567042, -0.045624692, -0.020235943, -0.067112185) * inp_2_0_0;
    result3 += M4(-0.30282158, 0.00089118007, 0.09129508, 0.030207366, 0.0025334964, 0.08565031, 0.010396128, 0.13714889, 0.06663254, -0.008104792, -0.0010407169, -0.083958134, 0.019075027, 0.036181662, 0.00672236, -0.014447171) * inp_2_1_0;
    result3 += M4(-0.055777613, -0.10574194, -0.014888372, -0.071069255, 0.00358646, -0.033494726, 0.047486484, 0.013864078, 0.07184346, 0.019898027, -0.009584092, -0.086502716, 0.041160617, -0.0020067578, -0.0044184257, -0.054009844) * inp_2_2_0;
    result3 += M4(0.08118311, 0.27440968, 0.056390423, 0.051192712, -0.30970252, -0.008652094, 0.27704966, 0.08502104, -0.03140728, -0.00077260117, 0.0078001316, 0.03806771, -0.0016599617, 0.020238128, -0.023280308, -0.019889595) * inp_2_0_1;
    result3 += M4(0.4184462, 0.27938032, 0.3301115, -0.033098593, 0.22933458, 0.24051042, 0.105080515, -0.08294236, -0.036039807, 0.010861702, -0.034707937, -0.016050413, -0.014596901, -0.04582149, -0.022554517, -0.056890402) * inp_2_1_1;
    result3 += M4(0.20065787, 0.21924925, 0.015003556, 0.023549939, 0.03331118, 0.04633362, 0.014204791, 0.053575292, 0.07560913, -0.032506462, -0.007213248, 0.14008434, 0.09908854, -0.012538436, -0.022591418, 0.042678405) * inp_2_2_1;
    result3 += M4(0.015506386, -0.014412058, -0.041795243, -0.019207438, -0.016518949, -0.33744946, -0.02698474, 0.06501642, 0.010313641, 0.40108955, 0.044133708, -0.0037359546, -0.029331641, -0.0948738, 0.09084081, 0.017892849) * inp_2_0_2;
    result3 += M4(0.0171421, -0.5104764, 0.061413683, 0.08317072, 0.06836414, -0.66035527, 0.111000545, 0.10464636, 0.044507816, -0.034587175, 0.014828402, -0.08166547, -0.0029506197, -0.5659538, 0.3374452, 0.018425213) * inp_2_1_2;
    result3 += M4(0.057054996, -0.38642985, 0.05031868, -0.011288378, 0.0120353475, -0.021646751, -0.00325405, 0.049497362, 0.0937925, 1.0807732, 0.045480423, -0.16825274, -0.040050518, -0.93343216, 0.029383281, -0.08971177) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.07702135, -0.047173455, 0.056851774, 0.04991724, -0.004515465, 0.14200677, -0.15369886, 0.005540287, -0.053727385, 0.050693847, 0.108256124, 0.021634847, 0.118071534, -0.07216062, 0.006319368, 0.015926955) * inp_3_0_0;
    result0 += M4(-0.014662721, -0.22091785, 0.057544284, 0.04685061, 0.44315916, -0.28983814, 0.13643695, 0.002958061, -0.1312377, 0.27353612, 0.0014028403, 0.04686358, 0.06303282, -0.010290723, -0.078632966, -0.095821865) * inp_3_1_0;
    result0 += M4(0.0099342605, 0.0032643662, 0.009720145, 0.02092116, -0.28627637, -0.12736265, -0.15069024, -0.04599955, -0.13955876, 0.13552196, 0.02415069, 0.040008865, 0.16803212, -0.01715657, -0.019108934, -0.0075294417) * inp_3_2_0;
    result0 += M4(-0.099369526, -0.19393426, 0.19502118, -0.39496928, 0.15195851, 0.22718893, -0.006891142, -0.03943061, -0.29912865, 0.10484225, 0.031218126, 0.101274066, 0.0163546, -0.10393988, 0.027530191, -0.08922525) * inp_3_0_1;
    result0 += M4(-0.1066994, 0.38066468, 0.030137045, 0.032237165, 0.048004787, -0.09058094, 0.18836215, 0.064894326, -0.34952703, 0.060263727, 0.10113523, 0.10961485, -0.29699746, 0.030845895, 0.20064937, 0.44483593) * inp_3_1_1;
    result0 += M4(0.18559603, -0.0017399933, -0.038787097, -0.03803812, 0.028822772, 0.10358792, 0.049365267, 0.0011154216, -0.24139282, 0.22095239, 0.07579274, 0.07377253, -0.13408972, 0.138283, -0.10453357, -0.17217694) * inp_3_2_1;
    result0 += M4(0.07568411, 0.23038787, -0.038234964, -0.11479006, 0.023544438, 0.17749931, -0.059627004, 0.007198064, -0.13148086, 0.13972472, 0.062043086, 0.05064492, -0.077595145, -0.08415501, 0.020427587, 0.103069365) * inp_3_0_2;
    result0 += M4(-0.3829285, 0.23320325, -0.020644195, 0.036796704, 0.15351565, 0.06343193, -0.06369807, -0.00067077787, -0.16593239, 0.043451283, 0.0726709, 0.026916752, 0.07632044, 0.123380296, 0.018660365, -0.010134597) * inp_3_1_2;
    result0 += M4(-0.02169082, -0.061660253, -0.033631105, -0.010094381, 0.015869845, 0.064655125, -0.03108349, -0.0359891, -0.21973817, 0.0866318, 0.034991536, 0.056296837, 0.21147147, -0.028638326, 0.06132095, 0.1253905) * inp_3_2_2;
    result1 += M4(-0.078560404, 0.024452245, 0.017198475, 0.083636284, 0.1499823, 0.091942705, 0.04946241, -0.16390257, -0.03465733, 0.15355618, -0.019041367, 0.087423034, 0.016161857, 0.024927914, 0.015237623, -0.004908244) * inp_3_0_0;
    result1 += M4(0.015229838, -0.43030053, -0.06504872, -0.15851898, -0.22241047, 0.40870163, -0.22698964, -0.082600035, 0.070665374, -0.07190759, 0.012074907, 0.040961135, 0.037730552, 0.015716944, -0.12906452, -0.20827465) * inp_3_1_0;
    result1 += M4(0.04006578, -0.2329937, -0.027237697, -0.16890515, 0.09409773, -0.7820239, 0.24835198, 0.27361205, -0.09171567, 0.29896823, 0.0108709745, 0.26671338, 0.14569631, -0.94030184, -0.10764134, -0.11632664) * inp_3_2_0;
    result1 += M4(0.073148675, -0.13566159, -0.026632579, 0.27240703, 0.022210881, -0.022110289, -0.004233961, 0.10110507, -0.07211292, -0.05977001, 0.061294794, 0.05284198, 0.026372893, 0.03655667, -0.017462745, 0.029913751) * inp_3_0_1;
    result1 += M4(0.09900184, -0.17604668, 0.59742445, -0.022330804, -0.009130549, -0.13892762, 0.071523935, -0.053862043, 0.049523912, 0.266766, 0.027931873, 0.012621306, -0.33338422, -0.4069136, 0.5405035, -0.049402595) * inp_3_1_1;
    result1 += M4(0.040861424, -0.18750823, -3.437655e-05, -0.60602546, 0.10529722, 0.096542425, -0.12986489, 0.039662503, 0.059367016, 0.24121101, 0.13311791, 0.39227143, 0.21630302, -0.40005246, -0.19837436, -0.34776947) * inp_3_2_1;
    result1 += M4(0.15413137, -0.15396315, -0.06794447, -0.46887136, -0.010977957, 0.043069378, 0.031587992, 0.11555577, -0.024363935, 0.021863947, 0.06335766, 0.08910514, -0.040375423, -0.02427892, 0.020275779, -0.08582649) * inp_3_0_2;
    result1 += M4(-0.019348832, 0.16890514, 0.39499733, -0.46249092, 0.13165875, 0.11090268, 0.00054059364, -0.10451396, 0.082327835, 0.17770997, -0.005930517, 0.21158841, 0.124659345, -0.011746905, 0.06518135, -0.39385143) * inp_3_1_2;
    result1 += M4(-0.03198344, -0.03234507, -0.03182436, -0.16495386, 0.11049836, 0.23218688, 0.08205301, -0.039854757, 0.047115535, 0.1522533, 0.10579673, 0.17154214, -0.01617147, -0.22346844, 0.0026459792, -0.2272494) * inp_3_2_2;
    result2 += M4(-0.014788776, -0.097299494, 0.06374902, 0.08343565, -0.2407262, -0.1299788, 0.15507959, 0.33916995, 0.05570457, -0.03237658, 0.10200856, -0.10232318, 0.0020188233, -0.0046319943, -0.057895903, -0.015685374) * inp_3_0_0;
    result2 += M4(-0.04575246, -0.16273052, -0.19640328, -0.011676443, 0.20955925, 0.08427048, 0.09114659, 0.071907915, 0.15673539, -0.052214466, 0.045732833, -0.11530082, 0.024185583, -0.06869802, -0.22374097, -0.04205713) * inp_3_1_0;
    result2 += M4(-0.009695698, 0.019330656, 0.11648143, 0.0010618772, -0.0025622163, -0.3200936, 0.061774686, 0.13433622, 0.05946624, -0.10757357, -0.049345464, -0.06494205, -0.014471489, -0.031551197, 0.036864713, -0.047126982) * inp_3_2_0;
    result2 += M4(0.122257106, -0.21224646, 0.123961985, 0.028875798, 0.074533895, 0.050204404, -0.22114938, 0.093353204, 0.0124560315, -0.010212206, 0.10011685, -0.53507394, -0.008224416, 0.041957676, -0.026789673, -0.11523817) * inp_3_0_1;
    result2 += M4(0.11348131, 0.2530205, -0.08672187, 0.15662247, 0.06924226, -0.111318596, -1.6940074, -0.025983036, 0.3199249, -0.24233054, -0.06516824, -0.18570362, 0.10485734, 0.16528638, -0.20974483, 0.07212372) * inp_3_1_1;
    result2 += M4(-0.013255482, -0.050169863, 0.1171984, 0.069706425, -0.13145992, -0.31462237, -0.06920864, 0.034411836, 0.12303996, 0.012460509, 0.12174322, -0.0451545, 0.024120945, -0.41570276, 0.057623502, 0.14194497) * inp_3_2_1;
    result2 += M4(0.27212957, -0.17327394, -0.25328717, 0.049512923, -0.07873948, 0.05940097, 0.28807586, -0.063978344, 0.13313496, -0.056335732, 0.043201815, -0.1745648, 0.100867264, 0.052318197, -0.12958506, 0.014139812) * inp_3_0_2;
    result2 += M4(0.06858794, -0.21732369, 0.044142716, 0.1266313, -0.010190993, 0.05100564, -0.24016464, 0.021460006, 0.058898836, -0.10272668, 0.4998374, -0.20468248, 0.013989977, 0.105433196, -1.8818066, -0.0033388794) * inp_3_1_2;
    result2 += M4(-0.008106786, 0.002662757, -0.20098647, -0.0057766703, -0.027982473, -0.024617512, 0.27314004, 0.10320479, 0.1421581, -0.0027907614, 0.10003379, -0.09120799, 0.19952686, -0.09407717, -0.053313565, -0.16282998) * inp_3_2_2;
    result3 += M4(0.10662368, -0.020305347, 0.08345279, 0.019825056, -0.023836737, -0.07080022, -0.064941555, -0.09904274, 0.03161744, 0.02208967, 0.058996767, 0.009792112, -0.0066204495, -0.0042836084, 0.0028476454, -0.011025089) * inp_3_0_0;
    result3 += M4(-0.13806087, -0.0135666495, 0.045808673, 0.032332245, 0.16826896, 0.2412841, 0.05174806, -0.012088622, 0.113242075, 0.05950429, 0.018186377, 0.0008101049, -0.07476873, 0.012221078, -0.062293403, 0.052107498) * inp_3_1_0;
    result3 += M4(0.065562, 0.06448307, 0.0036162247, -0.0216164, -0.064745165, -0.11150192, 0.029487167, 0.13543838, -0.02389059, -0.036567464, 0.02424802, -0.009757915, 0.025162159, 0.028933233, -0.047835503, 0.01132203) * inp_3_2_0;
    result3 += M4(-0.4189817, -0.2530741, 0.31786177, -0.020186769, 0.0013447289, -0.15913592, -0.008753383, -0.0014648885, 0.061237436, 0.0780224, 0.07974613, 0.098342694, 0.024792772, 0.051071204, 0.10196163, 0.09691684) * inp_3_0_1;
    result3 += M4(0.057790294, -0.006053428, -0.034081146, 0.501383, -0.16617168, 0.32060358, 0.17552093, -0.15935513, -0.034556814, -0.075480476, 0.07392353, 0.10688491, 0.019885262, -0.24104062, -0.06222905, 0.45502567) * inp_3_1_1;
    result3 += M4(-0.095958546, 0.03332919, 0.0337392, 0.05863896, -0.1340351, -0.23134743, -0.031001583, -0.25551116, 0.18178186, -0.022102011, 0.078823484, -0.021247858, -0.61536616, 0.06201155, 0.18567991, -0.2572086) * inp_3_2_1;
    result3 += M4(0.02500553, 0.33285877, 0.027133808, -0.05250395, -0.018655682, 0.19463651, -0.030475758, -0.115560345, 0.0073730387, 0.35513666, 0.036954243, 0.035684247, -0.028580898, 0.11375027, 0.005998612, 0.09181808) * inp_3_0_2;
    result3 += M4(-0.06987418, 1.0611236, -0.011004012, 0.20015031, -0.055213984, -0.78496677, -0.09662532, -0.07980371, 0.05997586, -0.75603837, 0.026378483, 0.0018177858, -0.061537698, -1.9440514, 0.14807796, 0.10538687) * inp_3_1_2;
    result3 += M4(0.0033482402, 0.28955236, -0.019114425, -0.046571683, 0.01308033, 0.26657477, -0.027466815, -0.13173816, 0.028478196, -0.3122088, 0.030188862, 0.058563493, 0.018381558, -1.9735082, -0.036997806, 0.085196234) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.010940642, -0.007458092, -0.0014401751, -0.0014800249);
    V4 result1 = V4(-0.00531824, 0.005861235, 0.0077019758, 0.024667345);
    V4 result2 = V4(-0.0015913217, 0.005461949, -0.008620716, 0.007449439);
    V4 result3 = V4(-0.011260181, -0.0050352244, 0.014343495, 0.007901238);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0009396995, -0.28867579, 0.3234324, 0.016869215, 0.11738321, 0.049662385, -0.0074989493, 0.03444325, 0.04131321, 0.031147983, -0.0637545, 0.013491354, 0.08167893, 0.0937407, 0.011652944, 0.0048728567) * inp_0_0_0;
    result0 += M4(-0.3144848, -0.56520027, 0.16317, -0.18022968, 0.1727257, -0.17188634, -0.11693722, -0.0150430435, -0.13118401, -0.0028194475, -0.28944314, 0.07073625, -0.008259624, -0.3186699, 0.12966913, -0.17166786) * inp_0_1_0;
    result0 += M4(-0.1363064, -0.1162504, -0.06452534, 0.024419742, 0.043473274, -0.003152518, 0.15503308, 0.0776266, -0.14139959, 0.0070745256, -0.16220851, -0.10831952, -0.017021121, -0.05803817, 0.06465668, 0.0014729316) * inp_0_2_0;
    result0 += M4(-0.04063254, 0.00051913975, -0.28165317, -0.038160216, -0.006568366, 0.15266497, -0.16128428, 0.26307434, 0.04314318, -0.10979676, 0.037714794, 0.07751792, -0.07527513, -0.10579601, 0.0153882, 0.19842654) * inp_0_0_1;
    result0 += M4(-0.018143198, 0.16679646, -0.35743713, -0.07714764, 0.0012710539, -0.0716838, 0.046495583, -0.12284854, -0.21342576, -0.031209914, 0.35908732, -0.093052685, 0.067279756, 0.3121188, 0.30202505, -0.3951582) * inp_0_1_1;
    result0 += M4(0.07099274, 0.1246473, -0.042736128, -0.037486814, -0.16858174, -0.04285622, 0.16141495, -0.18088385, -0.020078115, -0.1514481, 0.0911851, -0.048489854, -0.022614287, 0.18340985, -0.01443675, 0.28717208) * inp_0_2_1;
    result0 += M4(-0.04088098, -0.032376908, -0.16315374, -0.040205896, 0.075390354, -0.091257386, 0.26792225, 0.19660519, 0.018785693, -0.002340449, 0.024419257, -0.028070021, -0.17847997, 0.042525526, -0.062499058, 0.035192262) * inp_0_0_2;
    result0 += M4(-0.06120251, 0.011839888, -0.05853513, -0.035178892, 0.09825105, 0.08487374, -0.19977976, 0.035258897, 0.23623426, 0.051795997, 0.1285557, 0.004798888, -0.008873055, 0.0066452804, -0.3338501, -0.07147906) * inp_0_1_2;
    result0 += M4(-0.16736741, -0.038379207, -0.12046734, -0.023765992, 0.108759575, 0.27253762, -0.019972498, -0.18086624, 0.033382446, 0.027526071, 0.039123606, 0.12093021, -0.1719571, -0.24661043, -0.13439614, -0.07109872) * inp_0_2_2;
    result1 += M4(0.16155516, 0.016916778, -0.06672495, -0.15938246, -0.042306654, -0.04126758, 0.03847722, 0.08089271, 0.017573226, -0.06999556, -0.028036935, -0.12195468, 0.013343345, 0.08164299, 0.004129838, -0.104734406) * inp_0_0_0;
    result1 += M4(0.19691175, 0.011908598, -0.022540664, 0.06935639, 0.018826062, -0.039019015, 0.015601812, -0.335617, 0.113748536, 0.021108741, 0.04098599, 0.031237137, 0.022698537, 0.024150841, -0.018096661, -0.05493899) * inp_0_1_0;
    result1 += M4(-0.055941567, -0.012520239, -0.007513877, -0.000480139, 0.008105068, -0.036718816, -0.0014955832, -0.37623873, -0.11024984, -0.046170037, 0.015776772, -0.13942923, 0.07027844, 0.11778767, -0.013779534, 0.1733789) * inp_0_2_0;
    result1 += M4(-0.25791758, -0.1072597, -0.14884533, -0.14137243, 0.04578965, 0.02736086, 0.047385324, 0.2537449, -0.02001328, 0.01916891, 0.028677084, -0.023148272, -0.015777085, 0.22348651, -0.042444143, 0.16079083) * inp_0_0_1;
    result1 += M4(-0.32756588, 0.07629363, -0.0051711616, -0.10258642, -0.18446183, -0.20146303, -0.071917474, -0.3491128, -0.060666475, 0.5062367, 0.061995354, -0.0059514474, 0.008664679, 0.24949953, -0.08661709, -0.08109132) * inp_0_1_1;
    result1 += M4(0.03459016, 0.012238584, 0.015706768, 0.06092077, -0.13221559, -0.038039174, -0.0035199772, 0.033995792, -0.0696938, -0.007603377, -0.011690637, 0.09733337, 0.16996683, 0.061477225, 0.008199595, -0.42171845) * inp_0_2_1;
    result1 += M4(-0.1730116, -0.025406182, -0.041772727, 0.11894828, 0.11154248, -0.056143183, 0.008346732, 0.1770569, -0.055187784, 0.011596113, 0.12115346, 0.0137475515, -0.0073867925, -0.037291814, -0.142309, -0.20440027) * inp_0_0_2;
    result1 += M4(0.07198259, 0.035609964, -0.023854652, 0.032728016, -0.134454, -0.040601972, -0.008316877, 0.013468345, 0.09770505, -0.0013936196, 0.06914038, 0.058684304, -0.1492671, 0.10045538, -0.2152392, 0.21862757) * inp_0_1_2;
    result1 += M4(-0.042219304, 0.029263102, 0.016166922, 0.014212735, 0.046498187, 0.02767568, -0.09563163, 0.08856603, 0.09374106, -0.0049263653, -0.0411828, 0.14616404, -0.19825958, -0.025352031, 0.1449675, -0.32300702) * inp_0_2_2;
    result2 += M4(-0.095071815, 0.083598725, -0.0018831115, -0.035061255, -0.03549174, 0.066392854, -0.06262571, -0.06117987, -0.05399039, 0.13420272, -0.112526365, 0.04535143, 0.021290755, 0.006056584, 0.04655935, -0.03369443) * inp_0_0_0;
    result2 += M4(-0.06060313, -0.12276815, 0.011065863, 0.02174607, 0.12084705, 0.013895113, -0.04452534, 0.037134312, 0.04477374, -0.042904165, -0.2003196, -0.09694884, 0.11819576, -0.104722105, 0.2159143, 0.054055497) * inp_0_1_0;
    result2 += M4(-0.057968974, 0.026876051, -0.009366794, 0.055938456, 0.00074840005, 0.11579835, -0.08905066, 0.05283402, -0.11209632, 0.1114416, -0.022093115, -0.12501259, 0.10558433, -0.1385589, 0.0045983363, -0.00950755) * inp_0_2_0;
    result2 += M4(-0.29713133, 0.4064783, -0.12264517, -0.018064477, 0.11093556, -0.17752558, -0.074912064, -0.11880993, 0.0230678, -0.11564795, -0.06201119, 0.13438775, 0.13893484, -0.10571954, 0.021241521, -0.1379942) * inp_0_0_1;
    result2 += M4(-0.10652643, -0.28270748, 0.04264324, -0.12370449, -0.1422284, 0.110229336, -0.08331526, -0.1690065, 0.39905602, -0.13282093, -0.05342401, 0.006454396, -0.095858775, -0.1850722, 0.5437013, 0.09975173) * inp_0_1_1;
    result2 += M4(-0.093278535, 0.02935191, 0.030267218, 0.056200836, 0.05051806, -0.08195487, 0.019008167, -0.1480404, 0.058474265, -0.09578655, 0.031890243, 0.012282642, -0.068268254, 0.11595568, -0.07370751, 0.12459156) * inp_0_2_1;
    result2 += M4(-0.1340018, -0.027824575, -0.013741695, -0.005571261, 0.17029749, -0.037903447, 0.033392347, -0.08550912, 0.0291264, 0.038922362, -0.058622967, -0.0145487515, -0.03603651, 0.10764261, 0.006474951, 0.14540245) * inp_0_0_2;
    result2 += M4(-0.057770733, -0.13884467, 0.02569518, -0.049791217, -0.0448613, 0.5470703, -0.09150967, -0.05156035, 0.012491817, -0.04622002, 0.022174485, 0.0025700063, -0.19051309, -0.13873088, 0.0032864376, -0.28450677) * inp_0_1_2;
    result2 += M4(-0.04392129, -0.0032741223, 0.02747425, 0.05161223, 0.03413998, 0.028681148, 0.07275346, -0.09360254, 0.0070705237, 0.08660088, -0.039555177, 0.12283673, -0.09360033, -0.04030416, 0.09890865, -0.12509057) * inp_0_2_2;
    result3 += M4(-0.07755642, -0.026481537, -0.0042341924, -0.0036541908, 0.035759088, 0.16477926, -0.06468468, -0.013049225, -0.0069128587, -0.066260606, -0.08748724, -0.03447684, 0.034696884, 0.030788835, 0.06403184, 0.022974344) * inp_0_0_0;
    result3 += M4(0.08026422, 0.33435875, 0.03157695, 0.05133297, -0.070788, 0.1703505, 0.0063626403, -0.014470714, 0.03373273, 0.13136084, 0.07260824, 0.008595405, -0.035588715, 0.0409869, 0.016974512, 0.04616372) * inp_0_1_0;
    result3 += M4(0.014000864, -0.10732984, -0.03870244, 0.014327465, -0.070289336, 0.058287654, -0.094292514, -0.31869507, -0.09423419, -0.10942814, 0.03352519, -0.4731136, 0.04041046, -0.121634275, 0.06805863, 0.049590465) * inp_0_2_0;
    result3 += M4(-0.026895989, -0.43534464, -0.06007477, -0.13612387, 0.06400314, 0.16071211, 0.00415859, -0.05720182, 0.017188096, 0.036513712, 0.13094874, -0.0018137038, 0.08187011, -0.060779434, 0.05083097, -0.028929213) * inp_0_0_1;
    result3 += M4(0.12184974, -0.2429675, 0.058939412, -0.031289887, -0.077877484, 0.229774, -0.16025932, -0.122495055, -0.21135624, -0.29495844, 0.18684837, 0.09016289, -0.05922876, -0.2330611, -0.078943156, -0.06327038) * inp_0_1_1;
    result3 += M4(0.013841495, -0.073236, -0.0070284097, -0.054915216, -0.07482543, 0.40413347, -0.010587531, 0.22356334, 0.038746122, -0.025127545, 0.09852682, 0.10504699, 0.08761572, -0.0053894063, -0.07926017, -0.32185817) * inp_0_2_1;
    result3 += M4(-0.009348644, -0.15296687, -0.036343876, -0.009855661, 0.022167424, 0.16173023, -0.02288559, 0.05460423, -0.007610909, 0.009252712, 0.08184162, 0.03355595, -0.010368318, -0.120460145, -0.034349427, -0.011182523) * inp_0_0_2;
    result3 += M4(0.01731909, -0.07061966, 0.016610108, -0.02531037, -0.12735665, 0.23456973, -0.067376904, -0.043519557, -0.0030797825, 0.032886967, 0.06953178, 0.10112845, -0.0029004894, 0.103068456, -0.20955475, -0.0494804) * inp_0_1_2;
    result3 += M4(0.037628397, -0.078636855, 0.039621394, -0.05840476, -0.009368135, -0.00066252233, 0.04072933, 0.07978421, 0.011805375, -0.069069065, -0.0097162975, -0.024544077, -0.021986125, -0.0051323357, 0.028306134, -0.024092097) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.010921428, 0.13370554, 0.13309883, 0.041791487, 0.16888075, -0.06612359, 0.06505577, 0.019219132, -0.07843559, -0.00046195078, -0.035121873, -0.041585773, -0.030883325, 0.009236645, 0.14179772, 0.012565037) * inp_1_0_0;
    result0 += M4(0.09947184, 0.09688105, 0.12629144, 0.03438142, -0.020120248, -0.35397655, 0.22541814, -0.14747104, 0.056223582, 0.2887597, -0.19738944, 0.08590255, -0.024727853, -0.10975611, 0.2932647, -0.11557592) * inp_1_1_0;
    result0 += M4(-0.01156713, -0.013868243, -0.027672593, -0.05722987, -0.053504404, -0.108595915, 0.028821645, -0.04114386, 0.07383495, 0.16398181, -0.022928707, 0.06308028, -0.039391745, -0.16029604, -0.03794424, -0.16964717) * inp_1_2_0;
    result0 += M4(0.10390124, -0.00028789422, 0.09057996, 0.08688934, -0.29915234, 0.0052601937, -0.0069854236, -0.029398914, -0.010152454, 0.02117212, -0.025439752, -0.1376008, 0.015509477, 0.26703432, -0.06478905, 0.016619464) * inp_1_0_1;
    result0 += M4(-0.21138828, -0.5465879, -0.37671208, -0.025370212, -0.108927324, -0.048663896, -0.33287764, 0.051965877, 0.45699108, -0.010091353, -0.017233742, 0.13467972, -0.2340895, 0.29003546, -0.20387883, -0.3104368) * inp_1_1_1;
    result0 += M4(0.17803793, -0.27299014, -0.2219314, 0.090937264, -0.11482857, -0.067587025, 0.054035112, -0.35103148, 0.18950507, 0.053179387, 0.014292479, 0.21061037, 0.3005688, 0.09950476, 0.10060579, 0.13528752) * inp_1_2_1;
    result0 += M4(0.07876064, 0.13300064, 0.0789134, -0.0597309, -0.20975171, 0.029503774, -0.19952112, -0.009459604, 0.30256692, -0.026686918, 0.059791613, -0.08322595, 0.07612113, -0.070816666, -0.017941345, -0.04627292) * inp_1_0_2;
    result0 += M4(0.07224201, 0.1462673, -0.0647478, 0.077735074, -0.23584594, 0.07967705, -0.05912537, 0.047676943, -0.098710716, -0.029685143, 0.3788791, 0.10605272, 0.13624752, -0.15328072, 0.1534951, -0.07889607) * inp_1_1_2;
    result0 += M4(-0.06982414, 0.12778527, 0.099363364, 0.026763633, 0.1587355, 0.14408705, -0.21092753, -0.16054071, -0.06514189, -0.1271789, 0.09075785, 0.1134094, -0.07326874, 0.09240287, 0.019122925, 0.06481266) * inp_1_2_2;
    result1 += M4(-0.015416333, 0.074384525, 0.042165916, 0.12545583, 0.07583115, -0.0007177818, -0.024054771, -0.037657637, -0.0417981, 0.0023487785, 0.004209311, 0.04197656, 0.0832359, 0.036423784, -0.05330576, -0.20755391) * inp_1_0_0;
    result1 += M4(0.066793956, -0.07460148, -0.05903577, -0.25818422, 0.13643672, -0.019401848, 0.009056105, 0.24172299, -0.089393854, 0.02159164, 0.01153857, -0.0049210642, -0.14606816, -0.06284338, 0.02573692, -0.60035694) * inp_1_1_0;
    result1 += M4(0.011159659, -0.057133213, 0.022744317, 0.12112826, 0.037861798, -0.026784189, 0.03401085, -0.015432477, -0.11512384, -0.039139707, -0.01594575, 0.05972935, -0.17903973, -0.01598526, 0.008708859, -0.15932576) * inp_1_2_0;
    result1 += M4(0.11183911, 0.02580249, 0.09629022, 0.10792569, -0.0722542, -0.026213458, -0.12419711, -0.16298072, -0.010369823, 0.08695786, 0.13156594, 0.100861184, 0.045347545, 0.15454063, -0.02515637, -0.18902612) * inp_1_0_1;
    result1 += M4(0.110771805, 0.23954286, -0.07146891, 0.031405423, -0.23466957, 0.054346856, -0.047643095, -0.41625246, -0.11812313, 0.14486487, 0.037020627, 0.20896739, 0.27430382, 0.03592334, -0.111115515, 0.02742036) * inp_1_1_1;
    result1 += M4(0.07295973, -0.07786313, 0.005527949, 0.07656726, 0.10858957, -0.027659591, 0.0017979406, 0.16254295, -0.01910318, -0.038307607, -0.045019068, 0.22821118, 0.077352464, -0.06921554, -0.0065739923, -1.1143631) * inp_1_2_1;
    result1 += M4(-0.10860675, 0.029801449, 0.057777785, 0.113102324, 0.013926057, -0.045881417, 0.10532387, -0.09759775, 0.13917992, 0.035510246, 0.16788247, 0.09157811, -0.11009659, 0.020639967, 0.0046469253, 0.0026043064) * inp_1_0_2;
    result1 += M4(-0.019220907, -0.16314963, -0.06033575, -0.04906275, -0.14716646, 0.0572095, -0.100740455, -0.3836453, 0.44110098, -0.088288225, -0.02116392, 0.075434655, 0.070910424, -0.013478316, -0.045499176, 0.17592612) * inp_1_1_2;
    result1 += M4(-0.0029520877, -0.045136347, 0.03597825, 0.043716807, -0.16460624, -0.012730327, 0.019527774, 0.24261017, 0.0658786, -0.05904079, 0.01717502, 0.15968734, 0.018397942, 0.06052063, 0.07775933, -0.09691318) * inp_1_2_2;
    result2 += M4(0.020189634, -0.019211035, 0.1020415, -0.044774152, 0.12499974, 0.16385366, -0.03363925, -0.027864907, -0.06885279, -0.011146362, -0.024064852, 0.002846774, 0.114623226, -0.086319745, 0.06604174, -0.08842035) * inp_1_0_0;
    result2 += M4(-0.065884665, 0.065143384, -0.009946719, -0.02331171, 0.016874742, 0.042006362, 0.007618859, -0.044328507, -0.15863194, 0.058855817, -0.03085924, 0.03781322, -0.022713099, 0.10460012, -0.04581133, -0.20105322) * inp_1_1_0;
    result2 += M4(-0.049870882, 0.013807451, -0.0993997, -0.11146659, 0.0689549, 0.09595878, -0.045959547, 0.1571928, -0.008911239, 0.010270713, -0.04058725, -0.067896515, -0.076159246, 0.05482627, -0.05530356, -0.11256259) * inp_1_2_0;
    result2 += M4(-0.037268043, -0.04621902, 0.058314163, 0.05864358, -0.14520243, 0.15853517, -0.017630456, -0.18089224, -0.0362667, -0.2265507, 0.17015673, 0.038988043, -0.013504084, 0.37564975, 0.18800876, -0.08854002) * inp_1_0_1;
    result2 += M4(0.16945277, -0.020065032, 0.10414108, -0.026417317, -0.27354226, 0.23352447, 0.000972079, -0.4253179, 0.38367862, -0.10304963, 0.09288518, 0.46567723, 0.07248841, 0.0116167385, -0.08370907, -0.13515528) * inp_1_1_1;
    result2 += M4(-0.0690299, 0.01558091, -0.028678132, 0.122442335, -0.008457366, -0.027259475, 0.04156615, -0.024837764, -0.0363108, 0.1563855, -0.07295061, 0.06131063, 0.025814528, 0.03982251, -0.0028195381, 0.13308524) * inp_1_2_1;
    result2 += M4(0.0102453735, -0.025972145, 0.009012822, 0.015101348, -0.075646855, 0.1873746, -0.030690882, -0.08131787, 0.013336349, -0.14832145, 0.032529138, -0.20502701, 0.09890404, 0.0528081, 0.005119068, -0.0988014) * inp_1_0_2;
    result2 += M4(0.119275466, -0.099032916, -0.18732707, 0.011831936, -0.20386821, 0.1418829, 0.046331506, -0.17039062, 0.029736308, 0.08393037, -0.044757824, 0.07558891, 0.02559964, -0.2997295, 0.023500191, -0.18154004) * inp_1_1_2;
    result2 += M4(0.0972801, 0.05686809, -0.023732344, 0.04914826, 0.06618475, 0.04488682, 0.010382364, 0.06367453, -0.03764225, 0.08545234, -0.034390666, 0.120554306, -0.039051566, 0.17921758, 0.0397407, 0.042263363) * inp_1_2_2;
    result3 += M4(-0.01406465, -0.0627537, 0.062169626, 0.06011778, -0.023977658, 0.042321987, -0.045559842, 0.1090687, -0.017935362, -0.005823474, 0.023159549, 0.00795558, -0.016740331, 0.1042183, 0.044326287, 0.042011403) * inp_1_0_0;
    result3 += M4(0.048844557, 0.19109803, -0.007713548, 0.0805834, 0.0461003, 0.15539682, -0.014811948, 0.16158563, 0.08850273, -0.07588678, 0.036123957, -0.10217671, 0.081362136, 0.04289704, -0.04040031, 0.078010514) * inp_1_1_0;
    result3 += M4(-0.011044316, 0.11858888, -0.018789679, 0.012147625, 0.066578224, 0.16747867, -0.058511328, 0.2630547, -0.0028617876, -0.04656149, -0.02790295, -0.15627123, -0.043580536, 0.12888698, -0.04483662, 0.14990665) * inp_1_2_0;
    result3 += M4(0.07422453, 0.03929877, 0.09356742, 0.0028244378, -0.025136232, -0.03176429, -0.0070621474, -0.06587039, -0.009438714, -0.033293348, 0.13292392, 0.16323775, -0.06959007, 0.17536089, 0.041305, -0.08135774) * inp_1_0_1;
    result3 += M4(-0.04916177, 0.041591365, 0.07753963, 0.045150593, 0.09599926, -0.2686036, 0.089906685, -0.4367993, 0.03989374, -0.2831736, 0.010365011, 0.081406616, 0.1734443, 0.4323433, 0.1519691, 0.15953137) * inp_1_1_1;
    result3 += M4(0.035981484, 0.0030610436, -0.072040476, -0.3165483, 0.09376974, 0.20298073, 0.023005817, 0.1585329, 0.112266935, 0.01861499, -0.058481093, -0.06349521, 0.05732798, -0.018681755, -0.06717163, -0.27524224) * inp_1_2_1;
    result3 += M4(-0.059358086, -0.07512501, -0.06902028, 0.041616656, -0.028059175, -0.54633695, -0.017851442, -0.06968804, -0.021755999, 0.2018897, -0.019696202, 0.042232934, 0.03540591, 0.1393367, 0.017627597, 0.028193513) * inp_1_0_2;
    result3 += M4(0.068160586, 0.116824746, -0.064429924, 0.10691444, -0.04684682, 0.022750324, 0.045290302, -0.045425415, 0.05091711, 0.16426438, -0.0025370775, 0.03673042, -0.023123676, 0.049932163, -0.055137146, 0.032732215) * inp_1_1_2;
    result3 += M4(-0.06962847, 0.026550759, -0.054063268, -0.08183646, 0.079945505, 0.14785351, -0.0050364705, 0.07342429, 0.09374755, 0.04890724, -0.048916288, 0.030561693, -0.06367331, 0.15269203, 0.0373344, -0.08705062) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.06713175, -0.16596839, 0.052753236, -0.028544612, 0.018842699, 0.14000526, -0.10340294, 0.08395905, 0.025168806, -0.007102971, 0.09356852, 0.05734133, -0.25958318, -0.20771144, -0.08319066, 0.16491485) * inp_2_0_0;
    result0 += M4(-0.07434894, -0.08447791, 0.09331535, -0.07977259, -0.100683056, -0.06560176, 0.055947583, -0.013552049, -0.23969813, -0.28823948, -0.48015684, -0.11119962, 0.29591012, -0.19074738, -0.09583471, -0.15928172) * inp_2_1_0;
    result0 += M4(-0.11452068, -0.25589663, 0.03823586, -0.064464584, -0.03971918, -0.0663725, 0.03452197, -0.09784277, -0.10463594, -0.058673903, 0.02548373, -0.19356799, -0.12364262, -0.0073957965, -0.016186805, 0.058755293) * inp_2_2_0;
    result0 += M4(-0.024750294, 0.019103697, -0.026533712, -0.09821611, -0.18987857, 0.124915384, -0.06229803, 0.09350799, 0.20135248, 0.010863688, -0.046548873, 0.01536626, -0.008609147, 0.13308926, -0.059490867, 0.0107027665) * inp_2_0_1;
    result0 += M4(-0.06112826, 0.034460675, -0.16314763, 0.13508032, -0.26579586, 0.15953283, -0.19368191, -0.018178787, -0.34338707, 0.11214856, -0.33468467, 0.08972445, 0.008648366, 0.05587258, -0.19502524, -0.0004697591) * inp_2_1_1;
    result0 += M4(-0.00923866, -0.23277096, -0.2033179, -0.15392281, 0.0009297491, 0.21466576, 0.036873337, -0.21831937, -0.047636144, 0.054622106, -0.08022207, -0.17793423, 0.11656407, -0.29748118, 0.09707341, -0.07181335) * inp_2_2_1;
    result0 += M4(0.03711811, 0.037496004, -0.093284495, 0.008160006, 0.07704563, -0.013106078, 0.21552545, 0.110263295, 0.118351184, -0.040533807, 0.19445278, -0.006581225, -0.1318071, 0.058180988, 0.0710776, 0.04311623) * inp_2_0_2;
    result0 += M4(-0.15343004, 0.071354486, 0.018048737, -0.057451792, -0.1612135, 0.07527683, -0.0065326826, -0.08684059, 0.10591472, -0.0041791974, 0.066104665, 0.040584017, -0.036894433, 0.030858183, 0.05266954, 0.069334246) * inp_2_1_2;
    result0 += M4(0.037792593, 0.07995528, -0.10605013, -0.09624421, -0.01870995, -0.0098653985, -0.020117888, -0.10093841, 0.09432015, -0.025225505, 0.092163146, -0.020278169, 0.019526975, 0.2732113, -0.46647716, -0.10297318) * inp_2_2_2;
    result1 += M4(-0.01962325, 0.011647917, -0.04800837, -0.36616844, 0.043110874, -0.03318494, -0.004799792, 0.05332912, 0.054377116, -0.153671, -0.1373923, -0.33883888, -0.108885564, 0.21196043, 0.0112319905, 0.36537507) * inp_2_0_0;
    result1 += M4(0.012625963, -0.018992912, -0.04768481, 0.034364745, 0.04635495, -0.017523736, 0.007911663, 0.0037358005, -0.048801966, 0.027055355, 0.022132052, -0.38713902, 0.19003779, -0.170007, 0.005718, -0.4047048) * inp_2_1_0;
    result1 += M4(0.24208418, -0.00027456094, 0.05906629, 0.036174625, 0.013151183, -0.0010032889, 0.016741268, 0.061279327, 0.17487036, -0.04266932, 0.047133807, 0.1736268, -0.03376774, 0.0399209, -0.034923907, 0.51985025) * inp_2_2_0;
    result1 += M4(-0.06689483, 0.06285093, -0.0597691, -0.13431212, 0.043292228, 0.112571746, 0.0012100392, -0.0013222179, -0.26603547, -0.15302686, -0.24437101, -0.018635526, -0.083911836, -0.058506332, -0.0034988474, -0.17803805) * inp_2_0_1;
    result1 += M4(-0.07848926, 0.043897334, -0.099283114, -0.053038273, -0.054341044, -0.18716098, -0.043188006, -0.39251384, -0.34575513, -0.066679165, -0.059465874, -0.35621035, -0.07993004, 0.23018591, -0.004466243, 0.3337061) * inp_2_1_1;
    result1 += M4(-0.2013064, 0.07661285, 0.040901158, -0.26910284, 0.12840009, 0.0126813995, 0.024532286, -0.20452364, -0.19324628, -0.040025055, 0.012663426, 0.13424298, -0.06128723, 0.05058658, 0.02816189, -0.22891028) * inp_2_2_1;
    result1 += M4(-0.031498738, 0.06745214, -0.044842955, -0.079280995, 0.15736838, -0.010809465, -0.07422036, -0.0532979, 0.053654883, -0.03741245, -0.14321075, 0.2988637, -0.0158056, 0.035131216, 0.011617852, -0.17862305) * inp_2_0_2;
    result1 += M4(-0.16603515, -0.022186467, -0.045265965, -0.2956705, -0.026637167, -0.06874697, -0.13607167, -0.08625062, -0.13152418, 0.018758245, -0.002402817, 0.0794615, -0.01232698, 0.0012856394, -0.059826393, 0.3413483) * inp_2_1_2;
    result1 += M4(-0.068590954, 0.020999638, 0.014808672, -0.10573756, -0.015914835, 0.0048290845, 0.051867478, -0.095186636, -0.002181271, -0.040406454, 0.04453881, 0.1052018, -0.049484346, -0.04212839, 0.039928153, 0.0050431145) * inp_2_2_2;
    result2 += M4(-0.03336045, -0.028116718, 0.086508535, -0.00826271, 0.015120925, -0.009075273, -0.036938034, 0.093182415, -0.14529872, 0.3372603, -0.30612466, -0.021231577, 0.10526882, -0.12928136, 0.1328666, 0.12981002) * inp_2_0_0;
    result2 += M4(-0.046437602, -0.013757367, -0.046006903, -0.09227424, -0.031747114, 0.13011515, -0.05739766, 0.010046462, -0.25039428, 0.25182953, -0.044359867, -0.18575828, -0.057654195, 0.14316452, 0.13228883, 0.20931113) * inp_2_1_0;
    result2 += M4(0.078750186, -0.1228709, 0.00946542, -0.04388477, 0.036432475, -0.038341075, -0.00021073694, 0.002925513, -0.012909948, 0.1588398, -0.06238526, -0.06688935, 0.05366552, -0.102128014, -0.110071294, -0.14067946) * inp_2_2_0;
    result2 += M4(-0.03678736, 0.10765999, 0.07193249, 0.121851504, 0.11644006, -0.014337221, 0.107629694, 0.03561085, 0.09254427, 0.28864, -0.061515916, 0.19441576, -0.10873765, -0.03546518, -0.025283035, 0.016592102) * inp_2_0_1;
    result2 += M4(-0.20299828, -0.0627792, -0.028384272, -0.065860465, -0.18855456, 0.007238813, -0.19924954, -0.185967, -0.057838768, 0.29895735, -0.1315155, 0.06109041, -0.07904218, -0.11591238, 0.0035836818, -0.16675727) * inp_2_1_1;
    result2 += M4(-0.11884239, -0.23065503, 0.10815616, -0.054570094, 0.005880046, 0.0037934042, 0.008465349, 0.00995511, 0.10620705, 0.20284946, -0.049087673, 0.13899139, -0.23413815, -0.054854114, 0.14627258, -0.036819912) * inp_2_2_1;
    result2 += M4(-0.099314004, -0.0987677, 0.042151798, -0.13507262, 0.08916669, -0.013689051, 0.003437767, 0.0579452, -0.019779075, 0.049981132, -0.03510046, 0.015499253, 0.1204677, 0.07491037, 0.081289515, 0.13198465) * inp_2_0_2;
    result2 += M4(0.0353735, -0.077531666, -0.024596095, 0.033657625, 0.1558125, 0.10191329, -0.04829423, 0.047742683, 0.08664168, 0.07852444, -0.020741103, 0.09304041, 0.10370278, 0.035084113, 0.044740748, -0.021559779) * inp_2_1_2;
    result2 += M4(0.047856614, -0.094414696, -0.016120102, -0.11156685, 0.05375272, -0.07636935, -0.0025883624, 0.053551298, 0.0025568216, 0.0670588, 0.006862254, 0.024885653, 0.022461949, 0.100600876, -0.07275701, -0.014265317) * inp_2_2_2;
    result3 += M4(-0.055803485, -0.16491425, 0.016366929, 0.0004903434, 0.051357657, -0.05726801, -0.010393469, -0.060168736, 0.01279428, 0.5032616, -0.17809011, 0.031049231, -0.010896713, 0.12179099, 0.12371128, -0.015645735) * inp_2_0_0;
    result3 += M4(-0.044842973, -0.10622891, -0.052336726, -0.006238554, -0.03786954, -0.091429144, -0.058805805, -0.18730862, 0.03035859, -0.2859189, -0.030592645, -0.4357667, -0.075466365, -0.08357749, -0.10482568, 0.030892951) * inp_2_1_0;
    result3 += M4(0.10020977, 0.06643133, 0.0052863304, 0.14695144, 0.017809408, 0.018748246, 0.0037713745, 0.10808992, 0.13724072, 0.34346738, -0.025644109, 0.20799121, -0.04509833, 0.09888146, 0.088944174, -0.0284596) * inp_2_2_0;
    result3 += M4(-0.03489605, -0.21578582, 0.039872438, -0.025150608, 0.005994507, -0.003923073, 0.12520364, 0.021631287, -0.014404666, 0.3460689, -0.06711747, 0.022705998, -0.012638416, 0.21255402, -0.085875824, -0.0327604) * inp_2_0_1;
    result3 += M4(0.113611996, -0.2440171, 0.093747616, -0.21741885, 0.09424741, 0.0051216125, -0.10906792, -0.10685566, 0.08657895, 0.3987461, -0.023033874, 0.017621558, -0.026363134, 0.116796516, 0.26641005, 0.013048084) * inp_2_1_1;
    result3 += M4(-0.0007336907, -0.18014546, 0.060724504, 0.0005388864, -0.048675343, -0.047010623, -0.000560449, -0.007905725, 0.12952481, 0.14498982, 0.019197285, 0.13521913, -0.0068767653, -0.09968407, -0.11340966, -0.035296198) * inp_2_2_1;
    result3 += M4(-0.015167924, -0.06162484, 0.048497144, -0.05229212, 0.016431829, 0.15235882, 0.004820843, -0.010006186, -0.035780735, 0.2996176, -0.104057774, 0.0932676, 0.018763794, -0.034192502, 0.11924803, 0.03880305) * inp_2_0_2;
    result3 += M4(0.024914257, -0.08269612, 0.0012117245, -0.027164383, -0.06563778, -0.025775742, -0.06679253, -0.08072671, 0.00039068237, 0.22755438, 0.046542145, 0.064784884, -0.031295225, 0.018313954, -0.09543757, -0.064155675) * inp_2_1_2;
    result3 += M4(-0.0048271837, -0.09134481, 0.024352567, 0.05916232, 0.018919252, 0.19995809, 0.02224544, 0.069884144, 0.021849342, 0.2833301, -0.03734596, 0.14710082, 0.08101351, 0.16785266, 0.04998328, -0.20326391) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.3918784, -0.71802634, 0.2991137, 0.1839293, 0.1447659, -0.13861693, -0.04412248, 0.25804374, 0.008954436, 0.07097888, 0.001156147, 0.036768287, -0.13776949, -0.28088197, 0.027514055, 0.009336109) * inp_3_0_0;
    result0 += M4(0.11480081, -0.105007604, 0.13576847, -0.0481886, 0.18585153, 0.15628338, 0.16718243, 0.0464607, 0.054580692, 0.08421591, 0.20368072, -0.08785073, -0.024000142, -0.5541611, 0.007937472, 0.115448155) * inp_3_1_0;
    result0 += M4(0.04883597, -0.16076097, 0.03254833, -0.0019472023, 0.12904237, -0.090545475, 0.19990557, -0.6839562, 0.08121327, 0.040644404, 0.00233088, 0.021815412, 0.11248722, -0.16683778, 0.0058370135, 0.124339) * inp_3_2_0;
    result0 += M4(-0.76577336, 0.07432154, -0.3109299, -0.19124472, 0.0026270137, -0.04319481, 0.22359325, -0.056979578, -0.060308285, 0.014851863, -0.07697198, -0.063398354, 0.19043759, 0.22323287, 0.11400983, -0.16444555) * inp_3_0_1;
    result0 += M4(-0.3130283, 0.14700206, 0.1369955, 0.16081467, -0.034414776, -0.08096935, -0.079820454, 0.10774192, 0.026641913, -0.16607209, -0.39833984, 0.10403643, -0.4712008, 0.01004236, -0.17765169, 0.16438311) * inp_3_1_1;
    result0 += M4(-0.109261654, -0.034572896, -0.009004186, -0.09548641, 0.03943764, 0.13877122, 0.22257346, -0.03434192, -0.004601997, 0.13914065, 0.10174424, -0.07400506, -0.033689816, 0.051937528, 0.07693162, -0.043253206) * inp_3_2_1;
    result0 += M4(-0.3241145, -0.27465189, -0.9179442, -0.10396991, 0.086173035, -0.03317745, 0.03472851, -0.033068962, -0.040658448, -0.011213018, 0.033441156, 0.010051787, -0.028315026, -0.005466825, -0.05777314, -0.054691065) * inp_3_0_2;
    result0 += M4(0.067965336, -0.1311655, -0.2767046, 0.17154543, 0.028982332, -0.0014962907, -0.07123162, 0.043051083, -0.14112821, 0.026926436, -0.038107228, 0.034381494, 0.0056884587, -0.20730565, -0.28123188, 0.09074351) * inp_3_1_2;
    result0 += M4(-0.044191997, 0.07546703, -0.12956741, 0.022106467, 0.043095376, -0.026717134, 0.07074851, 0.055543687, 0.09192713, 0.09014104, 0.1182483, -0.058984082, 0.042489454, 0.08907369, -0.00275169, 0.049833804) * inp_3_2_2;
    result1 += M4(-0.22121485, -0.14160806, -0.25802645, -0.54202896, 0.0337435, -0.071154125, -0.1315745, -2.1792347, -0.020756675, 0.019535653, 0.014027724, 0.025070922, 0.043303184, -0.08657593, 0.018207561, 0.1534048) * inp_3_0_0;
    result1 += M4(0.21373549, 0.034548506, -0.01814248, 0.0154496, -0.30944824, -0.215251, -0.4840735, -1.3174956, -0.24991107, 0.038889315, -0.0038492838, 0.08917209, 0.20198825, -0.007376619, 0.020541532, -0.07357295) * inp_3_1_0;
    result1 += M4(0.042126168, 0.029867249, 0.012368744, 0.09446673, -0.4314668, -0.30819908, -0.24243899, -0.8792626, -0.046603438, 0.07713042, -0.010929067, 0.04295915, 0.085089155, -0.01820794, -0.00528396, 0.028040979) * inp_3_2_0;
    result1 += M4(-0.22897038, -0.07012523, -0.28741017, -1.3256494, -0.03732558, 0.08896621, 0.33832422, 0.02013018, 0.02954941, -0.024400378, -0.028927952, -0.08674655, -0.0842947, -0.23451436, -0.018568961, -0.12742895) * inp_3_0_1;
    result1 += M4(-0.17871584, 0.067993455, -0.062639505, -0.26455012, -0.19195148, 0.048818838, 0.5295751, -0.075766884, 0.40658507, -0.2820963, 0.14230081, -0.008190885, -0.38396615, 0.08520247, 0.08486094, -0.4514157) * inp_3_1_1;
    result1 += M4(0.1170681, 0.044724427, 0.025115842, -0.22119553, -0.0030433296, -0.0058511756, 0.1294961, 0.14439966, -0.0028936765, 0.035151135, -0.066336356, 0.1250702, -0.070181996, -0.06960434, 0.012736942, 0.08467038) * inp_3_2_1;
    result1 += M4(-0.5939964, -0.05095362, -0.20254725, -0.97782695, 0.02601306, -0.056204077, 0.008414239, 0.13432269, 0.01710539, 0.0116606355, -0.10156637, -0.00804841, -0.085504666, -0.0062508276, -0.043343667, 0.13245584) * inp_3_0_2;
    result1 += M4(-0.12075475, -0.1555047, -0.05659737, 0.12950194, 0.05499539, -0.026030652, 0.045980085, 0.04958478, -0.2184081, 0.13264541, 0.14332359, -0.09485625, -0.22856586, -0.015160894, 0.18351685, -0.12293577) * inp_3_1_2;
    result1 += M4(-0.16625293, -0.04955134, 0.034173474, -0.14335912, 0.07391019, -0.050844215, 0.014696012, 0.029305683, 0.13211738, -0.00085988815, -0.07906531, 0.012256783, -0.004388137, 0.012616008, -0.032632608, 0.0014546391) * inp_3_2_2;
    result2 += M4(-0.13647188, 0.13165945, -0.1512788, -0.25248832, 0.34243363, 0.48769778, -0.25620693, -0.95939785, 0.039644912, -0.04913262, 0.08576058, -0.036288597, 0.045586824, -0.002460563, -0.118461065, 0.030808853) * inp_3_0_0;
    result2 += M4(0.20140402, -0.075137556, 0.07302711, -0.030649355, 0.5474657, -0.20811409, -0.21174775, -0.70784914, -0.032179527, -0.094775066, 0.29924223, -0.10449992, 0.016954128, 0.018475126, -0.08853667, 0.16376854) * inp_3_1_0;
    result2 += M4(0.057573624, -0.060014468, -0.0036383483, 0.0991537, 0.35676682, 0.022275288, -0.111655906, -0.19598801, 0.047753707, -0.054613367, 0.12259515, 0.08952252, 0.050864633, 0.06053129, -0.033742204, 0.047921777) * inp_3_2_0;
    result2 += M4(-0.77419955, 0.7659134, -0.055161897, -0.79028064, 0.044440754, -0.044609364, 0.01835636, -0.09528963, -0.04070593, 0.076925464, 0.03217897, -0.025878157, -0.12326424, 0.27005184, -0.16110194, 0.027880989) * inp_3_0_1;
    result2 += M4(-0.12420265, 0.3088332, -0.04920296, -0.118015416, 0.1050311, 0.23347975, 0.11915552, 0.1734148, -0.3180024, -0.2499093, 0.22278862, -0.14677335, -0.15312253, 0.18079698, 0.01737351, -0.32297736) * inp_3_1_1;
    result2 += M4(-0.14483519, 0.015356, 0.07078359, -0.07073252, 0.085537165, -0.030150462, -0.08179902, 0.044204056, 0.10274838, 0.053638488, -0.034911875, -0.05589113, -0.022205496, 0.06067837, -0.046755303, -0.0012845612) * inp_3_2_1;
    result2 += M4(-0.94816786, 0.4727479, 0.0604257, -0.35403475, 0.003557801, -0.02129557, -0.046220608, -0.021274827, -0.02192116, 0.01399026, 0.035691455, -0.00097383506, 0.019431155, 0.021231508, 0.005152022, 0.025818158) * inp_3_0_2;
    result2 += M4(-0.16411117, -0.11224862, -0.05501575, -0.037131205, -0.056180634, -0.019886252, -0.0014894011, 0.0032645299, 0.16222459, 0.04108613, 0.025506416, 0.12287995, -0.068641126, 0.10237675, 0.022540765, 0.029821556) * inp_3_1_2;
    result2 += M4(0.061448146, -0.036140412, -0.034375574, -0.044209495, -0.0031914907, 0.047270007, 0.016509088, 0.053333256, 0.011547574, 0.03513088, -0.02708404, -0.035997994, 0.03548009, 0.00947298, -0.031367432, -0.0012378275) * inp_3_2_2;
    result3 += M4(-0.110920526, 0.30998597, -0.07661101, 0.13843098, -0.049825244, -0.73610723, -0.12567602, 0.15518537, 0.025970874, 0.027632881, 0.036521085, 0.01749266, -0.024469886, 0.09788882, -0.08638209, 0.0010017058) * inp_3_0_0;
    result3 += M4(0.14229287, -0.036735326, -0.028188447, 0.13374002, 0.29111397, 0.108247414, -0.12773433, 0.45508575, -0.08756147, -0.06281349, 0.057602484, 0.013669223, 0.0034149638, -0.0461192, -0.06818591, 0.09994171) * inp_3_1_0;
    result3 += M4(-0.06038901, 0.042459752, -0.022462258, 0.15738368, -0.019785222, -0.18682241, -0.10780561, 0.20918384, 0.00051633146, -0.13709939, 0.060036894, 0.17926885, -0.018768577, 0.092176065, -0.043927316, 0.0052533746) * inp_3_2_0;
    result3 += M4(0.103016764, -1.0328423, 0.12885585, -0.5486773, 0.10681997, -0.1758539, 0.18929471, -0.0022201743, -0.047075592, 0.028608296, -0.105609834, -0.00054344576, -0.06047027, 0.082320146, -0.14737456, -0.124576434) * inp_3_0_1;
    result3 += M4(0.3884627, -0.06907313, 0.06545939, 0.2211847, 0.48444054, -0.5640016, 0.5414403, 0.098035045, 0.24266657, 0.25755283, 0.41240424, -0.033283804, -0.023691604, -0.16379784, 0.030307736, -0.08051214) * inp_3_1_1;
    result3 += M4(0.07030129, 0.07181908, 0.081046104, -0.16241975, 0.29321694, -0.55448437, -0.054448884, 0.013707634, -0.11237301, -0.1249055, -0.050829303, 0.045130156, 0.038544454, 0.10135712, -0.008145965, -0.04193355) * inp_3_2_1;
    result3 += M4(-0.012431904, -0.93616503, 0.061519787, -0.48969018, 0.009069543, 0.05050536, -0.044647288, 0.010880842, -0.0001656412, -0.07294277, -0.039048076, 0.008006033, 6.661373e-05, 0.033283714, -0.01930722, -0.03862239) * inp_3_0_2;
    result3 += M4(0.18727699, 0.09013562, -0.17948993, -0.040507197, 0.015715925, -0.0040484956, 0.021668315, 0.02861139, 0.042309858, 0.048534937, 0.14416379, -0.009661213, -0.0124405585, -0.07175174, -0.0075088236, -0.04700343) * inp_3_1_2;
    result3 += M4(-0.037526134, -0.05238262, -0.02698445, -0.0004506731, -0.006348547, 0.00291144, -0.020172533, -0.029154629, -0.05506563, 0.07580812, -0.009909428, 0.042736355, -0.053956695, -0.04790441, -0.00070780265, -0.09662414) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.005609743, -0.006284229, 0.013410964, -0.015358392);
    V4 result1 = V4(-0.0005293254, -0.0014539142, -9.3151175e-05, -0.0021930204);
    V4 result2 = V4(-0.00018976921, -0.07964638, -0.007976824, 0.0011549424);
    V4 result3 = V4(-0.00059199496, 0.006308848, -0.00887737, -0.006055103);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.028370092, 0.057678085, 0.023974124, -0.05849517, 0.002429452, 0.043049756, 0.03398688, -0.032070678, -0.01026977, 0.019425306, 0.045852944, -0.09494119, -0.0038162717, 0.13878025, -0.046793237, 0.03369365) * inp_0_0_0;
    result0 += M4(-0.048857618, -0.1195502, -0.12131566, 0.19306992, -0.0013071786, 0.02119591, 0.014255755, -0.010804184, -0.0018263555, 0.04352001, -0.014811636, 0.09411846, 0.009938991, -0.09331439, -0.016190412, -0.011071784) * inp_0_1_0;
    result0 += M4(0.044235207, -0.029431788, 0.027068902, 0.037766427, 0.0032800129, -0.009998395, 0.012905978, -0.0111839585, -0.012542314, -0.01386518, 0.024988687, -0.027700925, -0.011900637, 0.030184632, 0.0053878017, -0.014650461) * inp_0_2_0;
    result0 += M4(0.02762381, 0.0044057406, -0.09000471, 0.14296989, -0.009396198, 0.029352868, -0.051970355, 0.061646044, -0.04023636, -0.026640091, -0.0252362, 0.04967946, 0.03652052, 0.25929606, 0.049696017, -0.07793013) * inp_0_0_1;
    result0 += M4(0.04015055, 0.07743476, 0.30118006, -0.26344946, -0.088114865, -0.00996385, -0.056649335, 0.039599746, 0.07610882, 0.022634545, 0.09706612, -0.11095712, -0.015742956, -0.08902502, -0.17156762, 0.15674658) * inp_0_1_1;
    result0 += M4(0.009422917, 0.00028303065, -0.15264156, 0.13944961, 0.040091455, 0.012673805, 0.0038127224, 0.0008112304, -0.03482063, -0.0049808724, 0.01376265, -0.016835839, -0.0055977823, 0.025535427, 0.089123406, -0.04557034) * inp_0_2_1;
    result0 += M4(-0.0009381564, -0.17456591, 0.00022810808, 0.03754008, -0.047721434, -0.019726658, 0.031268653, -0.038478244, 0.006365999, -0.021564754, -0.0061228373, 0.033613402, -0.029829828, 0.13956417, 0.052406196, -0.009731216) * inp_0_0_2;
    result0 += M4(-0.060279213, 0.06867731, -0.08673316, 0.092181385, 0.13475949, -0.0051445668, 0.050710175, -0.020783983, -0.12858906, 0.02019998, -0.04142848, 0.057474572, -0.107300125, -0.14015186, -0.09194193, 0.10935067) * inp_0_1_2;
    result0 += M4(-0.013399646, -0.015818575, -0.01775429, -0.041511666, -0.10511888, 0.028991891, 0.011575054, 0.0013739148, 0.0008863345, 0.00056930253, -0.03127587, 0.036232587, 0.041572202, 0.06386499, 0.026919827, -0.04356754) * inp_0_2_2;
    result1 += M4(0.011899399, -0.07393264, -0.018567549, -0.07637605, -0.011196218, 0.06750606, -0.007542278, 0.04759247, -0.03916036, 0.09216144, -0.00291698, 0.04063644, -0.102127835, 0.011028203, 0.016267609, -0.017738005) * inp_0_0_0;
    result1 += M4(-0.059029195, -0.10157079, 0.005463436, -0.1916296, 0.007943735, 0.030773027, 0.0034816577, 0.085883066, -0.01313442, 0.024515184, -0.027903484, -0.12601867, 0.0424874, 0.05625101, 0.016614942, 0.058821186) * inp_0_1_0;
    result1 += M4(0.026041878, 0.008256328, -0.002211859, -0.010315587, 0.0064284126, 0.037917413, -0.0033295804, 0.05431979, 0.010260737, 0.014718436, -0.0019709505, 0.032210447, -0.043203823, 0.017888304, 0.007385577, 0.03132687) * inp_0_2_0;
    result1 += M4(0.005453044, -0.04368799, -0.029661236, -0.009328561, 0.03257685, -0.08123755, 0.0026304473, -0.06158633, 0.025116188, 0.12726788, 0.036325894, 0.05284498, -0.16928266, 0.0070733614, 0.06289344, -0.056994375) * inp_0_0_1;
    result1 += M4(-0.015697079, 0.07213065, 0.07677178, 0.21880987, -0.015533671, 0.0130198635, -0.007820001, -0.27458468, 0.046476535, 0.3814211, 0.004089796, 0.4178821, 0.11186935, 0.013908185, -0.0014030088, -0.08747645) * inp_0_1_1;
    result1 += M4(-0.0055894707, 0.024616467, -0.058816597, 0.1110743, -0.011465785, -0.030399144, 0.0021061865, -0.019712558, 0.004375625, 0.06473043, -0.010878637, 0.03967332, -9.327898e-05, 0.0068967785, 0.043374896, -0.010200288) * inp_0_2_1;
    result1 += M4(-0.020118369, 0.029289626, 0.021079866, -0.037768584, -0.031546667, 0.09489025, -0.04313461, 0.14218879, -0.01308393, -0.06156311, -0.0402065, -0.006023481, 0.016724734, -0.1706834, 0.14807169, -0.03892856) * inp_0_0_2;
    result1 += M4(-0.002559283, -0.112832665, -0.0054648677, -0.12803084, 0.013747645, 0.22809333, 0.009931397, 0.41436553, -0.019098261, -0.32937977, -0.03982481, 0.039139275, -0.010528236, -0.036397543, -0.107218444, 0.024331978) * inp_0_1_2;
    result1 += M4(-0.011059022, 0.041475404, -0.026690505, 0.03449518, 0.009733361, 0.118540406, 0.009706912, 0.28962556, 0.0018646541, 0.0055120527, -0.013270867, -0.042381905, -0.009466091, -0.015655829, 0.0018515467, -0.055862453) * inp_0_2_2;
    result2 += M4(0.0025273398, -0.013482015, 0.013341936, 0.033875275, 0.013943755, 0.049077887, 0.005912211, 0.027131919, -0.0075126514, 0.05796475, -0.0004162067, -0.009394526, 0.0029721544, -0.029158643, 0.029059943, -0.05642746) * inp_0_0_0;
    result2 += M4(-0.055822372, -0.074505806, 0.008040273, -0.0522075, -0.019384509, -0.10845476, -0.048249308, 0.029444098, 0.029514547, 0.01874847, 0.09698857, 0.01514271, 0.07566981, 0.019436307, -0.043074086, 0.06516072) * inp_0_1_0;
    result2 += M4(0.040666644, -0.10046596, -0.07876551, 0.1447397, 0.020123255, 0.06871155, 0.014225925, 0.003030004, 0.022191806, -0.01982433, -0.190888, 0.024015337, -0.045588747, -0.091041595, 0.022802314, -0.022366416) * inp_0_2_0;
    result2 += M4(-0.045418903, -0.013295872, 0.017399244, -0.034159433, 0.050510928, 0.035016447, -0.025657374, -0.07959707, -0.015615334, -0.025577337, -0.010741607, 0.035816085, 0.16574354, 0.060224608, -0.14797819, 0.078518204) * inp_0_0_1;
    result2 += M4(-0.054043293, 0.041036747, -0.03146768, 0.33464104, 0.055931408, 0.047597572, 0.0461478, -0.012679054, 0.17938241, -0.042281326, -0.09900234, 0.05126962, -0.12555875, 0.041728538, 0.17794079, -0.07320428) * inp_0_1_1;
    result2 += M4(0.040425744, -0.01600492, -0.19778946, 0.0770326, -0.04950636, -0.049765456, -0.23774266, 0.06564353, 0.06377161, -0.019641638, -0.10230126, -0.022638408, -0.01010583, -0.07435215, -0.09374565, 0.073303215) * inp_0_2_1;
    result2 += M4(-0.049884398, -0.09964044, -0.0071316683, 0.048705343, -0.021372316, -0.101827845, 0.0018673593, 0.09635024, 0.062105358, 0.04922936, -0.028191283, 0.0015382479, -0.03922449, -0.017457852, 0.0668135, -0.009108947) * inp_0_0_2;
    result2 += M4(0.027285565, 0.017839823, 0.029344006, 0.091485, -0.08984467, -0.07359227, -0.045304146, -0.03706297, 0.088341005, -0.013576976, 0.01422596, 0.08960217, -0.03822135, -0.055585925, -0.07090494, 0.0808253) * inp_0_1_2;
    result2 += M4(0.0039803004, -0.039485797, 0.08467175, 0.055514663, 0.05131704, 0.07045777, 0.025661731, -0.016779406, 0.0263567, 0.0108467005, 0.045520738, 0.04508391, 0.0011258444, -0.040723685, 0.002781445, -0.055450726) * inp_0_2_2;
    result3 += M4(-0.005528819, -0.056511424, -0.019656623, 0.0058344156, -0.013866942, -0.01598083, 0.0012909037, 0.0056401603, -0.039208375, 0.13019663, 0.022724004, -0.07321826, 0.04537503, 0.10510745, 0.0140826395, 0.05727953) * inp_0_0_0;
    result3 += M4(0.14441414, 0.08778964, 0.022267466, 0.01365595, 0.031378005, -0.017788554, -0.05820756, 0.021957986, 0.121885344, -0.033482727, 0.052854307, -0.016910974, 0.012908314, 0.103708, 0.29221368, -0.0027227222) * inp_0_1_0;
    result3 += M4(0.10082689, -0.07481661, 0.04706712, -0.009141106, -0.0007771249, 0.06469776, 0.06807911, 0.0033723384, -0.0153238, -0.037467025, -0.028365292, -0.010003782, -0.027395744, 0.106000565, -0.029963486, -0.0074256263) * inp_0_2_0;
    result3 += M4(0.11785893, -0.27961162, 0.28450903, 0.20297554, 0.12226693, -0.18108116, 0.061977968, -0.018362215, 0.0028091075, -0.096477956, 0.094411984, 0.13721295, -0.051385693, 0.035874553, 0.17564823, 0.1897021) * inp_0_0_1;
    result3 += M4(0.3779045, 0.25134394, -0.050381023, 0.10805873, -0.06656656, 0.038363244, -0.060020983, 0.01185518, 0.113991246, 0.07701328, -0.22200133, -0.101910375, -0.018366035, -0.27688342, 0.4843799, -0.0034446493) * inp_0_1_1;
    result3 += M4(-0.05438795, -0.17182523, 0.016716918, -0.02629163, 0.018185552, 0.010577239, 0.018885547, -0.0018511566, 0.027359853, 0.05999554, 0.07610381, 0.01956219, 0.037235998, 0.15715054, -0.13149811, -0.030296858) * inp_0_2_1;
    result3 += M4(0.066873565, -0.09967835, 0.07820281, 0.09926985, -0.08809239, -0.118596494, -0.055444296, 0.053065695, 0.022555683, -0.028347958, 0.057720423, -0.03824447, 0.04671838, 0.19734381, 0.011957656, 0.1047676) * inp_0_0_2;
    result3 += M4(-0.08312678, 0.10752328, 0.050058585, 0.072807595, 0.11656797, -0.03160153, 0.02690511, -0.062045477, 0.017312746, -0.042040866, -0.053792756, -0.014185437, -0.12567797, 0.05207793, 0.0699875, 0.006711573) * inp_0_1_2;
    result3 += M4(-0.041434024, -0.02829033, -0.029711006, -0.03408625, -0.01005318, -0.003958896, 0.003883336, 0.015326838, -0.009576579, 0.048605215, -0.015399628, -0.001296014, 0.017854707, 0.059679803, -0.030881518, -0.0064071105) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.032037467, -0.0063626617, -0.00886537, 0.034547005, 0.006333309, 0.04381188, 0.026886584, -0.025298677, 0.042638004, 0.6122556, -0.093903325, 0.115788385, 0.02593981, 0.06741396, 0.014040942, -0.03748626) * inp_1_0_0;
    result0 += M4(0.06342706, -0.07806941, 0.14868923, -0.13743582, -0.07247636, -0.071024686, -0.15351193, 0.21086456, -0.060743272, 0.07144678, 0.2951201, -0.26169816, -0.0010330216, -0.0059909285, -0.037781257, 0.041820653) * inp_1_1_0;
    result0 += M4(-0.023400228, 0.022876326, 0.053744696, -0.052608524, 0.030157078, 0.0495072, 0.040229645, -0.021014657, -0.09529847, -0.059736863, -0.18526784, 0.36511198, -0.01263698, 0.0223715, 0.007450289, -0.02596035) * inp_1_2_0;
    result0 += M4(0.029213306, -0.14773239, -0.051338688, 0.034480754, -0.04931932, -0.083814785, -0.08592988, 0.11169009, -0.0010551157, 0.23882943, -0.027729794, 0.0017930539, -0.013184368, 0.055622764, 0.034043744, -0.08111358) * inp_1_0_1;
    result0 += M4(-0.0026415202, -0.04097665, -0.136539, 0.073089994, -0.069589846, 0.12558752, -0.22710416, 0.26021722, 0.17093934, 0.13090889, 0.0017303912, -0.055978574, 0.12454593, -0.15468842, -0.01940606, 0.023436794) * inp_1_1_1;
    result0 += M4(0.098127976, 0.04677122, -0.09123344, 0.081471756, -0.05786424, -0.032229606, -0.05872693, 0.037960112, 0.10830011, 0.12717497, -0.05857067, 0.10543398, -0.04576722, 0.03925837, 0.058913223, -0.08213478) * inp_1_2_1;
    result0 += M4(-0.08525144, -0.08628701, 0.0018065453, -0.027061725, -0.072631, -0.2076264, -0.01145744, -0.01121291, -0.021031898, 0.2742531, -0.012241006, -0.0066330973, 0.047627628, 0.19993368, -0.009452056, -0.01622886) * inp_1_0_2;
    result0 += M4(0.20561905, 0.019043092, 0.0286765, -0.039503444, 0.15486287, 0.117405534, 0.016550811, -0.020669522, 0.060174316, 0.0047177025, 0.03285554, -0.015268, -0.08191724, -0.041678417, -0.022111367, 0.022114802) * inp_1_1_2;
    result0 += M4(-0.02277717, -0.009403723, 0.0066975653, -0.020928666, -0.04217102, -0.029666074, 0.022072671, -0.023068896, -0.042101163, -0.033698678, 0.022981519, -0.02534261, 0.045636505, 0.12065052, 0.004544959, 0.00094510434) * inp_1_2_2;
    result1 += M4(-0.030448059, 0.0005702745, -0.0022379863, 0.1274858, -0.08552902, 0.026681347, 0.0045253923, 0.047804896, -0.04232581, 0.1958721, -0.014751803, 0.13381763, 0.053240664, -0.018520363, 0.006356993, 0.04774809) * inp_1_0_0;
    result1 += M4(0.24144681, -0.036654618, 0.058336407, 0.15926555, -0.2652719, -0.0704033, 0.0073958687, -0.22178993, 0.10939724, 0.21510999, -0.009749664, 0.21203978, 0.0017897347, -0.06630454, 0.004509994, -0.11930807) * inp_1_1_0;
    result1 += M4(0.0016092961, 0.04011496, -0.0002484605, 0.0798052, -0.06932091, 0.030429017, -0.0002883142, -0.050114177, -0.025832087, 0.011002149, 0.028983522, -0.02581008, -0.03520973, -0.01282332, -0.020217832, -0.08734) * inp_1_2_0;
    result1 += M4(-0.02455727, -0.017857028, 0.01870402, -0.022824122, 0.06696618, 0.002631696, 0.077887185, -0.010355176, -0.013627568, -0.057596643, 0.04804841, -0.043716777, -0.06316721, 0.003911841, 0.0085053025, -0.104599304) * inp_1_0_1;
    result1 += M4(-0.0985691, 0.10503146, -0.21346593, -0.20434497, -0.26016843, -0.10891047, 0.28785908, -0.0065277666, -0.117904335, -0.42322737, -0.019879285, -0.39706883, 0.061434332, 0.035571165, 0.005168864, -0.007020613) * inp_1_1_1;
    result1 += M4(0.015054803, 0.08568497, 0.008642267, 0.06326963, -0.052458808, -0.16414005, 0.07199976, 0.00087097974, 0.015167045, -0.10015942, 0.065786116, 0.07691146, -0.044833213, -0.026221575, 0.017620388, 0.03271855) * inp_1_2_1;
    result1 += M4(0.011004644, 0.05914984, 0.027964177, 0.013646058, 0.019615449, 0.039906867, -0.06410359, 0.0037183473, 0.008836889, 0.044800974, 0.014248379, 0.040830143, -0.018033324, -0.12262718, 0.05032493, 0.0016356049) * inp_1_0_2;
    result1 += M4(0.0017731664, 0.35027108, 0.07903838, 0.21870908, 0.005641797, 0.03814065, 0.19267447, 0.04833278, 0.003021506, 0.27835238, 0.08322718, 0.25420094, -0.013067503, -0.18461692, -0.039257895, -0.079365686) * inp_1_1_2;
    result1 += M4(-0.0086469175, 0.07012344, -0.0028012549, 0.040587045, -0.012775865, 0.025247416, 0.05429611, 0.06815172, 0.0056778514, 0.014860004, 0.009904091, -0.00026536672, 0.011247899, -0.04358727, 0.046588838, -0.043083962) * inp_1_2_2;
    result2 += M4(0.03414472, -0.10036785, -0.0294816, 0.038251486, -0.015479943, -0.10499049, 0.004355525, 0.03320167, 0.017550183, 0.023455955, -0.023919296, 0.05464743, 0.006635885, 0.025132628, -0.0064013647, 0.0057593496) * inp_1_0_0;
    result2 += M4(0.30082285, -0.026452975, -0.020350935, 0.083288, -0.26726094, -0.09976585, -0.08257483, -0.22950222, -0.12781799, -0.026598182, 0.012838984, 0.07424749, 0.056690495, -0.0054019764, 0.041369576, -0.073428415) * inp_1_1_0;
    result2 += M4(0.15153973, -0.03445212, 0.33422866, 0.04197066, -0.07961601, -0.04597926, -0.18772455, 0.08504985, 0.125053, 0.068468645, -0.07528435, 0.038981117, -0.1214699, 0.054045226, 0.117802404, 0.004160043) * inp_1_2_0;
    result2 += M4(0.1253746, -0.000684481, -0.0049991375, -0.076016866, 0.030160816, -0.062229507, 0.012337814, -0.05184686, -0.023453232, -0.07908904, 0.023022499, 0.010677002, 0.05755396, -0.008096667, -0.0024095078, -0.017957052) * inp_1_0_1;
    result2 += M4(0.33214605, -0.08328583, -0.012314548, 0.0027816717, 0.20931856, -0.08029167, -0.16815017, 0.1927186, 0.15346664, 0.04053367, -0.08640112, -0.06556407, 0.045495648, -0.055046655, 0.04598916, -0.12046382) * inp_1_1_1;
    result2 += M4(0.05369182, -0.08880949, 0.14061886, 0.009060758, 0.07232226, -0.10624652, 0.21439306, -0.057166357, -0.021730043, 0.032442693, 0.11297761, 0.08165323, 0.049864974, 0.0060096597, -0.018547729, -0.07245801) * inp_1_2_1;
    result2 += M4(-0.048033286, -0.036659542, 0.0013666248, -0.018564885, -0.040528946, -0.08453818, 0.019974744, 0.014991529, -0.06516399, -0.08583945, -0.02536513, 0.0025097409, 0.048528988, 0.052457325, 0.0009240924, -0.01762587) * inp_1_0_2;
    result2 += M4(0.09054015, -0.035522416, -0.029666796, 0.040030356, 0.0016212689, -0.041766338, -0.043519396, -0.0057640593, -0.014979323, -0.045888606, 0.012318133, 0.02302308, 0.03862453, 0.027073083, -0.0042002634, 0.04391127) * inp_1_1_2;
    result2 += M4(0.01516514, -0.098056756, -0.025078533, -0.013749303, 0.033836424, 0.022609346, -0.0053150025, -0.022337144, -0.00864722, -0.017039165, -0.086731344, -0.10369321, 0.00592241, 0.03953336, -0.03312871, -0.0290997) * inp_1_2_2;
    result3 += M4(0.00633245, -0.032357816, -0.052558664, 0.048077583, 0.0018541426, -0.04495163, 0.029374622, -0.03719569, 0.053907815, -0.4543515, 0.33133405, -0.056775205, -0.025928667, 0.20142184, -0.17334445, 0.08278882) * inp_1_0_0;
    result3 += M4(-0.054917075, -0.21041825, 0.07757881, -0.087280504, 0.17238529, -0.07649733, -0.04386582, 0.035569504, -0.088420495, 1.0018026, -0.3571804, 0.28283417, -0.02597516, -0.054111153, 0.18755317, -0.002188234) * inp_1_1_0;
    result3 += M4(0.03431839, 0.030988527, -0.065760896, 0.027140766, -0.05353037, 0.099833675, -0.06395055, 0.0100465715, 0.1378858, 0.6627641, 0.38618416, 0.07378456, -0.040957533, -0.034180764, -0.09499039, 0.02069783) * inp_1_2_0;
    result3 += M4(0.05267488, 0.012412421, 0.029960403, -0.12963918, 0.03238735, -0.06749385, 0.10537174, 0.074947745, -0.08097431, -0.19784567, 0.16797374, -0.017724248, -0.0010881255, 0.15402584, -0.10560194, -0.13908228) * inp_1_0_1;
    result3 += M4(-0.05614406, -0.09699336, -0.17663476, 0.04945978, -0.1727437, -0.24420908, -0.17880365, -0.17266998, 0.11722647, 0.27980047, 0.10763086, 0.18984881, -0.033199593, -0.09725199, 0.1416467, -0.00080198026) * inp_1_1_1;
    result3 += M4(-0.07724322, -0.15108545, 0.06231314, 0.0009344319, 0.00972855, 0.034497004, 0.020488974, -0.031545293, -0.029023226, 0.21205513, 0.109562516, 0.016252056, 0.07379115, 0.15242223, -0.14203925, 0.035231795) * inp_1_2_1;
    result3 += M4(-0.047570385, -0.013223656, 0.08266714, 0.058168285, -0.065762356, -0.15171222, 0.034069143, 0.023415688, -0.023988202, -0.10000857, 0.08655168, 0.17239442, 0.04990214, 0.011339015, 0.007308234, -0.106885575) * inp_1_0_2;
    result3 += M4(-0.03719821, 0.036108907, -0.06145386, -0.092542864, 0.012154054, 0.15293777, -0.010151855, 0.0143104335, 0.039910693, 0.08395291, -0.02840771, 0.0505402, 0.022547327, -0.014048245, 0.076761395, 0.1127114) * inp_1_1_2;
    result3 += M4(-0.013057589, -0.07561569, 0.051407136, 0.031999853, -0.00090225606, -0.05953098, 0.04937369, -0.005504289, -0.006518946, 0.02480318, 0.04918686, 0.04670536, 0.03215727, 0.17468764, 0.020353729, -0.023962233) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.04649532, 0.12833521, 0.029651526, -0.10443203, 0.018914359, -0.40948957, 0.027792113, -0.018949192, 0.041574184, -0.03927296, 0.0037566253, -0.02543687, 0.006582423, -0.1435059, -0.016893102, -0.010260861) * inp_2_0_0;
    result0 += M4(0.034131065, 0.009120788, 0.17370872, -0.20140666, -0.022844486, 0.06813629, -0.09199601, -0.013029765, -0.00027996622, -0.04995322, 0.018466648, -0.03261377, 0.02979124, -0.08450265, 0.087786935, -0.13969581) * inp_2_1_0;
    result0 += M4(-0.03000806, 0.0022999912, -0.00069195504, 0.006044707, 0.032300077, 0.032835282, -0.009566606, -0.08964354, -0.005942433, 0.048874024, 0.053725347, -0.07667959, -0.022022918, 0.0026048687, -0.019448299, -0.0436121) * inp_2_2_0;
    result0 += M4(0.047866065, 0.2048415, -0.027651763, 0.034657642, -0.015803773, -0.268228, -0.009126454, -0.03552815, -0.07379972, 0.17040195, 0.10521162, -0.11207843, 0.08367954, -0.011441324, -0.10554979, 0.07960792) * inp_2_0_1;
    result0 += M4(-0.064839706, -0.2039697, -0.13041748, 0.29617453, 0.0006490674, -0.17658721, -0.05266231, -0.0573293, -0.0037069384, -0.09117892, 0.28541413, -0.39769146, 0.068743154, 0.092702806, 0.069666766, 0.022718107) * inp_2_1_1;
    result0 += M4(0.05423863, 0.059845697, 0.08863212, -0.065765984, -0.07468225, -0.013153128, -0.060748767, -0.061926775, -0.008547577, 0.006130444, 0.23781441, -0.18749909, 0.07961667, -0.017919116, -0.08482752, 0.07386093) * inp_2_2_1;
    result0 += M4(0.01849036, 0.17532505, 0.030366732, -0.020905573, 0.048209533, -0.31909698, -0.0025282018, -0.015999768, 0.12755664, 0.3208078, 0.014066563, -0.018492863, -0.051215082, 0.10544937, -0.022819782, -0.02221176) * inp_2_0_2;
    result0 += M4(-0.007916184, -0.1394092, 0.05137808, -0.08254784, -0.22483146, 0.041537017, -0.02302825, 0.0032852537, -0.22075693, -0.1180387, 0.11204563, -0.09207656, 0.37291464, -0.00730092, 0.07510466, -0.092001155) * inp_2_1_2;
    result0 += M4(0.048146896, 0.057665333, 0.01470055, -0.017639363, -0.14560245, 0.007575124, -0.04027063, 0.033243563, 0.030505972, 0.015121635, -0.00052676187, 0.0021328104, 0.04892053, -0.06610613, -0.029735558, -0.0040616128) * inp_2_2_2;
    result1 += M4(-0.02358923, 0.069318846, 0.0079289675, 0.09403758, -0.054112595, 0.053226426, -0.0063906624, 0.06941909, 0.028949684, 0.0058810203, -0.00054396945, 0.022026151, -0.017138168, -0.0030913553, 0.009768122, 0.024593689) * inp_2_0_0;
    result1 += M4(0.100849085, 0.054875404, -0.033294674, 0.29923934, -0.071265586, -0.07286411, -0.035167158, -0.2497097, -0.018655209, 0.08113894, 0.024303036, 0.17935434, 0.20548894, 0.038047977, -0.020551126, 0.12996499) * inp_2_1_0;
    result1 += M4(-0.008064245, -0.025192231, 0.014228819, 0.07636268, -0.0065824483, 0.03797067, -0.010935045, -0.19342592, -0.017907193, -0.027446145, -0.009381135, -0.027711468, 0.02760097, 0.022052163, 0.006724513, 0.022215249) * inp_2_2_0;
    result1 += M4(0.057678085, -0.06833822, -0.020109687, 0.07778355, -0.015695585, -0.09035543, -0.012670906, -0.05957202, 0.05095739, -0.021217082, -0.068336785, -0.04218061, 0.095714904, -0.03545593, 0.054635305, -0.013668266) * inp_2_0_1;
    result1 += M4(0.002295796, -0.14341775, -0.100643165, 0.14259358, -0.006959663, -0.24005021, -0.03714208, -0.42093247, 0.040628634, 0.073225744, -0.013642565, -0.09073694, -0.07910848, -0.17590217, -0.19886498, -0.057496835) * inp_2_1_1;
    result1 += M4(-0.03796055, 0.03272098, 0.0035556266, 0.054344043, 0.00077323994, -0.34830698, -0.032531407, -0.31767792, -0.003467039, 0.1552867, 0.018067421, 0.090848185, 0.014727955, -0.07505873, -0.04214176, -0.11728043) * inp_2_2_1;
    result1 += M4(-0.0065537277, 0.32685566, 0.014683474, 0.11472074, -0.017271241, -0.017751409, -8.224072e-05, 0.01638837, -0.05124896, -0.0077258544, 0.0056321076, 0.033412848, 0.0031824752, -0.037837528, -0.09179116, -0.03229043) * inp_2_0_2;
    result1 += M4(-0.0039170254, 0.2214246, 0.035402022, -0.17274706, -0.013243684, -0.71749645, -0.037167363, -0.13161023, -0.0016469678, -0.08779978, 0.0031127746, -0.019639676, 0.029131271, 0.34519175, 0.14046633, 0.09581738) * inp_2_1_2;
    result1 += M4(-0.0108135445, 0.03655057, 0.020616379, -0.13961163, -0.025282685, -0.28267825, -0.025685733, -0.06080535, -0.005261027, -0.1382054, 0.017896742, -0.19986257, 0.0064382316, 0.11526299, -0.01628674, 0.097188674) * inp_2_2_2;
    result2 += M4(0.015786076, -0.09823402, 0.008555339, 0.083328076, -0.044889353, -0.1081901, -0.005905449, 0.14088279, 0.009620262, -0.019049585, 0.007776168, 0.026975531, 0.05440843, -0.013575753, 0.020958591, -0.007286537) * inp_2_0_0;
    result2 += M4(0.11096377, -0.041116007, -0.061210074, 0.050177492, -0.08091105, -0.07865, -0.0016271473, -0.31928992, 0.03131424, -0.079148136, 0.015474696, 0.031868502, 0.14799537, -0.060598664, 0.11819644, 0.06275135) * inp_2_1_0;
    result2 += M4(0.055045176, -0.031515412, 0.030920742, 0.015375659, -0.06410524, -0.0824165, -0.45230186, -0.17255934, -0.021686235, -0.04769999, 0.006326626, -0.006015118, 0.111508474, 0.060967498, 0.013808496, -0.09725379) * inp_2_2_0;
    result2 += M4(0.121303804, -0.051738568, -0.02450732, 0.084524065, -0.04675137, -0.099464536, 0.011120642, -0.058881722, 0.00055060186, -0.069879524, -0.0056259325, 0.013790468, 0.07843797, -0.06471324, -0.025986472, -0.10015694) * inp_2_0_1;
    result2 += M4(0.07656751, -0.013132313, 0.029541299, 0.17735285, -0.16760641, 0.06515024, 0.01444563, -0.1921359, 0.03614407, -0.03940592, 0.09976259, 0.08489426, 0.21228422, -0.097177304, -0.013241133, -0.042891786) * inp_2_1_1;
    result2 += M4(0.030479044, 0.054488506, 0.11564864, -0.0501745, -0.07007316, -0.015574511, -1.0389162, -0.39155677, -0.031972144, -0.08087214, -0.38050514, 0.0074190875, 0.04019092, -0.055417005, 0.44766518, 0.0008367292) * inp_2_2_1;
    result2 += M4(-0.06569973, -0.052938238, 0.00948757, 0.07343516, 0.03360245, -0.10785071, 0.0028964533, 0.008334999, -0.0002994398, -0.09927322, -0.013799964, -0.024939109, -0.101643026, -0.012713745, -0.006026484, 0.014669567) * inp_2_0_2;
    result2 += M4(-0.1028761, -0.113089666, -0.013131058, -0.16518974, -0.004954434, -0.09895239, 0.010865757, -0.02593067, -0.08475534, 0.016139751, 0.1419227, -0.13899072, 0.07912342, 0.010005729, 0.001714913, -0.056831274) * inp_2_1_2;
    result2 += M4(-0.03945056, -0.08846958, -0.0865879, -0.019906737, 0.0038679754, -0.083643876, -0.026265303, 0.08093892, 0.0029539396, -0.000833505, -0.018911328, -0.05077573, 0.061297372, -0.0055355383, 0.14151864, -0.07643122) * inp_2_2_2;
    result3 += M4(-0.18011858, 0.051600747, -0.23257194, -0.14028843, 0.015919335, 0.11539603, 0.09021419, 0.066007026, -0.030206963, 0.0064832526, 0.0032993124, 0.037784614, -0.0060139475, -0.11222216, 0.034881365, 0.035581928) * inp_2_0_0;
    result3 += M4(-0.0360025, 0.0062503954, 0.20701258, 0.08920548, 0.016740728, -0.55251515, -0.3937384, -0.14639425, -0.019856915, -0.09744068, 0.028296443, -0.024085887, -0.067714944, 0.09830283, 0.16899398, -0.045388848) * inp_2_1_0;
    result3 += M4(0.048460145, 0.09192455, -0.087227836, 0.002083424, -0.1022515, -0.12476332, -0.07591435, 0.00961185, -0.07391368, 0.08356397, -0.08206762, 0.013240187, 0.022003774, -0.1762927, -0.10756735, -0.025685098) * inp_2_2_0;
    result3 += M4(0.091022395, 0.103162855, -0.33109748, -0.11528669, -0.0075957123, 0.08433299, 0.029722976, -0.15601839, 0.007409861, 0.21195592, -0.07690831, -0.08151649, 0.009559008, -0.4814637, 0.07928651, 0.18727362) * inp_2_0_1;
    result3 += M4(0.094372995, 0.06902654, 0.25727537, 0.053122487, -0.16638872, -0.6250875, -0.34848046, -0.19238319, -0.27301174, -0.10483325, -0.010124436, 0.053630587, -0.0136457, 0.45861948, -0.087388046, 0.14333738) * inp_2_1_1;
    result3 += M4(0.02854275, -0.010091816, -0.18537839, 0.0066075977, 0.090590395, -0.3006641, -0.033569314, 0.05739014, 0.19095221, 0.059886947, -0.05574998, 0.046500724, -0.111466415, -0.32452005, 0.033775162, -0.028158383) * inp_2_2_1;
    result3 += M4(0.049076673, 0.22627595, -0.10162335, 0.08552061, -0.0064506256, 0.102363236, 0.020721778, 0.055790372, 0.01148364, 0.13295628, -0.042368416, -0.023559857, -0.11142263, -0.21168745, -0.051423647, -0.0005230924) * inp_2_0_2;
    result3 += M4(0.07795398, -0.011888424, 0.10088133, -0.06437957, 0.058112785, -0.09358388, 0.003200609, 0.0018675149, 0.16816816, 0.05900352, 0.014105686, -0.04038272, 0.051152784, 0.1949221, 0.0059491587, -0.007218364) * inp_2_1_2;
    result3 += M4(-0.028976435, 0.063588135, -0.022505194, 0.0058498373, -0.098319665, -0.040666997, 0.026900938, -0.02649287, -0.044149976, 0.070764914, -0.00015630634, 0.0024124342, 0.006132262, -0.1505336, 0.025321227, -0.02365698) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0157959, 0.13937333, 0.055519845, -0.12710734, 0.0003552972, 0.042946883, -0.0037864791, 0.018608613, -0.02481037, -0.16908711, -0.018917551, 0.03959906, -0.0027405547, 0.13959046, -0.052257326, -0.0114309015) * inp_3_0_0;
    result0 += M4(-0.0035697552, 0.060876243, -0.054170836, 0.07789798, -0.00040085244, 0.013043614, 0.034465197, -0.035689477, -0.02790725, 0.063441195, -0.06163273, 0.078186326, -0.025520183, -0.12153307, -0.056522455, 0.091565356) * inp_3_1_0;
    result0 += M4(0.00080660323, -0.026254512, 0.0071205087, -0.008320347, 0.00013049631, 0.03169958, 0.025136884, -0.012432175, 0.028937418, -0.03143869, -0.09088811, 0.042276297, 0.030229837, 0.10674568, -0.021674814, 0.036696196) * inp_3_2_0;
    result0 += M4(0.10884511, -0.6043717, 0.11329892, -0.01607165, -0.068652734, -0.21757276, -0.046284825, 0.008720033, 0.03618236, -0.3017691, -0.0021360235, -0.0026878105, -0.03079477, 0.098262854, 0.103876516, -0.16913782) * inp_3_0_1;
    result0 += M4(0.071278706, 0.11238893, 0.14197145, -0.20058544, -0.31415755, -0.023543298, -0.073867775, -0.08714326, 0.22351322, 0.103970796, -0.11500038, 0.14179152, 0.1502071, -0.116120614, 0.09260985, 0.06676252) * inp_3_1_1;
    result0 += M4(0.018646527, -0.06872835, -0.05277375, 0.016059285, 0.036380462, 0.04431087, -0.041543882, 0.078022495, 0.013364868, -0.079472564, -0.17761979, 0.20798284, -0.07700431, 0.0815179, 0.018190475, -0.016834555) * inp_3_2_1;
    result0 += M4(0.21933909, -0.31274703, -0.018694693, -0.004312216, 0.08365506, -0.1034897, -0.010657018, -0.0040512322, -0.0061044297, -0.13676827, 0.011238217, -6.725921e-05, -0.44794804, 0.0716161, -0.060818974, -0.14219) * inp_3_0_2;
    result0 += M4(0.06869485, 0.16403092, 0.031276863, -0.040370803, -0.22424473, -0.016828591, -0.0033063695, 0.01412366, -0.24012947, 0.036744963, -0.07336633, 0.07401964, -0.22954991, -0.17858577, -0.071404286, 0.06758194) * inp_3_1_2;
    result0 += M4(-0.060846675, -0.061758637, -0.02348241, 0.05111664, -0.10772356, 0.07507003, 0.053738106, -0.03936734, 0.008289699, -0.0074435743, -0.014899149, 0.00685583, 0.10621763, 0.0840235, 0.026961032, -0.034482896) * inp_3_2_2;
    result1 += M4(0.08114228, 0.0054167905, -0.015838731, -0.09591962, -0.02016941, -0.047000322, 0.0032005054, 0.063093714, 0.05260133, -0.11017029, -0.0060504554, -0.08765176, 0.018377861, -0.07439867, -0.023131995, -0.21446958) * inp_3_0_0;
    result1 += M4(-0.0085481955, -0.016322197, -0.02439346, 0.091537595, 0.023630152, -0.062981576, 0.009225881, 0.05554676, 0.33055067, -0.20569402, -0.0304965, -0.25667787, 0.014631347, -0.053993884, -0.0077624475, -0.29046866) * inp_3_1_0;
    result1 += M4(0.014477961, -0.0017936572, -0.014080102, -0.008499064, 0.019247377, 0.04621049, -0.005744147, 0.26791272, 0.07389046, 0.007097034, 0.0016441277, -0.051165756, -0.05115604, -0.04524965, -0.0025156876, -0.23370442) * inp_3_2_0;
    result1 += M4(-0.027303176, 0.027424002, -0.078451864, 0.124384664, -0.00181429, 0.009227786, 0.01788723, -0.012174668, -0.05403138, 0.058099598, -0.0075362767, 0.002434111, -0.024160383, 0.15022668, 0.0084883, 0.23732743) * inp_3_0_1;
    result1 += M4(-0.18545258, 0.15383144, 0.007985019, 0.009759529, 0.00018796202, 0.1663459, -0.0027621367, -0.49510306, 0.294102, 0.14028196, -0.28162113, 0.2616477, 0.00841148, 0.07733438, 0.04209268, 0.35543415) * inp_3_1_1;
    result1 += M4(-0.0023745934, 0.01512453, -0.005563528, 0.024480673, -0.023923615, 0.018223252, 0.0066735013, -0.41347072, 0.11826382, -0.10694826, -0.088692635, -0.059859335, 0.03898514, 0.13293351, 0.06481278, 0.394952) * inp_3_2_1;
    result1 += M4(-0.024320817, 0.060560614, 0.07903385, -0.045580093, 0.023195524, -0.14900048, 0.0018295055, -0.083338715, -0.010033099, -0.10006336, 0.004384597, -0.0569323, -0.0069364733, -0.78725785, 0.044533364, -0.9593462) * inp_3_0_2;
    result1 += M4(-0.02000373, -0.06406379, 0.159924, 0.005698913, 0.024212928, -0.38618094, -0.041971184, -0.026788212, 0.039812833, -0.17275526, -0.28961816, -0.18972553, 0.0032919073, -0.21279642, 0.0038654483, -0.31045425) * inp_3_1_2;
    result1 += M4(-0.00440745, -0.041128665, 0.009907839, 0.0074766492, -0.008332301, 0.08771385, 0.020348404, 0.03910773, 0.02227811, 0.06545879, -0.12884326, -0.0065444787, -0.028545817, -0.0050017796, -0.0136059355, -0.05043616) * inp_3_2_2;
    result2 += M4(0.07612383, -0.07070792, -0.01967884, 0.11821407, -0.015492787, -0.036352187, -0.012704267, -0.1257189, -0.03773504, -0.01841119, 0.008244913, -0.055166405, -0.021539068, -0.09526231, -0.009489075, -0.1091806) * inp_3_0_0;
    result2 += M4(-0.03224657, -0.074842766, 0.05558619, 0.060519125, -0.051586423, 0.039885476, -0.03917895, 0.14950967, 0.21008445, 0.006524145, 0.027838971, -0.056907013, 0.07307479, 0.042432714, -0.07832338, -0.038530674) * inp_3_1_0;
    result2 += M4(0.036332212, -0.069216475, 0.2596303, -0.02334205, 0.03667432, 0.068909526, -0.12242828, -0.0018545922, 0.10807532, -0.016555313, 0.21763374, -0.06415922, -0.06339468, -0.03272182, 0.25750348, 0.07888799) * inp_3_2_0;
    result2 += M4(0.13908824, -0.014268873, 0.087818995, -0.003087822, -0.05170644, -0.107413635, 0.00869623, 0.05208807, -0.037161794, -0.012723527, -0.01663996, 0.044972155, -0.018534709, -0.043184817, -0.014044039, -0.14830334) * inp_3_0_1;
    result2 += M4(-0.07805329, -0.048697412, 0.28925472, 0.0005136911, -0.042710233, 0.023377772, 0.041755278, -0.2852264, -0.1660632, 0.051942986, 0.0823535, -0.14199157, -0.037925567, 0.02348958, 0.12809724, -0.008809575) * inp_3_1_1;
    result2 += M4(0.035425544, -0.07128681, -0.3237349, -0.027011538, -0.13250665, 0.009270325, -0.7111087, 0.10338469, -0.06286709, 0.04428181, -0.08922366, 0.04185109, 0.033489272, 0.055948444, -0.36135322, 0.012384415) * inp_3_2_1;
    result2 += M4(0.07247094, -0.078124054, -0.026779268, 0.0019211217, 0.009195672, 0.073382676, -0.010143598, 0.029459892, 0.059782922, 0.018830143, 0.0074769813, -0.030950673, -0.15056685, -0.081874296, 0.024725398, -0.45130223) * inp_3_0_2;
    result2 += M4(0.1498119, -0.022922873, 0.114258006, -0.062564656, -0.040247783, -0.039771874, -0.023234675, 0.13264485, -0.096652165, 0.019205613, -0.019656975, 0.10227285, 0.009711382, 0.021044856, 0.06359457, -0.008152324) * inp_3_1_2;
    result2 += M4(-0.010130155, 0.002593755, 0.11255528, 0.08413631, -0.046395786, -0.10692184, -0.012769834, -0.097334094, -0.087304786, 0.00077504944, -0.12301616, 0.051919177, -0.0002984756, 0.078692846, 0.17717595, -0.1528274) * inp_3_2_2;
    result3 += M4(-0.06392729, 0.13494079, -0.12902553, 0.061896387, 0.030113257, -0.03425152, 0.045542717, -0.08501946, 0.020730907, 0.16748641, -0.1406504, -0.03781507, 0.08029793, -0.101682104, -0.07709265, -0.03148614) * inp_3_0_0;
    result3 += M4(0.040427007, 0.0101038115, -0.034501813, -0.012486128, 0.06995661, 0.06784493, -0.19528732, 0.03933137, -0.0060775657, -0.33507982, 0.2107243, -0.024911245, 0.10701763, 0.3020508, 0.25056925, 0.03310573) * inp_3_1_0;
    result3 += M4(0.031253014, -0.0927608, 0.06067622, 0.0102020735, -0.012810101, -0.04933638, 0.12833154, 0.00043113652, -0.0301797, -0.07400994, -0.105332255, -0.08913701, 0.011114498, 0.39445916, -0.11685386, -0.01708306) * inp_3_2_0;
    result3 += M4(0.09617999, 0.2029887, 0.03020106, -0.2215042, 0.030052928, -0.025599644, 0.07836914, -0.33864874, -0.021407086, 0.043248203, -0.14554916, -0.17092367, -0.10135379, 0.16430289, -0.26228806, -0.2240628) * inp_3_0_1;
    result3 += M4(-0.092249475, -0.05281011, -0.6596897, 0.023628948, -0.22468925, -0.33884248, -0.4070004, 0.084862486, 0.15368396, -0.20862062, 0.2561008, 0.18475932, 0.11578623, 0.004176837, 0.23857103, 0.045613162) * inp_3_1_1;
    result3 += M4(-0.01948371, -0.23290335, 0.14344276, 0.022451945, 0.051424954, 0.07389456, 0.06216722, 0.019470599, -0.112156466, -0.13268578, 0.043400556, -0.032062538, -0.011146712, 0.19251867, -0.1648396, 0.006842723) * inp_3_2_1;
    result3 += M4(-0.0450338, 0.008889886, 0.0031730842, -0.2407662, 0.0006303715, 0.08660891, 0.04883386, -0.22163577, 0.04198193, 0.073386975, -0.037278354, -0.07758578, -0.31176782, -0.26655784, -0.34249714, -0.4723513) * inp_3_0_2;
    result3 += M4(0.107206024, 0.18759345, -0.056337293, -0.08000021, 0.0766529, -0.16440603, 0.01993638, 0.046818413, -0.16002162, -0.24724008, -0.033489637, 0.13797292, -0.21348943, -0.10193043, 0.11397762, -0.038667597) * inp_3_1_2;
    result3 += M4(-0.028654832, -0.06803099, 0.042871803, 0.009207539, 0.073819526, 0.08506372, 0.042860515, 0.026937114, 0.032425072, -0.05011016, -0.03653686, 0.0028414393, 0.03230986, 0.0882018, 0.024270803, -0.022084877) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.013836228, 0.0039650495, 0.01341604, -0.01211914);
    V4 result1 = V4(0.0042437315, 0.007854127, -0.0065305377, -0.00510081);
    V4 result2 = V4(0.010931155, 0.009373519, 0.0018143507, 0.0029474278);
    V4 result3 = V4(-0.0044099437, 0.0011364841, 0.034204476, -0.013302823);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.06402663, -0.30371842, -0.042796716, -0.002369466, -0.02979805, -0.01052173, 0.021376157, -0.06950215, 0.09591027, 0.008879748, -0.10238462, 0.093092225, -0.2113491, -0.036805023, 0.13058129, -0.1194103) * inp_0_0_0;
    result0 += M4(-0.4672737, -0.9498358, -0.2053825, -0.3428248, 0.02976987, 0.04580014, 0.047195815, -0.04001235, -0.08946229, -0.064265594, 0.057429973, -0.022842113, 0.020230561, 0.051980477, 0.008753576, 0.0542008) * inp_0_1_0;
    result0 += M4(0.47217113, -0.3035356, -0.58514166, -0.41664925, 0.16161792, 0.13088518, 0.08666148, -0.2185097, -0.055161737, -0.080989525, -0.037345007, -0.015897479, -0.01589992, 0.027554017, -0.02031215, 0.03660443) * inp_0_2_0;
    result0 += M4(-0.006803412, 0.081963226, -0.012265059, 0.10819664, 0.052171692, 0.11779551, 0.08536974, -0.018817633, -0.09571929, -0.033867452, 0.018162573, -0.036678664, 0.07313978, 0.01633977, -0.11835587, -0.018116945) * inp_0_0_1;
    result0 += M4(0.120056964, 0.2013583, 0.0871395, 0.25540653, 0.15382206, 0.113784894, 0.4597318, 0.14468671, 0.3297779, -0.6201455, 0.009884825, -0.08004758, -0.4986677, 0.63256645, -0.03191973, -0.008040852) * inp_0_1_1;
    result0 += M4(0.18456353, -0.068210945, -0.12118207, 0.024346763, -0.13705097, 0.2151778, -0.058780212, 0.033318624, -0.10132056, -0.11062069, 0.052599918, 0.1152317, 0.15781341, 0.13625896, 0.014291464, -0.10871525) * inp_0_2_1;
    result0 += M4(0.0026581162, -0.004804724, 0.025339834, -0.014420838, -0.05408788, 0.053698435, 0.040840354, -0.03321217, -0.040732756, 0.009784283, 0.103759184, 0.0057771713, 0.052979648, 0.0004166657, -0.14979866, -0.035909064) * inp_0_0_2;
    result0 += M4(0.15647791, -0.14362977, 0.23149747, 0.05206539, 0.14709319, 0.12464052, -0.27039954, -0.02973008, 0.018055074, 0.06640373, 0.012424172, -0.00085065165, -0.24904172, 0.01760512, -0.3301118, -0.013542714) * inp_0_1_2;
    result0 += M4(-0.025030691, 0.042199325, -0.063590065, -0.009052204, -0.15102082, 0.15276313, 0.02704024, -0.055772096, 0.12240965, 0.038212538, -0.027642354, 0.025808634, -0.25224873, 0.04619361, 0.027916342, -0.046728794) * inp_0_2_2;
    result1 += M4(0.37892506, -0.0041227355, 0.12141599, 0.22539927, -0.06457325, -0.041808493, 0.060814742, -0.017499974, 0.05799031, 0.050339386, 0.027192544, 0.049970187, -0.055315852, -0.11026847, 0.07757321, -0.029938344) * inp_0_0_0;
    result1 += M4(-0.14438424, -0.46723354, -0.18005374, 1.4547133, -0.27802688, -0.015678264, -0.11780892, -0.0081583345, 0.037558213, -0.013527081, -0.16468029, 0.0537152, 0.058686703, 0.07986524, 0.089245975, 0.069126196) * inp_0_1_0;
    result1 += M4(-0.83061194, -0.25666457, 0.7381141, 0.39033824, -0.21815765, -0.017385323, -0.41317195, 0.037554696, 0.022705521, -0.030954545, -0.04002731, -0.0071895835, -0.0076118126, 0.011749144, 0.0193915, 0.024436634) * inp_0_2_0;
    result1 += M4(0.12478222, 0.017423104, 0.042740136, -0.016954403, -0.17629571, 0.04607168, 0.022779116, -0.010142568, 0.0043681837, -0.0400253, 0.22195484, 0.006595283, -0.07111744, -0.039973184, -0.19496498, 0.0794793) * inp_0_0_1;
    result1 += M4(0.22010641, -0.008603118, -0.18143992, -0.056532197, -0.09939625, 0.030102136, 0.10255851, 0.022341032, 0.4405548, 0.13645458, -0.052672036, -0.021496752, -0.3848568, -0.1465216, 0.0028143756, 0.0629187) * inp_0_1_1;
    result1 += M4(0.08199863, -0.17862375, 0.12971827, 0.04034341, -0.33811092, -0.075645894, 0.26232663, -0.21088909, -0.056755427, -0.082075946, -0.15986596, 0.052470855, 0.0010003743, 0.09756258, 0.19203098, 0.069301285) * inp_0_2_1;
    result1 += M4(0.016231267, 0.020588377, 0.003123296, 0.029167274, -0.110176764, -0.03496144, 0.059088126, -0.12685084, 0.009681556, 0.059449516, 0.0355932, 0.011789509, 0.053435013, -0.12138175, -0.099341094, -0.041966982) * inp_0_0_2;
    result1 += M4(-0.062319018, 0.07982794, 0.13368404, 0.2635391, -0.13547565, -0.1315516, -0.22699697, -0.20249408, 0.042832877, -0.18787771, -0.1356582, 0.015093507, 0.03106194, 0.0064564543, 0.04058215, -0.2986257) * inp_0_1_2;
    result1 += M4(0.03822846, -0.017679263, -0.06938097, -0.045100227, -0.0684168, -0.07726635, 0.004048907, -0.15928248, -0.028046908, -0.027191058, -0.010417651, -0.048702702, 0.10330726, -0.0012804139, -0.118929565, -0.11743363) * inp_0_2_2;
    result2 += M4(0.17217536, -0.093616374, -0.37265146, 0.10189711, 0.019319689, 0.0067015914, -0.060908712, 0.010924221, 0.005063324, -0.019964926, -0.0401464, 0.03960771, 0.076245435, 0.015505491, -0.07772787, -0.009785853) * inp_0_0_0;
    result2 += M4(-0.6442134, 0.404251, -1.3304967, -0.42454097, -0.21887079, -0.012013068, 0.09184013, 0.0032834234, -0.020956166, -0.0072849803, -0.044002492, -0.05541304, 0.027330935, -0.0006644944, 0.09305872, 0.0920972) * inp_0_1_0;
    result2 += M4(-0.4820197, 0.040188648, -0.5845049, -0.24081722, -0.3870947, 0.06920552, 0.14643422, 0.03776536, 0.079143174, 0.039444506, -0.01594302, -0.016662078, -0.039214358, -0.0005759122, 0.0021153917, -0.021370428) * inp_0_2_0;
    result2 += M4(0.030954748, -0.031232895, 0.041191395, 0.019140208, -0.0783933, -0.023314362, 0.06303267, -0.0295061, 0.088958174, 0.03605106, -0.0006656726, 0.018466387, -0.1088284, -0.026514547, -0.13552608, 0.044023737) * inp_0_0_1;
    result2 += M4(-0.071172014, -0.111477435, -0.18079774, -0.1314843, -0.30457738, -0.12048684, -0.018902171, 0.22441757, 0.39262015, -0.1530426, -0.18970048, -0.015152583, -0.54865915, 0.24682547, -0.061575163, 0.32043493) * inp_0_1_1;
    result2 += M4(-0.16486439, -0.02787746, -0.055513598, 0.003507465, -0.28500095, -0.00995954, -0.20797259, 0.0655985, -0.012079133, 0.06307779, 0.014742208, -0.09834081, -0.06882489, -0.055949014, -0.055872094, 0.14595525) * inp_0_2_1;
    result2 += M4(0.011217221, -0.0021615904, -0.014981781, 0.013477872, -0.050298464, -0.0058718645, 0.055501353, -0.026436217, 0.044423863, -0.0050954856, 0.04867347, 0.12085323, -0.035765182, -0.047006626, -0.06802698, -0.15392205) * inp_0_0_2;
    result2 += M4(0.08088976, 0.10232596, 0.06525048, -0.154509, -0.1338597, -0.02890318, 0.059586108, -0.15172353, 0.099190615, 0.073483564, -0.033856913, 0.103581265, -0.14598374, -0.1267368, -0.07895117, -0.12011341) * inp_0_1_2;
    result2 += M4(0.030094912, -0.01962048, -0.083061896, 0.023120368, -0.16668236, -0.049477845, 0.1483658, -0.09635559, -0.08618403, 0.026821626, -0.033466622, -0.08557554, 0.08581828, -0.03464656, 0.06950206, 0.15325436) * inp_0_2_2;
    result3 += M4(0.0031332786, 0.3815588, -0.1983196, 0.044358958, 0.06481632, 0.019565817, -0.030252997, -0.055437636, 0.082146704, -0.021118056, -0.050902992, 0.06430063, -0.055098876, -0.04923709, 0.07661376, 0.05479309) * inp_0_0_0;
    result3 += M4(-0.22372982, 0.8806949, -0.13932905, 0.0039588436, 0.2072646, 0.22936587, -0.109531745, -0.08870672, 0.063422896, 0.012753135, 0.09006859, -0.0015020653, -0.26734647, -0.009465844, -0.15426259, 0.012829535) * inp_0_1_0;
    result3 += M4(-0.1500694, 0.44386625, 0.2084295, -0.09143433, -0.2027228, 0.12328319, 0.041686792, -0.20849377, 0.07353003, 0.07069645, -0.011294901, -0.024883095, -0.01652299, -0.0028044153, -0.004495955, 0.061928023) * inp_0_2_0;
    result3 += M4(-0.011884103, 0.06213051, -0.045090225, 0.13872118, -0.024414979, 0.087417774, 0.021565853, -0.059346907, 0.15249477, -0.33285558, 0.018617641, 0.047503877, -0.118120395, 0.23188362, -0.016521253, 0.10279572) * inp_0_0_1;
    result3 += M4(0.12472795, -0.15795104, -0.27112177, -0.020848703, -0.09594584, 0.58870584, -0.017152954, -0.093710765, 0.3848318, 0.14981851, -0.08110604, 0.23178068, -0.432732, -0.15750663, 0.14231746, -0.14241973) * inp_0_1_1;
    result3 += M4(-0.109302185, 0.044393912, -0.013078425, 0.15329483, 0.16215685, 0.3695327, 0.016934983, -0.20303842, 0.1493361, 0.09766781, -0.12841365, 0.22738156, -0.27704078, -0.11611698, 0.17127645, -0.16648848) * inp_0_2_1;
    result3 += M4(0.015018266, 0.042522274, 0.023644002, -0.016263405, 0.10015164, 0.08227631, -0.018914903, -0.05681912, 0.14847828, 0.046230514, 0.04351908, -0.01826294, -0.16297925, -0.087876126, -0.08004058, 0.05803778) * inp_0_0_2;
    result3 += M4(-0.0088821715, -0.032809842, -0.003702263, -0.010733796, 0.05440474, 0.16509779, 0.024404317, 0.02666578, 0.15982176, -0.14733379, -0.10186742, 0.13690569, 0.01564571, 0.18071549, 0.11600475, -0.07885071) * inp_0_1_2;
    result3 += M4(-0.029120836, -0.04707982, 0.008530882, -0.017830355, 0.17127146, 0.26143655, -0.06763345, -0.062298823, 0.06103546, -0.015975786, -0.012570367, 0.07494842, -0.04035308, 0.011582441, -0.03531176, -0.1119109) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.00024235841, 0.044237256, 0.029612841, -0.026459493, 0.05249775, 0.05882001, -0.08681608, 0.048844445, 0.011331989, -0.007403441, -0.08346079, 0.043374863, 0.057357755, 0.036009498, -0.036635634, 0.0010506235) * inp_1_0_0;
    result0 += M4(0.19119205, 0.0889649, -0.15616953, -0.05819233, -0.21012567, 0.28978157, 0.33203152, 0.15331908, -0.10844401, -0.10352574, 0.15432133, 0.08783272, 0.1414639, 0.057999488, -0.22307071, 0.023729723) * inp_1_1_0;
    result0 += M4(0.082637005, 0.091267124, 0.06280925, 0.049062237, 0.14884302, 0.14973976, -0.082990296, -0.06483056, -0.20666184, -0.14904062, -0.16448402, 0.05848304, 0.007785548, -0.08029042, 0.019714678, -0.0076289494) * inp_1_2_0;
    result0 += M4(-0.015050734, 0.04180713, 0.061847437, 0.023397336, -0.024339715, 0.10175356, -0.00039744313, 0.03796905, 0.02898451, -0.029670332, -0.11819276, -0.0038954157, -0.13178399, -0.0910044, -0.065279976, -0.03251865) * inp_1_0_1;
    result0 += M4(0.34976384, 0.16838108, 0.014247085, 0.086906664, 0.34908387, 0.051183864, 0.28159225, 0.07041626, 0.3200461, -0.23214245, 0.22726426, -0.07346636, 0.63080025, -0.440125, -0.098491594, 0.20637785) * inp_1_1_1;
    result0 += M4(0.06695126, 0.027508399, 0.058192138, -0.124068856, -0.11523038, -0.016491482, 0.06863614, -0.10052991, -0.06294757, -0.06262339, 0.02292005, 0.057888813, -0.08209667, -0.020127827, 0.07792502, -0.042506974) * inp_1_2_1;
    result0 += M4(-0.0003820367, 0.07597468, 0.015400211, -0.050455, -0.023730665, 0.03702835, 0.012011492, -0.028532822, -0.043311253, -0.0017296161, -0.0047499887, 0.009591473, -9.2838876e-05, -0.088627204, 0.12723361, -0.040417843) * inp_1_0_2;
    result0 += M4(0.16350336, 0.0037771536, 0.15014891, 0.10870442, 0.20143403, -0.07640249, 0.110880196, 0.041324824, 0.03414088, 0.06037862, 0.09206566, -0.056463506, -0.055199537, -0.103364386, 0.04342439, 0.012851304) * inp_1_1_2;
    result0 += M4(0.11294378, -0.029793933, 0.01924815, 0.025051523, 0.06594459, -0.025607679, 0.07447417, 0.02000564, 0.008779439, -0.045146566, 0.055140413, 0.015592284, 0.047584068, 0.0075525045, -0.116524816, -0.011839612) * inp_1_2_2;
    result1 += M4(-0.04648961, 0.004968732, -0.058893755, -0.05078108, 0.21163024, 0.11192016, -0.2189878, 0.07294934, 0.173235, 0.08950062, -0.051711824, 0.011867383, -0.026372872, 0.054445527, -0.110225305, 0.0590772) * inp_1_0_0;
    result1 += M4(-0.027669834, 0.02199632, 0.14158405, -0.09015777, -0.007984331, -0.11267096, -0.2211857, -0.03866972, 0.23721476, 0.11693376, -0.12498591, -0.08724709, -0.042992037, -0.021903133, 0.17659062, -0.13059732) * inp_1_1_0;
    result1 += M4(-0.07396051, -0.03530828, -0.0069647646, -0.08320448, -0.10961523, 0.12046549, 0.23980722, -0.029149689, 0.18245155, 0.04041115, 0.09661666, -0.105476886, 0.09482115, 0.0049847644, -0.0053425147, 0.016059415) * inp_1_2_0;
    result1 += M4(-0.13501178, 0.0720821, 0.09396199, 0.024453625, -0.009033651, 0.055644475, 0.011080266, -0.10581293, 0.0423448, 0.011838809, -0.12261444, 0.057447966, 0.059861884, -0.041602228, 0.18859981, -0.12113186) * inp_1_0_1;
    result1 += M4(-0.3656667, -0.059073362, -0.16029967, 0.16461934, 0.08137642, 0.14693764, -0.19952911, 0.08324123, 0.038820844, 0.386782, 0.32768592, 0.2742649, -0.17666987, 0.3158371, 0.27500468, -0.32482788) * inp_1_1_1;
    result1 += M4(-0.09370226, -0.23833516, -0.10860783, -0.06313743, 0.11758257, 0.094501875, 0.14893758, 0.20917584, 0.068226755, 0.14863028, 0.13902564, 0.11273456, -0.020050483, -0.22075756, -0.20352906, 0.15401232) * inp_1_2_1;
    result1 += M4(-0.082517646, -0.008598889, 0.020734426, -0.02918486, -0.031683628, -0.02527223, 0.019244518, -0.06697582, 0.017349109, -0.014135703, 0.010421015, -0.02230424, -0.023916768, 0.06507062, 0.07789875, 0.14057782) * inp_1_0_2;
    result1 += M4(0.038825765, -0.026080692, -0.02668399, 0.17289145, -0.016844954, 0.12754878, 0.05727132, 0.06220111, -0.02198141, 0.07263812, -0.045854546, -0.10291279, -0.22331661, -0.16429839, 0.11519213, 0.14376782) * inp_1_1_2;
    result1 += M4(-0.049201936, -0.019386372, 0.030670356, 0.08433935, 0.014787552, 0.033477824, 0.07086524, 0.07095035, 0.019695504, 0.005245635, 0.02100878, 0.081799194, -0.03598799, -0.010142497, -0.04397319, -0.1844306) * inp_1_2_2;
    result2 += M4(-0.036323637, 0.007920721, 0.07974455, -0.03554667, 0.13629632, 0.052133847, 0.13341074, 0.033756513, 0.17424211, -0.094974644, 0.030294618, -0.02774892, -0.046014566, -0.04213918, 0.10983582, 0.0013862664) * inp_1_0_0;
    result2 += M4(0.12750235, -0.06382105, 0.036866955, 0.06555184, -0.26668215, 0.2374897, 0.06625826, -0.11988131, 0.1076043, -0.13175108, -0.07250803, -0.27645755, 0.10191056, -0.12421833, -0.013897183, -0.028964775) * inp_1_1_0;
    result2 += M4(-0.163916, -0.07407838, 0.032604404, 0.014430031, -0.043638874, -0.027019376, 0.061452094, -0.038298715, 0.2242551, 0.10621392, -0.026506644, -0.09723869, 0.04152644, 0.019900857, -0.1136721, -0.015381735) * inp_1_2_0;
    result2 += M4(-0.020732652, 0.05833354, 0.094308145, 0.1440602, 0.12577611, -0.007938044, 0.14363211, 0.1650646, 0.029397018, 0.011929445, 0.034033313, -0.08584066, 0.04219615, -0.06327196, -0.051980685, -0.0037277564) * inp_1_0_1;
    result2 += M4(0.154975, -0.09745714, 0.111586094, -0.006548423, -0.08353534, 0.10434587, 0.055690907, -0.14263517, -0.015699103, 0.113671444, -0.06000514, 0.047249254, 0.40625548, -0.1234498, 0.21302673, -0.17687912) * inp_1_1_1;
    result2 += M4(-0.11230171, -0.027675921, 0.06413688, -0.02821357, 0.051926527, -0.04744526, -0.048421953, 0.015150852, 0.009315915, -0.039410237, -0.05507386, 0.03132324, -0.048078522, 0.0015677686, -0.026882634, 0.08285121) * inp_1_2_1;
    result2 += M4(-0.024253149, -0.024880936, 0.06833359, 0.04315169, -0.00058776117, 0.016165772, 0.0152650215, -0.006040092, -0.010317465, 0.014765773, -0.013690437, 0.031205792, -0.0032060803, -0.026604211, 0.0014554363, -0.020315077) * inp_1_0_2;
    result2 += M4(-0.015429093, 0.044698745, 0.058143325, 0.015995061, -0.034820966, -6.974633e-05, 0.1073516, 0.096845195, -0.04546219, -0.04412323, 0.098620504, 0.00767046, 0.045787476, 0.10639417, 0.08253359, -0.21726677) * inp_1_1_2;
    result2 += M4(0.014327817, 0.03672928, 0.0009993582, -0.095374875, 0.009544369, -0.02783171, 0.008603775, -0.009797797, 0.053504203, 0.010962477, 0.043235723, -0.0040485905, -0.012479835, 0.05477856, -0.033967227, -0.040676896) * inp_1_2_2;
    result3 += M4(0.013706924, 0.007103995, 0.0016066768, -0.08559849, -0.046591904, 0.0781233, -0.084474795, 0.014112787, -0.11265606, -0.09809002, 0.0053717266, 0.15537082, 0.045166083, 0.07346694, 0.04751974, 0.028472135) * inp_1_0_0;
    result3 += M4(0.16750288, 0.0058814264, -0.059423584, -0.068455316, -0.49258357, 0.16762874, 0.09679909, 0.035870362, -0.2532651, 0.16849265, -0.022798926, 0.013324343, 0.37981346, -0.058017235, -0.026651023, -0.007333912) * inp_1_1_0;
    result3 += M4(0.019042078, -0.033102684, -0.066449605, 0.0013639596, -0.31980196, -0.0882175, -0.12540518, -0.14588112, -0.05406106, -0.0054948153, -0.11583355, 0.18324925, 0.024747811, -0.027882922, 0.05883942, -0.0034490516) * inp_1_2_0;
    result3 += M4(0.18039125, 0.11310022, 0.01633499, -0.03896637, -0.059036884, -0.048329253, -0.01805621, -0.015011928, -0.17251387, -0.29640433, 0.055003155, 0.09397399, 0.06603666, -0.21152389, 0.0057115695, 0.052262615) * inp_1_0_1;
    result3 += M4(0.6406647, -0.31699902, -0.105423614, 0.0016599665, -0.70185226, 0.17373735, -0.1980828, 0.06794023, -0.26104295, -0.09392364, 0.32056397, 0.017103288, 0.7980665, -0.20467982, 0.09784589, -0.043889564) * inp_1_1_1;
    result3 += M4(0.3776254, 0.10634, 0.10706844, -0.17441414, 0.030295713, 0.02292878, 0.040225856, -0.23235261, -0.09331063, -0.038180552, -0.0408457, -0.035894487, 0.2836673, 0.113282286, 0.085845664, 0.09439601) * inp_1_2_1;
    result3 += M4(0.035590876, 0.03341423, 0.013140729, -0.00857963, -0.0014844002, 0.02613284, -0.010891664, -0.025458287, 0.019664224, 0.025875464, -0.0100021465, -0.028372642, 0.11828422, 0.09301917, 0.047231056, -0.073672056) * inp_1_0_2;
    result3 += M4(0.13823852, -0.0076983925, -0.10611758, 0.1036476, -0.33662996, -0.12923767, -0.038641687, 0.0626047, -0.08778454, 0.13070646, 0.01108891, -0.08297655, 0.5779529, 0.075078234, 0.07706649, -0.038865298) * inp_1_1_2;
    result3 += M4(0.06290812, 0.048085496, 0.010854476, 0.034182012, -0.0048420755, 0.03958655, 0.013169777, 0.035539158, -0.0905266, 0.0015304297, -0.029815506, 0.031517215, -0.05793907, -0.04191926, -0.022787863, 0.029923528) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.035130866, 0.009842163, -0.027295316, 0.069575265, 0.009588014, 0.08543116, -0.08494405, -0.03556063, -0.20828995, 0.07296801, 0.21854131, 0.010479644, -0.009128578, 0.104522854, 0.042646095, -0.04728895) * inp_2_0_0;
    result0 += M4(0.014135908, -0.07820474, -0.015460248, 0.008969729, -0.026974797, -0.008051087, -0.038293235, -0.05953876, -0.17709205, 0.045281984, -0.02080523, 0.15193735, 0.18803753, 0.020739261, -0.15170713, 0.05587057) * inp_2_1_0;
    result0 += M4(-0.13085344, 0.0033094492, 0.03924556, 0.03768232, -0.04458023, 0.0393846, 0.04984665, 0.07778369, 0.019228304, -0.018016562, -0.059426673, -0.030654445, 0.11887242, 0.022831826, 0.017723585, -0.005511875) * inp_2_2_0;
    result0 += M4(-0.06811629, -0.049250282, 0.10243782, -0.020069558, -0.025212277, -0.010485261, -0.015889931, 0.012438246, -0.7303721, 0.15091972, 0.109612316, -0.6508594, 0.14431228, -0.23446494, -0.0061103846, -0.09423273) * inp_2_0_1;
    result0 += M4(-0.07178903, -0.16325974, 0.21215141, -0.01412749, -0.031149555, -0.0071139494, 0.020751605, 0.0105326045, -0.08901424, 0.14750428, -0.09509793, 0.19841498, -0.15437044, 0.2133734, -0.10961547, 0.010790273) * inp_2_1_1;
    result0 += M4(0.07285971, -0.010225759, -0.10573829, -0.011047081, 0.040948547, 0.019911975, -0.07353668, 0.008161161, -0.09317456, 0.013216555, 0.13611299, 0.0003730152, 0.07576177, 0.23231247, 0.047463953, 0.02647129) * inp_2_2_1;
    result0 += M4(0.025421124, 0.042938463, -0.059697222, -0.012971355, 0.0029816022, -0.01448071, 0.075245686, 0.06980135, -0.69762635, 0.018336093, -0.5841074, -0.32462418, -0.021943899, -0.06707563, -0.004739204, 0.043044247) * inp_2_0_2;
    result0 += M4(-0.11316088, 0.16376683, -0.2237077, -0.029834682, -0.05536607, 0.039321657, 0.03956276, -0.049685974, 0.17596745, -0.03646578, -0.035238832, 0.18918942, 0.09236972, 0.071406655, -0.00957246, 0.059910882) * inp_2_1_2;
    result0 += M4(-0.041975792, 0.022233913, -0.020640802, -0.038907688, 0.0733229, 0.028915748, -0.017279543, -0.02567393, 0.02245389, -0.046197146, -0.07135854, 0.021954745, 0.22785482, -0.13342595, 0.045624387, -0.016392339) * inp_2_2_2;
    result1 += M4(0.030118607, 0.051541682, -0.015616219, 0.03693391, 0.061024636, 0.07748429, 0.015868852, -0.04051948, -0.15263155, -0.20886119, 0.111979894, -0.41740724, -0.23431666, -0.060924932, -0.1025051, -0.20723756) * inp_2_0_0;
    result1 += M4(0.120346755, 0.032498505, -0.029447215, 0.053309683, -0.059428357, 0.006178514, -0.014813393, -0.04004783, 0.056593247, 0.042644974, 0.04331133, 0.27661598, 0.0933277, -0.041402884, 0.23484607, -0.18841127) * inp_2_1_0;
    result1 += M4(-0.022658987, 0.00019544676, -0.10096298, 0.0152507685, 0.074505806, -0.082856104, -0.026729375, 0.07971981, -0.0012013979, -0.019970085, 0.031903647, 0.043983843, -0.011577956, 0.0106566595, 0.025195979, 0.07286548) * inp_2_2_0;
    result1 += M4(0.0016747365, 0.0029731148, 0.12944558, 0.02891211, 0.0033664445, 0.0803819, 0.0047778776, -0.07920823, 0.16177838, -0.38368967, 0.010529628, -1.064565, 0.10749681, -0.008255657, -0.22380947, 0.29333073) * inp_2_0_1;
    result1 += M4(-0.08330523, -0.17246531, 0.050646234, -0.18311623, -0.07960856, -0.051417567, 0.0070667723, -0.027717711, 0.0920073, 0.28428584, -0.33579898, -0.26370183, 0.043868, 0.2833737, -0.2823951, 0.9088037) * inp_2_1_1;
    result1 += M4(-0.012526855, 0.025388997, 0.060380667, 0.0059442655, -0.04478831, -0.08949, -0.07832051, 0.07466245, 0.041080184, 0.035295755, -0.064116456, 0.05747238, 0.011147557, 0.04842789, -0.087303355, -0.08042132) * inp_2_2_1;
    result1 += M4(-0.091785006, 0.022459188, -0.05682972, -0.025251357, 0.03828127, -0.010336984, -0.08942652, 0.008723393, -0.0654638, -0.41355377, -0.21535778, -1.1381129, 0.14288673, -0.066862784, 6.5520915e-05, -0.050111827) * inp_2_0_2;
    result1 += M4(0.17623615, -0.13634904, -0.1574415, -0.21773247, 0.010188807, -0.06583206, 0.043213785, -0.06266187, 0.08205181, 0.07739334, 0.001521696, 0.010391676, -0.07541568, 0.18826261, -0.044800516, 0.23096934) * inp_2_1_2;
    result1 += M4(0.053478148, -0.01687872, -0.052270368, 0.000175753, -0.04409594, -0.03284301, 0.004629365, -0.03836763, 0.006495111, -0.039788518, 0.057876375, -0.044300925, -0.1223668, -0.047597744, 0.19780058, 0.29365525) * inp_2_2_2;
    result2 += M4(-0.014425193, 0.03245601, 0.010230109, 0.010083706, -0.025347836, 0.0020650728, 0.0605117, -0.008086149, 0.075741574, -0.0401552, 0.34762964, 0.055020276, -0.1896686, -0.030507581, 0.19685127, -0.10058913) * inp_2_0_0;
    result2 += M4(0.09783669, -0.111287035, -0.0875442, 0.051834695, -0.08677359, -0.050091192, 0.06877951, 0.06546703, 0.00062352367, 0.081478305, 0.1316935, 0.028373241, 0.06284527, -0.01721367, -0.23514093, 0.036740553) * inp_2_1_0;
    result2 += M4(0.022446651, 0.05452012, 0.09935011, -0.061680455, -0.024813652, -0.07445755, 0.061569497, 0.08519931, -0.020372467, -0.0043517835, -0.115735, 0.019267613, -0.095529795, -0.030927796, -0.107121095, 0.03853081) * inp_2_2_0;
    result2 += M4(0.041592713, -0.047761384, -0.11467544, -0.04476944, 0.08012659, -0.029204903, -0.04545621, -0.043089807, 0.1136205, -0.3434353, 0.50704193, -0.11186533, -0.08104114, -0.09345863, -0.15913716, -0.038778234) * inp_2_0_1;
    result2 += M4(-0.09046302, 0.17896289, 0.17264037, -0.067522064, 0.05264743, 0.026566114, 0.092587635, 0.080382206, -0.16997626, -0.08371259, -0.3265551, 0.29630348, 0.647699, 0.23131524, 0.07822252, -0.027112605) * inp_2_1_1;
    result2 += M4(-0.10487521, -0.024984809, -0.13594465, 0.15856242, -0.03042908, 0.078373685, -0.08570896, -0.07998824, 0.07265043, 0.019051187, 0.01909575, 0.009385355, -0.073110536, -0.09396383, -0.040666893, -0.04161476) * inp_2_2_1;
    result2 += M4(0.031359643, 0.01364052, 0.06190723, -0.022328874, 0.024011979, -0.055084012, 0.0026286955, 0.02652215, -0.010496319, -0.20317635, 0.035632025, 0.16811095, -0.017868588, -0.004198526, -0.06347393, 0.061724965) * inp_2_0_2;
    result2 += M4(-0.0029498024, -0.016743649, -0.16938871, 0.13557987, -0.055600584, 0.08313729, -0.03976988, 0.041858736, -0.15336631, -0.03133795, 0.041991588, -0.24715848, -0.14720702, -0.11613137, 0.003279396, 0.010359042) * inp_2_1_2;
    result2 += M4(0.03380306, 0.00046380362, -0.05223913, 0.06404835, 0.08127913, -0.01864425, 0.040091988, -0.054371588, -0.016413858, 0.0077363127, -0.0059471778, 0.02579058, -0.023009256, 0.023519667, 0.026273018, -0.17825752) * inp_2_2_2;
    result3 += M4(0.015518927, -0.05715294, 0.06001696, 0.024200752, 0.0758404, -0.07696318, -0.01615529, -0.08089203, -0.12366207, -0.017584091, -0.008025581, 0.24387023, 0.043886296, 0.022806989, 0.0015197813, -0.111383654) * inp_2_0_0;
    result3 += M4(0.12932676, -0.0043502627, -0.06748716, 0.08425581, 0.083099924, -0.0812158, -0.057171434, 0.040821664, -0.13006774, 0.013453654, -0.069544844, 0.13052966, 0.29207456, -0.22176506, -0.036661323, -0.024329275) * inp_2_1_0;
    result3 += M4(0.021496652, 0.06668683, 0.007059349, 0.04758396, -0.022868397, -0.04909933, 0.09487449, 0.04767328, 0.06309451, -0.0055397786, 0.05451308, 0.00638239, 0.030451212, -0.05036115, 0.036475196, -0.020486237) * inp_2_2_0;
    result3 += M4(-0.008609541, 0.005130964, -0.007920774, -0.023884242, -0.076072186, -0.0049844487, -0.034072455, 0.07095527, -0.7646538, -0.48120257, 0.039177254, 0.38534644, -0.110423416, 0.11485602, -0.02105589, 0.000991646) * inp_2_0_1;
    result3 += M4(-0.1618907, -0.07501078, 0.22321847, -0.045510244, -0.079320185, 0.016800525, 0.047000855, 0.039965287, 0.22760493, -0.090121515, -0.28247288, 0.23172808, 0.2006925, 0.38363144, -0.13466436, -0.036236975) * inp_2_1_1;
    result3 += M4(-0.0794725, -0.04096069, 0.045421887, 0.07905031, 0.08915231, 0.023807477, -0.010114271, 0.038010232, -0.019906111, -0.015012875, -0.008936332, -0.015001107, 0.14652519, -0.0051564984, -0.13676015, -0.16191941) * inp_2_2_1;
    result3 += M4(0.00521779, -0.06452208, 0.035737377, 0.023431456, 0.022004321, -0.03670764, -0.05303281, -0.016570272, 0.12517716, 0.2717973, -0.1494104, 0.051405378, 0.03516268, 0.03264707, -0.039940834, 0.07958444) * inp_2_0_2;
    result3 += M4(0.014904979, -0.017665429, -0.055600222, 0.030560724, -0.0316867, -0.08232276, -0.0726028, -0.055300146, -0.0414683, -0.0829155, 0.008682284, 0.39395094, -0.27546832, -0.09355038, 0.017961329, 0.11426469) * inp_2_1_2;
    result3 += M4(-0.029047951, -0.03432912, 0.008231268, -0.02773416, -0.04239605, -0.0734065, -0.05887781, 0.097160086, -0.02830663, 0.0072778384, -0.01517349, 0.07139623, 0.054646976, 0.095861055, 0.067706205, 0.08118941) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.19500244, -0.039371297, -0.13815369, 0.118550666, 0.13750471, -0.018543435, -0.09411833, 0.10690763, -0.042604394, 0.0085566435, -0.0052539804, -0.038498726, -0.021036634, -0.015019296, 0.001648984, 0.020986702) * inp_3_0_0;
    result0 += M4(-0.14999421, 0.053629853, 0.068475954, -0.06160631, -0.29179972, -0.20939097, 0.1669885, 0.08730761, 0.1890068, 0.1779758, -0.11448252, -0.022270575, -0.15430342, -0.07423534, 0.09465712, -0.035244603) * inp_3_1_0;
    result0 += M4(0.007988328, 0.068732224, 0.071082085, -0.030430375, -0.11998836, -0.13765037, -0.076862745, -0.04026746, 0.026129195, 0.08144454, 0.058829635, 0.0394155, -0.019877587, -0.061614566, -0.1149673, 0.019570198) * inp_3_2_0;
    result0 += M4(-0.03457738, 0.2171144, 0.18397424, -0.034596812, 0.10480754, -0.23178874, 0.17268017, -0.0845592, -0.15006691, 0.20400643, -0.19463876, 0.051616307, -0.07184812, -0.0725243, 0.0016450445, 0.040992454) * inp_3_0_1;
    result0 += M4(0.33951864, -0.59864944, 0.13487281, 0.022317048, -0.23774324, -0.68608147, -0.283821, -0.26687163, 0.31671697, 0.56607854, 0.3302192, 0.21096121, -0.35965848, -0.19541848, -0.38715723, 0.1949655) * inp_3_1_1;
    result0 += M4(-0.30021915, -0.0872605, -0.07639662, 0.029824473, -0.16243675, -0.0533282, -0.004214374, 0.12413697, 0.22113164, 0.070581555, 0.0033588498, -0.043178447, 0.0097113345, -0.60724026, -0.017869478, -0.21485394) * inp_3_2_1;
    result0 += M4(-0.05749108, 0.0046424777, 0.10298853, -0.11094315, -0.09421063, -0.18246919, 0.18940306, 0.08174604, 0.11641845, 0.066425495, -0.17734729, -0.07205208, 0.0410873, 0.053084288, -0.043155495, 0.028503885) * inp_3_0_2;
    result0 += M4(0.19078405, -0.20260791, 0.12473588, 0.004836775, -0.08318777, -0.09168124, -0.17858846, 0.006026491, 0.20198603, 0.12135847, 0.1588188, 0.02071678, -0.048771206, -0.1312383, 0.26605323, 0.03009513) * inp_3_1_2;
    result0 += M4(-0.079351105, 0.03175173, -0.0035587251, 0.016937878, 0.20207289, -0.10482039, 0.06498256, 0.03447957, -0.06858241, 0.05267481, 0.077974096, 0.017781261, 0.012734916, 0.02871827, -0.10794544, -0.030204521) * inp_3_2_2;
    result1 += M4(0.13867638, 0.14928143, 0.030465037, 0.05476899, 0.08770052, 0.061801217, 0.024184978, 0.10745693, 0.024043756, 0.03768665, 0.00627567, 0.071704395, 0.037635956, -0.024230681, 0.060491707, -0.066017404) * inp_3_0_0;
    result1 += M4(-0.041127447, -0.034185104, -0.17771304, -0.06468223, 0.1692566, 0.025260516, -0.15016164, 0.17244083, 0.065007225, 0.14534259, 0.021869274, -0.039305687, 0.1261073, -0.017794134, 0.25450972, 0.20947471) * inp_3_1_0;
    result1 += M4(-0.05451736, 0.048598357, 0.0021381201, -0.01843303, 0.0461959, -0.04541674, 0.053028576, 0.12467182, 0.07978423, 0.09239198, 0.005001719, -0.056817234, 0.2121274, 0.12627086, 0.25056997, 0.19860724) * inp_3_2_0;
    result1 += M4(0.026932526, 0.1495838, 0.08798918, -0.24072957, 0.37298155, -0.03958819, -0.211065, -0.012419466, -0.24453987, -0.017893743, 0.14026971, -0.07844942, 0.17053905, 0.001272114, 0.07889176, 0.04856978) * inp_3_0_1;
    result1 += M4(-0.14701787, -0.26737636, 0.16485958, -0.85793245, 0.8032675, 0.17996685, 0.06361183, 0.09688, -0.76416093, -0.08481847, -0.07089547, -0.444756, 0.4872002, -0.015357931, -0.101832464, -0.5047753) * inp_3_1_1;
    result1 += M4(0.0800184, -0.08574256, -0.04758286, -0.1489657, -0.06251034, 0.0463876, -0.024710529, -0.043545682, -0.1473565, 0.007880004, 0.036087804, -0.108936645, 0.4449997, -0.17158794, -0.08577852, 0.05728415) * inp_3_2_1;
    result1 += M4(-0.11049326, 0.1476208, 0.10859055, 0.046775896, 0.18454038, 0.043004747, 0.16171302, -0.047010176, -0.18694633, -0.02746473, -0.16191296, 0.15441093, 0.06392393, 0.06697448, -0.06888563, 0.09018828) * inp_3_0_2;
    result1 += M4(0.060120508, -0.0066510905, -0.0059017926, 0.059639968, 0.019368848, -0.043151196, -0.14292082, 0.03507474, -0.05737043, 0.15546732, 0.19109806, 0.33107865, 0.19072488, 0.118365824, 0.19400719, 0.15794413) * inp_3_1_2;
    result1 += M4(0.172939, 0.12040562, -0.020095667, -0.09488119, -0.1514045, -0.0033905418, 0.17605124, 0.14427349, 0.033310458, 0.093352474, -0.07959159, 0.114981815, 0.03187557, -0.12577741, -0.11746617, -0.124167025) * inp_3_2_2;
    result2 += M4(0.10365057, -0.05597477, 0.063381225, 0.056328766, 0.058829173, -0.040019512, -0.05001674, 0.0729067, 0.028208584, 0.052205775, -0.031639103, 0.007552141, 0.05113811, -0.00819414, 0.030691337, 0.026710225) * inp_3_0_0;
    result2 += M4(0.08498708, 0.057170585, 0.1552451, -0.04323021, 0.0064618047, 0.05540767, 0.01274112, -0.041783653, 0.20696951, -0.07071637, 0.13161679, 0.07717205, 0.09448055, 0.12190777, -0.12202324, 0.15549155) * inp_3_1_0;
    result2 += M4(-0.0044099083, -0.012741868, 0.09378866, -0.01567844, 0.16947666, 0.060585167, -0.055107806, 0.01794141, 0.025620963, -0.0046982532, 0.089860216, -0.045318484, 0.2746677, -0.093013704, -0.104717694, 0.12038452) * inp_3_2_0;
    result2 += M4(-0.011945945, -0.08632026, 0.3486372, -0.19772592, -0.0641454, -0.13409153, 0.13577738, -0.10976906, 0.07177271, 0.030296165, -0.107362166, -0.005768108, -0.006168597, -0.0027189057, -0.07634472, -0.03099054) * inp_3_0_1;
    result2 += M4(-0.4863558, -0.13286196, 0.20526275, -0.5445279, 0.33407682, 0.13720833, 0.6321083, 0.044558182, -0.344971, -0.15971659, -0.418192, -0.29575405, -0.16312648, -0.042475775, -0.037762657, -0.24147926) * inp_3_1_1;
    result2 += M4(0.13619767, 0.08110459, 0.11046347, -0.069612876, 0.11068711, 0.07971362, 0.23846772, -0.29100603, -0.041291095, -0.09227256, -0.20060082, -0.038493402, 0.18802886, 0.06838873, -0.032405123, 0.059619408) * inp_3_2_1;
    result2 += M4(-0.058086652, -0.10913788, 0.06569108, 0.09830435, -0.0069031008, -0.004629722, -0.10677663, 0.12210944, 0.13317607, 0.07239073, 0.08680799, -0.019185387, 0.113449454, -0.0026077116, -0.022100003, 0.009049893) * inp_3_0_2;
    result2 += M4(0.13925809, 0.13774236, 0.1472081, -0.18500009, 0.12738475, -0.02387031, -0.16309091, 0.07150865, -0.06931117, -0.021670919, -0.016059596, -0.033953506, 0.19655767, 0.1502377, -0.06766473, 0.29648593) * inp_3_1_2;
    result2 += M4(0.011690634, -0.034445252, -0.01738525, 0.23602171, -0.03896055, 0.03325231, 0.08035246, -0.23092712, 0.042673703, -0.017736582, -0.042052146, 0.13932896, 0.048583504, 0.02828418, -0.1265843, -0.018336449) * inp_3_2_2;
    result3 += M4(-0.009318816, 0.005651732, -0.06773036, 0.04027259, 0.021731535, 0.07923195, -0.05332023, 0.1470953, -0.013893837, -0.05416802, 0.0816809, -0.03547825, -0.016743356, -0.058809146, 0.004912175, 0.056752946) * inp_3_0_0;
    result3 += M4(0.07330266, 0.11120141, 0.085288696, 0.086160064, -0.12680896, -0.051142175, 0.031728882, 0.15759356, -0.007537261, 0.050316896, 0.024343854, -0.031790067, -0.3418199, -0.08706799, -0.015001051, 0.052640095) * inp_3_1_0;
    result3 += M4(-0.18746248, -0.017976372, -0.04132822, -0.11240346, 0.042682286, 0.079910755, 0.049862802, 0.016216306, -0.101183414, -0.06620073, -0.14743318, -0.08485082, -0.21271652, -0.14131345, -0.053053685, 0.06331736) * inp_3_2_0;
    result3 += M4(-0.16129798, 0.08873759, -0.020265333, -0.087452844, -0.24795304, 0.1710014, -0.14868519, -0.073345, 0.2517676, -0.07217635, 0.024505226, 0.0073032, -0.06409477, -0.08949178, -0.03914113, 0.15454534) * inp_3_0_1;
    result3 += M4(-0.10754025, -0.26410335, -0.04107846, 0.101577885, -0.4712879, 0.77022463, -0.293625, 0.14482613, 0.3966059, -0.5563081, 0.32384396, -0.1968601, 0.04023027, -0.14241119, -0.040983547, 0.026100466) * inp_3_1_1;
    result3 += M4(0.05713643, 0.08748682, 0.073214106, 0.06026706, -0.12236209, 0.099192105, -0.23936367, 0.10137448, 0.25002825, 0.044781126, 0.15229791, -0.10581248, -0.07031397, -0.15301798, 0.21649665, 0.027216993) * inp_3_2_1;
    result3 += M4(-0.051985566, 0.15287997, 0.07323516, -0.07265283, 0.04276489, 0.19518666, -0.06079503, 0.02024761, -0.0017141136, -0.42080107, 0.12642282, 0.026441727, -0.14451566, -0.15070793, 0.031138897, 0.09338667) * inp_3_0_2;
    result3 += M4(-0.05340237, -0.025824625, -0.01806813, 0.059670784, -0.1488306, -0.013516047, 0.003620093, 0.15271322, 0.059324652, -0.059507858, 0.06122007, -0.09071558, 0.06352088, -0.19504316, -0.010077052, -0.06483146) * inp_3_1_2;
    result3 += M4(-0.2060694, -0.13896833, -0.03695192, 0.075121604, 0.053783886, 0.1334655, 0.021040589, 0.12549186, -0.14124148, -0.12824707, -0.02742273, -0.09128762, 0.13218656, -0.0141629735, 0.032241933, -0.13702111) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DS (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.07662197, 0.07525999, 0.0800186, 0.07794766);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10964429, -0.058105797, -0.02430547, -0.037693236, 0.031442408, 0.0105008, 0.0115093775, -0.0064147403, -0.058714826, -0.023079023, -0.03183604, -0.008604812, 0.14959177, 0.101343036, 0.07091837, 0.0834865) * inp_0_0_0;
    result0 += M4(-0.19977736, -0.2609267, -0.011008303, 0.007263956, 0.012382766, 0.04744152, -0.05900043, 0.02575682, -0.16836913, -0.26426145, 0.027846526, 0.0023838242, 0.023039328, 0.13120277, 0.05661326, 0.009653012) * inp_0_1_0;
    result0 += M4(-0.01556665, -0.059395555, -0.008976719, -0.047581643, -0.120766945, -0.12492211, -0.09382882, -0.12509795, -0.06673402, -0.00950669, -0.04344964, 0.037962403, 0.08701085, 0.04621411, 0.059179664, 0.033265498) * inp_0_2_0;
    result0 += M4(0.20944422, -0.033536587, 0.025448812, 0.044377685, 0.054190677, -0.047836497, 0.26216227, 0.009584365, 0.01791063, 0.013006619, 0.09378829, -0.018904934, 0.1689719, 0.11122891, 0.15753682, 0.11088871) * inp_0_0_1;
    result0 += M4(0.088084206, 0.2641749, -0.07662891, -0.12315735, -0.23374827, 0.12224724, -0.19031708, 0.33162418, -0.07264244, 0.09200858, -0.031650413, -0.03674161, 0.19387014, 0.19207728, 0.14504036, 0.22308935) * inp_0_1_1;
    result0 += M4(0.009864385, 0.10442538, 0.05551473, 0.048157632, 0.043916516, -0.09558065, 0.04057067, -0.13655952, 0.018735962, -0.0035069825, 0.0016314993, 0.1326445, 0.15153648, 0.17844291, 0.14329948, 0.21226622) * inp_0_2_1;
    result0 += M4(-0.012140239, 0.006806841, 0.031418934, 0.0041774176, -0.014891259, -0.0044837017, -0.06300639, -0.021015126, 0.0502725, 0.022788808, 0.07056132, 0.036437232, 0.1001815, 0.03150946, 0.17930609, 0.007361682) * inp_0_0_2;
    result0 += M4(-0.044105574, -0.075507656, 0.1064552, 0.0741898, 0.030567823, -0.010725495, 0.03101762, -0.088420995, 0.031002717, 0.025149366, -0.12679958, 0.06301659, 0.04094813, 0.0663377, 0.065849505, 0.17280303) * inp_0_1_2;
    result0 += M4(-0.022525568, -0.013706304, -0.020972105, 0.054608647, 0.09575536, 0.07856691, 0.1107874, 0.032102827, -0.008139583, -0.0015761241, -0.043380328, -0.12904507, 0.061528802, 0.11897344, 0.07386347, 0.106503606) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06977736, -0.021423727, -0.030370101, -0.049700826, -0.07257534, -0.10006137, -0.023166217, -0.014306433, -0.038011935, 0.028356845, 0.02529486, -0.0059977695, 0.08697118, 0.11461603, 0.0219136, 0.02762432) * inp_1_0_0;
    result0 += M4(0.022586092, -0.14514346, -0.14680927, -0.04903364, 0.21329767, 0.23888215, 0.20824829, 0.10333398, 0.06487013, -0.061316755, 0.04092704, 0.048122894, -0.037490506, -0.13598375, 0.0054015857, 0.0036739386) * inp_1_1_0;
    result0 += M4(-0.07747282, 0.028877093, -0.034983944, -0.03106918, 0.016887547, 0.13565642, 0.021814812, 0.15166289, -0.024117982, 0.08876839, -0.004312527, 0.07282366, 0.019799067, -0.058117624, 0.014033154, -0.018955566) * inp_1_2_0;
    result0 += M4(0.0043807174, -0.07777276, 0.0933609, -0.039242115, -0.25430202, -0.14751902, -0.29858685, -0.26373684, 0.12828206, 0.024878597, -0.012558887, 0.06863719, 0.004034131, 0.08579333, 0.16903469, 0.12993853) * inp_1_0_1;
    result0 += M4(0.20293823, 0.023837086, 0.2217822, 0.05037387, 0.11485676, 0.12648547, -0.13621676, 0.047531415, -0.08453739, 0.0077991034, -0.058312997, -0.08975237, 0.08605901, -0.12681109, -0.13436633, -0.02240806) * inp_1_1_1;
    result0 += M4(0.058592696, 0.13666922, 0.017386662, 0.0668658, -0.049639355, -0.006506495, -0.08966283, -0.15107183, 0.015511885, -0.10957443, 0.01946098, 0.021436865, 0.030407244, 0.057982054, 0.022450434, -0.02987924) * inp_1_2_1;
    result0 += M4(-0.008456207, -0.005604793, -0.041740563, 0.016260771, -0.105790935, -0.06513033, -0.15409173, -0.05342032, 0.003609971, -0.004048316, -0.019328492, -0.013368679, -0.021221172, -0.0016319919, -0.05452575, -0.011970873) * inp_1_0_2;
    result0 += M4(0.006065381, 0.06671029, 0.08012504, -0.043851327, -5.9375576e-05, -0.0394355, 0.16148594, 0.07498699, -0.022558983, -0.0026013942, 0.0056229774, -0.06816099, -0.018125497, -0.01162405, -0.022496125, -0.14671138) * inp_1_1_2;
    result0 += M4(0.030789196, -0.01630562, 0.043640863, 0.037548315, -0.010493243, -0.016659657, 0.029431704, 0.10073238, 0.06320199, 0.015144521, 0.058394007, -0.10227672, 0.0022023648, -0.00798721, 0.015358845, 0.04950577) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.027887052, 0.042629704, 0.024468264, 0.046881218, -0.14887087, -0.08183704, -0.026701907, -0.026539141, 0.0075622583, 0.072827585, -0.0050226646, 0.0015122875, 0.14297318, -0.015028544, -0.010039623, 0.011036969) * inp_2_0_0;
    result0 += M4(-0.15842615, -0.04743063, -0.0004769047, -0.019178627, -0.16839933, -0.09595609, 0.011580671, 0.019910784, 0.0022977104, -0.16178347, -0.01789537, -0.016330168, -0.16122763, 0.06154836, -0.06501601, -0.12977867) * inp_2_1_0;
    result0 += M4(-0.02269671, -0.12325944, -0.03225106, -0.082862794, 0.010306232, 0.00889844, -0.0063500735, -0.0053403294, 0.06616035, 0.075549066, 0.06174744, 0.051198266, -0.0027700483, 0.0593183, 0.011753728, 0.046978626) * inp_2_2_0;
    result0 += M4(0.014250169, 0.066228695, 0.02726672, 0.07124495, -0.26060805, -0.07724772, -0.3277576, -0.0970756, 0.04207581, 0.097994976, 0.054322, 0.15096137, 0.13393681, 0.011491698, 0.14392453, -0.030967738) * inp_2_0_1;
    result0 += M4(-0.06313177, -0.22414286, -0.3085006, -0.2567674, -0.35395584, -0.30426338, -0.17325515, -0.14126855, 0.03543594, -0.13505553, -0.08948387, -0.24589463, -0.011060249, -0.1002315, -0.0015394615, 0.08009096) * inp_2_1_1;
    result0 += M4(-0.1265038, -0.031517237, -0.06431082, -0.044637047, 0.383993, -0.0075019314, 0.3982512, 0.07678494, -0.07935399, -0.124709964, -0.04583163, -0.11679634, -0.039820082, -0.041902117, 0.014885349, 0.048231885) * inp_2_2_1;
    result0 += M4(0.028473027, 0.014094917, 0.066493034, 0.0069522676, -0.09660098, -0.022511525, -0.15043333, -0.0021339876, 0.010209666, 0.009486114, 0.016706428, 0.03953534, -0.018138647, 0.001543424, 0.0006444392, -0.013822089) * inp_2_0_2;
    result0 += M4(-0.007001695, -0.03537275, 0.12763664, 0.008010969, 0.046507183, 0.0044922805, -0.15952116, -0.15182284, 0.03833671, 0.07839648, 0.08229793, -0.10094453, -0.0054906136, -0.059694, -0.012700894, -0.048544656) * inp_2_1_2;
    result0 += M4(0.005069611, 0.024212116, 0.0041402206, -0.010214189, 0.115026414, 0.13748072, 0.14021052, 0.085123695, 0.019954178, 0.02758697, 0.0146214655, 0.079736255, -0.008314503, 0.041531507, -0.005519826, 0.060626917) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.045842726, -0.0035990165, -0.033127125, -0.015878538, 0.0047847456, 0.008741145, 0.025698284, 0.0051956675, 0.023891972, 0.016871495, 0.017293582, 0.006794702, -0.11858793, -0.081851654, -0.049326073, -0.053870212) * inp_3_0_0;
    result0 += M4(-0.05494611, -0.09725241, -0.0049563022, -0.012690067, 0.037112094, 0.03713085, -0.03469217, -0.010633291, -0.02579944, -0.05421986, -0.055056747, -0.040273335, -0.068315394, -0.08584856, 0.020729257, 0.018684337) * inp_3_1_0;
    result0 += M4(0.030225117, 0.06828322, 0.01854499, 0.058731843, -0.1550608, 0.012987439, -0.07666025, -0.022073485, 0.039238393, 0.06440485, 0.03307449, 0.0438595, -0.09082469, -0.09408159, -0.05191006, -0.049958866) * inp_3_2_0;
    result0 += M4(-0.050202042, -0.07257083, 0.04780168, -0.024991836, -0.046035957, 0.029229935, -0.075097635, 0.05642962, 0.038595103, -0.03642295, 0.017557032, 0.024872696, -0.06144694, 0.0033715947, -0.100366734, 0.03192804) * inp_3_0_1;
    result0 += M4(0.23883602, 0.29478002, -0.21144435, -0.06472271, 0.13532366, -0.26680353, 0.16481538, -0.13565812, -0.47591645, -0.37585098, -0.39645907, -0.36062595, 0.34696305, 0.31614888, 0.3343514, 0.26846364) * inp_3_1_1;
    result0 += M4(0.0076325955, -0.021824727, 0.034839578, -0.049081225, -0.040666442, 0.18423091, -0.1102883, 0.07665726, 0.01279599, -0.03296853, -0.019017693, -0.029789181, -0.109346114, -0.121274866, -0.10524766, -0.13274899) * inp_3_2_1;
    result0 += M4(-0.041901786, -0.022910908, -0.06869693, -0.023071984, -0.0067847264, 0.014728621, 0.014601803, 0.0021315552, 0.13588247, 0.06658623, 0.19464542, 0.04362892, -0.029799683, 0.0128811775, -0.053854033, 0.009043045) * inp_3_0_2;
    result0 += M4(0.007708296, -0.017939538, 0.13878505, 0.07653974, 0.02400983, -0.025750685, 0.007028859, -0.118708566, 0.17987263, 0.18336235, -0.044294246, 0.06641899, 0.14358875, 0.05662549, 0.0857529, -0.0071911495) * inp_3_1_2;
    result0 += M4(-0.031775523, -0.027671194, -0.027305314, -0.0108699, 0.010152992, 0.03108163, 0.054575916, 0.14752306, 0.1098358, 0.16866936, 0.10422982, 0.12347873, -0.02303567, 0.0030475846, -0.040407207, -0.039176404) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DS (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
