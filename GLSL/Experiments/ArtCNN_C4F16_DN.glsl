// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DN (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(-0.00032467308, -0.009200663, -0.014625902, -0.0490673);
    V4 result1 = V4(-0.029544057, -0.005519563, 0.002160367, 0.0019730295);
    V4 result2 = V4(0.03267614, -0.0014877898, -0.00731087, 0.00012378868);
    V4 result3 = V4(0.0006625925, 0.006326438, 0.012820934, -0.0621573);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.024007197, -0.12208137, 0.024280543, 0.039835) * inp_0_0_0;
    result0 += V4(0.040209536, 0.15390445, 0.09841246, 0.12429675) * inp_0_1_0;
    result0 += V4(-0.011344147, 0.114624396, -0.075169094, 0.06325627) * inp_0_2_0;
    result0 += V4(-0.008426945, 0.055435527, -0.018451925, 0.16707607) * inp_0_0_1;
    result0 += V4(-0.049242344, -0.074051864, -0.3494673, 0.27301067) * inp_0_1_1;
    result0 += V4(-0.22010593, -0.13488282, 0.07731937, 0.11175876) * inp_0_2_1;
    result0 += V4(0.021290634, 0.14942247, 0.0019328286, 0.0949967) * inp_0_0_2;
    result0 += V4(0.09363165, -0.110975586, 0.19371922, -0.0059161386) * inp_0_1_2;
    result0 += V4(0.16743132, -0.012820825, 0.050866473, 0.09105798) * inp_0_2_2;
    result1 += V4(0.07688576, -0.055732436, -0.11023916, 0.014172458) * inp_0_0_0;
    result1 += V4(-0.058408976, -0.026331153, 0.006530588, -0.17835043) * inp_0_1_0;
    result1 += V4(0.0328391, 0.11683208, 0.041128296, 0.1237793) * inp_0_2_0;
    result1 += V4(-0.038603038, 0.0773563, 0.11538823, -0.028371349) * inp_0_0_1;
    result1 += V4(0.09793251, -0.15795685, 0.13011718, 0.1496284) * inp_0_1_1;
    result1 += V4(-0.11663947, 0.24428754, -0.18534538, -0.09483138) * inp_0_2_1;
    result1 += V4(0.055088226, -0.009960548, 0.014022355, 0.024921697) * inp_0_0_2;
    result1 += V4(0.08814147, -0.22994721, -0.09606487, 0.03724262) * inp_0_1_2;
    result1 += V4(-0.07679038, 0.054878313, 0.09044386, -0.0453216) * inp_0_2_2;
    result2 += V4(-0.05847473, 0.118532576, -0.07378237, -0.060246736) * inp_0_0_0;
    result2 += V4(0.079319485, -0.05525827, 0.113527976, -0.006834847) * inp_0_1_0;
    result2 += V4(0.067754306, -0.0007244331, 0.039320804, 0.0035865842) * inp_0_2_0;
    result2 += V4(-0.17939782, 0.27065915, 0.2899179, 0.14964092) * inp_0_0_1;
    result2 += V4(-0.277301, -0.7022908, -0.287154, -0.052522384) * inp_0_1_1;
    result2 += V4(0.13081329, 0.1094609, -0.084555216, -0.04117766) * inp_0_2_1;
    result2 += V4(0.0408174, 0.12998205, -0.09024921, 0.00015751804) * inp_0_0_2;
    result2 += V4(0.19316526, 0.061940227, 0.046762582, 0.13816428) * inp_0_1_2;
    result2 += V4(-0.14602385, 0.0035809872, 0.02942132, -0.12448481) * inp_0_2_2;
    result3 += V4(0.054904673, -0.11977972, 0.22660585, -0.09588221) * inp_0_0_0;
    result3 += V4(-0.15658247, 0.16365322, 0.34666327, 0.1720999) * inp_0_1_0;
    result3 += V4(-0.0111819655, -0.008282188, 0.06681803, 0.056035023) * inp_0_2_0;
    result3 += V4(0.039647337, -0.03918751, 0.01983254, -0.19547623) * inp_0_0_1;
    result3 += V4(0.0163046, -0.13073117, -0.40522817, 0.00022118776) * inp_0_1_1;
    result3 += V4(0.048310705, 0.12375983, -0.1741629, 0.19678666) * inp_0_2_1;
    result3 += V4(-0.05618929, 0.1577785, -0.048987735, -0.08262986) * inp_0_0_2;
    result3 += V4(0.09347612, -0.08707, -0.16136548, 0.0139446035) * inp_0_1_2;
    result3 += V4(-0.021807408, -0.0650268, -0.014109262, 0.14606099) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.016515998, 0.012796546, 0.10245082, 0.016440138);
    V4 result1 = V4(0.04018983, -0.0022454592, -0.0026981274, 0.01734637);
    V4 result2 = V4(0.011133026, 0.03684874, 0.006754217, 0.016888462);
    V4 result3 = V4(0.015801024, 0.0021029345, 0.005462649, -0.018704748);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.083502464, 0.4258977, -0.017838718, -0.011872907, 0.08596211, 0.05798428, 0.052651703, -0.00714362, -0.30385935, 0.26065776, -0.081916995, -0.08141189, 0.002712037, -0.062007494, -0.1287778, 0.031389307) * inp_0_0_0;
    result0 += M4(-0.2790419, 0.16855688, 0.022234341, 0.035787288, 0.6097054, 0.23771182, 0.002033388, 0.10469302, -0.612901, -0.4657251, -0.063502476, -0.12152347, -0.34961358, 0.09297444, 0.038806614, 0.11031374) * inp_0_1_0;
    result0 += M4(0.31310633, 0.019225402, 0.04851375, -0.00043460162, 0.14241585, -0.18198904, 0.20869811, -0.11487923, -0.28832534, 0.07173811, -0.07624995, 0.05067798, -0.07991645, -0.016215647, -0.092922755, -0.055339217) * inp_0_2_0;
    result0 += M4(-0.18634321, -0.14988428, -0.012240056, -0.15000293, -0.25345305, -0.17365688, 0.20996924, -0.14572036, 0.2217974, 0.14292148, 0.008384045, -0.0110011455, 0.03701241, 0.08254064, -0.017707912, 0.029707963) * inp_0_0_1;
    result0 += M4(-0.049113423, -0.16927887, -0.0394478, -0.120351255, -0.44024056, 0.24949102, 0.07446477, -0.046337612, -0.4742658, 0.5877287, 0.004754446, -0.36470142, 0.04059183, 0.036011826, 0.10471087, 0.12484709) * inp_0_1_1;
    result0 += M4(-0.35520992, 0.014639951, -0.058332518, -0.09652579, -0.40451866, -0.12409926, -0.04451157, -0.038403887, 0.18944515, 0.13636169, 0.071814924, -0.16167468, -0.04573601, 0.06784718, 0.0556405, 0.04035908) * inp_0_2_1;
    result0 += M4(0.05192769, 0.0541522, 0.0026129314, 0.12806141, -0.049051695, -0.085269235, -0.05694263, 0.23479769, 0.27386352, -0.21376525, 0.061668105, -0.0759554, -0.042540655, -0.052547466, -0.110643856, -0.020335035) * inp_0_0_2;
    result0 += M4(0.039202865, 0.05196295, -0.053581968, 0.13388413, 0.0964264, 0.16531913, -0.04693145, 0.48593184, 0.27482086, -0.12505758, -0.20493045, 0.79089236, 0.008002488, -0.03650866, -0.057029694, 0.024989929) * inp_0_1_2;
    result0 += M4(-0.15439993, -0.10702996, -0.014694448, 0.053613804, 0.1737551, -0.2583492, -0.1639063, -0.11655818, 0.076552734, -0.061435558, 0.0711121, -0.06781757, 0.040907513, -0.06712528, 0.04124321, -0.076383136) * inp_0_2_2;
    result1 += M4(-0.120256715, -0.0032852388, 0.08942942, 0.17121774, -0.07147137, -0.057755075, 0.02410689, 0.05740574, 0.058675442, -0.00062612724, -0.010832723, 0.010406553, 0.08280543, -0.07105286, -0.061678752, -0.116874725) * inp_0_0_0;
    result1 += M4(0.1182354, -0.030621838, 0.08312794, -0.061441246, -0.08110533, 0.109418824, 0.10856392, 0.052165195, -0.10694568, 0.0342131, 0.047060635, -0.0038710313, 0.14106348, -0.053607654, -0.11254864, -0.046592183) * inp_0_1_0;
    result1 += M4(0.12231303, 0.054131206, 0.011712652, -0.088464715, -0.14093837, 0.29812422, 0.06029083, -0.04022531, 0.066382855, 0.11527826, -0.10673558, 0.10924417, -0.10924121, -0.03523279, -0.05566302, 0.14398983) * inp_0_2_0;
    result1 += M4(-0.044105493, 0.2501197, -0.09405833, 0.35442883, -0.065798104, -0.07082835, 0.11997046, 0.09580719, -0.092299156, 0.28344256, 0.05037411, 0.12528113, 0.06920217, -0.06094403, -0.038652077, -0.10605523) * inp_0_0_1;
    result1 += M4(0.12148994, -0.17415935, 0.25568062, -0.04104654, 0.20252831, -0.19075175, -0.060728874, -0.063538924, -0.17880204, 0.14168711, 0.88642734, -0.0672493, 0.1733541, 0.06998283, -0.109848484, -0.08384599) * inp_0_1_1;
    result1 += M4(0.106891796, -0.16184291, -0.009814366, -0.11995233, -0.033688143, -0.19656697, 0.24124682, -0.11656356, 0.38544965, -0.114038765, 0.14427198, 0.05659013, -0.20163073, 0.089954704, -0.027293684, 0.023141261) * inp_0_2_1;
    result1 += M4(0.0046126214, -0.020131486, 0.012532676, -0.16654569, 0.12674284, -0.45902142, -0.12193337, 0.04169165, 0.11093638, 0.007697058, -0.091539614, 0.15722892, -0.011002907, -0.06358553, 0.11513527, -0.03611011) * inp_0_0_2;
    result1 += M4(0.103751734, -0.12123755, -0.14155978, -0.04249229, 0.17758048, -0.032302763, -0.53052413, -0.33374637, -0.054316413, -0.41039214, -0.6174535, -0.12863888, 0.083115146, 0.035503063, 0.081300065, 0.06314958) * inp_0_1_2;
    result1 += M4(0.19971204, -0.14961188, -0.041969627, -0.05291055, 0.0482811, -0.0018077884, -0.024827844, -0.030772507, 0.038971055, -0.1332172, -0.1298134, -0.13430318, -0.13702542, -0.114180245, 0.06911617, 0.09022068) * inp_0_2_2;
    result2 += M4(-0.2721459, -0.11418723, -0.4807968, -0.8016264, 0.004597626, -0.014500568, 0.04853939, -0.42647842, -0.2106949, -0.18959951, 0.2865163, -0.30866912, 0.011883116, -0.07036745, 0.030461513, 0.03371964) * inp_0_0_0;
    result2 += M4(0.049401104, 0.09207739, 0.06046072, -0.048542507, 0.023926394, 0.026840732, 0.10742675, -0.16483815, 0.047151808, 0.091492385, 0.052523952, -0.4926465, 0.05602088, 0.10809819, -0.050200053, -0.098426335) * inp_0_1_0;
    result2 += M4(0.05476234, 0.21904074, -0.15789254, -0.2300389, -0.01824679, 0.05660121, 0.10070535, -0.5075902, -0.047788195, 0.22778614, -0.30155367, -0.22081022, -0.05553073, -0.16960534, -0.10027303, -0.026020398) * inp_0_2_0;
    result2 += M4(-0.11077647, -0.13372827, 0.5488601, -0.12019483, -0.052522272, -0.13511162, 0.43313292, -0.14260967, -0.074728176, -0.15168123, -0.48062578, 0.36897698, 0.07148297, 0.09023761, -0.03400663, 0.08547735) * inp_0_0_1;
    result2 += M4(-0.15428258, 0.030922685, 0.1217074, 0.13572186, -0.08524881, 0.094054006, 0.11253216, 0.11013995, -0.45977682, -0.15203641, 0.109975055, 0.15365896, 0.21775107, 0.08608902, 0.11649588, 0.068478025) * inp_0_1_1;
    result2 += M4(-0.20634964, 0.04622949, 0.22807904, -0.07145654, -0.05905545, 0.32532388, -0.06301779, 0.10933545, -0.10080906, 0.2528051, -0.0505066, 0.18448673, 0.090519235, -0.04494576, 0.08536097, 0.14764753) * inp_0_2_1;
    result2 += M4(-0.171755, -0.010312141, -0.16239719, 0.091666795, 0.12626591, -0.096257575, -0.33798438, 0.40246272, 0.023330506, 0.057379354, 0.44827402, -0.061611995, -0.06746128, -0.017183397, -0.0041437102, -0.08529568) * inp_0_0_2;
    result2 += M4(0.1010919, -0.064957894, 0.04850151, 0.12357245, 0.47171336, 0.054920837, -0.1926751, 0.13270514, 0.48519245, -0.019171925, 0.029574228, 0.0058228616, -0.19301498, 0.10680044, -0.023180917, -0.14816155) * inp_0_1_2;
    result2 += M4(0.07079822, 0.12555863, -0.13028438, -0.020363415, -0.07656729, 0.064809486, -0.09618202, -0.002030103, 0.052252784, -0.08537838, -0.14319943, -0.012356357, -0.07228969, -0.08864302, -0.033544827, -0.0572522) * inp_0_2_2;
    result3 += M4(0.18086092, 0.11678398, 0.20764782, -0.106937215, 0.088300705, -0.035301697, 0.22994739, 0.1371641, 0.021533998, -0.13791268, -0.12307546, -0.025061183, -0.031698085, -0.048378833, -0.008688483, 0.15450206) * inp_0_0_0;
    result3 += M4(-0.16061023, -0.095917724, -0.10077866, -0.041746147, -0.010511969, 0.051912565, -0.0047854125, 0.039629657, 0.13639921, -0.13122918, -0.321471, 0.068973966, -0.010164677, 0.05828533, -0.010391735, -0.047716863) * inp_0_1_0;
    result3 += M4(-0.16884394, 0.037552156, 0.0059565064, 0.043155476, -0.03927644, -0.09763244, 0.09949186, 0.09316286, -0.20201685, -0.26955765, 0.091346875, 0.071256496, 0.005235689, 0.0553892, -0.012431444, -0.0906315) * inp_0_2_0;
    result3 += M4(0.20623176, 0.012103682, -0.31166044, 0.12269979, 0.13247636, -0.047155477, -0.011192873, 0.14874578, 0.13094766, -0.23947284, 0.11462619, -0.44008076, -0.14612441, -0.121406846, 0.025455037, 0.10103937) * inp_0_0_1;
    result3 += M4(-0.08245721, -0.060714643, -0.047538135, -0.029714277, -0.3183384, 0.0507275, -0.17429222, 0.11981735, 0.45014372, 0.03201849, 0.40728307, 0.21436042, -0.027551334, 0.09753696, -0.055959877, 0.020654254) * inp_0_1_1;
    result3 += M4(-0.04853956, 0.049836405, -0.11446513, 0.059589066, -0.3517388, -0.16247396, -0.3001052, 0.020040449, -0.3545168, -0.38463908, 0.013030378, 0.03053633, 0.13466077, -0.11272681, -0.096126154, -0.025402198) * inp_0_2_1;
    result3 += M4(0.025286306, 0.012451554, -0.08057375, 0.02057414, 0.058682315, 0.41171318, 0.2876668, 0.0350903, -0.15419756, 0.013990583, 0.117270134, -0.035345256, -0.070510894, -0.04993525, -0.040436886, 0.042942382) * inp_0_0_2;
    result3 += M4(0.014413092, -0.27893832, 0.06338184, -0.0677433, 0.032875888, 0.15038134, -0.49326637, -0.093903355, 0.008604956, 0.78233474, -0.24586831, 0.1142984, 0.016422343, 0.11795854, 0.00049271644, -0.0091830725) * inp_0_1_2;
    result3 += M4(-0.07944619, 0.045117166, -0.31203875, 0.046349335, 0.15296136, 0.00022889048, 0.01675605, -0.24399844, -0.07119836, 0.22158709, -0.27195194, 0.010351638, 0.042051885, -0.006145646, -0.02050488, -0.012305323) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.7877479, 0.0032667299, -0.04325567, 0.07179896, -0.23715565, 0.10287985, 0.18253571, -0.016109223, -0.7538936, 0.4074938, -0.03260188, -0.11192041, -0.41858998, 0.8310326, 0.00114719, 0.08650812) * inp_1_0_0;
    result0 += M4(-0.36265263, 0.089657165, 0.05546159, 0.01450601, 0.64684856, -0.39965144, -0.019729774, -0.22850813, 0.7951702, -0.10275423, 0.026591096, 0.011182722, -0.2591463, -0.23506433, -0.18553379, 0.01836173) * inp_1_1_0;
    result0 += M4(0.22958113, 0.24507499, -0.0009085665, 0.025688037, 0.1789685, -0.03996787, 0.033890594, 0.04317889, -0.34441403, -0.46425748, 0.05453663, 0.16372964, 0.0426576, -0.14096026, -0.04502883, 0.09587643) * inp_1_2_0;
    result0 += M4(-0.3494056, -0.082948655, 0.07504395, -0.07339795, -0.110862955, 0.035264563, -0.17047201, 0.038193803, -0.065312356, -0.3085865, -0.040704094, 0.2128014, -0.2904209, 0.5297099, 0.12631062, 0.2378055) * inp_1_0_1;
    result0 += M4(0.17847796, -0.38196132, 0.079968676, 0.092410885, -0.10387645, 0.25422677, 0.027833175, 0.068802044, 0.054053042, 0.34304845, 0.13816144, -0.04812507, 0.8679374, -0.66930026, -0.20176, 0.19481847) * inp_1_1_1;
    result0 += M4(-0.1769112, 0.050453354, -0.121138, -0.14879723, -0.23180622, -0.030089943, -0.1406821, 0.11151334, -0.14314717, 0.3005335, -0.04399447, -0.16727608, 0.39486343, 0.4301389, -0.047432862, 0.1485348) * inp_1_2_1;
    result0 += M4(0.048477065, 0.16779567, -0.002090599, 0.12999858, 0.10078733, -0.13052313, -0.08977894, 0.056135114, 0.29558718, 0.17010368, -0.20287046, -0.20904946, 0.013041247, 0.18374768, -0.23996113, 0.15956356) * inp_1_0_2;
    result0 += M4(0.08148964, -0.056765735, 0.11845613, -0.14772537, 0.06449012, 0.012497531, -0.008564961, 0.15826498, -0.021845873, 0.102826186, 0.062753946, 0.19367856, -0.15126503, -0.14359862, 0.2505148, -0.7502654) * inp_1_1_2;
    result0 += M4(-0.12544326, 0.18613958, -0.18266647, -0.008939739, 0.11125361, -0.026588134, -0.0705322, -0.14159186, 0.23502511, -0.5045252, 0.07879249, -0.06501756, -0.00774147, -0.45144224, 0.022859192, -0.16840653) * inp_1_2_2;
    result1 += M4(-0.29321578, -0.13358772, 0.001865069, -0.028521067, 0.27103576, 0.3769105, 0.05738348, 0.19343111, 0.07013243, 0.05677183, 0.26547337, -0.10981486, 0.033659834, -0.106217735, -0.3149417, -0.15499814) * inp_1_0_0;
    result1 += M4(0.11310371, 0.033491164, -0.06552947, -0.03369608, -0.22780457, 0.07619982, 0.15554327, -0.099096425, 0.14015312, -0.09080759, 0.099142835, 0.2735972, 0.1279573, -0.21840495, -0.023794847, 0.012228444) * inp_1_1_0;
    result1 += M4(0.0795835, 0.106710926, 0.11842591, -0.062723555, -0.04645734, -0.08119895, 0.11419802, -0.014234763, -0.22169705, 0.26477942, -0.18091935, 0.065607265, 0.1065371, -0.120510444, -0.089288875, 0.0073383576) * inp_1_2_0;
    result1 += M4(-0.0066488343, -0.5551815, 0.053486858, -0.39556634, 0.12273862, 0.40211588, 0.015778093, 0.48941597, -0.0378046, -0.17455244, -0.15233797, 0.046071343, -0.19602986, -0.40427268, -0.11732977, -0.5087983) * inp_1_0_1;
    result1 += M4(0.36488935, 0.050356552, -0.15170296, 0.16662858, -0.29079744, 0.034267638, -0.13821557, -0.29883033, 0.1350859, -0.17420062, -0.37016925, -0.23104107, 0.3336359, 0.051103126, -0.15677378, 0.12264863) * inp_1_1_1;
    result1 += M4(0.2732916, 0.06679741, 0.15431285, -1.3745375e-07, -0.12206452, 0.07537019, 0.0070971316, -0.14691477, -0.20438223, -0.2209517, 0.14382371, 0.105331615, 0.19260372, 0.025905252, -0.19734854, -0.06082932) * inp_1_2_1;
    result1 += M4(-0.1483832, -0.5097548, -0.025433099, -0.22893205, 0.28700528, 0.4558262, -0.15256926, 0.93375915, -0.2915202, -0.010318913, 0.07318161, -0.06593547, 0.07528898, 0.012788415, 0.008746595, 0.47385678) * inp_1_0_2;
    result1 += M4(0.12720585, -0.012845808, 0.17939524, 0.21309614, -0.15645504, -0.039202243, -0.36623722, -0.19456024, 0.2550601, 0.25287685, 0.030347683, -0.3361797, -0.03386252, 0.63207465, 0.8723677, 0.16315408) * inp_1_1_2;
    result1 += M4(0.17449751, -0.07329246, -0.17648633, -0.10996588, -0.23425053, 0.11636321, -0.013598474, 0.0023484565, -0.030076211, 0.081661716, 0.19895321, 0.036889415, -0.26800293, -0.03794186, 0.18632184, 0.1466773) * inp_1_2_2;
    result2 += M4(-0.08614674, 0.05412953, 0.6236375, -0.52466404, 0.24526903, 0.17461756, -0.21995968, 0.7656553, -0.23288062, -0.17151268, -0.8564187, -0.31776163, -0.17824481, 0.005352505, 0.63449275, -0.57706004) * inp_1_0_0;
    result2 += M4(-0.028456392, 0.11629738, 0.14426252, -0.07595573, -0.10606074, -0.2592137, 0.009500136, -0.12859717, -0.1462417, 0.22012289, 0.18704765, 0.12896445, -0.16355905, 0.00016120271, -0.08998502, -0.20847504) * inp_1_1_0;
    result2 += M4(-0.016517183, 0.019529449, 0.32717273, -0.036332294, 0.0076328567, 0.017254312, 0.13056554, 0.038284875, 0.17648487, -0.30996585, -0.12209372, 0.1268222, -0.16282351, 0.18245657, -0.09996415, 0.52826506) * inp_1_2_0;
    result2 += M4(-0.35995114, -8.9993664e-05, -0.24888818, -0.36782375, 0.27062023, 0.07395131, -0.017340343, 0.4939656, -0.017584309, -0.10324304, 1.2734212, -0.16804285, -0.4827403, -0.002535978, 0.7323366, 0.325574) * inp_1_0_1;
    result2 += M4(-0.060627304, 0.21742217, -0.38419202, -0.19919534, -0.03221686, -0.2614204, -0.0067027044, 0.06916074, 0.49190938, 0.06896668, 0.25933754, -0.044904098, 0.1645784, 0.08473387, -0.29702765, -0.4842755) * inp_1_1_1;
    result2 += M4(-0.0400939, -0.07953151, -0.19916654, -0.014821981, 0.11317242, 0.14289217, 0.075952426, -0.06997604, 0.083851576, 0.14255229, 0.076621026, -0.09998319, -0.090703875, 0.08952634, -0.055801615, 0.29854956) * inp_1_2_1;
    result2 += M4(-0.056130227, -0.18999016, 0.08093695, -0.2581123, 0.31022945, -0.054873053, -0.05558861, 0.5165789, -0.17698675, -0.10333798, -1.0056001, 0.26516658, 0.7071705, -0.50125265, -0.84970695, -0.37711078) * inp_1_0_2;
    result2 += M4(0.2265066, 0.01572243, -0.03384857, 0.1655942, 0.19206159, -0.1875862, -0.17408767, 0.19494045, -0.10231435, 0.018655341, 0.0967781, 0.0997328, -0.38705692, 0.37201244, 0.015132982, 0.10875928) * inp_1_1_2;
    result2 += M4(0.01073096, -0.053288177, -0.06147118, 0.1019622, -0.049403105, -0.04349161, -0.024584964, -0.014807884, -0.1443577, 0.14453825, 0.15009356, -0.00998313, -0.21926731, 0.012461851, -0.026052674, 0.107886925) * inp_1_2_2;
    result3 += M4(0.006412989, 0.19371186, 0.10066414, 0.23312075, 0.0063051432, -0.15723097, -0.1157605, -0.29654843, -0.019910859, 0.22618154, 0.3492288, 0.0027918045, -0.059994083, -0.053255327, -0.5976749, 0.22365966) * inp_1_0_0;
    result3 += M4(0.08802163, 0.12939234, -0.15938915, 0.051310014, 0.13824663, -0.09367597, -0.032166976, 0.13418145, 0.12894818, 0.037756454, 0.4697045, -0.11938952, 0.08826707, 0.12180222, -0.03584888, -0.025763491) * inp_1_1_0;
    result3 += M4(-0.11872379, -0.008590566, -0.13108695, 0.06701295, -0.17777334, -0.031147052, 0.07087208, 0.03247054, 0.25191292, -0.09825543, -0.147467, 0.019651469, -0.117014475, -0.32118565, 0.48410913, 0.008543344) * inp_1_2_0;
    result3 += M4(0.0054178163, 0.42362052, 0.008950115, 0.29192588, 0.0706428, -0.29699603, 0.1862189, -0.7059621, 0.1495758, 0.051398687, -0.45678535, 0.56819373, -0.18459491, 0.04376733, -0.6200113, 0.48798153) * inp_1_0_1;
    result3 += M4(-0.39800417, -0.023729602, -0.31937236, -0.047676805, 0.5797377, 0.08632374, 0.12065665, 0.27638876, -0.55792665, 0.044282127, -0.20693101, -0.12678556, -0.69543767, -0.097125985, -0.45764804, -0.45151967) * inp_1_1_1;
    result3 += M4(0.09078145, 0.06530357, 0.14631748, 0.03661648, -0.16419804, -0.093794644, -0.030351108, 0.07290986, -0.041619737, -0.011653201, -0.06901773, 0.026330473, 0.3154132, -0.11228929, 0.5096182, -0.17105031) * inp_1_2_1;
    result3 += M4(0.033519063, 0.26083577, -0.01727661, -0.031451292, -0.08788832, -0.2767312, 0.03442735, -0.08841422, -0.08465136, 0.066281624, 0.14229667, -0.2057138, 0.052911058, 0.2878053, 0.18471181, 0.04700608) * inp_1_0_2;
    result3 += M4(-0.06565433, -0.100153156, -0.050166167, -0.11043788, 0.18412113, 0.08167101, -0.1995631, 0.08483573, 0.023999302, -0.074728936, -0.025009664, -0.1407246, 0.20632368, -0.010559036, 0.56752825, 0.035018343) * inp_1_1_2;
    result3 += M4(0.08706229, 0.051308893, 0.24960758, 0.09317251, -0.032920387, -0.029445602, -0.062993295, -0.0011298379, 0.11166931, -0.066017106, -0.010057219, -0.040293008, 0.09327301, 0.37767017, 0.35042298, -0.011552883) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.04780599, -0.07032002, -0.08084771, 0.036017627, -0.16682968, 0.3102401, 0.0024924742, -0.07002336, 0.35934666, 0.37678075, -0.016899375, -0.06568056, 0.8416598, 0.11883787, -0.005487801, 0.0009383593) * inp_2_0_0;
    result0 += M4(-0.6496133, -0.1495958, -0.09011652, 0.027154563, -0.019949675, -0.44139183, -0.04221117, -0.0593135, 0.004606602, -0.35658807, 0.10399215, 0.002385929, -1.0847018, -0.16945365, 0.061180156, 0.056416944) * inp_2_1_0;
    result0 += M4(-0.21560223, 0.10034609, 0.14740138, 0.0057382425, -0.20745459, 0.27725765, 0.014134607, -0.01683686, -0.67653465, -0.207567, -0.20197938, 0.07686535, 0.39997783, 0.0484111, 0.06927242, 0.015343053) * inp_2_2_0;
    result0 += M4(0.06767969, 0.18765217, -0.03933933, -0.076952234, 0.17220782, -0.027086454, -0.10719792, -0.04774826, 0.049957585, -0.43891233, 0.13706255, -0.13821359, -0.19941065, 0.007133674, 0.19429608, -0.06449385) * inp_2_0_1;
    result0 += M4(-0.16964355, 0.41952726, 0.07589897, -0.33206108, -0.052578785, 0.113290794, 0.22627144, -0.58420306, -0.14920866, 0.64703226, 0.115959555, -0.37022328, 0.24353665, 0.2391013, -0.21663588, -0.16358669) * inp_2_1_1;
    result0 += M4(-0.059080258, 0.15011467, 0.09174712, -0.035284452, 0.15851362, -0.09330636, -0.082627244, -0.110887915, -0.0039982945, -0.13307045, -0.06368585, 0.11973119, -0.0483121, 0.12713341, -0.042541336, -0.03776737) * inp_2_2_1;
    result0 += M4(0.18662067, -0.0013520481, -0.2527826, 0.1490076, -0.020300979, -0.04517041, -0.001645463, 0.04205904, -0.010138189, 0.06377853, 0.027535548, 0.041057255, -0.099638276, 0.09928539, 0.0032009473, 0.16731122) * inp_2_0_2;
    result0 += M4(-0.37649086, 0.055963304, -0.22606191, 0.68770826, -0.2097376, 0.18204544, 0.12153394, 0.36031178, 0.051179703, 0.07865228, -0.20059402, 0.4695518, 0.09876491, -0.24240106, 0.10837335, -0.055800065) * inp_2_1_2;
    result0 += M4(0.09932087, -0.14226313, -0.064541854, -0.029218832, -0.093578756, 0.10139168, 0.07955235, 0.17596367, 0.19133964, -0.050102677, -0.0999107, -0.03485811, -0.04666982, -0.15958081, -0.03358678, 0.018435465) * inp_2_2_2;
    result1 += M4(-0.050116885, -0.1303363, -0.2237516, -0.11273447, 0.23780245, 0.35437375, 0.086003676, 0.11470772, -0.11329346, 0.07383606, 0.07326159, 0.08062725, -0.13161981, -0.031764053, -0.21221453, 0.113811746) * inp_2_0_0;
    result1 += M4(-0.11682922, 0.21357708, 0.11795002, 0.0678365, 0.06992715, 0.033269513, 0.22998028, -0.07999028, 0.0962189, -0.063741066, -0.08193524, -0.07084851, 0.10935445, 0.1469782, -0.081717, -0.04810677) * inp_2_1_0;
    result1 += M4(0.05142859, -0.0043191314, -0.097856835, 0.039712097, -0.0690952, 0.16362403, -0.053647935, -0.04959144, -0.17401077, -0.2729499, 0.13520232, 0.04829186, -0.08392741, -0.15273184, 0.14763665, -0.06860372) * inp_2_2_0;
    result1 += M4(0.0762203, 0.17103748, 0.023777442, -0.18071663, 0.1805281, 0.2580692, -0.00799023, -0.106952816, -0.1471364, 0.07547178, 0.024245717, 0.4034267, 0.026855545, 0.07261073, 0.109291546, -0.35669854) * inp_2_0_1;
    result1 += M4(-0.120913096, 0.4336983, 0.80581564, -0.026950426, -0.11641688, -0.1332992, 0.8538263, -0.08721758, 0.15500042, 0.12177637, 0.28960708, -0.34300023, 0.15135571, -0.02656549, 0.3758575, 0.33104432) * inp_2_1_1;
    result1 += M4(0.35159308, -0.048225038, 0.023330225, 0.1130649, -0.35317346, -0.04255005, 0.20427361, -0.116072066, -0.2535993, 0.2738591, 0.2653092, 0.20809464, -0.13022463, -0.09441067, -0.11431279, 0.042177256) * inp_2_2_1;
    result1 += M4(0.22445816, -0.14736529, -0.15882711, 0.5415069, 0.15992929, 0.44875544, -0.19147561, 0.6393173, -0.16316868, -0.14581163, -0.111964114, -0.07730653, 0.074792296, -0.38394806, -0.050117224, -0.18654256) * inp_2_0_2;
    result1 += M4(-0.16668802, -0.24579145, -0.4009121, 0.04509699, 0.097250484, -0.1799628, -0.5345654, -0.17230347, 0.49927273, -0.007705038, -0.5015368, -0.5742568, 0.07445772, 0.37589544, -0.097533524, -0.22329803) * inp_2_1_2;
    result1 += M4(0.28359607, -0.23840827, 0.005171004, 0.11881996, -0.29586014, -0.13015585, -0.1387961, -0.013833939, -0.20412335, -0.36939603, -0.1470519, -0.032856446, -0.10135263, 0.078272805, 0.050664254, 0.1150928) * inp_2_2_2;
    result2 += M4(-0.12351783, -0.019082371, 0.3719229, -0.14222158, 0.0013751471, 0.13612705, 0.0867724, -0.2419449, -0.012535462, -0.002770023, 0.4036555, 0.06992712, -0.023830926, 0.010811914, 0.8719884, -0.58750594) * inp_2_0_0;
    result2 += M4(0.14173459, -0.11159855, 0.29273918, -0.87652236, 0.022691522, -0.042660873, 0.016300626, -0.28937107, 0.097126305, -0.2423422, -0.43694004, 0.42111272, 0.09687375, 0.05709011, -0.3850503, 0.21654455) * inp_2_1_0;
    result2 += M4(0.035219282, 0.019670365, -0.2375487, -0.13419758, -0.09331829, 0.021941056, -0.07228573, 0.02695713, -0.050099198, 0.16671023, -0.3538249, -0.63645566, 0.0009827163, -0.029915605, -0.12105115, -0.119899444) * inp_2_2_0;
    result2 += M4(-0.004104032, -0.10138686, -0.22040631, 0.5779949, -0.13661973, 0.027274927, -0.2150813, 0.525012, -0.16284144, 0.014079534, 0.4264478, -0.039376594, -0.10012467, -0.03359327, -0.1481725, -0.27251244) * inp_2_0_1;
    result2 += M4(-0.33470356, -0.20690921, 0.051504787, 0.012401888, -0.4665832, -0.5527614, -0.16998732, -0.0812983, -0.2999877, -0.6539622, 0.15632117, -0.078222804, -0.09864121, -0.010381408, 0.30224353, -0.19953594) * inp_2_1_1;
    result2 += M4(-0.19233099, -0.08332941, 0.0012649224, -0.067411505, -0.0054558255, 0.59298104, 0.21422756, 0.059813425, 0.14089079, 1.0047145, 0.38067076, -0.100448966, 0.11059236, 0.027661487, -0.09620804, 0.09009982) * inp_2_2_1;
    result2 += M4(0.18404962, -0.12098288, 0.27177984, 0.056220133, 0.24894507, 0.047324877, 0.12416541, 0.30289674, 0.027005661, -0.19021505, -0.0024497043, 0.3551621, 0.14378282, -0.063660555, -0.35600048, 0.5860875) * inp_2_0_2;
    result2 += M4(0.16743617, -0.0026385167, -0.14478382, -0.01748228, 0.27725765, -0.20199053, -0.09185427, 0.12796687, 0.48015192, 0.076516695, -0.552925, 0.1135052, -0.010632005, -0.11545074, -0.12859748, 0.16206567) * inp_2_1_2;
    result2 += M4(-0.06365669, -0.069847, -0.15966758, -0.20447369, 0.08069885, -0.09353715, -0.11141954, 0.10072991, -0.19246463, -0.076096, -0.028447233, -0.0644537, -0.23110566, 0.11697651, -0.004143201, 0.08724458) * inp_2_2_2;
    result3 += M4(0.03633761, -0.16047782, -0.67756057, -0.10035652, 0.009340622, -0.15280062, -0.33244798, -0.30673677, 0.13509355, 0.022167608, 0.06816302, -0.09541798, 0.11997486, -0.05545654, -0.089053795, -0.0546987) * inp_2_0_0;
    result3 += M4(0.18199274, -0.082163975, -0.175738, 0.016560921, 0.24673073, -0.053830415, -0.18625411, 0.23845157, 0.1170431, -0.11284524, 0.4278908, -0.14203157, 0.041773185, 0.015674697, -0.14199376, -0.03636937) * inp_2_1_0;
    result3 += M4(-0.012551211, 0.09854438, 0.21295458, 0.038531892, -0.20460847, -0.06652749, -0.016217371, 0.09053724, -0.26276731, 0.079923764, -0.3339931, -0.077918306, -0.17207757, -0.10671548, -0.13748625, 0.07998148) * inp_2_2_0;
    result3 += M4(0.033063322, -0.123706535, -0.09303944, -0.84778666, 0.10351984, -0.105505876, -0.12334084, -0.45670348, -0.0646038, -0.07191725, 0.33092967, -0.23602708, -0.1305923, 0.34919608, -0.11097437, 0.26827848) * inp_2_0_1;
    result3 += M4(0.4465745, 0.0388821, 0.18260811, 0.10153297, 0.446556, -0.36594024, 0.40984136, 0.7230177, 0.44345075, 0.16386366, 0.58919466, 1.0302022, -0.1982706, -0.0055762925, 0.0134010175, 0.12069651) * inp_2_1_1;
    result3 += M4(-0.058904447, -0.12471255, -0.10547968, 0.1067584, -0.80060107, 0.046524394, -0.21227211, -0.054502506, -0.9448696, 0.25887474, 0.030986771, 0.010431361, -0.29773232, 0.27764565, 0.13338284, -0.07626536) * inp_2_2_1;
    result3 += M4(-0.025320852, -0.1600369, 0.112738155, -0.22452332, 0.049939916, -0.28624958, 0.018701676, -0.19589838, 0.047869593, 0.08154422, 0.03626981, -0.07618511, 0.12786813, 0.017456694, 0.33158335, -0.14318097) * inp_2_0_2;
    result3 += M4(0.14028463, 0.35610476, -0.010103326, 0.14028364, 0.19318064, 0.33775964, -0.2333218, 0.26463324, 0.12095955, 0.4510546, -0.60330033, -0.2633037, 0.24550487, 0.14900038, -0.14681695, -0.09803792) * inp_2_1_2;
    result3 += M4(0.07342311, 0.1127348, -0.13028975, -0.10472723, -0.20765647, -0.14125927, -0.17647427, 0.050530095, 0.35498154, -0.17778161, -0.36639938, 0.016203033, 0.07711559, -0.35548732, 0.25343066, 0.15760985) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.33322108, 0.07764651, 0.08420755, -0.034089092, 0.62892383, -0.60202736, 0.08938283, 0.071470805, 0.09954167, 0.0030378513, 0.0542351, 0.0027850706, 0.011546292, 0.1667282, -0.034353215, -0.0080632605) * inp_3_0_0;
    result0 += M4(-0.28641465, -0.22017297, -0.081914775, -0.0047069457, -0.3520516, 0.46720698, 0.011231783, 0.06645861, 0.23209842, -0.11611426, -0.025161935, -0.035291176, 0.07032849, -0.10675596, 0.014065639, -0.0050185523) * inp_3_1_0;
    result0 += M4(0.23682013, 0.08160492, -0.047630806, -0.004513581, 0.41182095, -0.13458914, 0.25011426, -0.247058, -0.085095845, 0.05963356, -0.02696186, 0.020107487, 0.2961279, -0.054117907, 0.054610718, 2.956324e-06) * inp_3_2_0;
    result0 += M4(-0.001505549, 0.17470093, 0.016329065, -0.004133404, 0.17490277, -0.17556837, -0.063681684, -0.09273098, -0.26607096, -0.028372625, 0.013932066, -0.028329292, 0.0006055524, -0.039944846, -0.051169723, -0.06438464) * inp_3_0_1;
    result0 += M4(0.19944172, -0.035298415, 0.0094761755, -0.0061179856, -0.4470619, 0.41627157, 0.09465546, 0.08792403, -0.45165175, 0.34968808, 0.08115815, 0.011976065, -0.23664573, 0.05788007, 0.060105763, 0.079080045) * inp_3_1_1;
    result0 += M4(0.11014548, 0.09026452, -0.13930166, 0.058670923, -0.38155195, -0.20427032, -0.09854986, -0.11908271, 0.015408292, 0.06817643, -0.019570252, 0.13065402, -0.1648293, 0.10152247, 0.06637536, -0.020878013) * inp_3_2_1;
    result0 += M4(-0.1342102, 0.031546194, -0.010319718, 0.029469894, -0.091606505, 0.0975779, 0.10910816, -0.011819848, -0.099090174, -0.18508369, -0.10989333, 0.28668836, -0.0761612, 0.10299725, 0.002910385, 0.11090923) * inp_3_0_2;
    result0 += M4(0.024240077, -0.05388459, 0.0573073, -0.59048086, 0.070752785, 0.08979542, -0.011395297, 0.33481905, 0.31175384, 0.00593839, -0.13665456, 1.3909243, -0.03230319, 0.079254, -0.04575637, 0.37140194) * inp_3_1_2;
    result0 += M4(-0.04741521, 0.029556805, -0.034377847, -0.12786181, 0.038171843, 0.03288492, -0.07693116, -0.061772116, -0.2204608, 0.0001507246, -0.022551717, 0.25253132, -0.08073907, 0.025750034, -0.14745033, 0.19419739) * inp_3_2_2;
    result1 += M4(0.07121861, -0.016213594, 0.042341664, 0.04374572, -0.06328794, -0.06470112, 0.020218292, 0.098027594, -0.10444905, 0.15612924, 0.07662033, 0.07557544, 0.04735786, 0.049679726, 0.05379076, 0.0008245018) * inp_3_0_0;
    result1 += M4(-0.1460244, -0.0856599, -0.09817612, -0.016867943, 0.046158962, 0.13743573, 0.07159436, 0.1269533, 0.055102494, -0.19980885, -0.088693514, -0.04193565, -0.26707008, -0.031147541, -0.001896289, 0.051246673) * inp_3_1_0;
    result1 += M4(-0.15277752, -0.09885817, 0.042289604, -0.016214577, -0.21953328, 0.14498495, 0.15865861, -0.14706223, 0.0806769, -0.086345926, -0.0068838606, -0.034329433, 0.21020055, -0.034495275, -0.04958253, -0.064656615) * inp_3_2_0;
    result1 += M4(-0.0066395965, 0.050301928, -0.02688376, 0.005583239, 0.2639312, -0.046535566, 0.2111776, -0.31277505, -0.28157791, 0.13475044, -0.019826254, 0.2770731, 0.18811396, 0.4233201, 0.0074903243, 0.4448914) * inp_3_0_1;
    result1 += M4(-0.0038604876, -0.010240175, 0.051092327, 0.07230085, -0.09400355, -0.025142442, 0.0013292138, 0.17174885, 0.020283755, -0.02125363, -0.12621513, -0.18949184, -0.3521946, 0.022074945, -0.018333096, 0.055038933) * inp_3_1_1;
    result1 += M4(-0.034302413, -0.021287676, 0.013862631, -0.03737979, -0.095441386, -0.32098246, 0.094188035, -0.10353121, 0.048401315, -0.029544463, 0.033801895, -0.092469126, 0.47644296, -0.0051099574, 0.057200804, 0.015127155) * inp_3_2_1;
    result1 += M4(0.23866822, 0.26510623, 0.02385755, -0.020763922, -0.004423861, 0.28289008, -0.18886727, 0.38900962, 0.049174193, -0.84216744, -0.22781181, 0.2592993, 0.14111431, 0.12526356, -0.10359959, 0.4067814) * inp_3_0_2;
    result1 += M4(-0.1053375, 0.2713133, 0.46003073, 0.11402203, -0.17938127, -0.123648696, -0.38262495, -0.30197576, 0.59348077, -0.60553443, -1.0049168, -0.21315517, -0.31820276, -0.15807736, -0.13296248, -0.03443162) * inp_3_1_2;
    result1 += M4(-0.32877386, 0.039531518, 0.10649216, -0.025164325, 0.046592653, 0.10057847, -0.050899837, 0.059991404, 0.10532309, -0.2918022, -0.22117814, -0.06720362, 0.23987655, -0.18058273, -0.08636455, -0.029894745) * inp_3_2_2;
    result2 += M4(0.060656857, 0.09245627, 0.35418487, 0.17620212, 0.19628744, 0.18952982, 0.514725, 0.20899558, 0.039890107, 0.003920753, -0.19699372, 0.31242022, -0.014026643, 0.046241377, -0.0007950127, 0.39218506) * inp_3_0_0;
    result2 += M4(0.08832882, -0.14713587, -0.048872083, -0.21938618, -0.15382901, -0.020578602, 0.21938424, -0.43138894, -0.08521566, -0.06524315, 0.06505524, 0.11122572, -0.0028046607, -0.17078099, -0.017362166, 0.004233619) * inp_3_1_0;
    result2 += M4(0.063659415, 0.35752934, 0.16364315, 0.18826327, 0.024619585, -0.1653834, 0.17602612, -0.34139436, 0.024046881, 0.13866976, 0.021463202, -0.045380265, 0.102079704, 0.110457495, 0.020646015, -0.14570183) * inp_3_2_0;
    result2 += M4(-0.0021459372, 0.015816592, -0.358204, -0.03609594, 0.06704008, 0.2205046, -0.7171467, 0.104553975, 0.08067646, -0.12557942, 0.054763116, -0.025594782, 0.019181019, 0.10627496, -0.016675077, -0.042652607) * inp_3_0_1;
    result2 += M4(-0.12547423, -0.16424093, -0.25398996, -0.4550639, 0.19637325, -0.29887486, 0.06197227, 0.16517742, -0.123356216, 0.08303095, -0.01884916, 0.05069817, 0.061557204, -0.34902215, 0.009078737, 0.08754439) * inp_3_1_1;
    result2 += M4(-0.08665614, 0.025755342, 0.04382101, -0.07253136, -0.12076199, -0.046183817, -0.36380067, 0.18823119, 0.13583218, 0.21365163, 0.13700208, -0.22370191, -0.15157598, -0.1497365, -0.11224437, 0.03977482) * inp_3_2_1;
    result2 += M4(0.01229904, 0.018287826, -0.12246977, 0.30118403, -0.005291561, 0.114935376, 0.40668666, 0.4659885, 0.11306344, -0.09372186, 0.19337575, -0.11972402, 0.124154665, -0.009092879, 0.13126016, 0.06615385) * inp_3_0_2;
    result2 += M4(-0.39719307, -0.09657596, -0.03434092, 0.18530598, 0.23496544, -0.08821475, -0.59613585, -0.13348667, 0.64264363, 0.15009692, 0.021924725, 0.060564015, 0.17689268, -0.15702958, 0.16039276, -0.0070480118) * inp_3_1_2;
    result2 += M4(-0.41303843, -0.07616389, 0.11325086, 0.13561839, -0.06086827, 0.09428669, 0.31067157, -0.11367189, 0.2268142, -0.11325107, -0.16607754, -0.039001204, 0.14387622, 0.18586199, -0.027633375, -0.042921513) * inp_3_2_2;
    result3 += M4(-0.030136809, -0.058420338, -0.20092572, 0.008644583, -0.10223188, -0.20622598, 0.20113951, 0.16721448, 0.024763377, -0.012021403, 0.06845099, -0.10455573, -0.013004321, -0.045332566, -0.055495936, -0.11880295) * inp_3_0_0;
    result3 += M4(0.08527253, -0.083781175, -2.7420938e-05, 0.084955804, -0.057922784, -0.04882304, -0.32403204, 0.11590267, -0.039635077, 0.086975075, 0.1641649, 0.078502044, 0.18790384, 0.0017102401, -0.112735994, -0.0034963326) * inp_3_1_0;
    result3 += M4(-0.193258, 0.036374684, -0.01905537, -0.030332305, -0.0921401, 0.12621954, -0.1644272, 0.2367609, -0.052669037, -0.035963815, -0.08500502, -0.02222979, 0.088940345, 0.037612382, -0.068384394, 0.009359457) * inp_3_2_0;
    result3 += M4(-0.030501317, 0.22850983, 0.23639043, 0.0036210776, -0.0054083406, 0.2050336, 0.22713906, -0.35795626, 0.1286369, -0.0853625, 0.014067976, -0.21197844, 0.1007843, -0.06723274, 0.055084296, -0.35594264) * inp_3_0_1;
    result3 += M4(0.18322489, -0.017693786, -0.048415318, 0.20440008, 0.55035144, 0.059877828, 0.0738169, -0.1097675, 0.100818306, 0.13749059, 0.2528828, 0.20242894, 0.12153192, 0.017510382, -0.02978065, -0.5948884) * inp_3_1_1;
    result3 += M4(-0.12268337, 0.1395192, 0.27833697, 0.052059248, -0.08429866, 0.012227201, -0.00357577, 0.02456931, -0.35214806, 0.026804755, -0.30700833, 0.16239406, 0.17114975, 0.087879956, 0.2517861, 0.0057812743) * inp_3_2_1;
    result3 += M4(0.050386332, -0.20997895, -0.15061179, -0.13125321, -0.014705489, -0.35687116, 0.16584332, -0.16152884, 0.008164742, 0.3326774, -0.2010926, -0.045859043, 0.103455335, -0.14510828, -0.14034218, -0.14908774) * inp_3_0_2;
    result3 += M4(0.06807011, -0.5788353, 0.24582641, -0.14973097, -0.11715411, 0.09895396, -0.42785144, 0.11413746, 0.12631021, 0.5540722, -0.39196184, 0.119015634, 0.111017585, 0.08383669, 0.022830082, -0.027776346) * inp_3_1_2;
    result3 += M4(-0.16142349, -0.19547121, 0.17082343, 0.08626492, 0.010246475, -0.0560124, 0.23313092, 0.027302796, -0.18689786, 0.11412362, -0.2457779, -0.018110408, -0.024647454, 0.15672192, -0.07350057, 0.0721034) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.034632605, -0.01640475, 0.0087140445, 0.035836585);
    V4 result1 = V4(0.01115018, 0.06351761, -0.012579407, 0.048863374);
    V4 result2 = V4(0.037093274, 0.05901463, 0.004534857, 0.012580179);
    V4 result3 = V4(-0.022536207, -0.021236707, 0.028391438, 0.02456381);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.030404877, 0.14986534, -0.049527917, 0.0009975594, 0.023893474, 0.00076796225, -0.013942372, -0.037387043, -0.11764507, 0.39041272, -0.08339752, -0.07931269, -0.034795046, -0.051212225, 0.007592453, -0.07513011) * inp_0_0_0;
    result0 += M4(-0.0590635, -0.18557411, 0.0341884, 0.029836625, -0.033314932, -0.009194192, -0.07344057, 0.0053957026, 0.20505267, -0.21994483, 0.0025941222, -0.08016798, -0.17807567, 0.43610016, 0.042382754, 0.1947526) * inp_0_1_0;
    result0 += M4(0.10451471, 0.11488193, 0.05326924, -0.0056306114, -0.11347859, 0.08486297, -0.025103936, -0.026514051, 0.018032888, 0.014218175, -0.053609084, 0.050332155, 0.039938394, 0.072775714, 0.0915621, -0.0051197503) * inp_0_2_0;
    result0 += M4(0.045865607, -0.2689277, 0.1459681, -0.02022236, 0.033865698, -0.05651874, 0.031940818, 0.00017282278, 0.14817776, 0.22759418, 0.09651267, 0.09537637, 0.017022965, -0.0829108, -0.030124974, -0.04889855) * inp_0_0_1;
    result0 += M4(-0.11299232, 0.35897568, -0.25100654, -0.06466876, -0.04078615, -0.024417795, 0.004827448, 0.045481585, -0.039325874, -0.10025357, -0.009637922, 0.11967804, -0.62347, 0.06484193, -0.26530707, -0.023017112) * inp_0_1_1;
    result0 += M4(-0.04494089, -0.049029935, 0.08572369, 0.089694634, 0.016437257, 0.27777767, 0.0014834241, 0.06787381, -0.14276876, -0.10559145, 0.03041023, -0.062110297, -0.59305453, 0.040266678, 0.08426401, 0.07375399) * inp_0_2_1;
    result0 += M4(0.06425987, -0.017092263, -0.021066466, -0.0413824, 0.039466083, 0.017084673, 0.035895616, 0.011371949, 0.039973244, 0.14040565, -0.041977707, -0.14367099, 0.03337581, -0.27767816, 0.0793151, -0.037953544) * inp_0_0_2;
    result0 += M4(0.49769384, -0.15807678, 0.3967272, 0.41991302, 0.0888302, 0.17995782, 0.076805644, -0.017889883, -0.3028613, -0.13917387, -0.18858716, -0.13272806, 0.063127905, 0.050167277, 0.03044021, 0.0030217879) * inp_0_1_2;
    result0 += M4(-0.489316, 0.034362786, -0.26270497, -0.119206, 0.053331092, 0.07483732, -0.024170192, -0.036196873, 0.21253237, 0.03802033, 0.08905259, 0.053233396, -0.31243613, 0.06477208, 0.004697699, -0.008323764) * inp_0_2_2;
    result1 += M4(0.10492047, -0.052028958, 0.012095571, 0.014416866, 0.0358523, 0.21390074, 0.03853526, -0.02626509, -0.20417301, -0.0466575, 0.018441552, -0.052113466, -0.3105967, -0.21565838, 0.018981174, 0.35230157) * inp_0_0_0;
    result1 += M4(-0.092830226, -0.088925906, 0.03989443, -0.04962065, 0.016970415, 0.10742845, 0.17599022, 0.101119414, 0.20563397, -0.20961267, 0.14082177, -0.01756496, -0.89514893, -0.56077933, 0.089078225, -0.12157773) * inp_0_1_0;
    result1 += M4(0.05287163, 0.16744305, -0.065425865, 0.10666583, 0.18247543, -0.049592566, -0.019934842, 0.13010025, -0.038076676, 0.31038374, -0.05578002, 0.25685722, -0.12862574, -0.34214172, -0.24742146, 0.08214581) * inp_0_2_0;
    result1 += M4(-0.18449748, -0.03207228, -0.12333691, 0.1487768, 0.108499184, 0.2889483, 0.07253051, 0.024488289, 0.050393704, -0.19368757, 0.13418627, -0.072729066, -0.18928619, -0.057788845, -0.045292642, 0.050588474) * inp_0_0_1;
    result1 += M4(-0.014933752, 0.1474719, 0.447907, -0.15511471, 0.07928147, 0.26112992, 0.17530598, -0.024638698, -0.028708467, -0.052937467, -0.5864934, -0.6295876, -0.35530487, -0.38783312, 0.20511594, 0.44956356) * inp_0_1_1;
    result1 += M4(0.22650352, -0.10631374, -0.2861302, 0.09091061, 0.14308736, 0.37997353, 0.0849592, -0.027577123, 0.05581708, 0.43300763, 0.24837252, 0.37727678, -0.1657708, -0.29328984, 0.06886724, -0.0121041145) * inp_0_2_1;
    result1 += M4(0.11668464, -0.20756505, 0.24647826, 0.24669455, 0.12809831, 0.1944584, 0.09793742, 0.04055636, -0.09414987, -0.08056244, -0.0565376, -0.022974798, -0.01772902, -0.008305295, -0.05538139, 0.0062971725) * inp_0_0_2;
    result1 += M4(-0.20951486, 0.2241291, -0.9511105, -1.1421554, 0.12821753, 0.02040949, 0.10987182, 0.10099756, 0.20761503, -0.17765972, 0.07010716, -0.074859746, -0.18052423, -0.0702908, 0.012820111, -0.3500572) * inp_0_1_2;
    result1 += M4(-0.31767997, 0.7785641, 0.4079842, 0.2320963, 0.16320667, 0.31657588, 0.13968569, 0.038798794, 0.07509023, -0.12814134, 0.08726749, 0.016610796, 0.11706115, -0.14729157, 0.03856487, 0.1388334) * inp_0_2_2;
    result2 += M4(-0.034210857, -0.024894524, -0.045372173, -0.09100986, 0.008325964, -0.06507051, 0.122831255, 0.1690943, -0.13271071, 0.076229386, -0.18586308, 0.042505037, 0.119099766, 0.15563378, -0.10011105, -0.38953328) * inp_0_0_0;
    result2 += M4(0.04295672, -0.0064331656, 0.0055392953, 0.01903224, -0.029631205, 0.00644592, 0.19715203, -0.0075267404, 0.09241302, -0.051643398, 0.043725792, 0.04032251, 0.03440821, 0.05065642, -0.24338757, -0.105683096) * inp_0_1_0;
    result2 += M4(0.074175954, -0.01459683, 0.073170036, 0.04030725, -0.20174405, -0.019601887, 0.095533796, -0.008152882, 0.08995117, -0.17409928, -0.09042495, 0.09747227, 0.15413564, 0.051876307, -0.06813128, -0.23291048) * inp_0_2_0;
    result2 += M4(0.269811, 0.16145608, 0.0026532328, 0.06039029, 0.0009189353, -0.020047124, 0.017470654, 0.13565917, -0.15860485, -0.15781292, -0.22479358, 0.022414254, 0.18569599, 0.08431359, -0.38166422, -0.16255182) * inp_0_0_1;
    result2 += M4(0.07780332, -0.37966654, 0.14016744, -0.07779412, -0.14236882, 0.08335414, -0.040220663, 0.14948282, 0.020113962, -0.19303745, -0.39134336, -0.193793, 0.15434115, -0.34907198, -2.6181695, -0.30162233) * inp_0_1_1;
    result2 += M4(-0.29622465, 0.10753545, -0.08184428, -0.0018167866, -0.02635742, -0.14441827, 0.13203128, 0.046701107, -0.105339766, 0.28677106, -0.24752213, 0.043123774, 0.21542904, 0.08528385, 0.17988424, -0.27406973) * inp_0_2_1;
    result2 += M4(-0.17869498, -0.2350639, -0.13250661, -0.28966776, -0.0615557, -0.13026926, 0.19201823, 0.3063952, 0.29216254, 0.059181385, -0.07450269, 0.17949595, -0.22281146, 0.06722051, -0.010823639, -0.017315509) * inp_0_0_2;
    result2 += M4(0.43227416, 1.3899384, -0.3002109, -0.37530223, -0.19925429, 0.011417582, -0.016795004, 0.4330452, -0.13003659, -0.3459292, 1.1394246, -0.29632768, 0.10456298, -0.20752625, -0.3035634, -0.4250521) * inp_0_1_2;
    result2 += M4(0.070323996, -0.47450218, -0.28570563, -0.25072342, 0.08430496, -0.18985406, 0.1829167, 0.26252988, -0.031247748, 0.14802396, 0.23208222, 0.099719144, 0.09875686, 0.030589819, -0.070557095, -0.19420758) * inp_0_2_2;
    result3 += M4(0.012817057, 0.040753357, -0.016339228, 0.01642597, 0.022626378, 0.015288341, -0.007740583, 0.0028527984, -0.0619105, -0.009228656, -0.07796586, 0.040740658, -0.0024925948, -0.0021465842, -0.08751712, -0.027831616) * inp_0_0_0;
    result3 += M4(0.019605, -0.034739766, 0.04637327, -0.045956235, -0.015569055, -0.06118255, -0.021646181, 0.17591502, 0.053028163, 0.024146602, -0.020723807, -0.03541961, 0.08240452, -0.19248828, 0.028783204, -0.147148) * inp_0_1_0;
    result3 += M4(-0.018948864, -0.0725112, -0.008446765, 0.0043690586, 0.04482269, -0.04743602, 0.00607551, 0.07147068, -0.15148976, 0.08204266, 0.028836904, 0.028951922, 0.16472223, 0.111676216, 0.03015816, 0.07970502) * inp_0_2_0;
    result3 += M4(-0.023319097, 0.14962724, -0.07560698, -0.029032195, 0.023202501, -0.06565808, 0.019329477, 0.059006684, 0.060950287, 0.1352071, -0.024108216, -0.10363905, -0.10479845, 0.14777674, -0.013209974, -0.07257301) * inp_0_0_1;
    result3 += M4(0.29694873, -0.07824499, 0.079110235, 0.17254986, -0.04957372, 0.003317687, 0.013873834, 0.24218859, 0.20206799, 0.023102438, 0.027586043, 0.03682947, -0.26206005, 0.35320592, 0.48147735, -0.22551088) * inp_0_1_1;
    result3 += M4(-0.24713996, 0.049161863, -0.01560325, -0.18751, 0.049872898, -0.032014716, 0.008817521, 0.17561673, 0.18552107, 0.011539852, -0.13831533, 0.096623085, -0.24286556, 0.23650374, 0.049837172, 0.15053715) * inp_0_2_1;
    result3 += M4(-0.18684013, -0.9358769, -0.13591318, -0.62005794, 0.021314355, -0.37289995, 0.014205802, 0.10660061, 0.0054347333, -3.009247, -0.07302982, 0.081195846, -0.030467818, 0.21448612, 0.014322762, 0.12989531) * inp_0_0_2;
    result3 += M4(0.22573723, -0.7998769, 0.36064807, 1.0270678, 0.08728365, -0.868467, 0.09498347, 0.20020726, -0.0414653, -3.0723631, 0.0006535639, -0.15203501, -0.016502926, 0.17584908, 0.007040573, -0.104669176) * inp_0_1_2;
    result3 += M4(0.2947412, -0.049626786, -0.29796097, 0.1303306, 0.11403454, -0.45057625, -0.07308584, 0.14258079, 0.029721193, -2.4957483, 0.16806893, -0.1428204, -0.10009237, 0.32176635, -0.060793065, 0.107476056) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.012305082, 0.023867844, -0.004775119, 0.028376317, -0.007730548, 0.00066280464, 0.058466565, -0.0046623526, 0.08556643, -0.38192815, -0.06100198, 0.028765574, -0.041523345, 0.04327355, 0.0069429944, 0.013129154) * inp_1_0_0;
    result0 += M4(0.112837575, 0.05114307, -0.02592489, 0.06604668, -0.07823998, 0.43685004, -0.0038473704, 0.04687191, -0.10545164, -0.49966824, -0.0969697, -0.017401578, -0.010693275, 0.16448002, -0.036324333, -0.09681157) * inp_1_1_0;
    result0 += M4(0.09142941, -0.07081058, -0.027994232, 0.009664935, -0.0484312, 0.12881051, 0.08563831, 0.047753103, 0.1740429, -0.053590506, 0.0036758755, 0.056791645, 0.15401477, 0.004632409, 0.07922964, 0.060000148) * inp_1_2_0;
    result0 += M4(-0.03773082, -0.011019756, 0.0722141, -0.019130051, -0.17005546, 0.06293111, -0.021498138, 0.038085442, 0.0011872116, -0.2953194, 0.015831744, 0.08820204, 0.17797528, 0.051927112, -0.029169412, -0.03153718) * inp_1_0_1;
    result0 += M4(0.19497286, 0.2238697, -0.00032913126, -0.16234948, -0.078435645, 0.07577656, 0.006411105, 0.06628064, 0.2830118, 0.15803756, 0.7635681, 0.276077, 0.05290253, -0.3948726, 0.08176635, 0.071324736) * inp_1_1_1;
    result0 += M4(-0.38609308, -0.03813971, -0.06809206, -0.064934745, -0.69536144, 0.054442964, 0.11050863, -0.013812452, 0.4922542, -0.0982743, -0.050225794, -0.0293083, 0.4128627, -0.34743568, -0.064395264, -0.014315749) * inp_1_2_1;
    result0 += M4(-0.123329565, -0.003471098, 0.03425821, -0.029503478, -0.017339356, 0.007144162, -0.017258061, -0.045077533, 0.02286621, 0.008274112, 0.054999907, 0.061335865, -0.053404782, -0.10568433, 0.038877774, 0.03600038) * inp_1_0_2;
    result0 += M4(-0.11120443, -0.04950769, 0.17198907, 0.08172883, -0.0627478, 0.015338686, -0.060024306, -0.03860571, 0.22119334, -0.017085874, -0.03969943, 0.019003289, -0.034502383, -0.041030277, 0.049465414, 0.013301216) * inp_1_1_2;
    result0 += M4(0.33189666, 0.07099965, 0.0037983246, 0.053853586, -0.082187735, 0.12319408, -0.040818475, -0.02301595, 0.0044047907, -0.13684574, -0.008409643, 0.0055271373, 0.095160075, -0.045317177, -0.014148485, 0.0059763985) * inp_1_2_2;
    result1 += M4(0.37034205, 0.1809946, -0.21849757, -0.11367401, 0.025166467, 0.004152836, -0.027679333, 0.10927671, 0.044934995, -0.13617949, -0.07687649, -0.25396314, 0.059271134, -0.0033393379, -0.014595166, -0.09625683) * inp_1_0_0;
    result1 += M4(-0.080456704, -0.06939877, 0.07188021, -0.42684388, 0.009096614, 0.13861178, 0.11164516, 0.11977276, -0.26538432, -0.4279082, 0.15266383, 0.2026088, 0.12754682, -0.04900671, 0.07226744, -0.50838035) * inp_1_1_0;
    result1 += M4(0.08137288, 0.07793245, -0.039903287, -0.12218349, 0.2787467, 0.016856052, -0.19802448, 0.20140585, -0.022959031, -0.7293509, 0.13497683, -0.47086573, -0.22267653, -0.32470986, -0.13991141, 0.061261747) * inp_1_2_0;
    result1 += M4(0.039565284, 0.25044817, -0.11182099, 0.14372721, -0.009612476, -0.09614471, -0.03644854, 0.05944941, -0.36530283, 0.11359322, -0.024340684, 0.015408734, 0.08950238, -0.009897837, -0.06082973, -0.050465602) * inp_1_0_1;
    result1 += M4(0.23065338, -0.022105835, 0.11921506, -0.5760436, 0.18140885, -0.013259606, -0.22946487, 0.23649023, -0.5038382, -0.33367687, 0.38191488, -0.06794067, -0.1412718, 0.02168817, -0.042335633, 0.16684893) * inp_1_1_1;
    result1 += M4(-0.18403663, -0.15976614, -0.012024803, 0.5092243, -0.04723405, 0.17466787, 0.06613732, 0.85290587, 0.0060579577, -0.052238613, -0.19017273, -0.67131156, 0.014477842, -0.4369036, -0.39048275, -0.08519117) * inp_1_2_1;
    result1 += M4(0.16210137, 0.078258686, -0.12841097, 0.20312697, 0.022974435, 0.023973128, 0.0058140554, 0.008593662, -0.04649434, 0.1283001, 0.044001523, -0.0010656294, 0.050285388, -0.013274081, -0.020658165, -0.059151303) * inp_1_0_2;
    result1 += M4(-0.007733492, 0.0047965203, 0.118646, 0.30981547, -0.008470803, -0.14405788, -0.044208337, 0.35062787, 0.062269744, 0.028699586, -0.0027731718, -0.32340118, 0.0521474, 0.056110624, 0.006696581, -0.11978614) * inp_1_1_2;
    result1 += M4(-0.04130552, 0.14836526, 0.13348126, -0.2674944, 0.042899627, -0.29445955, -0.055228993, 0.38060185, -0.069972694, 0.10316911, -0.057186127, -0.23469925, 0.038797602, -0.11175313, -0.046631865, -0.35263517) * inp_1_2_2;
    result2 += M4(-0.07199696, -0.18992434, 0.3501565, 0.10767755, 0.1251324, -0.013271664, 0.0141241755, -0.14523277, 0.102459036, -0.04998035, -0.020352874, 0.12225759, 0.11274256, -0.09211616, -0.08765413, 0.107012115) * inp_1_0_0;
    result2 += M4(-0.03955523, 0.08178834, 0.004129363, 0.00014442593, 0.08237234, -0.07884148, -0.0007186343, -0.02217119, -0.39118168, -0.090671815, 0.097190276, 0.08059281, 0.006374665, -0.1842795, -0.08450044, -0.041159775) * inp_1_1_0;
    result2 += M4(0.016989408, -0.16600835, 0.2015242, -0.073823646, 0.068461776, 0.06435849, 0.029379886, 0.029383568, -0.04478117, 0.0760412, 0.0072009917, 0.096588336, -0.21584427, -0.05811283, -0.28376454, 0.00039928328) * inp_1_2_0;
    result2 += M4(-0.14168988, -0.3671593, 0.48317653, -0.027867652, 0.010957611, 0.062463578, 0.0048568444, -0.18946268, -0.19059792, -0.023892079, 0.37719646, -0.26880625, -0.114956155, -0.11824823, 0.06467658, 0.17522684) * inp_1_0_1;
    result2 += M4(0.17914158, -0.28271693, -0.22055282, 0.28457746, 0.5547474, -0.023035558, -0.5573739, -0.76518476, -0.101369806, 0.39439645, 0.20819551, 0.067857035, -0.18129076, 0.011396834, 0.4247682, 0.54269165) * inp_1_1_1;
    result2 += M4(-0.056960084, 0.061888687, -0.12983969, 0.036291756, 0.08320312, 0.056496713, 0.37575588, -0.31790355, -0.14885345, 0.06951612, -0.17656855, 0.032605413, 0.38682604, 0.13465744, -3.3498015, 0.33794808) * inp_1_2_1;
    result2 += M4(0.12501675, -0.13331912, 0.03426822, -0.12092452, 0.08367129, -0.018148849, -0.07542661, -0.18744288, -0.11964974, -0.0017005098, -0.20797764, -0.108057976, 0.019451011, 0.009532326, -0.01090839, 0.044356044) * inp_1_0_2;
    result2 += M4(0.08887094, 0.17714676, 0.37584794, -0.0004679336, 0.029863607, 0.035978425, 0.15582985, -0.52872175, 0.005034967, 0.14757605, -1.3946288, 0.26187125, -0.12778698, -0.12542023, -0.20098397, 0.2972455) * inp_1_1_2;
    result2 += M4(-0.012784323, 0.09824492, -0.10814505, -0.031041488, 0.13250366, -0.059470948, -2.0819364, -0.4054274, -0.061320417, 0.035160024, 0.13356838, -0.012307107, -0.10492565, -0.09499428, 0.16011885, 0.29667205) * inp_1_2_2;
    result3 += M4(0.013802898, -0.050671905, -0.074850164, -0.2451836, 0.00895469, 0.013875936, 0.0078427205, -0.0131455995, -0.027260602, 0.001506754, 0.0077384696, -0.07466759, -0.04347687, -0.11593511, -0.03032432, 0.006656705) * inp_1_0_0;
    result3 += M4(0.20376433, 0.09476375, -0.0019985219, -0.093957, -0.0061831754, 0.0658949, 0.017476106, -0.047515616, 0.0015349507, 0.07719957, -0.038313568, -0.17929503, 0.006010538, 0.2862492, 0.059583154, 0.07394654) * inp_1_1_0;
    result3 += M4(-0.40848234, 0.1677851, -0.008621573, -0.058811095, -0.11892192, -0.0088595515, 0.09800802, -0.027984977, -0.8303689, -0.07216943, 0.023026582, -0.20849855, -0.31519255, -0.20646636, -0.027662762, -0.11152884) * inp_1_2_0;
    result3 += M4(0.07060906, -0.53793967, 0.15589677, -0.16068624, 0.032354116, -0.17525266, 0.020644216, 0.018309848, -0.028900791, -0.6931424, 0.030675095, 0.0035601866, 0.027049521, 0.44297776, -0.01827987, -0.06850142) * inp_1_0_1;
    result3 += M4(0.52795935, 0.22193752, 0.16213503, -0.30650845, 0.012702759, 0.17636411, -0.012512158, 0.054679465, -0.119964086, -0.9745854, -0.28107196, -0.06313123, 0.11135225, 0.4476313, -0.03311992, 0.038626842) * inp_1_1_1;
    result3 += M4(-0.07847947, -0.11901931, -0.007972169, 0.05701315, 0.020822544, -0.16078866, 0.005577678, -0.02308893, -0.04865342, -0.83656865, 0.04570751, -0.16954486, -0.040556736, -0.8200955, -0.024572358, -0.17823103) * inp_1_2_1;
    result3 += M4(-0.033876646, 0.5213072, 0.04467433, -0.08999141, 0.0030889586, -0.4076253, -0.009130917, 0.017217165, 0.014909517, 0.0878594, 0.091523245, -0.015283169, 0.009171061, -0.22583574, 0.06306332, 0.03376418) * inp_1_0_2;
    result3 += M4(0.2359839, -1.1318277, 0.0005178895, 0.14463207, -0.06423183, -0.8692862, 0.07147656, -0.012987213, 0.043831248, 0.3687013, -0.025884269, -0.056743946, -0.025778195, -1.7435824, 0.049960785, 0.049464848) * inp_1_1_2;
    result3 += M4(0.12556775, -0.05989432, -0.028826747, 0.0036401863, -0.081022024, 0.25699693, -0.029835753, 0.03788142, 0.04579206, -1.70466, -0.018120782, -0.041091606, -0.043413557, -2.2977698, 0.021110388, 0.07300691) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.069970794, 0.10638806, 0.05632613, 0.0894101, -0.15273106, -0.11534944, 0.13879201, -0.06531077, -0.04009187, -0.058772802, -0.016212821, 0.012392498, 0.018110787, -0.09266971, -0.031104691, 0.03451035) * inp_2_0_0;
    result0 += M4(0.092595994, -0.19248158, -0.0021489307, 0.024718313, -0.30113092, 0.24451718, -0.1771765, -0.10641034, -0.02676122, -0.091731474, 0.024541482, -0.00014700471, 0.017587148, -0.08123036, 0.06723232, 0.01167187) * inp_2_1_0;
    result0 += M4(-0.058677882, 0.17754357, -0.054009046, -0.041190147, -0.041504223, 0.015108178, 0.059554677, -0.027882684, 0.015590951, -0.044033766, -0.0015533793, 0.03950529, 0.04849977, -0.13141304, -0.015622848, 0.02113109) * inp_2_2_0;
    result0 += M4(0.012281713, 0.26449186, 0.07492788, 0.046914443, 0.14119293, 0.119064756, -0.08358405, 0.5708068, -0.070239104, 0.02724025, 0.0035572667, 0.023321327, 0.018049508, -0.13975127, -0.032531466, 0.04130314) * inp_2_0_1;
    result0 += M4(0.597227, -0.23290935, 0.21341023, 0.10173811, 0.19859701, -0.38760394, 0.19880903, 0.19230326, -0.099918395, 0.14254901, -0.040180877, 0.012799004, 0.027853832, -0.36330843, 0.0060600364, 0.026190948) * inp_2_1_1;
    result0 += M4(0.5729436, -0.02062483, -0.024945948, 0.035880867, 0.045068663, -0.04496294, -0.024443926, 0.04163297, 0.016731773, 0.20625691, 0.011254529, 0.018554175, 0.22380204, -0.30885693, -0.016650356, -0.025266774) * inp_2_2_1;
    result0 += M4(-0.05441905, 0.20728882, -0.085032664, 0.0451487, 0.144063, 0.026884204, 0.27672374, 0.13709952, 0.059079997, 0.06898739, 0.051690705, 0.0055373996, 0.064261295, -0.07343509, 0.086196065, 0.065378584) * inp_2_0_2;
    result0 += M4(-0.1852981, -0.0910445, 0.07233526, 0.009903285, -0.1244992, -0.10004189, 0.0142504275, -0.017967572, 0.19961646, 0.058232293, 0.021307804, -0.0256677, 0.034135573, -0.2178331, 0.25709736, 0.107946746) * inp_2_1_2;
    result0 += M4(0.36971515, -0.060501296, -0.008602588, 0.006642317, -0.00668257, 0.05833584, 0.041107696, -0.007331882, -0.04477637, 0.007045363, 0.021194024, -0.0014072421, 0.4827578, -0.07971662, 0.046823014, 0.0464218) * inp_2_2_2;
    result1 += M4(0.007390887, -0.0043414356, 0.061715744, -0.0873495, 0.1269095, -0.23873077, -0.051169705, 0.39174098, -0.044252727, 0.046194624, 0.07135717, -0.010308247, 0.036708485, 0.09516259, 0.0064926385, -0.06946295) * inp_2_0_0;
    result1 += M4(-0.18307884, -0.3091608, 0.3003954, 0.10986592, -0.27112398, 0.5278967, 0.04318724, 0.41195178, -0.008046614, 0.17737909, 0.041880023, -0.014162702, -0.027055692, -0.116721265, -0.030676963, 0.039297853) * inp_2_1_0;
    result1 += M4(0.059173167, -0.08731248, 0.027304813, 0.22507384, 0.07314005, -0.13930011, -2.5596259e-05, 0.20186538, 0.0037801047, 0.2874383, 0.09787853, 0.074605405, -0.00034737936, -0.2655446, 0.0014151726, -0.07598239) * inp_2_2_0;
    result1 += M4(0.1581266, -0.17671834, 0.05557612, -0.07560787, 0.113646835, 0.46861404, 0.30772015, -0.12928587, -0.1288257, 0.10756832, 0.074826464, 0.009584542, -0.11808618, 0.05559407, 0.08377891, -0.07492509) * inp_2_0_1;
    result1 += M4(0.31810018, 0.7425835, -0.11066888, -0.4286248, -0.027555496, -0.8958851, 0.15376787, -1.1112452, 0.026752988, -0.0027192067, 0.121156804, 0.09379612, -0.0011154898, 0.1410818, -0.08691377, -0.17556243) * inp_2_1_1;
    result1 += M4(-0.0015274254, 0.2990418, -0.01340302, 0.16522364, 0.06562545, 0.099290684, -0.15274997, -0.2990569, -0.10470059, 0.3835428, 0.2597104, 0.15202059, -0.22296116, 0.011468324, -0.010375427, -0.4694986) * inp_2_2_1;
    result1 += M4(0.1002182, -0.104775146, 0.059631094, -0.06253707, -0.08552597, 0.20029242, 0.14631316, 0.6475369, -0.091892324, 0.15413226, 0.045223925, 0.21935712, -0.14803314, 0.16788861, 0.08568539, -0.10072315) * inp_2_0_2;
    result1 += M4(-0.033340186, 0.0938048, -0.08877144, 0.47665605, 0.18018046, 0.38124073, 0.0781427, -0.053353205, -0.045071963, 0.19204028, -0.00242682, 0.032948595, -0.11976425, 0.14760582, 0.14545876, -0.12930745) * inp_2_1_2;
    result1 += M4(-0.094324835, 0.11233807, -0.018635139, -0.23795277, 0.03737735, 0.035628017, 0.053451087, -0.012053339, 0.05815831, 0.34255892, 0.081176445, 0.10114653, -0.17475154, 0.10116055, -0.19172631, -0.49567905) * inp_2_2_2;
    result2 += M4(0.16954426, -0.08581313, 0.016912974, 0.13515939, 0.0019019543, 0.08491956, 0.14456394, -0.0053869616, 0.013867316, 0.09557669, 0.1045267, -0.07836772, -0.021615678, 0.0014367468, 0.040638518, 0.0727362) * inp_2_0_0;
    result2 += M4(0.20466585, 0.29295188, 0.11779653, 0.032625016, 0.099669725, 0.042025205, 0.15877599, 0.01741955, 0.027128603, 0.09164366, 0.26380557, -0.036614425, -0.058213055, 0.019127883, 0.024468135, 0.053242933) * inp_2_1_0;
    result2 += M4(-0.2633508, 0.1611514, 0.101189144, 0.17611022, 0.11524847, 0.10090358, -0.06974574, 0.01208131, -0.0897646, 0.10805363, 0.22380938, -0.07477135, 0.045697495, 0.06358299, 0.010344588, 0.04754667) * inp_2_2_0;
    result2 += M4(0.070543915, -0.03852096, -0.046437886, -0.043003827, -0.26937264, -0.21152696, 0.25866878, 0.08812335, -0.02838922, 0.07281126, 0.11350688, -0.18017374, -0.16621456, 0.030684028, 0.02553559, 0.09539853) * inp_2_0_1;
    result2 += M4(-0.07144814, 0.2513131, -0.06265521, -0.2171391, -0.03812947, -0.04607343, 0.082852095, -0.18092476, -0.06612442, 0.18800826, 0.12947322, -0.15061681, -0.43756047, 0.18006276, 0.08651722, 0.02655374) * inp_2_1_1;
    result2 += M4(0.0139743015, -0.064010344, -0.088398166, -0.041483484, -0.05843069, -0.04826921, -0.07125643, -0.06452976, -0.18643412, 0.1190451, 0.3064744, -0.1054696, -0.23540165, 0.20728181, 0.101105355, -0.026478479) * inp_2_2_1;
    result2 += M4(0.2336764, -0.039469462, 0.069264, -0.04747132, -0.11788024, 0.060134795, 0.3593845, 0.023951232, -0.1682161, 0.021921687, 0.10952401, -0.021283207, -0.1675365, 0.11907987, -0.041862532, 0.005866879) * inp_2_0_2;
    result2 += M4(-0.11237534, 0.22869647, 0.268787, -0.2862678, -0.31840768, 0.09328854, -0.41368017, -0.17441112, 0.0048910505, 0.0945569, 0.12766019, -0.14095953, -0.57439715, 0.19833435, 0.14545688, 0.11473353) * inp_2_1_2;
    result2 += M4(-0.064548016, -0.051499534, 0.00033808165, 0.1211248, 0.016895277, -0.03423245, 0.22326711, 0.10702154, 0.1404298, 0.106164455, -0.12963516, -0.09228256, -0.43167895, 0.11252029, -0.062448412, 0.08906837) * inp_2_2_2;
    result3 += M4(-0.06960086, -0.020897914, 0.08575258, 0.11234415, -0.00956675, -0.04405768, 0.0402312, 0.12364429, 0.03396336, -0.028543223, 0.00629644, -0.009609513, 0.01635693, -0.021129727, -0.010109776, -0.051136043) * inp_2_0_0;
    result3 += M4(-0.26653352, 0.055026513, 0.0057022655, 0.0641006, -0.016396703, 0.10881643, -0.048570607, 0.24835628, 0.061747912, -0.020905873, 0.037801206, -0.112730265, -0.004112378, 0.02233488, 0.016380485, 0.006294189) * inp_2_1_0;
    result3 += M4(-0.07565538, -0.019157408, -0.07755678, -0.11919886, 0.068196036, -0.06625393, 0.06203812, -0.035758868, 0.093631975, -0.011612392, 0.021053663, -0.034405854, 0.0056801713, 0.06773347, -0.0125887655, -0.009017648) * inp_2_2_0;
    result3 += M4(0.09536251, 0.27940357, 0.06123459, 0.12435126, -0.15074, 0.04902657, 0.13065845, 0.0976552, -0.037091665, 0.02197924, -0.004113659, 0.008451644, -0.015887976, 0.019062819, 0.008248482, -0.030715385) * inp_2_0_1;
    result3 += M4(0.38328308, 0.2939385, 0.34171715, 0.08135196, 0.24080224, 0.22387522, 0.14464122, -0.05742638, -0.050311636, -0.030553384, -0.04002159, -0.09726848, -0.027546087, -0.075851895, 0.0309818, -0.006130147) * inp_2_1_1;
    result3 += M4(0.19359758, 0.24303606, 0.008428255, -0.06615401, -0.030840628, 0.060982756, 0.012258461, 0.029182257, 0.061671425, -0.08791493, 0.059242897, 0.057488874, 0.03373623, 0.0022393665, -0.04916596, 0.03298256) * inp_2_2_1;
    result3 += M4(0.0244746, 0.016997948, -0.061638005, -0.038531635, -0.0839704, -0.036073778, 0.0043660286, 0.032637153, 0.011208376, 0.47456184, 0.019746961, -0.030464327, -0.017064976, -0.04325032, 0.08220059, 0.03645159) * inp_2_0_2;
    result3 += M4(0.025350166, -0.5272467, 0.0075727743, 0.060792357, 0.0545367, -0.5696452, -0.012769697, 0.106513575, 0.04412445, 0.16162674, -0.03129564, -0.099360116, -0.06263737, -0.54000735, 0.2978232, -0.0624227) * inp_2_1_2;
    result3 += M4(0.06464921, -0.38451222, 0.08788969, -0.041244972, 0.041592803, 0.008830898, -0.0020569458, 0.004472328, 0.09937218, 0.9411865, 0.0024670365, -0.2048553, -0.109777674, -0.89240026, 0.04577372, -0.13030367) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.07008918, -0.1665571, -0.0030547837, 0.019127982, -0.010724432, 0.16471739, -0.12164182, -0.021532618, -0.0051943255, -0.0015650196, 0.084508516, -0.01450402, 0.11852371, -0.12962775, 0.041202597, 0.01844212) * inp_3_0_0;
    result0 += M4(-0.053345125, -0.17756379, 0.06128008, 0.101950586, 0.3601318, -0.25163522, 0.1441254, -0.05967312, -0.0940341, 0.35340455, 0.00974934, 0.012869116, 0.10310467, -0.046372686, -0.08071081, 0.02682654) * inp_3_1_0;
    result0 += M4(0.010800575, 0.024112588, 0.007987701, 0.010803726, -0.26877668, -0.24492404, -0.12236037, -0.05581349, -0.11536079, 0.17043294, -0.008376232, 0.0223655, 0.15900764, -0.009259168, 0.061057482, -0.034360427) * inp_3_2_0;
    result0 += M4(-0.027809402, -0.25874645, 0.21103446, -0.4222784, 0.16196801, 0.16286771, -0.0058242925, -0.05296236, -0.26719865, 0.18478747, -0.02148793, 0.027078012, -0.018000433, -0.09721592, 0.008366958, -0.042215507) * inp_3_0_1;
    result0 += M4(-0.13128108, 0.37452394, 0.021903237, 0.0048158565, -0.043519303, -0.13097239, 0.17231987, -0.025340477, -0.264229, -0.021649368, 0.064911604, 0.06863128, -0.34902743, -0.002935981, 0.066394575, 0.5533261) * inp_3_1_1;
    result0 += M4(0.15720162, 0.01753851, -0.019109515, -0.01273302, -0.026052585, -0.009956598, 0.042563275, 0.0051903334, -0.20774218, 0.229832, 0.07315866, 0.046635106, -0.17063959, 0.19287752, -0.097455114, -0.04563915) * inp_3_2_1;
    result0 += M4(0.08789681, 0.24181989, 0.0012826453, -0.11701747, 0.01285879, 0.21792048, -0.12347254, 0.005957518, -0.13855796, 0.035559464, 0.07895041, 0.005130176, -0.12993741, -0.06633111, 0.041672092, 0.050641842) * inp_3_0_2;
    result0 += M4(-0.45185935, 0.21226512, -0.00607754, 0.042233583, 0.089315675, 0.0843701, -0.049718294, -0.042173162, -0.12930946, 0.043511484, 0.034243774, 0.004787282, 0.05051908, 0.13754521, 0.0668007, 0.040252667) * inp_3_1_2;
    result0 += M4(-0.02162411, -0.075548284, -0.02533346, 0.0013143442, 0.052296408, -0.017462103, -0.1436848, -0.044779416, -0.1678545, 0.117678106, 0.016489774, -0.000329113, 0.23607752, 0.019241164, 0.050376084, 0.0014693568) * inp_3_2_2;
    result1 += M4(-0.025940137, 0.043244284, 0.040727057, 0.07712855, -0.048594415, -0.06053671, 0.041159987, -0.13149919, 0.0662628, 0.19790022, -0.0043226215, 0.06565058, 0.009682362, 0.053409487, 0.0064082537, -0.008234501) * inp_3_0_0;
    result1 += M4(0.005641762, -0.7097194, -0.024337815, -0.17452277, -0.14353454, 0.48015177, -0.27617434, -0.139041, 0.024926957, -0.07387906, 0.025568737, 0.07972737, 0.055187974, -0.07926064, -0.11314987, -0.21925586) * inp_3_1_0;
    result1 += M4(0.06135918, -0.01468238, -0.016522085, -0.19516134, -0.07918019, 0.011593646, 0.1947354, 0.268704, -0.09835291, 0.15285328, 0.01906795, 0.2524084, 0.24749161, -0.61459684, -0.13409638, 0.05806126) * inp_3_2_0;
    result1 += M4(0.015251574, -0.10282822, 0.010422488, 0.3093648, -0.05809326, -0.07400165, -0.024642019, 0.10835021, 0.03166509, -0.027898537, 0.04105838, 0.033281934, 0.049407657, 0.070484, -0.024334772, -0.002538753) * inp_3_0_1;
    result1 += M4(0.15959068, -0.38755023, 0.58894646, 0.014134932, 0.044787496, -0.12217495, 0.09616084, -0.10657631, 0.08226746, 0.25500485, 0.0007632256, -0.013994594, -0.20978998, -0.3921987, 0.5600139, 0.02092088) * inp_3_1_1;
    result1 += M4(0.05068182, -0.20526108, -0.010727437, -0.44783887, 0.14577653, -0.13684437, -0.116876125, 0.11314816, 0.15334648, 0.16206849, 0.12446959, 0.32902178, 0.13124177, -0.6258773, -0.12614204, -0.47199458) * inp_3_2_1;
    result1 += M4(0.13820264, -0.13823342, -0.11464451, -0.43761262, 0.058747027, -0.01337298, 0.0038040716, 0.09490848, 0.021872425, 0.03743718, 0.08490266, 0.049294036, -0.022301596, -0.04314878, 0.03673821, -0.09226398) * inp_3_0_2;
    result1 += M4(0.026557064, 0.1182788, 0.41435826, -0.34134665, 0.18082412, 0.16110888, 0.034230128, -0.04159604, 0.04184357, 0.21809524, 0.06794748, 0.14642234, 0.021677056, -0.013029511, 0.09577042, -0.34239644) * inp_3_1_2;
    result1 += M4(-0.010377085, -0.01776584, -0.024673775, -0.21557522, 0.10676927, 0.30154955, 0.057325143, 0.057662133, 0.07064478, 0.20070715, 0.120734155, 0.18866485, -0.023665521, -0.321037, -0.0345237, -0.47976598) * inp_3_2_2;
    result2 += M4(-0.04253421, -0.16524631, 0.11402704, 0.094608724, -0.22979322, -0.08465086, 0.052932817, 0.3298813, 0.08646432, -0.077063344, 0.12638554, -0.11248153, 0.016202992, 0.04339566, -0.028269818, -0.04733172) * inp_3_0_0;
    result2 += M4(-0.084943965, -0.15521544, -0.15564959, 0.033865307, 0.18325801, 0.0017280342, -0.054980118, 0.061350092, 0.16992128, -0.118975595, 0.08701167, -0.20712106, 0.05740944, 0.0103466995, -0.32085848, -0.031932797) * inp_3_1_0;
    result2 += M4(-0.023879167, -0.027993111, 0.07902961, 0.011496261, 0.038874216, -0.32994124, 0.11306016, 0.008980056, 0.05405893, -0.04772374, -0.03893563, -0.09383974, 0.02277738, -0.032598812, 0.011761262, -0.012490304) * inp_3_2_0;
    result2 += M4(0.15918596, -0.2403406, 0.13432322, 0.14491653, 0.06462299, 0.08285036, -0.20462652, 0.025930025, 0.06753751, -0.062483665, 0.08477714, -0.2945396, 0.0022042172, 0.020688232, 0.013810466, 0.0041581453) * inp_3_0_1;
    result2 += M4(0.13246618, 0.23764661, -0.07820348, 0.15847409, 0.07116438, -0.01252442, -1.5310324, 0.083390996, 0.28227094, -0.2883728, -0.0673186, -0.17114085, 0.0797549, 0.08049804, -0.20890424, 0.1258703) * inp_3_1_1;
    result2 += M4(-0.0013605093, 0.0008755218, 0.05777778, 0.07488142, -0.24031019, -0.26833153, -0.055444293, 0.050856967, 0.10823826, -0.10233563, 0.059790023, -0.05452941, 0.053276476, -0.39852676, 0.06595635, 0.1868609) * inp_3_2_1;
    result2 += M4(0.27237162, -0.18373783, -0.17486429, 0.0975175, -0.09793056, -0.007007923, 0.18280818, -0.2127018, 0.12925449, -0.07192729, 0.06826032, -0.029271005, 0.06711962, 0.03285218, -0.088185154, 0.058063816) * inp_3_0_2;
    result2 += M4(0.07904854, -0.2343796, 0.33077016, 0.03414784, -0.021301445, 0.00997597, -0.14883175, -0.03676652, 0.021403683, -0.08379815, 0.57240546, -0.14263795, 0.03157621, 0.066184975, -2.0976748, 0.028652212) * inp_3_1_2;
    result2 += M4(0.020464962, 0.00872254, -0.1272338, -0.0041021574, -0.09556148, -0.03672018, 0.24972376, 0.079965055, 0.12346996, -0.07490934, 0.09066354, -0.13068289, 0.21040401, -0.0884547, -0.010134764, -0.052908693) * inp_3_2_2;
    result3 += M4(0.088204786, -0.045981966, 0.036411203, 0.010327339, 0.023568794, 0.017491322, 0.046596315, -0.051178746, 0.07076013, 0.032013785, 0.05781406, 0.020907095, -0.0062813987, 0.08366554, 0.027618768, 0.022358816) * inp_3_0_0;
    result3 += M4(-0.0718977, -0.08603487, 0.041011773, 0.0072591826, 0.24411026, 0.21011597, 0.059712082, 0.025221523, 0.07905457, 0.02479193, 0.022139784, -0.011032721, -0.06651503, 0.036940847, -0.035670556, 0.02540399) * inp_3_1_0;
    result3 += M4(0.089336865, -0.009417297, 0.0097307265, -0.0064227157, 0.0068034814, -0.044643678, 0.037383012, 0.17221536, 0.095359266, 0.009943916, 0.019767215, -0.02745351, -0.04010113, -0.003676674, 0.028354049, 0.009966207) * inp_3_2_0;
    result3 += M4(-0.23436438, -0.16734035, 0.26429564, -0.12609686, -0.06424832, -0.16075714, -0.097220674, 0.022151103, -0.016272806, -0.1337832, 0.008581666, 0.041557472, 0.009491328, 0.005621091, 0.04913246, 0.108446896) * inp_3_0_1;
    result3 += M4(0.14097296, 0.06456701, -0.0066018244, 0.45352724, -0.087884426, 0.3213099, 0.099307366, -0.2150165, -0.070736945, 0.1036835, -0.044313103, 0.1743888, -0.065322414, -0.20014924, -0.06431831, 0.42101076) * inp_3_1_1;
    result3 += M4(-0.13298772, 0.03241365, 0.016164623, 0.036533855, -0.09801247, -0.22076392, -0.0146373445, -0.3235002, 0.16238445, 0.020816429, 0.06834476, -0.006549784, -0.4655801, 0.099188656, 0.11998457, -0.2887046) * inp_3_2_1;
    result3 += M4(-0.0056521934, 0.21130131, -0.03611221, -0.07087778, 0.019600868, 0.2358516, -0.062115308, -0.09631268, 0.016900586, 0.38224992, 0.004236162, 0.056997634, -0.013524547, 0.1570848, 0.024761515, 0.0805427) * inp_3_0_2;
    result3 += M4(-0.0035595559, 0.92486703, -0.0052834474, 0.21837631, -0.06439482, -0.8205183, -0.11651771, -0.106394105, 0.054904256, -0.6252138, 0.021256054, 0.052033544, -0.036789097, -1.8887553, 0.0822297, 0.122281276) * inp_3_1_2;
    result3 += M4(0.031257965, 0.5310634, -0.0103037115, 0.0009175344, -0.0037874626, 0.33205712, -0.025929546, -0.15326393, 0.009562442, -0.2164987, 0.0152376145, 0.040091112, -0.057724416, -2.1301613, 0.08142346, 0.03739521) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.0153545365, 0.007320171, 0.017425627, -0.00985779);
    V4 result1 = V4(-0.0003085053, -0.001504368, 0.011805004, 0.03790991);
    V4 result2 = V4(0.017145412, -0.015110599, -0.016190277, 0.0019908105);
    V4 result3 = V4(-0.01875771, 0.027876811, 0.014646327, 0.0053273644);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.084521525, -0.5207602, 0.18730381, 0.14796571, 0.0028287456, 0.0017189396, 0.006736439, 0.003981748, 0.069519565, -0.004695795, -0.061784238, 0.012433549, 0.035218336, 0.089529246, 0.032879245, -0.0067543974) * inp_0_0_0;
    result0 += M4(-0.2991072, -0.48763952, -0.02218068, -0.2814805, 0.23938243, -0.0049906527, -0.061949424, -0.0048446995, -0.10794271, 0.06449707, -0.23460288, 0.027371675, 0.005933786, -0.32967794, 0.063676775, -0.101652645) * inp_0_1_0;
    result0 += M4(-0.20655626, -0.115635425, -0.024034241, 0.0485886, 0.13550843, -0.019223941, 0.10641391, 0.15406677, -0.08651846, 0.016934603, -0.11634049, -0.11819129, -0.03668334, -0.04474394, 0.021862373, -0.02895376) * inp_0_2_0;
    result0 += M4(-0.06915661, 0.0682088, -0.35873255, -0.09413112, 0.027069265, 0.16267744, -0.10099921, 0.14200395, 0.05323445, -0.17311133, 0.054477625, 0.030413313, -0.058880735, -0.05894733, 0.031235492, 0.14467241) * inp_0_0_1;
    result0 += M4(0.0013977888, 0.18674262, -0.3106288, -0.10861287, 0.0035925545, -0.22180246, 0.08097353, 0.0031955289, -0.21784215, -0.029489806, 0.45343834, -0.087274715, 0.092964806, 0.30152357, 0.31383535, -0.31376183) * inp_0_1_1;
    result0 += M4(0.042246282, 0.109496765, -0.018606065, -0.048891444, -0.10560542, -0.25449887, 0.14804667, -0.11455571, 0.040924065, -0.14951757, 0.07337173, -0.06451416, -0.0096691195, 0.23055255, -0.017929621, 0.26244485) * inp_0_2_1;
    result0 += M4(-0.023718791, 0.03383578, -0.15231656, -0.072998054, 0.11530046, -0.2197525, 0.28366956, 0.07211695, -0.036199857, 0.0072259055, 0.09394865, -0.06384088, -0.17524968, 0.0084423665, -0.08279977, 0.070289485) * inp_0_0_2;
    result0 += M4(-0.14451227, -0.035045482, -0.0559355, -0.03920229, 0.042195998, 0.15546072, -0.33025718, -0.10533842, 0.1507541, -0.015142182, 0.15162845, 0.03735624, -0.032240603, 0.04048632, -0.40063328, 0.003340646) * inp_0_1_2;
    result0 += M4(-0.09503627, -0.02871085, -0.117682636, 0.013783794, 0.04322434, 0.27314073, -0.061521463, -0.08975517, 0.03229833, 0.048180837, 0.07342461, 0.06130568, -0.12978292, -0.21257484, -0.099006, -0.070522085) * inp_0_2_2;
    result1 += M4(0.16711727, -0.051761415, -0.11429957, -0.21673492, -0.0101562, -0.062361386, 0.0129697705, 0.050621003, -0.0245467, -0.04270483, -0.056267783, -0.13351528, -0.02435563, 0.02751545, 0.007751339, -0.12933856) * inp_0_0_0;
    result1 += M4(0.2892052, -0.0065548937, -0.004327968, 0.20125109, 0.007972042, -0.017324796, 0.0067584356, -0.36892524, 0.068496846, 0.0614796, 0.023817923, 0.0037812048, 0.0010856197, 0.05557273, -0.014042822, -0.09388925) * inp_0_1_0;
    result1 += M4(-0.12153587, 0.023653133, -0.016196903, -0.07987837, 0.078709505, 0.007976302, 0.0019363046, -0.43994603, -0.054096203, -0.05101742, 0.037702043, -0.05785346, 0.03138312, 0.08834956, -0.028804518, 0.10927686) * inp_0_2_0;
    result1 += M4(-0.39660603, -0.01396171, -0.19249615, -0.04072535, -0.01713579, -0.111622185, -0.0331952, 0.3135884, -0.037236176, 0.10714097, -0.025356341, 0.053218685, 0.0042954143, 0.09291748, -0.013293815, 0.082665905) * inp_0_0_1;
    result1 += M4(-0.40028912, 0.11743779, 0.08954709, -0.22713484, -0.032071207, 0.029733106, -0.07401873, -0.5651681, -0.14437419, 0.3572514, 0.07307971, -0.07473355, 0.1253176, 0.29375812, -0.0761736, -0.14089894) * inp_0_1_1;
    result1 += M4(0.04306655, 0.031570148, -0.0050241575, 0.11654232, -0.042792007, 0.051831003, -0.022167813, -0.009973324, -0.093485564, 0.053723857, 0.0063669425, 0.09484405, 0.074727125, -0.042492792, -0.031134233, -0.3552243) * inp_0_2_1;
    result1 += M4(-0.106327, 0.00015907755, -0.08634402, 0.10868831, 0.16219439, -0.1341291, 0.034423057, 0.37549996, -0.06676806, 0.0370231, 0.11411794, -0.05455917, -0.027049089, -0.017786812, -0.14364964, -0.18690088) * inp_0_0_2;
    result1 += M4(0.047581702, 0.03295429, -0.025570031, -0.002868169, -0.13321543, 0.0014300955, 0.030592697, -0.09617948, 0.011253803, 0.058224335, 0.059695013, 0.026848655, -0.09682872, 0.037959915, -0.1518013, 0.17431964) * inp_0_1_2;
    result1 += M4(-0.023022497, -0.009276512, -0.02706625, 0.06047934, -0.08146102, -0.040799975, -0.0054265386, 0.13365059, 0.03762784, -0.044803914, -0.05406418, 0.13238475, -0.09680273, 0.055809114, 0.11379826, -0.2859078) * inp_0_2_2;
    result2 += M4(-0.21094501, 0.20432904, -0.014383086, -0.012908531, -0.05174881, 0.12045183, -0.069219574, -0.03244709, -0.051528007, 0.09657221, -0.09693456, 0.016014967, 0.03746566, -0.010313766, 0.03693045, -0.03652521) * inp_0_0_0;
    result2 += M4(-0.061358627, -0.21540575, 0.034279186, -0.029021937, 0.075754404, -0.034450676, -0.002791516, 0.040278107, 0.08733504, -0.014783372, -0.17149134, -0.009921204, 0.064479135, -0.0796618, 0.12059396, 0.044369515) * inp_0_1_0;
    result2 += M4(-0.035726372, 0.059526436, -0.016491044, 0.10183604, 0.054035533, 0.15507834, 0.013246262, 0.0041836826, -0.06512378, 0.092388034, -0.073238134, -0.14960708, 0.08932144, -0.11092694, 0.03750025, -0.047892135) * inp_0_2_0;
    result2 += M4(-0.23258427, 0.49483886, -0.005208046, 0.025391571, 0.08467679, -0.11395821, -0.18922207, -0.10848393, 0.077604875, -0.051992994, -0.0582732, 0.039695013, 0.10371267, -0.07446011, -0.018951932, -0.08291058) * inp_0_0_1;
    result2 += M4(-0.08807678, -0.22040199, 0.16527602, -0.10176301, 0.026736699, -0.05965216, -0.009779518, -0.13956884, 0.43337852, -0.16111773, -0.10576835, 0.067396395, -0.23586577, -0.1675632, 0.5663813, 0.08335918) * inp_0_1_1;
    result2 += M4(-0.075368576, 0.005574945, 0.0448425, 0.07298991, -0.17725648, -0.05196217, 0.05449788, -0.21446905, 0.052481443, -0.09852848, 0.077463865, 0.037924584, -0.08014325, 0.18070747, -0.07684238, 0.13944297) * inp_0_2_1;
    result2 += M4(-0.06761752, -0.025825832, 0.029487347, 0.05739961, 0.20282497, -0.23613515, -0.055503745, -0.18605465, 0.04541763, 0.13098918, -0.004214683, -0.0020499143, -0.03666817, 0.016757565, -0.017761352, 0.08733907) * inp_0_0_2;
    result2 += M4(-0.01628177, -0.15185031, 0.020183703, 0.022738136, -0.17581755, 0.38653025, -0.059552837, -0.06451573, 0.04000907, -0.136498, 0.071058385, -0.006119129, -0.14341466, -0.1920132, -0.023242125, -0.25762582) * inp_0_1_2;
    result2 += M4(-0.011187933, 0.025602184, -0.005441174, 0.10189825, 0.06706954, 0.06382949, 0.040737364, -0.08149437, 0.015711866, 0.068615295, -0.018033309, 0.07216853, -0.12386114, -0.009939902, 0.057347666, -0.11899643) * inp_0_2_2;
    result3 += M4(-0.051446233, -0.20979127, -0.0076148724, 0.02160928, 0.036790103, 0.09968694, -0.06641204, -0.0016342725, 0.0035764978, -0.071776524, -0.047908094, 0.0057268054, -0.007678075, 0.07264258, 0.05743459, 0.027511913) * inp_0_0_0;
    result3 += M4(0.069858804, -0.12509586, -0.005645252, -0.049098223, -0.0752076, 0.22603697, -0.009430005, 0.010279168, 0.018063579, 0.14519083, 0.058201406, -0.00937969, 0.018147493, 0.015087066, 0.0017681895, 0.04521962) * inp_0_1_0;
    result3 += M4(-0.016857656, -0.2459658, -0.011844425, 0.06976839, 0.0259905, 0.1843472, 0.007718654, -0.27394688, -0.08266893, -0.08401065, 0.051499616, -0.44756532, 0.014133094, -0.10709062, 0.022799147, 0.0504445) * inp_0_2_0;
    result3 += M4(-0.046541914, -0.4977963, -0.07455258, -0.07525191, 0.015739368, 0.19257556, -0.042651128, 0.012115962, 0.053364977, 0.05261553, 0.10935293, 0.010148345, 0.043821283, -0.10261362, 0.002516957, -0.036644645) * inp_0_0_1;
    result3 += M4(0.101100005, -0.41715816, 0.109750934, -0.06192548, 0.016487923, 0.40207565, -0.028246347, -0.046174288, -0.19680044, -0.24324614, 0.1364463, 0.09288828, 0.012599232, -0.2356908, -0.26734802, -0.08567825) * inp_0_1_1;
    result3 += M4(-0.046250843, 0.06243942, 0.02507784, -0.07079051, -0.026626341, 0.3407142, -0.0067711724, 0.23391765, -0.075812496, 0.034189362, 0.0779415, 0.13138166, 0.15747547, 0.017948564, -0.07427728, -0.32443222) * inp_0_2_1;
    result3 += M4(-0.02769971, -0.13818674, 0.03535276, 0.0006183457, 0.027467433, 0.13877481, -0.01308537, 0.032546006, -0.00013433736, 0.015584788, 0.05055838, -0.0059956713, -0.02665846, -0.14245167, -0.019892901, 0.036414158) * inp_0_0_2;
    result3 += M4(0.0066867257, -0.16203624, 0.02665708, -0.0039211465, -0.045160074, 0.42927846, -0.017083552, -0.0008427189, 0.051181782, -0.04750315, 0.064205416, 0.08757555, -0.039174538, -0.06661863, -0.23816606, -0.060135417) * inp_0_1_2;
    result3 += M4(-0.021412553, -0.030318065, 0.008861997, -0.01905584, 0.112104475, -0.21454097, 0.007079811, 0.058250517, -0.061352592, -0.09813634, 0.0005889819, 0.0032302518, 0.009433722, -0.0068405266, 0.04801092, -0.044061553) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.026876312, -0.14276534, 0.046050973, 0.07475181, 0.12819462, -0.0873932, 0.05800956, 0.07164329, 0.011622473, 0.024016501, -0.061242696, -0.050614048, 0.09129954, -0.068377584, 0.041054524, 0.00420712) * inp_1_0_0;
    result0 += M4(0.055362724, -0.3099341, -0.05188077, 0.05376627, -0.05429019, -0.14585248, 0.050887663, -0.19977544, 0.037851725, 0.26693186, -0.11505336, 0.02949937, 0.030687585, -0.1768582, 0.1142768, -0.15460137) * inp_1_1_0;
    result0 += M4(0.034562536, -0.18632777, -0.18465288, 0.0037281783, -0.041293237, 0.030948315, -0.007180445, -0.038384613, 0.12661245, 0.13150246, 0.026875716, 0.11696445, -0.18473597, -0.05457528, -0.07787453, -0.20723869) * inp_1_2_0;
    result0 += M4(0.11349407, -0.20211414, -0.061499674, 7.6359924e-05, -0.14933942, -0.106490016, -0.013960893, -0.04989854, 0.0031029715, 0.060654152, -0.009185373, -0.15446742, -0.074756704, 0.34622067, 0.021624083, -0.052552387) * inp_1_0_1;
    result0 += M4(-0.24159022, -0.5073014, -0.10590633, -0.09355064, -0.20174679, -0.11903003, -0.08862443, -0.015829708, 0.48273158, 0.0032569475, 0.036575183, 0.13390405, -0.14592569, 0.3089243, -0.13330585, -0.27555034) * inp_1_1_1;
    result0 += M4(0.23514023, -0.37228912, -0.12648606, 0.18021625, -0.11910278, -0.2697231, -0.03920656, -0.16802773, 0.21134043, 0.09545525, 0.044254016, 0.2464765, 0.1983063, 0.07683737, 0.037217773, -0.070711926) * inp_1_2_1;
    result0 += M4(0.091207415, 0.1560143, 0.055322427, -0.04592354, -0.18941574, -0.116419345, -0.2721074, 0.09433778, 0.27699524, 0.02643604, 0.12537591, -0.06873995, 0.017557504, -0.2875899, -0.034637272, -0.036699634) * inp_1_0_2;
    result0 += M4(-0.010483845, 0.15148488, -0.17080411, 0.05931178, -0.1950022, 0.008689348, -0.13271, -0.22727706, -0.053585883, -0.053726695, 0.3481828, 0.06417121, 0.04105039, -0.06036029, 0.09760509, -0.3105054) * inp_1_1_2;
    result0 += M4(-0.027369544, 0.17787822, 0.0054456773, -0.035808165, 0.21304289, 0.031731244, -0.30348024, -0.04994728, -0.019107087, -0.111770056, 0.10893816, 0.14432646, -0.07219189, 0.094776765, -0.0047362163, -0.02632962) * inp_1_2_2;
    result1 += M4(0.0840519, -0.028399477, 0.025926221, 0.2434519, 0.044185326, 0.016732777, -0.05890344, -0.05952984, 0.045358274, 0.01027678, -0.0056805965, 0.14724134, 0.05301129, 0.06257488, -0.009710386, -0.25879055) * inp_1_0_0;
    result1 += M4(0.024564965, 0.02510304, -0.021926874, -0.27570364, 0.026147077, 0.0035055173, 0.017751854, 0.26597354, -0.057057343, 0.027705848, -0.0033536244, 0.053214815, -0.016074782, -0.048270047, 0.04552007, -0.66782) * inp_1_1_0;
    result1 += M4(0.16002361, -0.063329145, 0.0046833786, 0.042657405, 0.030144328, -0.010269001, 0.01061088, 0.005112528, -0.09135568, 0.0035245682, 0.009578916, -0.007834671, -0.19121353, -0.020975543, -0.014649925, -0.19267671) * inp_1_2_0;
    result1 += M4(-0.0037151384, 0.07664365, 0.08862904, 0.2661822, -0.06407406, 0.03055994, -0.09728763, -0.3761397, -0.024272481, 0.0727414, 0.094028294, 0.124157414, -0.026403923, -0.07871018, -0.1328228, -0.507225) * inp_1_0_1;
    result1 += M4(-0.13108902, 0.13332176, -0.018801898, 0.07855845, -0.050152317, 0.010505652, 0.032235045, -0.34430405, -0.19523321, 0.07454778, 0.043956522, 0.29933405, 0.44903508, 0.10168746, 0.059681132, -0.015884014) * inp_1_1_1;
    result1 += M4(-0.10116073, -0.040346168, 0.024049949, 0.1165658, 0.089206636, 0.0026166583, -0.0037495997, 0.11835417, 0.023511978, -0.0067978725, -0.036173802, 0.16267006, 0.20997898, -0.017358303, 0.030406388, -1.3260157) * inp_1_2_1;
    result1 += M4(-0.1959524, 0.041952845, 0.064070694, 0.09546674, -0.03109796, -0.00092196744, -0.129035, -0.13673943, 0.1500643, -0.00945236, 0.17958625, 0.0619857, -0.059691787, -0.088789344, -0.0980983, -0.20020306) * inp_1_0_2;
    result1 += M4(-0.1963491, 0.12224811, -0.0017314781, -0.16738427, -0.25326142, 0.044438466, -0.060430605, -0.27908915, 0.4741899, -0.028392656, -0.03869024, 0.06621467, 0.025783287, -0.10487743, -0.008185804, 0.36017442) * inp_1_1_2;
    result1 += M4(-0.11905035, -0.0043591275, -0.004403117, 0.027327621, -0.1167364, 0.002290423, 0.020369574, 0.06487835, 0.11036993, -0.02021412, -0.00038975404, 0.24836914, -0.024365608, -0.036783054, 0.024228506, -0.26204067) * inp_1_2_2;
    result2 += M4(0.051072385, 0.005893496, 0.006970521, -0.04829554, 0.059845395, 0.09166098, -0.017371275, -0.025459036, -0.08090258, 0.04250911, -0.0013456426, 0.064833656, 0.09874871, -0.13076898, -0.037116397, -0.049257677) * inp_1_0_0;
    result2 += M4(-0.08789451, 0.10175801, 0.028880613, 0.0033661986, -0.012824809, 0.00579063, -0.009505894, -0.048523467, -0.111553654, -0.017237747, -0.04799692, -0.0028825458, -0.14106627, 0.07291741, -0.010096031, -0.19954132) * inp_1_1_0;
    result2 += M4(-0.06432322, -0.0071169958, -0.033649508, -0.11107104, -0.003957038, 0.11071519, -0.023887439, 0.10726976, -0.01166997, -0.020790618, -0.012141271, -0.012845489, -0.05148243, 0.12750174, 0.034325976, -0.19308613) * inp_1_2_0;
    result2 += M4(0.110576876, 0.020509612, 0.108960524, 0.04877493, -0.12930459, 0.11758804, -0.008328424, -0.15224908, -0.024772044, -0.14433123, 0.18729053, 0.1150022, 0.010106126, 0.39354625, -0.03537963, -0.095448904) * inp_1_0_1;
    result2 += M4(0.21791582, 0.010593785, 0.033685353, -0.023018392, -0.18109113, 0.20388168, 0.038464624, -0.21681246, 0.39784482, -0.045098677, 0.02687678, 0.46509448, 0.14848886, 0.1261354, 0.09893363, -0.059121206) * inp_1_1_1;
    result2 += M4(-0.026508646, 0.06207642, -0.015500431, 0.16129829, -0.09655105, -0.01484905, 0.0008254034, -0.042954307, 0.050570186, 0.1123886, -0.0074378396, 0.072850294, 0.06837583, 0.085533306, 0.051377628, 0.12493245) * inp_1_2_1;
    result2 += M4(-0.09057556, 0.0968009, 0.011260239, 0.013900645, -0.1594734, -0.08105855, 0.023309559, -0.092717364, 0.022825137, -0.06816734, 0.009237383, -0.10714534, -0.06303454, 0.06860347, -0.04497559, -0.18524954) * inp_1_0_2;
    result2 += M4(0.047177013, 0.0018599995, 0.075248115, 0.07583209, -0.097744316, 0.07871607, 0.009548112, -0.223996, 0.013086127, 0.09115283, -0.00045801533, 0.039688483, 0.017516691, -0.36092827, -0.054459993, -0.14698988) * inp_1_1_2;
    result2 += M4(0.013658777, 0.03330842, 0.043454338, -0.09030313, -0.037694618, 0.013798904, -0.006707349, -0.019867152, -0.04697062, 0.077378765, -0.01974873, 0.121463366, -0.014604793, 0.1899959, -0.030873701, 0.111854315) * inp_1_2_2;
    result3 += M4(0.017169772, 0.028168036, -0.01737858, 0.048784476, 0.014105297, 0.13351558, 0.009615475, 0.103334084, -0.0054190936, -0.008467856, -0.018970896, 0.008348274, 0.018530669, 0.15436514, 0.051155224, 0.061489098) * inp_1_0_0;
    result3 += M4(0.009198666, 0.2733304, 0.014507263, 0.021666659, 0.058621123, 0.03770842, 0.00038211697, 0.06564164, 0.06737313, 0.06505258, 0.0323153, -0.06291402, 0.09223331, -0.04285301, -0.07885715, -0.01232827) * inp_1_1_0;
    result3 += M4(0.04816222, 0.009623358, -0.005492783, -0.08942198, 0.040592395, 0.05627217, -0.024480484, 0.14287107, 0.005876384, -0.03205453, -0.012088387, -0.15901485, -0.06306488, 0.16294707, -0.02285122, 0.16561668) * inp_1_2_0;
    result3 += M4(0.021596776, 0.034253802, 0.05239497, -0.028830865, -0.0045722546, -0.1314964, 0.04488345, -0.034957338, 0.025572043, -0.074861236, 0.052214764, 0.07868094, -0.1020905, 0.1793135, 0.021134203, 0.03902409) * inp_1_0_1;
    result3 += M4(-0.060167227, -0.03706979, 0.06563819, 0.08497838, 0.047040068, -0.32262412, 0.069593385, -0.1916245, 0.039050676, -0.008524172, 0.05050231, 0.10620711, 0.13762768, 0.25805688, 0.091568984, 0.17460962) * inp_1_1_1;
    result3 += M4(0.08140548, 0.15317933, -0.01316363, -0.11244966, 0.057820573, -0.024136106, -0.0016577501, 0.12775393, 0.059567705, 0.068673186, 0.008263017, -0.011121929, -0.06590033, 0.22803219, 0.029200692, -0.34234905) * inp_1_2_1;
    result3 += M4(-0.044006456, 0.14106604, -0.014881397, 0.014371927, 0.034610122, -0.15700302, 0.03605908, -0.065224506, 0.021815205, 0.21930367, -0.033352595, -0.0020914488, -0.027140928, 0.120288014, -0.022159955, 0.096556574) * inp_1_0_2;
    result3 += M4(0.021922851, 0.13208744, -0.021484163, 0.124212004, -0.006469399, -0.044754792, 0.038462438, -0.041346986, 0.051176514, 0.18235743, 0.074779674, 0.066485055, -0.004919261, 0.16751678, -0.066321515, 0.021241896) * inp_1_1_2;
    result3 += M4(-0.07237743, -0.029934395, 0.03294798, 0.04044786, 0.07645797, 0.04578038, -0.010041237, 0.064937964, 0.059410915, 0.016088387, 0.007917513, 0.045250323, -0.06567197, 0.21631935, -0.016020827, -0.022747021) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.09026144, -0.21244782, 0.029494556, -0.022566697, -0.05108023, 0.17808132, -0.07790832, 0.07675176, -0.05391706, -0.07782202, -0.07283155, 0.18411249, -0.2415126, -0.22163443, -0.012217289, 0.12773348) * inp_2_0_0;
    result0 += M4(-0.10127871, -0.24484107, 0.10824803, -0.03551149, -0.08645404, -0.12496688, 0.11565159, -0.04517513, -0.21534166, -0.23095825, -0.3049085, -0.13125058, 0.16885829, -0.2498084, -0.048591554, -0.09970342) * inp_2_1_0;
    result0 += M4(-0.11380691, -0.3271979, 0.03768046, -0.17801932, -0.021186387, -0.026793195, -0.013132374, -0.047025874, -0.12476434, -0.09177487, -0.089309335, -0.1553808, -0.18254586, -0.034702666, -0.02847272, -0.14169182) * inp_2_2_0;
    result0 += M4(-0.014571363, 0.07400019, -0.10701802, -0.065691575, -0.26617745, 0.05343614, 0.011165809, 0.07964498, 0.09834801, -0.011643586, -0.050638497, 0.08571785, 0.016359175, 0.25460446, -0.14447269, -0.011720622) * inp_2_0_1;
    result0 += M4(-0.10313728, 0.07749986, -0.17417882, 0.115898944, -0.21219303, 0.11033272, -0.13745755, -0.09604515, -0.20532055, -0.014891381, -0.34395882, 0.08192977, -0.012664252, -0.06353097, -0.105788246, 0.011368846) * inp_2_1_1;
    result0 += M4(-0.027437013, -0.19540185, -0.105222315, -0.26373994, -0.0028725406, 0.112199694, 0.04238712, -0.15268713, -0.10204446, 0.0419728, -0.06237392, -0.08905515, 0.0696133, -0.099883534, -0.11604453, 0.0073183947) * inp_2_2_1;
    result0 += M4(0.072082825, 0.08090258, -0.012018794, 0.060430594, 0.12306599, -0.014052714, 0.08104181, 0.08222205, 0.020473026, -0.008712684, 0.066446505, 0.043702617, -0.105835944, 0.068267666, 0.045706347, 0.029056638) * inp_2_0_2;
    result0 += M4(-0.11631635, 0.0176816, -0.17058405, -0.086738266, -0.21825118, 0.1272192, -0.026440717, -0.047769375, -0.054257665, -0.0073180567, 0.10536129, 0.066653244, -0.07338785, 0.08275259, 0.059189796, -0.013328148) * inp_2_1_2;
    result0 += M4(-0.010908965, 0.10164442, -0.050508656, -0.10268485, 0.07212984, -0.013369703, -0.06605804, -0.1285417, 0.006876025, 0.04425751, 0.10623652, -0.030288039, -0.0060970145, 0.166363, -0.21308482, -0.045923132) * inp_2_2_2;
    result1 += M4(-0.026697814, 0.022038076, -0.04293171, -0.47094247, 0.06702332, 0.05574321, 0.010048608, 0.08305173, 0.076079726, -0.032096107, -0.039030768, -0.29336014, -0.13550992, 0.06401902, 0.02638592, 0.23328201) * inp_2_0_0;
    result1 += M4(-0.020969301, 0.024665287, -0.034937672, -0.0029375644, 0.02006387, -0.054187078, -0.008300636, 0.061113458, -0.11863246, 0.06798602, -0.00465849, -0.3553476, 0.07231474, 0.025337586, -0.044626538, -0.5278447) * inp_2_1_0;
    result1 += M4(0.13452345, 0.031329982, 0.025419509, 0.02033159, -0.0065214112, -0.013350846, 0.006985119, 0.0807359, 0.12461167, 0.024753299, 0.022837382, -0.020924944, 0.04165961, -0.047197204, 0.003002947, 0.5109211) * inp_2_2_0;
    result1 += M4(-0.11494376, 0.070873335, -0.07485188, -0.15401366, -0.0066934945, 0.037374053, 0.01020814, 0.01656837, -0.088821284, 0.0013155638, -0.17444181, -0.099998534, -0.009168615, 0.0340389, -0.035257015, -0.23115632) * inp_2_0_1;
    result1 += M4(-0.20757324, -0.017293097, -0.11273391, -0.17380907, 0.026680207, -0.14061649, -0.04278625, -0.43553647, -0.15690829, 0.042971704, -0.09930804, -0.3121439, -0.11554573, 0.04935301, -0.008858141, 0.36587828) * inp_2_1_1;
    result1 += M4(-0.24299037, 0.013894608, 0.036967717, -0.21245486, 0.14320548, -0.0012323022, -0.008702498, -0.17773262, -0.08035918, 0.04030185, 0.07599594, 0.064220116, 0.036410272, -0.06706457, -0.03853758, -0.12515245) * inp_2_2_1;
    result1 += M4(-0.08492295, 0.03641174, -0.041861694, -0.22412558, 0.16025396, 0.019268556, -0.032162793, 0.046678755, 0.012474949, -0.032572087, -0.16286711, 0.16421637, -0.097801976, 0.07231162, -0.011539123, -0.115824506) * inp_2_0_2;
    result1 += M4(-0.17962013, -0.012344847, -0.12085636, -0.21543011, -0.041613966, -0.082223564, -0.15779495, -0.051465016, -0.137779, 0.06832964, 0.08635936, -0.023603337, 0.2651187, -0.10330539, 0.030278882, 0.22661245) * inp_2_1_2;
    result1 += M4(-0.081624135, 0.058934234, -0.007941263, -0.22366726, 0.036399454, 0.011847367, 0.029318273, -0.14155225, 0.006844234, -0.03427018, 0.037319493, 0.04890755, 0.038505394, 0.12869851, -0.0069699516, 0.056788977) * inp_2_2_2;
    result2 += M4(-0.03522401, -0.056047097, 0.06603263, -0.06637791, 0.08013166, 0.00078391924, -0.008613528, 0.08481569, -0.14386724, 0.17576647, -0.04477444, -0.03252482, 0.006934693, -0.118150055, 0.043659307, 0.10399329) * inp_2_0_0;
    result2 += M4(-0.044792235, -0.005121213, -0.019888684, -0.11707974, -0.06493046, 0.089446925, -0.08093435, -0.008088832, -0.18459542, 0.20274676, 0.05390601, -0.11348919, -0.07355593, 0.24502018, 0.034597103, 0.24105906) * inp_2_1_0;
    result2 += M4(0.11667513, -0.18456095, 0.0243684, 0.064717636, -0.0003963955, -0.03563667, -0.019861018, -0.01420171, -0.039079968, 0.13394712, 0.019790374, 0.002631523, 0.13825922, -0.12481766, 0.017764935, -0.26511106) * inp_2_2_0;
    result2 += M4(0.04110834, 0.08018964, 0.102105364, 0.11651122, 0.10608343, -0.09777479, 0.026525725, -0.033179633, 0.08038456, 0.21910161, -0.002925852, 0.13981305, -0.15374836, -0.07097284, 0.018421313, -0.013386078) * inp_2_0_1;
    result2 += M4(-0.24334535, -0.04395448, -0.002125472, -0.07745941, -0.27400592, -0.059361912, -0.18672377, -0.22165774, -0.099916875, 0.26388514, 0.021484114, -0.030598026, 0.059762955, 0.024628969, 0.012434038, -0.20757799) * inp_2_1_1;
    result2 += M4(-0.10960613, -0.1902117, -0.00660733, -0.14093344, -0.0481231, -0.0006075786, -0.016276447, -0.02200794, 0.078303844, 0.06273806, 0.029196637, 0.071511894, -0.1766911, -0.063265204, -0.06844605, -0.056901947) * inp_2_2_1;
    result2 += M4(0.006077312, -0.09336938, 0.05231299, -0.0845882, 0.035523515, 0.009501298, 0.023654284, 0.059536584, -0.0049930587, 0.05002886, -0.041454606, 0.037617896, 0.056081638, 0.12727389, 0.04425497, 0.1521375) * inp_2_0_2;
    result2 += M4(-0.031658787, -0.02036228, 0.01126702, 0.037268378, 0.11063716, 0.13781795, -0.0814072, 0.08921898, 0.057380434, 0.15730007, -0.008335865, 0.12614362, 0.16565633, -0.02094758, 0.03923866, 0.013406314) * inp_2_1_2;
    result2 += M4(0.100403346, -0.13682152, 0.009786389, -0.16417803, -0.0035544892, -0.03977123, 0.023761524, -0.013960527, 0.033752125, 0.03824604, -0.032626364, 0.03138716, -0.008017987, 0.08543696, 0.0101814335, 0.017470872) * inp_2_2_2;
    result3 += M4(0.031398475, -0.0042458107, 0.0117579615, 0.0122834, 0.046364848, -0.054190442, 0.011570194, -0.055944674, 0.021024272, 0.3111163, -0.01609214, -0.12706704, 0.04393701, -0.15426154, 0.08107644, 0.012844563) * inp_2_0_0;
    result3 += M4(-0.011270788, -0.14000498, -0.015250323, -0.03996836, -0.039523818, -0.011499567, -0.00038709058, -0.20766899, 0.09165257, -0.029787315, 0.047379322, -0.22765891, 0.017728603, 0.23554754, -0.015080709, 0.03199084) * inp_2_1_0;
    result3 += M4(0.07695165, -0.13392755, 0.037256215, 0.22071199, 0.02847464, 0.07040776, -0.018843934, 0.10834966, 0.1696689, 0.13898751, 0.012520427, 0.08088825, 0.043209802, -0.05652748, 0.009508191, -0.050644882) * inp_2_2_0;
    result3 += M4(-0.011232596, -0.13568223, 0.06426593, 0.005363612, -0.008876568, -0.083335385, 0.12217276, 0.062308397, 0.016373292, 0.29855442, 0.03059285, -0.0032585068, -0.015988283, 0.103964075, 0.016068764, -0.03263597) * inp_2_0_1;
    result3 += M4(0.058888707, -0.26818573, 0.06556255, -0.26829395, 0.057075407, -0.147601, -0.03660001, -0.09227297, 0.06662175, 0.45680994, 0.11574635, -0.032713305, 0.002743671, 0.52967453, 0.10623974, -0.10416462) * inp_2_1_1;
    result3 += M4(0.021978656, -0.18873341, 0.001907673, -0.16120434, 0.11936681, -0.02370417, -0.014996225, -0.078822434, 0.17243893, 0.025432004, 0.060657468, 0.01877684, 0.066060655, 0.0060370234, -0.051658593, -0.18796076) * inp_2_2_1;
    result3 += M4(0.00841786, 0.045032356, 0.03717743, -0.04734718, 0.014450548, 0.050284036, -0.0053116702, -0.0058538453, -0.00043940736, 0.11005556, -0.033758756, 0.032871157, 0.012861592, -0.06782485, 0.06697704, 0.040811736) * inp_2_0_2;
    result3 += M4(-0.012688121, -0.07457321, 0.011959601, -0.09453681, -0.07622348, -0.042149592, -0.040741924, -0.064682394, 0.044366896, 0.14222048, 0.04854015, 0.012274632, 0.016166363, -0.08909186, -0.0098011065, -0.067460954) * inp_2_1_2;
    result3 += M4(-0.0010890989, 0.0064874366, 0.02349566, 0.012120115, 0.028650828, 0.111888975, 0.007509627, 0.055604454, 0.036113393, 0.10100345, -0.0328467, 0.0787598, -0.018657709, -0.010903024, 0.04176925, -0.16098787) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.57490003, -0.47909373, 0.03469197, 0.4421761, 0.3526752, -0.18341684, 0.04689518, 0.2982158, -0.011945217, 0.091213405, 0.005642271, 0.04829338, -0.115947716, -0.33631447, 0.10100059, 0.057087753) * inp_3_0_0;
    result0 += M4(0.13598001, -0.09356113, 0.13641658, -0.0949857, 0.553334, 0.07349703, 0.23235168, 0.0048705395, 0.050467353, 0.11159274, 0.14930487, -0.10873578, -0.09859648, -0.4188689, -0.0048496756, 0.13492878) * inp_3_1_0;
    result0 += M4(0.035944723, -0.16792133, 0.022836622, 0.01889401, 0.14855574, -0.18768552, 0.24836884, -0.73402196, 0.09455247, 0.059220422, -0.057556532, -0.015638215, 0.10017746, -0.0032008705, 0.053499926, 0.15011482) * inp_3_2_0;
    result0 += M4(-0.5408512, -0.044699915, -0.6768587, 0.04187718, 0.113546304, 0.030668605, 0.22236641, -0.07065415, -0.070678614, 0.0076771714, -0.05709108, -0.0039863484, 0.21924384, 0.18334246, 0.05869453, -0.12557177) * inp_3_0_1;
    result0 += M4(-0.414676, 0.07115441, 0.03305791, 0.14953057, -0.10066621, -0.09206456, -0.21835546, 0.11664302, 0.10957857, -0.24886516, -0.30275923, 0.07716558, -0.5090963, -0.21067223, -0.23409173, 0.20548372) * inp_3_1_1;
    result0 += M4(-0.14615066, 0.16948792, 0.009241219, -0.12663272, -0.028508237, 0.10194177, 0.25522047, 0.029321395, -0.109568916, 0.06804838, 0.09501513, -0.099496, 0.011900368, -0.021130482, 0.071270615, -0.030995522) * inp_3_2_1;
    result0 += M4(-0.50380594, 0.13358033, -0.6269671, -0.55432457, -0.0021468024, -0.04058931, 0.11149393, -0.03714897, -0.07318201, 0.050644062, -0.05472558, 0.0071452092, -0.013820259, 0.0038566075, -0.14958617, -0.04125853) * inp_3_0_2;
    result0 += M4(0.09417762, -0.045407414, -0.31643865, 0.16003668, 0.051798962, 0.037397068, 0.016755339, 0.03744832, -0.058683936, -0.027221814, -0.11673691, 0.027432926, 0.062149353, -0.108442456, -0.27605918, 0.022072632) * inp_3_1_2;
    result0 += M4(-0.021000434, -0.04962678, -0.11408209, -0.024093822, 0.08208414, -0.07353636, 0.04987152, 0.070026234, 0.029932205, 0.056826036, 0.08843293, -0.056486353, 0.012617894, 0.15739411, -0.050947923, 0.043008458) * inp_3_2_2;
    result1 += M4(-0.46193135, 0.00811641, -0.19312362, -0.83789474, 0.14102754, 0.123414814, -0.058850486, -2.143793, 0.05130128, -0.0072850483, 0.018989192, 0.02469897, 0.0022045637, -0.050238013, 0.030262418, 0.19499254) * inp_3_0_0;
    result1 += M4(-0.033404615, 0.01965499, -0.035058994, 0.012199349, -0.21302696, 0.63642085, -0.4887506, -1.3358325, -0.122389175, 0.0289713, 0.02927794, 0.050786886, 0.05502231, -0.034192953, 0.022405177, -0.12369646) * inp_3_1_0;
    result1 += M4(0.042883154, -0.003648643, -0.0080350125, 0.039879616, -0.21299657, 0.37320343, -0.1653021, -1.1082748, -0.083955005, 0.04845515, -0.0046054577, 0.052197576, 0.030731471, -0.02763807, -0.00028791322, -0.0021835214) * inp_3_2_0;
    result1 += M4(-0.07076884, -0.14611843, -0.31089413, -1.3550447, -0.046590634, 0.00019235138, 0.33735204, -0.2319712, 0.043718006, -0.12765358, -0.003016814, -0.10626302, 0.01990162, -0.049025584, 0.0136023, -0.10396702) * inp_3_0_1;
    result1 += M4(0.12706073, 0.045159984, -0.06161784, -0.25087994, 0.07531174, 0.17271411, 0.58797026, 0.32914796, 0.4364493, -0.34440958, 0.07261143, 0.016799908, -0.4328792, 0.024389924, 0.036033016, -0.3803068) * inp_3_1_1;
    result1 += M4(0.0036087418, 0.0778787, -0.0059149023, -0.1601799, -0.033064406, 0.04343843, 0.15187205, 0.11827684, 0.05873284, 0.016284391, -0.048032686, 0.07282476, -0.025182065, 0.009466422, 0.0074058855, 0.14057764) * inp_3_2_1;
    result1 += M4(-1.058928, -0.21491915, -0.85261613, -0.8720183, 0.10511976, -0.1079859, 0.023837978, 0.21191913, -0.029638143, -0.022026202, -0.11117155, -0.12712127, -0.040920444, -0.055175483, -0.07138644, 0.19758475) * inp_3_0_2;
    result1 += M4(-0.21555825, -0.1490879, 0.037216313, 0.07821908, -0.008005693, 0.047736336, 0.09685592, -0.013034291, -0.19054674, 0.10856512, 0.11072392, 0.017221188, -0.38418424, -0.05772526, 0.13471697, -0.18243597) * inp_3_1_2;
    result1 += M4(-0.07194143, -0.023281755, 0.034766804, -0.08948255, 0.059602268, -0.040648382, -0.018799474, 0.080866516, 0.15392321, -0.0055636535, -0.03388217, -0.01737981, 3.406868e-05, 0.017328741, -0.016682828, -0.048934802) * inp_3_2_2;
    result2 += M4(-0.23610546, 0.1315937, -0.040923987, -0.4298906, 0.26379114, 0.5710538, 0.03610422, -1.0739506, 0.05816754, -0.0429702, 0.02052305, -0.039945744, 0.055442028, -0.04089129, -0.07166582, 0.003536508) * inp_3_0_0;
    result2 += M4(0.26684752, -0.087564774, -0.027736468, -0.042566683, 0.7338702, -0.18372744, 0.22503275, -0.6970436, -0.03039461, -0.095594876, 0.29799268, -0.116652966, 0.058800258, 0.13077675, -0.055318624, 0.15501769) * inp_3_1_0;
    result2 += M4(0.035245895, -0.021428192, 0.0014276691, 0.11623227, 0.49786192, -0.0023403773, -0.05555712, -0.024146074, 0.08448039, -0.018532125, 0.15356308, 0.12345062, 0.013580955, 0.05401463, -0.028457608, 0.091395) * inp_3_2_0;
    result2 += M4(-0.6790174, 0.69851667, 0.0021315971, -0.66962326, 0.027199646, -0.0839352, -0.03488977, -0.12577078, -0.048626047, 0.059308205, -0.03891475, -0.044037204, -0.09759012, 0.23811762, -0.04010414, -0.037559792) * inp_3_0_1;
    result2 += M4(-0.22092888, 0.22139816, -0.010499901, -0.13989785, 0.033533115, 0.23439279, 0.089179955, 0.16725203, -0.31632924, -0.2576993, 0.2604824, -0.1390368, -0.15712897, 0.07482842, -0.025497412, -0.39843634) * inp_3_1_1;
    result2 += M4(-0.14564286, -0.0032076573, 0.08984712, -0.042649746, 0.17493084, 0.009516582, -0.09874614, 0.031503536, 0.12589808, 0.03495561, -0.097990245, -0.050491694, -0.036959156, -0.0096214665, 0.0072242385, 0.0091684135) * inp_3_2_1;
    result2 += M4(-0.68416744, 0.13954261, -0.19181974, -0.48810038, -0.025922995, 0.011137572, -0.049050592, -0.032937795, -0.055961102, 0.0025620891, -0.0018368803, 0.0251336, 0.004453195, -0.11550498, -0.011057925, -0.053646687) * inp_3_0_2;
    result2 += M4(-0.1909126, -0.008714485, -0.09075554, 0.016637735, -0.0027448062, 0.05466821, -0.01610134, 0.045801014, 0.049755357, 0.04222796, 0.07052908, 0.06114343, -0.13830984, 0.10944315, -0.061467394, -0.008384025) * inp_3_1_2;
    result2 += M4(0.08889074, -0.03884373, -0.064119816, -0.1270085, 0.021776704, -0.011130457, 0.017115204, 0.060276274, 0.03900031, 0.02083032, -0.035938602, -0.049671974, 0.07078798, -0.016448453, 0.0027334497, 0.03498614) * inp_3_2_2;
    result3 += M4(0.14829825, -0.10028532, -0.009270682, 0.08295368, 0.034136064, -1.015987, 0.03366631, 0.20152155, 0.011290371, 0.059854027, 0.053271335, -0.0027125562, -0.019696228, 0.0054011503, -0.04556954, 0.0057926355) * inp_3_0_0;
    result3 += M4(0.14424631, -0.09725031, -0.026860239, 0.16985357, 0.4036732, 0.040762044, 0.11468245, 0.39004892, -0.05789345, -0.09268044, -0.04378498, 0.032275196, -0.009265884, -0.18353382, -0.050045986, 0.11075533) * inp_3_1_0;
    result3 += M4(0.010504172, 0.036221836, -0.012108495, 0.1517457, 0.3328593, -0.15022893, -0.0014437081, 0.31883702, -0.043157965, -0.025244903, 0.06974946, 0.22583893, 0.023157196, 0.0673096, -0.014451558, 0.13980287) * inp_3_2_0;
    result3 += M4(0.09001785, -1.2893676, 0.22504672, -0.5945892, 0.087803274, -0.3795608, 0.23950551, 0.061153542, -0.07527893, 0.008143985, -0.09587335, 0.0076535083, -0.037392896, 0.1797525, -0.071518384, -0.08207962) * inp_3_0_1;
    result3 += M4(0.36270604, -0.112194195, 0.00825967, 0.27464965, 0.3863823, -0.6825387, 0.53514194, 0.103460856, 0.2519677, 0.16562413, 0.29215539, -0.015986104, 0.0015982862, -0.601704, 0.04307265, -0.051065415) * inp_3_1_1;
    result3 += M4(0.008771471, -0.06576352, 0.07973353, -0.14069733, 0.27892357, -0.80654186, 0.006457299, 0.037662856, -0.12825413, -0.113978475, -0.02144403, -0.007969845, -0.026311012, -0.015406571, 0.021271864, -0.06257949) * inp_3_2_1;
    result3 += M4(-0.14878789, -0.5829314, -0.0071259774, -0.19536296, 0.00991455, -0.032122374, -0.00059962674, 0.037251975, -0.02585261, -0.090402454, -0.022038996, 0.012391451, -0.0074733417, 0.037512626, -0.024139546, -0.03646442) * inp_3_0_2;
    result3 += M4(0.14800976, 0.10011293, -0.07459786, -0.027097264, 0.051403157, 0.030186972, 4.0110972e-05, 0.03503423, 0.047351122, -0.062212635, 0.0773682, -0.017019976, -0.09043212, 0.037721753, -0.057761718, -0.045627486) * inp_3_1_2;
    result3 += M4(-0.030446034, 0.079882674, -0.042197995, 0.052757844, -0.04658919, 0.09399516, -0.015784167, -0.016363408, -0.059545584, 0.054674212, -0.031179061, -0.0017095234, -0.011250014, -0.031515405, 0.011641387, -0.04768152) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0023806945, -0.015799675, -0.0013061274, -0.0014776707);
    V4 result1 = V4(-0.0004789415, -0.00032812761, -0.0004037387, -0.007209726);
    V4 result2 = V4(0.0026561182, -0.082207516, -0.005717645, 0.007009246);
    V4 result3 = V4(0.008299862, -0.00052004674, -0.0021422717, -0.004400018);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.015144432, -0.06799102, -0.021945242, 0.039545737, 0.0059088143, 0.021284346, 0.03021176, -0.043040384, -0.0257762, -0.012378466, 0.04547586, -0.10975002, 0.0026059481, 0.112074025, -0.04842706, 0.06651493) * inp_0_0_0;
    result0 += M4(-0.021536421, -0.051087566, -0.056106355, 0.12692739, -0.017381372, 0.04413995, 0.048361436, -0.013729613, 0.00035441964, 0.1281214, 0.090735964, -0.067552164, 0.0100213485, -0.09277143, 0.011642773, -0.011950423) * inp_0_1_0;
    result0 += M4(0.008687262, -0.013511636, 0.018960148, -0.019886417, 0.0062942887, 0.026872065, -0.0014115024, -0.013473742, -0.005012526, -0.018223513, 0.03133845, 0.008002878, 0.0038234638, 0.022899691, -0.039488725, 0.025710126) * inp_0_2_0;
    result0 += M4(0.018362002, -0.03153983, -0.119067594, 0.12502448, 0.026927337, -0.11831627, -0.0609395, 0.02925011, -0.04283882, -0.11176296, -0.00082135457, 0.0081578875, 0.014786509, 0.4475975, -0.02158264, 0.015029505) * inp_0_0_1;
    result0 += M4(0.025358418, -0.0011135645, 0.28566998, -0.035666823, -0.10554123, 0.016674234, -0.19615076, 0.13075301, 0.05852847, -0.057226334, 0.15961087, -0.23945442, 0.03907999, 0.005537741, -0.11513503, 0.041459534) * inp_0_1_1;
    result0 += M4(0.008902811, 0.021742757, -0.085531175, 0.060317777, 0.030983208, 0.012766986, 0.0037257262, 0.020208137, -0.029524185, -0.06424105, 0.049812593, -0.011659113, -0.04343632, 0.0062240195, 0.009093111, -0.036312096) * inp_0_2_1;
    result0 += M4(-0.030019082, -0.056616634, 0.013865966, -0.032534152, -0.06401169, 0.010842276, -0.0066724215, 0.005707154, 0.015771642, -0.11837806, 0.02533803, 0.007704836, 0.077700384, 0.3011301, 0.063201874, -0.09307346) * inp_0_0_2;
    result0 += M4(-0.003862814, 0.02355339, -0.06974875, 0.043566775, 0.12743367, -0.023171844, 0.109213345, -0.043881066, -0.10035553, -0.010920269, -0.006295128, 0.01156659, -0.11739469, -0.13669129, -0.08141438, 0.09422637) * inp_0_1_2;
    result0 += M4(0.0011882002, -0.06571325, -0.07336553, 0.04921603, -0.052902836, 0.0476601, -0.030655282, 0.01048722, 0.012145535, -0.014804017, -0.027888618, 0.043353193, 0.04172056, 0.05447166, 0.037299167, -0.02701865) * inp_0_2_2;
    result1 += M4(0.010701371, -0.073937155, -0.015046512, -0.058881547, -0.0031916813, 0.03204636, 0.008440268, 0.009170235, -0.07748585, 0.06234778, 0.012389343, 0.008385165, -0.011909494, 0.034966554, -0.0031031535, -0.0360194) * inp_0_0_0;
    result1 += M4(0.016704207, -0.07337773, -0.007836614, -0.10735584, 0.019442081, 0.006184095, -0.021878242, 0.06737879, -0.067187265, 0.043017264, -0.06110763, -0.01604586, -0.0034234042, 0.047120266, -0.019530142, 0.19273823) * inp_0_1_0;
    result1 += M4(-0.008085229, -0.0029906742, 0.008810743, -0.0023335684, -0.010118282, 0.036158994, -0.004275372, 0.052846365, 0.06844471, 0.011938441, 0.012381075, 0.021851692, -0.03879248, 0.02374794, 0.025078867, 0.04973496) * inp_0_2_0;
    result1 += M4(0.07146411, -0.0115585225, -0.060948834, 0.0040106103, 0.04257266, -0.082776435, -0.009146498, -0.0582697, 0.0015601129, 0.07650353, -0.00072749064, 0.048484635, 0.025475156, -0.029766599, 0.014253426, -0.08992792) * inp_0_0_1;
    result1 += M4(0.1118186, 0.10139905, 0.10905619, 0.19798435, -0.2848806, 0.10628164, -0.016041217, -0.28645143, -0.04014648, 0.25096706, 0.028042126, 0.32489052, 0.1714151, -0.013772705, -0.11971459, -0.23029573) * inp_0_1_1;
    result1 += M4(-0.034932956, -0.002624311, -0.02183942, 0.10884639, -0.014952365, -0.07783568, -0.043969877, -0.028316567, -0.03018196, 0.057688024, -0.046557687, 0.07622006, -0.024945742, -0.048017543, 0.051751714, -0.008237668) * inp_0_2_1;
    result1 += M4(0.039347123, -0.002688769, -0.08437424, 0.00071255415, -0.061834898, 0.06355096, -0.05754718, 0.14800021, -0.0023805934, 0.03006538, -0.078117356, 0.05572971, 0.032337215, -0.08065868, -0.0022707854, 0.14318295) * inp_0_0_2;
    result1 += M4(-0.054667957, -0.089722, 0.17781582, -0.13823438, 0.071406014, 0.2037007, 0.009019823, 0.2465016, -0.0030522903, -0.30087838, -0.08823575, -0.013949773, -0.010293286, -0.043910846, -0.23081522, -0.018582603) * inp_0_1_2;
    result1 += M4(-0.0162571, 0.025060115, -0.076319784, 0.00042604265, -0.034200408, 0.13600421, 0.008254937, 0.3383254, -0.0049412576, -0.032287426, -0.003867491, -0.03159628, -0.006826331, -0.0066794865, 0.03694894, -0.09871434) * inp_0_2_2;
    result2 += M4(-0.024501525, -0.013787605, 0.00641753, 0.008743712, -0.01619911, 0.05047487, 0.02681041, -0.018744508, -0.0045025274, 0.060293056, -0.010161018, 0.032052353, 0.017376976, -0.030324169, 0.031225812, -0.08429076) * inp_0_0_0;
    result2 += M4(0.04091052, -0.077024564, 0.01870457, -0.10304802, -0.009727121, -0.11089948, -0.044539213, -0.009085993, -0.03926954, 0.019388754, 0.057426777, 0.02633214, 0.00254824, 0.020076592, -0.040221002, -0.0036767698) * inp_0_1_0;
    result2 += M4(-0.027856264, -0.10325993, 0.0023720975, -0.0289386, -0.0012807891, 0.071039855, 0.007757898, -0.0017174779, -0.02504778, -0.020464614, -0.07590285, 0.024124328, 0.009715214, -0.09383556, 0.10094555, -0.019944632) * inp_0_2_0;
    result2 += M4(0.02415653, -0.013645118, -0.015908482, -0.13142619, -0.0178378, 0.0361806, -0.04296879, -0.031426426, -0.015089552, -0.026275828, -0.021255117, -0.03270547, 0.012344079, 0.06266933, -0.11988274, -0.22795407) * inp_0_0_1;
    result2 += M4(-0.108096935, 0.042317316, -0.043695763, -0.05488946, 0.009555495, 0.048994556, 0.098616496, -0.05662237, -0.39428145, -0.043561894, -0.12915751, -0.1731845, 0.030844381, 0.043009106, 0.18666068, 0.06810085) * inp_0_1_1;
    result2 += M4(-0.05348394, -0.016586997, -0.11081309, -0.008048414, 0.032260597, -0.05116244, -0.21112119, -0.029712712, -0.021587813, -0.020281922, -0.024754204, -0.03391977, -0.02092162, -0.07668046, -0.06769641, 0.002185061) * inp_0_2_1;
    result2 += M4(-0.1212392, -0.102434404, 0.0041967323, -0.027035998, 0.03570617, -0.10462181, 0.008200485, -0.02467608, -0.022579849, 0.050626345, -0.02552165, -0.019094571, -0.079673946, -0.018039929, 0.048280224, -0.081953034) * inp_0_0_2;
    result2 += M4(-0.12780677, 0.0184219, -0.0040296647, 0.051097427, 0.09117726, -0.075920574, -0.018298492, 0.01644836, -0.027301507, -0.013882566, 0.017910091, -0.038409628, -0.033305027, -0.057737224, -0.03579242, 0.042150408) * inp_0_1_2;
    result2 += M4(-0.07804061, -0.040766366, 0.0052134506, -0.01541854, 0.03969236, 0.07278608, -0.07893269, 0.0031146056, -0.0003309745, 0.011166843, 0.010398154, -0.014337505, -0.02029801, -0.042004254, 0.0206299, -0.0019110416) * inp_0_2_2;
    result3 += M4(0.032409746, -0.054174174, 0.04908272, 0.014930012, 0.0063819746, 0.023338811, -0.0015838902, 0.0069096037, -0.07226448, 0.07017758, -0.110826984, -0.10445862, -0.023287784, 0.09345056, 0.09731608, 0.24988586) * inp_0_0_0;
    result3 += M4(-0.02139932, 0.16589203, 0.005721878, 0.20055588, -0.0041424897, -0.024834383, -0.03432299, -0.054206755, -0.027641304, -0.07002933, 0.15419811, 0.022579832, 0.0023371456, 0.18028167, 0.15732835, -0.02190998) * inp_0_1_0;
    result3 += M4(0.013008577, -0.13542992, -0.004727657, 0.0058828164, 0.0027135406, 0.07592244, 0.014229233, 0.004244981, -0.017510034, -0.13576433, -0.030038344, -0.018544221, -0.021020094, 0.080120504, -0.08706506, -0.038300283) * inp_0_2_0;
    result3 += M4(-0.024329564, -0.17656823, 0.11745012, 0.40858567, 0.1316216, -0.041570377, 0.0139880525, -0.169017, 0.12497286, -0.14674258, 0.105748326, 0.12712525, -0.16643326, 0.006239741, 0.1556148, -0.14979695) * inp_0_0_1;
    result3 += M4(0.04446088, 0.27560818, 0.07251106, 0.04101596, 0.03609847, 0.051184483, -0.031631835, 0.018390853, -0.046759613, -0.027796883, -0.04139838, -0.17555209, 0.04664919, -0.258428, 0.35815555, 0.17566875) * inp_0_1_1;
    result3 += M4(0.023245772, -0.086612545, 0.08782525, 0.021719819, 0.00028353068, -0.0028147574, -0.053384934, -0.038658988, 0.00812073, 0.15076447, 0.009454387, -0.022517262, 0.0037384536, 0.14764294, -0.035710286, -0.009022601) * inp_0_2_1;
    result3 += M4(-0.03268658, -0.17680526, -0.014840223, 0.1419223, -0.039570346, 0.07552536, -0.12691976, -0.017647898, -0.0012186324, -0.04486564, 0.02320417, -0.027880209, -0.028650798, 0.14463048, 0.07973413, 0.02028083) * inp_0_0_2;
    result3 += M4(0.06876139, 0.08980565, -0.017763773, 0.13178997, -0.029492017, 0.012055376, 0.012529697, -0.02050582, 0.006472038, -0.008143636, 0.0039990093, -0.053270344, 0.012412551, 0.0884751, 0.028805425, -0.09516721) * inp_0_1_2;
    result3 += M4(-0.021543186, -0.013168033, 0.0034449815, -0.02354282, -0.013396838, -0.09565053, 0.012841765, 0.0044488697, 0.009877312, 0.06562015, -0.027507044, -0.0125573445, -0.019157058, 0.06120773, -0.04511661, 0.0010171073) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0061366074, -0.11414625, 0.014597002, 0.042423952, 0.0013459722, 0.015781468, -0.04481764, 0.04967986, 0.042066555, 0.30063066, -0.10994567, 0.042498536, 0.022167236, 0.17902233, 0.012582864, -0.040461417) * inp_1_0_0;
    result0 += M4(0.0673674, -0.2289191, 0.19486739, -0.06666092, -0.09568221, -0.05497933, -0.07684217, 0.14829025, -0.23222032, 0.2017929, 0.061360035, -0.3449895, -0.0016660718, 0.041619245, -0.047414534, 0.057418197) * inp_1_1_0;
    result0 += M4(-0.03911757, 0.041352358, 0.011197532, 0.06010712, 0.023285007, 0.06597863, -0.004063821, -0.01938208, -0.13485835, -0.042217605, -0.09118641, 0.21618854, 0.019599177, 0.044606127, -0.056972753, -0.057119377) * inp_1_2_0;
    result0 += M4(0.0064591956, -0.2039254, -0.021792805, 0.06448196, -0.0007653121, -0.08842926, -0.0928818, 0.092857316, -0.0065198075, -0.26713902, -0.026388077, 0.0032319666, -0.037230577, 0.20278749, -0.0037731847, -0.0691252) * inp_1_0_1;
    result0 += M4(-0.0076716086, 0.028588329, -0.25076127, 0.17729189, -0.018570606, 0.07714384, -0.25783634, 0.25291353, 0.14753619, 0.24347149, -0.069332294, 0.03338402, 0.15480201, -0.13228406, -0.039862055, 0.05103779) * inp_1_1_1;
    result0 += M4(0.04439177, 0.067256495, -0.0044479244, 0.07116751, -0.090847604, 0.0067855706, -0.17127897, 0.16681218, 0.14582962, 0.37388346, 0.12755205, -0.08125069, -0.076268494, -0.0034637828, 0.02809503, -0.13933422) * inp_1_2_1;
    result0 += M4(-0.035234, -0.20120005, 0.011532747, -0.031182583, -0.030913834, -0.20772144, -0.009821122, -0.01728772, 0.02506044, 0.2474946, 0.022021405, 0.0077305534, 0.051688105, 0.24684542, -0.043853927, -0.014742296) * inp_1_0_2;
    result0 += M4(0.08014122, 0.266947, -0.0024806599, 0.018517865, 0.114403166, 0.1715568, -0.045972258, 0.04190925, 0.07311435, 0.059937127, 0.021918425, 0.032615986, -0.09007015, -0.18339103, -0.059417143, -0.0017149579) * inp_1_1_2;
    result0 += M4(0.0034129506, -0.045858745, 0.036176454, -0.0037004696, -0.045778256, -0.05122145, -0.02638298, 0.01994874, -0.022989806, -0.053644657, 0.0130793685, 0.014727198, 0.029940039, 0.07632757, -0.007716378, -0.0216177) * inp_1_2_2;
    result1 += M4(0.03143608, -0.021341432, 0.028198833, 0.16308293, 0.038227394, 0.0049712765, -0.018528035, 0.050826535, 0.06702975, 0.028322034, -0.06984885, 0.059510536, -0.029644495, -0.03309957, 0.03687202, 0.09642957) * inp_1_0_0;
    result1 += M4(0.39213234, -0.087378345, 0.013832666, 0.22623459, -0.036605548, -0.08164001, 0.004331355, -0.23424906, -0.19856498, -0.18636738, 0.03556055, -0.26749453, 0.06309279, -0.044492584, 0.03760737, -0.080364384) * inp_1_1_0;
    result1 += M4(-0.036855448, 0.021368742, 0.049527876, 0.16074003, -0.10926435, -0.007017456, 0.0076330164, -0.023020796, 0.1067866, 0.0056151818, 0.15397824, -0.44722208, -0.047857936, -0.0076440666, -0.039194852, -0.1945701) * inp_1_2_0;
    result1 += M4(0.030196356, -0.013642789, 0.06916449, -0.04699907, -0.008902946, -0.03604137, 0.012231212, -0.0062793773, 0.032083787, -0.123476796, -0.05745637, -0.03466358, -0.04308881, 0.047364455, 0.07871897, -0.08087675) * inp_1_0_1;
    result1 += M4(-0.10482362, 0.08913275, 0.04074187, -0.29031533, -0.1336608, -0.15653205, 0.1284165, -0.06340047, -0.11227025, -0.5810392, 0.29449952, -0.3615586, 0.2173362, 0.03653773, -0.034677863, -0.051912203) * inp_1_1_1;
    result1 += M4(0.029249046, 0.102943756, 0.0980894, -0.008056815, -0.008516008, -0.08575305, 0.10830079, 0.017230883, -0.034845363, -0.09200668, 0.049065348, 0.19543561, -0.113358155, -0.12085275, 0.052836113, -0.008260764) * inp_1_2_1;
    result1 += M4(0.008555053, 0.020771496, 0.009255002, 0.011232948, -0.003832702, 0.008216313, -0.020344945, 0.021029916, -0.005347903, 0.07003621, -0.030401058, 0.011171921, -0.048384987, -0.0577577, 0.020946344, -0.00048976357) * inp_1_0_2;
    result1 += M4(-0.013550769, 0.25643918, 0.09756581, 0.14171001, 0.010064381, -0.0072317175, 0.18288685, 0.017596915, 0.013710863, 0.2299056, 0.053859007, 0.12919238, -0.022402206, -0.19452457, 0.021113005, -0.04555521) * inp_1_1_2;
    result1 += M4(-0.008858584, 0.1119424, -0.0029319848, 0.021470577, -0.02375316, 0.048351068, 0.003591773, 0.0010427347, -0.024540039, -0.012079407, 0.0031291817, -0.00043576286, -0.00679442, -0.04775467, 0.08734386, -0.008073113) * inp_1_2_2;
    result2 += M4(-0.011659848, -0.10316182, -0.028680567, -0.02384958, -0.01660558, -0.10778446, -0.0030999084, 0.040880997, 0.036591876, 0.024154447, -0.018569529, -0.11447601, -0.012171329, 0.02583112, 1.6917898e-05, 0.0069558467) * inp_1_0_0;
    result2 += M4(0.034714356, -0.027151467, -0.03305131, -0.18328688, 0.028643578, -0.10255982, -0.032216217, -0.15663469, -0.10972442, -0.027296674, 0.05433027, 0.14600708, 0.018298542, -0.0055620475, 0.037381217, -0.06627826) * inp_1_1_0;
    result2 += M4(-0.054263774, -0.035616275, 0.31753096, -0.057904262, -0.0343954, -0.047376245, -0.21056381, -0.02009162, -0.103399485, 0.07079695, -0.32014978, -0.26221585, -0.0069128764, 0.055267587, 0.10511183, 0.019755322) * inp_1_2_0;
    result2 += M4(-0.050932664, -0.0007044899, 0.018453829, 0.048506223, 0.015591157, -0.06467423, 0.019134557, 0.047461994, -0.06615488, -0.081650175, 0.003118113, -0.016840084, -0.023330461, -0.008387705, 0.01061567, 0.02297514) * inp_1_0_1;
    result2 += M4(0.13688089, -0.08584697, 0.08752945, 0.12910233, 0.35144776, -0.08285281, -0.062997416, 0.1911744, 0.0018660034, 0.041814238, -0.026292987, 0.13829514, 0.03615245, -0.056658685, 0.053991962, -0.0010603875) * inp_1_1_1;
    result2 += M4(0.071267694, -0.09142114, -0.009380085, -0.032775313, 0.1440567, -0.10904049, 0.18339506, 0.047325347, -0.03598487, 0.033606846, 0.016847169, -0.06278061, -0.055228427, 0.0061842827, 0.07310384, -0.026813075) * inp_1_2_1;
    result2 += M4(0.011290533, -0.037823696, 0.008461515, 0.006472671, 0.025817685, -0.087099314, -0.021561773, -0.0087072775, -0.0009933619, -0.08840059, -0.019364266, -0.028556203, 0.01674088, 0.05385431, -0.0077949306, 0.017396234) * inp_1_0_2;
    result2 += M4(0.028821796, -0.03668657, -0.049252886, 0.02387424, 0.07807367, -0.043046907, 0.040041633, 0.0610369, -0.00827781, -0.04728559, 0.029080478, -0.016799213, 0.015867647, 0.027684264, -0.0041232635, 0.015616214) * inp_1_1_2;
    result2 += M4(-0.012802266, -0.10085072, 0.00089800946, 0.0021032982, 0.070954, 0.023307838, -0.028998462, 0.038107913, 0.0067567225, -0.017621242, -0.051854283, 0.0047758645, 0.027436214, 0.04081393, -0.054266587, -0.024485098) * inp_1_2_2;
    result3 += M4(0.009513506, -0.11807524, -0.039944593, 0.059315696, 0.086190924, -0.04644863, 0.033576727, -0.040634308, -0.010335003, -0.294074, 0.07821904, 0.38597935, -0.09658152, 0.18180297, -0.100105986, -0.03422778) * inp_1_0_0;
    result3 += M4(-0.023285339, -0.27552912, 0.054183308, 0.0017837174, -0.07534146, -0.08961787, -0.080942534, 0.08615307, -0.69680274, 0.97359926, -0.40411657, 0.1171243, 0.007916509, -0.09708677, 0.13203703, -0.00992492) * inp_1_1_0;
    result3 += M4(-0.011566556, 0.073506884, -0.12278075, 0.03196204, -0.026638696, 0.15135187, -0.15544589, -0.04512108, -0.23168927, 0.88786554, 0.027655039, -0.08733096, 0.03688923, 0.023056716, -0.09225472, -0.027164007) * inp_1_2_0;
    result3 += M4(-0.013475958, 0.05028589, 0.0048773694, -0.12190574, -0.031611986, 0.012811073, 0.015031532, 0.07274519, -0.04554175, -0.07261621, 0.14900874, -0.010953149, -0.04500045, 0.058457073, -0.06604938, -0.11865152) * inp_1_0_1;
    result3 += M4(0.1007402, -0.16134316, -0.21696934, 0.013693882, 0.08017392, -0.21635325, -0.2290206, -0.07260018, -0.10475518, 0.27568218, 0.088929676, 0.19001381, -0.11823602, -0.068371765, -0.0073711714, -0.028807983) * inp_1_1_1;
    result3 += M4(-0.006683612, -0.052894156, 0.04778358, 0.04564766, 0.02043102, 0.013874507, -0.015971804, 0.02844022, -0.027889876, 0.2843573, -0.034064658, -0.031334113, -0.017157497, 0.117545836, -0.10355998, -0.031860936) * inp_1_2_1;
    result3 += M4(0.013831773, 0.046096407, 0.035348747, -0.04827253, 0.011287445, -0.11426043, 0.025368348, -0.016573798, 0.025245823, -0.051444296, 0.09634978, 0.059420317, 0.003021561, 0.003407325, -0.008281684, -0.027312482) * inp_1_0_2;
    result3 += M4(0.014250282, -0.0074253287, -0.057935238, 0.050962195, 0.02256682, 0.14210697, -0.03252225, 0.0916038, -0.03382594, 0.06932773, -0.0001475951, 0.030126551, 0.009162181, 0.008504432, -0.012976416, -0.04080991) * inp_1_1_2;
    result3 += M4(-0.009412598, -0.14793134, 0.031998675, 0.012606483, 0.0070626186, -0.15000562, 0.024728134, 0.017370582, -0.031090299, 0.101416275, 0.032602094, -0.04635312, -0.016088607, 0.17227806, 0.01540738, 0.006208357) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03217997, 0.28481048, 0.06952463, -0.08486426, 0.019924887, -0.45919418, 0.042389482, -0.054680947, 0.011209818, 0.01681665, 0.0029298896, -0.032960977, 0.00560253, -0.12569107, -0.020631429, -0.02761281) * inp_2_0_0;
    result0 += M4(0.04792146, -0.068379216, 0.098049365, -0.11000588, -0.08700371, 0.09703384, -0.1399573, -0.028468745, 0.0033276516, -0.086531915, -0.0042455946, -0.011770783, 0.026513193, -0.08485104, 0.08859839, -0.1395262) * inp_2_1_0;
    result0 += M4(0.0059239212, -0.00054533087, -0.02898933, 0.034360547, 0.0387529, 0.10217017, 0.014116017, -0.037497975, 0.008488439, 0.0057412256, 0.024605108, -0.01727265, -0.00030081047, -0.056080643, 0.014398693, -0.052838724) * inp_2_2_0;
    result0 += M4(0.030721763, 0.31572565, 0.09551421, -0.040466037, 0.0024926027, -0.12562658, -0.05773643, -0.03899554, -0.075638875, 0.12373382, 0.16212305, -0.14433838, 0.10785644, -0.052466806, -0.056313757, 0.09878107) * inp_2_0_1;
    result0 += M4(-0.10810784, -0.22126015, -0.0470637, 0.36030227, -0.013651592, -0.3074767, -0.109585814, -0.07076635, -0.035253555, 0.028574597, 0.27869394, -0.33537367, 0.032781914, 0.03028915, 0.092070505, 0.16072044) * inp_2_1_1;
    result0 += M4(0.037275158, 0.0085728355, 0.089222394, -0.097762115, -0.12988262, -0.123187415, -0.10829645, -0.07635375, 0.04275438, -0.023758896, 0.19588979, -0.1563075, 0.050216, -0.025895765, -0.032246355, 0.03899098) * inp_2_2_1;
    result0 += M4(-0.005208857, 0.327574, -0.017610189, 0.046991725, -0.025933715, -0.65479296, -0.017897671, -0.022798104, 0.07630375, 0.18000957, -0.0026070897, -0.00474178, -0.06921436, 0.0056814426, 0.023997767, -0.025616677) * inp_2_0_2;
    result0 += M4(-0.056999713, -0.09860041, 0.039049964, -0.05547399, -0.22629303, 0.035838522, 0.016615896, 0.004166049, -0.21733807, -0.06191842, 0.06281539, -0.044002805, 0.3418697, -0.04477899, 0.090849645, -0.12304284) * inp_2_1_2;
    result0 += M4(0.03781876, 0.12171044, 0.04679154, -0.06092708, -0.12148358, 0.15433522, -0.07172996, 0.09153615, 0.0016774911, -0.0037912265, 0.12382851, -0.1343776, 0.03346466, 0.022730615, -0.060916256, 0.008932476) * inp_2_2_2;
    result1 += M4(-0.07367741, 0.046958614, 0.03374658, 0.07040463, 0.00949098, 0.105331995, 0.010165295, 0.132952, -0.043775834, 0.031573232, 0.008244361, -0.011589734, -0.045538153, 0.03380755, 0.016568208, 0.0013112641) * inp_2_0_0;
    result1 += M4(0.018872622, 0.042118046, 0.010054241, 0.286524, -0.070495605, -0.057144232, -0.02425343, -0.6370676, 0.048953258, 0.012736106, 0.025549807, 0.07135515, 0.074123085, 0.0034039768, -0.010255488, 0.13715081) * inp_2_1_0;
    result1 += M4(-0.036729388, -0.0426683, 0.03124353, 0.04695305, 0.061075956, 0.027442269, 0.0002760628, -0.11728259, -0.00769127, -0.010987613, 0.01727211, -0.024102421, -0.013023554, 0.04488872, 0.036976933, -0.0068056406) * inp_2_2_0;
    result1 += M4(-0.06771555, -0.060519945, -0.045189105, -0.08876291, 0.0066360063, -0.46805492, 0.026073193, -0.08628914, -0.0057175197, -0.01915753, -0.0036419542, -0.041697253, 0.13847108, -0.07912689, 0.0011525037, -0.008748854) * inp_2_0_1;
    result1 += M4(0.35713792, -0.2034296, -0.08310741, 0.010075271, -0.0064810435, -0.29911125, -0.11839936, -0.7570287, 0.07100214, 0.068074964, -0.11547003, -0.14056267, -0.09842469, -0.11980671, -0.08018569, 0.0900162) * inp_2_1_1;
    result1 += M4(-0.10527852, -0.02258453, -0.037207067, -0.031519793, 0.012947669, -0.29914945, 0.0089931255, -0.4413008, -0.08951133, 0.105562225, 0.10761144, 0.103931084, 0.031800415, -0.059586637, -0.094834864, -0.13278148) * inp_2_2_1;
    result1 += M4(-0.025344979, 0.33299848, 0.1254976, 0.02383778, -0.013352025, 0.055737708, 0.012570918, 0.039388936, 0.007810927, -0.027052384, 0.030847864, -0.019188752, 0.026379617, 0.06641815, -0.12552112, -0.05841544) * inp_2_0_2;
    result1 += M4(-0.0021870255, 0.42811328, 0.10762851, -0.115177386, -0.021353742, -0.4752194, -0.08792509, -0.09198847, -0.012413974, -0.16500707, -0.15904704, -0.0104374895, 0.0032615308, 0.42689595, 0.25011614, 0.043177743) * inp_2_1_2;
    result1 += M4(0.025675246, 0.11124195, 0.08537802, -0.052454684, 0.0030804195, -0.24125871, -0.068327785, 0.102183394, -0.002714879, -0.10668143, 0.14041625, -0.13491772, 0.027414147, 0.069688864, -0.049826436, 0.05523366) * inp_2_2_2;
    result2 += M4(0.014453722, -0.10102799, 0.018067759, -0.044674575, -0.005506185, -0.11063482, -0.01974106, -0.020564929, -0.0038157997, -0.01968987, 0.00019255589, -0.02468648, -0.008829132, -0.013881343, 0.028306214, -0.008911072) * inp_2_0_0;
    result2 += M4(-0.04650822, -0.042396575, -0.06767764, 0.0033188248, 0.0059222174, -0.081211135, -0.030226342, -0.0892157, 0.014544753, -0.08170927, -0.00077942706, 0.077064276, -0.048715048, -0.063043386, 0.06046063, 0.082537025) * inp_2_1_0;
    result2 += M4(-0.01613094, -0.032679565, -0.0025972514, -0.036702003, 0.031068945, -0.084977634, -0.7166766, -0.09253064, 0.02178166, -0.049096975, 0.004696, -0.015906986, -0.0097005395, 0.06341222, 0.03329513, 0.027759185) * inp_2_2_0;
    result2 += M4(-0.015996087, -0.05313555, -0.050237536, -0.062142048, -0.031920068, -0.1022585, 0.006702745, -0.030381244, -0.039731268, -0.07220783, -0.00917901, 0.016801002, 0.07051301, -0.067041546, -0.046095304, -0.14635266) * inp_2_0_1;
    result2 += M4(-0.057131905, -0.013481559, 0.06564562, -0.13097097, -0.07210564, 0.067478545, 0.061655764, -0.13302547, -0.07346462, -0.04068649, 0.07514793, 0.1472166, -0.00011495344, -0.09997127, 0.07837364, -0.09821683) * inp_2_1_1;
    result2 += M4(-0.110511266, 0.055710867, 0.016478218, -0.030926144, -0.03966867, -0.016185692, -0.8078559, -0.055488408, -0.12661192, -0.08343328, -0.3801961, -0.044364057, 0.05409442, -0.05739938, 0.41842413, 0.019217618) * inp_2_2_1;
    result2 += M4(0.018020533, -0.05433522, 0.040674694, 0.0037610028, -0.046756666, -0.11029543, -0.013752314, -0.0066188425, 0.022515304, -0.10206719, 0.00027507613, -0.037090674, -0.034157906, -0.013062991, 0.0044329893, -0.010719702) * inp_2_0_2;
    result2 += M4(-0.163365, -0.11774628, -0.023974586, 0.027546655, -0.105145246, -0.10174636, -0.057699744, -0.02050875, -0.1686738, 0.016721828, 0.03302209, -0.11078052, -0.21917358, 0.010325871, -0.060060486, -0.08958593) * inp_2_1_2;
    result2 += M4(0.026327021, -0.09103072, -0.032304324, -0.012765563, -0.06864338, -0.08620501, -0.03673459, 0.015495115, 0.051789284, -0.0008553329, 0.011152202, 0.029514374, -0.005025125, -0.0056956094, 0.083825774, -0.011438045) * inp_2_2_2;
    result3 += M4(-0.10412286, 0.16100526, -0.10081301, 0.04010433, 0.011754698, 0.17358208, 0.004559997, -0.36207914, -0.048122853, 0.10491457, -0.044842158, 0.03713147, -0.05703868, -0.3883132, 0.037252117, 0.11569153) * inp_2_0_0;
    result3 += M4(-0.05890231, -0.096565284, 0.1383351, 0.015176201, 0.0092410995, -0.67465395, -0.13705519, -0.09854712, 0.0005515395, -0.15638022, 0.055137966, -0.053306125, 0.027223812, 0.23285402, 0.15439638, -0.16479176) * inp_2_1_0;
    result3 += M4(-0.00909798, -0.0010328038, -0.05493626, -0.026666729, -0.046310365, -0.29473552, -0.12968424, 0.05954554, -0.023396175, 0.046076786, -0.06413711, -0.003458922, 0.006461405, -0.0059248474, 0.09182419, 0.012526804) * inp_2_2_0;
    result3 += M4(-0.21966673, 0.012286772, -0.12553792, -0.08861373, -0.011652691, -0.015393971, 0.007210745, -0.19412689, -0.017237023, 0.10327695, -0.003783117, -0.14296511, -0.012260584, -0.21998747, 0.18615502, 0.083691806) * inp_2_0_1;
    result3 += M4(-0.15700057, 0.016466742, 0.15897815, -0.07088499, -0.07138273, -0.3022632, -0.076988906, -0.46388203, -0.3486144, -0.10490911, -0.0015935588, -0.022505429, 0.026020333, 0.45611945, 0.016037054, -0.007514205) * inp_2_1_1;
    result3 += M4(-0.050345086, -0.016287014, -0.10460488, -0.020588176, 0.00041810898, -0.4163133, 0.121029906, 0.11688294, -0.03636204, 0.08533438, -0.08618347, -0.007586532, 0.038370334, -0.24208693, 0.05578849, 0.025303423) * inp_2_2_1;
    result3 += M4(-0.00911571, 0.25929654, -0.08611098, 0.11967056, 0.0077078557, 0.15159519, 0.00019511233, -0.08766936, -0.01584776, 0.06148258, -0.014412586, -0.012761208, 0.048910465, -0.017764779, -0.007132695, -0.06305338) * inp_2_0_2;
    result3 += M4(-0.021384949, -0.060128957, 0.062154166, -0.08352609, -0.006003346, 0.07262823, 0.0062222495, 0.04980814, -0.052965853, 0.007060679, 0.014576247, -0.10485162, -0.08227258, 0.027186727, 0.03280401, 0.02259748) * inp_2_1_2;
    result3 += M4(0.010272798, 0.052572183, -0.021731429, -0.01786097, 1.4818757e-05, 0.28132188, -0.048386607, -0.07938481, -0.004596172, 0.17664897, -0.00058768544, -0.044675726, -0.005093112, -0.09865061, 0.015564172, 0.003694057) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.05273321, 0.18046433, 0.059504595, -0.117116325, -0.0038628855, -0.009941477, -0.023585893, -0.041938514, -0.02029095, -0.18846875, 0.0067894654, 0.046764534, -0.022659956, 0.2964367, -0.041544955, -0.019961523) * inp_3_0_0;
    result0 += M4(-0.00046760438, 0.1947661, -0.029723924, 0.012335097, 0.0058486094, 0.06235562, 0.007341635, -0.0017850094, -0.007408827, -0.08924912, -0.04442099, 0.097622044, 0.04428332, -0.23336329, -0.042080507, 0.10364468) * inp_3_1_0;
    result0 += M4(0.03325153, -0.042071663, -0.0105324, -0.040039815, 0.025550542, 0.09254601, 0.018812478, 0.020985829, 0.019688917, 0.038370006, -0.039588545, -0.05086135, -0.04534157, 0.087800466, 0.035063606, -0.0024490303) * inp_3_2_0;
    result0 += M4(0.09348848, -0.91439384, 0.05654886, 0.002512325, -0.10004608, -0.14640813, 0.010290291, 0.04905657, 0.010190541, -0.14878826, -0.023376012, 0.020672482, -0.043430727, -0.062028658, 0.053037353, -0.28249598) * inp_3_0_1;
    result0 += M4(0.037288338, 0.029223183, 0.1271248, -0.28144085, -0.12790778, -0.1008712, -0.042867206, -0.14097522, 0.20023258, -0.07848414, -0.10652224, 0.190794, 0.11986039, -0.009704185, 0.058097363, 0.09806655) * inp_3_1_1;
    result0 += M4(0.028929237, 0.058952756, -0.006036038, 0.043315057, 0.021629084, 0.019613873, -0.08407686, 0.048179343, -0.041677125, -0.11084573, -0.0994546, 0.0839526, -0.0018838898, -0.10926642, 0.013673469, 0.058498167) * inp_3_2_1;
    result0 += M4(0.06906153, -0.3326045, -0.020296935, -0.02155656, 0.11276917, -0.08059888, -0.009657413, 0.039208237, -0.0059054196, -0.08596241, -0.014863348, 0.0060763354, -0.14092584, 0.17631936, -0.07712415, -0.25066823) * inp_3_0_2;
    result0 += M4(0.009844298, 0.13262439, 0.03323154, -0.051182833, -0.22874065, 0.003015767, -0.0019676154, 0.060862996, -0.11606915, -0.020974467, -0.065493606, 0.039396588, -0.25332245, -0.1406214, -0.069502905, 0.14561126) * inp_3_1_2;
    result0 += M4(-0.049616065, -0.033753823, 0.0310868, -0.026167786, -0.05862577, 0.045968518, 0.059721567, -0.034206793, 0.03133577, 0.0024941158, -0.041761428, -9.980942e-05, 0.038642827, 0.030712565, 0.0014583021, -0.0775958) * inp_3_2_2;
    result1 += M4(-0.00736349, 0.1316701, -0.017369369, 0.22452068, -0.0396104, 0.13241208, 0.0017181279, 0.00026471424, 0.011594839, -0.08526518, -0.0011790472, -0.1079925, -0.0015082964, 0.038303297, -0.05928802, -0.066191114) * inp_3_0_0;
    result1 += M4(0.018700026, 0.066899404, -0.02721428, 0.19302835, 0.070302755, -0.085158065, -0.038564656, -0.2522653, 0.13587384, -0.12675591, -0.019987792, -0.21079905, 0.05261012, -0.07500044, -0.03892368, -0.1544287) * inp_3_1_0;
    result1 += M4(-0.019567035, -0.01612728, -0.050300762, -0.03465782, 0.011955069, 0.036627952, -0.0020905456, 0.23273914, 0.070578575, 0.054095283, -0.04284527, -0.037759487, -0.067625314, -0.06719956, 0.07555327, -0.15000704) * inp_3_2_0;
    result1 += M4(0.030556826, -0.010282571, -0.021617379, 0.06159603, 0.0743615, -0.06979861, -0.08925248, 0.13757713, 0.0062150294, 0.06276283, 0.03073995, 0.021445693, -0.012944847, 0.1843126, 0.09358038, 0.38581818) * inp_3_0_1;
    result1 += M4(-0.3208737, 0.08520566, 0.047938753, -0.12189863, -0.32853824, 0.16252589, 0.14453173, -0.084763356, 0.24881078, 0.10971507, -0.22696646, 0.28032032, 0.15289994, 0.16299574, 0.09904258, 0.43681657) * inp_3_1_1;
    result1 += M4(0.02566493, 0.041581452, -0.0097965775, 0.04751969, 0.05241, -0.0102266045, -0.10608579, -0.37234193, 0.084052175, -0.13956195, -0.1836407, -0.054344036, 0.021110605, 0.11298376, 0.06279201, 0.38733602) * inp_3_2_1;
    result1 += M4(-0.03550293, 0.112040944, 0.14386235, -0.072275855, -0.02555176, -0.053813864, 0.010212971, -0.017335478, 0.008604128, -0.14007172, 0.009725477, -0.02958371, 0.022310732, -0.58854395, -0.14873505, -0.701967) * inp_3_0_2;
    result1 += M4(0.018777587, -0.031917915, 0.20882663, 0.019347018, 0.043220937, -0.2108908, -0.18257959, 0.054540668, 0.01617301, -0.210617, -0.19619189, -0.11205041, 0.08445686, -0.22804672, -0.15716255, -0.38715228) * inp_3_1_2;
    result1 += M4(0.01741953, 0.030781379, -0.010810571, 0.05556029, -0.014567612, 0.16634215, 0.018230187, 0.063566625, -0.0076515903, -0.030334854, -0.15933335, -0.010152409, -0.06370685, -0.059714593, 0.009431606, -0.25052047) * inp_3_2_2;
    result2 += M4(-0.015962897, -0.07303622, -0.052023917, 0.069691926, -0.009958728, -0.03751634, -0.017084135, 0.047191463, 0.0035966048, -0.018993266, 0.0023311551, 0.031631388, 0.01987068, -0.09805628, -0.010074569, 0.017087026) * inp_3_0_0;
    result2 += M4(0.01310846, -0.0774039, 0.044293493, 0.015131003, 0.01217064, 0.041166045, 0.023563968, 0.03968331, 0.007264186, 0.006698768, -0.04708541, 0.055623792, 0.056447946, 0.043713283, -0.024107914, -0.0036333627) * inp_3_1_0;
    result2 += M4(0.0044602226, -0.07154478, 0.09019609, 0.047934473, -0.011509092, 0.07123783, -0.16860074, 0.03447596, 0.016133577, -0.01713739, 0.24470516, 0.12457415, -0.014088726, -0.033885974, 0.22405216, -0.015565011) * inp_3_2_0;
    result2 += M4(0.029127475, -0.01485095, 0.025026971, 0.09089229, 0.04830237, -0.110051826, 0.010362893, 0.02718532, 0.04498257, -0.013072773, 0.020549042, 0.011781769, -0.015485451, -0.044465385, -0.048013482, 0.06048603) * inp_3_0_1;
    result2 += M4(-0.21478453, -0.050094396, 0.2757811, -0.032253604, 0.03168411, 0.024076264, -0.033683505, 0.13271318, 0.06918683, 0.05333997, 0.045671955, -0.27003333, 0.119193695, 0.024188071, 0.16940394, 0.090598546) * inp_3_1_1;
    result2 += M4(0.0041296864, -0.07361512, -0.19711304, -0.022034355, 0.06589267, 0.009561364, -0.21272628, 0.031951007, 0.12549794, 0.04556238, -0.114581846, 0.114758685, -0.0009621566, 0.05827675, -0.30691344, 0.008191455) * inp_3_2_1;
    result2 += M4(-0.03498545, -0.08068519, 0.01196391, 0.062307272, 0.016884537, 0.07571098, 0.005522271, 0.026551506, -0.0047968426, 0.019470427, -0.003981033, 0.027927538, 0.05065045, -0.08443543, 0.036805034, -0.016057506) * inp_3_0_2;
    result2 += M4(0.09614373, -0.023621365, 0.08364124, -0.022156954, 0.15899393, -0.041052442, 0.035375137, 0.015042833, 0.06752054, 0.019845897, -0.029892955, 0.0336607, 0.014512997, 0.02168514, 0.09684241, 0.017782593) * inp_3_1_2;
    result2 += M4(0.020801531, 0.0026737906, 0.041571118, -0.017120704, 0.040725257, -0.109715804, 0.018775864, 0.015430122, -0.11526795, 0.0007968773, -0.032771718, -0.026594812, -0.035825618, 0.08125398, 0.08954881, 0.050935004) * inp_3_2_2;
    result3 += M4(-0.05674314, 0.14546347, -0.056291465, -0.06188574, 0.014343429, -0.07743968, -0.028747778, 0.042631797, 0.047626827, -0.0023816149, 0.041726913, -0.058495916, 0.044256557, -0.09008644, 0.036931653, -0.26794848) * inp_3_0_0;
    result3 += M4(0.05287127, -0.04378258, -0.104058586, -0.018339153, 0.024197865, 0.02171687, -0.10896929, -0.081975244, 0.1629461, -0.35987493, 0.32711914, -0.057228487, -0.03742882, 0.25220874, 0.19337314, 0.124448135) * inp_3_1_0;
    result3 += M4(0.06171983, 0.021249365, 0.052754767, 0.05222846, 0.016563304, 0.0382704, 0.02672797, -0.009806345, 0.03709278, -0.12487367, 0.117319725, 0.019348044, -0.02609057, 0.2966534, -0.06515689, -0.024661388) * inp_3_2_0;
    result3 += M4(-0.07025406, 0.19091569, -0.19472837, -0.0480013, 0.002550373, -0.0031042176, 0.074676886, -0.120097905, 0.09838464, -0.050288603, -0.06364162, -0.10387572, -0.07521929, 0.22118248, -0.032240663, -0.19481722) * inp_3_0_1;
    result3 += M4(-0.08436958, -0.11420662, -0.5169364, -0.12642501, 0.02439932, -0.5312997, -0.077875905, 0.07680557, 0.20925803, -0.19602694, 0.26149446, 0.07887383, -0.04126875, -0.044462465, 0.23127608, 0.10564223) * inp_3_1_1;
    result3 += M4(-0.019218866, -0.21667196, 0.0056911404, -0.012340299, 0.011883374, 0.06092725, -0.07605799, 0.02823386, 0.08896, -0.1784532, 0.24120992, 0.068615854, -0.07665629, -0.081191994, 0.008285978, -0.046659615) * inp_3_2_1;
    result3 += M4(-0.00230876, 0.0042480417, -0.06303652, -0.13264774, -0.013189017, 0.12840374, -0.018123785, -0.0646216, -0.01699221, 0.01452049, -0.043516293, -6.8801935e-05, -0.024170836, -0.17183954, -0.1904277, -0.21366435) * inp_3_0_2;
    result3 += M4(0.01909558, 0.13598165, -0.0134778395, 0.033501025, 0.0062775686, -0.06584981, 0.068399, 0.05100456, 0.028764345, -0.16750483, -0.018086426, 0.06460988, -0.021743353, -0.10955291, 0.10624159, -0.10178446) * inp_3_1_2;
    result3 += M4(0.017541625, -0.06230134, -0.013004274, 0.020862756, 0.013786525, 0.04542713, -0.039294258, 0.028369974, -0.00056014507, -0.09399746, -0.01022468, -0.019845603, 0.0104458695, 0.18935847, -0.02178626, -0.005530769) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.004180534, -0.00021422871, 0.0135642495, -0.012934263);
    V4 result1 = V4(0.00673764, 0.0081706485, -0.0060005495, -0.010754152);
    V4 result2 = V4(0.0110786725, 0.006896425, 0.010704245, -0.0035956672);
    V4 result3 = V4(-0.0078159245, -0.00040938344, 0.03322245, -0.019911688);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.20584454, -0.28879163, -0.24282405, 0.06818846, 0.029391818, 0.048998285, 0.055080883, -0.057893332, 0.10120603, -0.01198941, -0.17538297, 0.092767805, -0.1433995, -0.019590909, 0.14599565, -0.08806021) * inp_0_0_0;
    result0 += M4(-0.4475811, -0.96704936, -0.11741993, -0.34788814, 0.065397784, 0.036022697, 0.08704949, -0.08563111, -0.03549543, -0.056079686, 0.016753646, -0.007012672, -0.050242282, 0.03704088, 0.015214243, 0.032274626) * inp_0_1_0;
    result0 += M4(0.59487826, -0.3299633, -0.5789855, -0.34751603, 0.20696607, 0.13146727, 0.1494818, -0.2139282, -0.014366778, -0.08244801, -0.05141834, 0.023725439, 0.03772238, 0.06434418, 0.028090477, 0.0075512244) * inp_0_2_0;
    result0 += M4(-0.012260015, 0.06858558, 0.11944247, 0.09248707, 0.032386556, 0.14332934, 0.12224906, -0.0121218655, -0.067239605, -0.09207758, 0.010471549, -0.07050634, 0.05604834, 0.036327988, -0.080111004, 0.021342302) * inp_0_0_1;
    result0 += M4(0.12855303, 0.115005255, 0.18549371, 0.25622725, 0.13589445, 0.15584488, 0.44956473, 0.17759283, 0.28733054, -0.63423014, -0.024170203, -0.14279056, -0.5272113, 0.6290551, -0.12322802, 0.02118366) * inp_0_1_1;
    result0 += M4(0.11666941, -0.053445738, -0.13469914, 0.05466212, -0.19974032, 0.30912206, -0.065451466, 0.007306078, -0.19317386, -0.104698695, 0.022952111, 0.07817151, 0.19955488, 0.16910435, 0.0045225704, -0.108721115) * inp_0_2_1;
    result0 += M4(0.012860515, 0.0011374889, 0.006740349, -0.013515656, -0.008447581, 0.076065846, 0.039778985, -0.06327354, -0.055859584, -0.07177973, 0.10538108, 0.01724996, -0.035752513, 0.015595777, -0.12654085, -0.037821326) * inp_0_0_2;
    result0 += M4(0.13374114, -0.12003271, 0.24529462, 0.036122818, 0.13493222, 0.08976577, -0.20772272, -0.0391449, -0.020515129, -0.037969112, 0.049091537, 0.06171808, -0.27731803, 0.072371654, -0.40032688, -0.027612934) * inp_0_1_2;
    result0 += M4(-0.030083703, 0.011689754, -0.089516684, -0.016331723, -0.11452792, 0.1423254, 0.012402551, -0.0035136251, 0.12318023, -0.0036512818, -0.033027653, 0.015323555, -0.25478184, 0.04034673, -0.09248406, -0.02198806) * inp_0_2_2;
    result1 += M4(0.42666093, 0.13756132, -0.043136697, 0.39230403, -0.061317243, -0.033302538, -0.01341119, 0.02751901, 0.046753615, 0.11739079, -0.076694265, 0.07770498, -0.04924047, -0.15863696, 0.11870436, -0.0026502023) * inp_0_0_0;
    result1 += M4(-0.2661853, -0.38943934, -0.11795032, 1.6724645, -0.22750463, -0.08020648, -0.11856342, 0.030628381, 0.046579506, 0.004710418, -0.064417295, -0.019510072, 0.04614491, -0.012151957, 0.031872388, 0.06984771) * inp_0_1_0;
    result1 += M4(-0.7528447, -0.29769227, 0.6176436, 0.4451537, -0.2367573, -0.11267176, -0.33134875, -0.024101362, 0.027662955, -0.017375534, -0.030274168, 0.081652634, -0.029590737, -0.0033936172, -0.013562756, 0.0089468025) * inp_0_2_0;
    result1 += M4(0.08638599, 0.0022154143, 0.061060403, 0.052694384, -0.11826696, -0.00038772213, -0.03206484, -0.12783603, 0.07684543, -0.016232228, 0.10234253, 0.039048985, -0.029764432, -0.049410198, -0.16998525, 0.02810917) * inp_0_0_1;
    result1 += M4(0.22355822, 9.891608e-06, -0.25598848, -0.08182433, -0.046692256, -0.019009927, 0.046244457, 0.025914134, 0.4488148, 0.14945239, 0.0708579, -0.09449917, -0.33269918, -0.20216216, -0.039391823, 0.17153265) * inp_0_1_1;
    result1 += M4(0.07722732, -0.20302786, 0.110717, 0.15939456, -0.45529857, -0.1310649, 0.034759123, -0.25141048, 0.006640732, -0.11005838, -0.22199488, 0.025507921, 0.032090105, 0.050135404, 0.15839785, 0.13279969) * inp_0_2_1;
    result1 += M4(-0.008473025, 0.016673777, -0.01309688, -0.013655269, -0.08536985, -0.019583091, -0.0149937505, -0.098601654, 0.010734008, 0.07091728, 0.17417689, -0.017175663, 0.072178066, -0.14342582, -0.12960544, -0.06420665) * inp_0_0_2;
    result1 += M4(-0.003054786, 0.05154351, 0.12018828, 0.23529746, -0.13786016, -0.14999707, -0.30490363, -0.21019089, 0.028399782, -0.1845011, -0.043034624, -0.023975331, 0.039192915, 0.00019072562, -0.030657796, -0.23164104) * inp_0_1_2;
    result1 += M4(0.049900144, -0.024998076, -0.045983355, -0.050483085, -0.13088708, -0.07426527, 0.09611952, -0.23527858, -0.06398376, 0.008858468, 0.056752436, -0.073859714, 0.15569471, -0.027404713, -0.108859174, -0.14175802) * inp_0_2_2;
    result2 += M4(0.24907666, -0.052057967, -0.38837045, 0.11599763, -0.010947599, 0.027094072, -0.03146841, 0.029973438, 0.01956133, -0.047642868, 0.047212817, -0.029900223, 0.024096608, 0.03903716, -0.17957316, 0.046151105) * inp_0_0_0;
    result2 += M4(-0.43445775, 0.34810457, -1.3376886, -0.42694277, -0.3267411, 0.027054291, 0.112742856, 0.021233825, 0.048492074, 0.0038164374, -0.109854504, -0.011415879, -0.03257463, 0.034827165, 0.15632029, 0.066025496) * inp_0_1_0;
    result2 += M4(-0.5648451, 0.034666207, -0.665167, -0.16228849, -0.3623718, -0.038980566, 0.17532393, 0.031638753, 0.04917721, 0.0027610054, 0.044946704, 0.015019831, -0.04612067, -0.007250132, -0.045744415, 0.0042568906) * inp_0_2_0;
    result2 += M4(0.072430484, -0.04179655, 0.037196383, 0.025702847, -0.110661246, 0.0030142902, 0.060118657, -0.008778057, 0.17300609, -0.036312398, 0.033009, -0.0031348604, -0.15650842, -0.014293921, -0.12823837, 0.027494328) * inp_0_0_1;
    result2 += M4(-0.04353936, -0.08501949, -0.1951667, -0.1824386, -0.36104846, -0.14076611, 0.07740749, 0.32972774, 0.43773085, -0.10324614, -0.14895676, -0.14210035, -0.53439415, 0.22070132, -0.006583208, 0.33443022) * inp_0_1_1;
    result2 += M4(-0.14261459, -0.001890932, 0.0043509044, 0.03661383, -0.25989282, 0.022180751, -0.24317192, -0.062359486, 0.04765733, 0.074867494, 0.07270813, -0.06262613, -0.116238415, -0.10617895, -0.06643827, 0.20628698) * inp_0_2_1;
    result2 += M4(0.018032541, 0.005822866, 0.01331298, 0.020750752, -0.0536965, -0.018174931, -0.018815111, -0.03575738, 0.006762216, -0.034808073, 0.02309778, 0.12388582, -0.004300284, -0.032672204, -0.08494999, -0.11979072) * inp_0_0_2;
    result2 += M4(0.04694048, 0.105485104, 0.02515452, -0.11549929, -0.19756855, -0.018924098, 0.096223935, -0.14601745, 0.11073923, 0.046114534, 0.065552756, 0.028020643, -0.109075196, -0.116485685, -0.21845195, -0.102523975) * inp_0_1_2;
    result2 += M4(-0.002406306, -0.0131661855, -0.06009838, -0.02357208, -0.121685654, -0.049862254, 0.20559075, 0.05091046, -0.09114491, 0.017658174, -0.09657076, -0.07622092, 0.110191554, -0.044524524, 0.0535433, 0.18677042) * inp_0_2_2;
    result3 += M4(-0.013280407, 0.47713283, -0.15475449, -0.1964841, -0.012754296, 0.083943866, -0.0077374275, -0.044842727, 0.04586195, 0.029402955, -0.042194117, 0.041696817, -0.0074898843, -0.07057314, 0.055281967, 0.043763664) * inp_0_0_0;
    result3 += M4(-0.19390753, 0.85546976, 0.11580209, -0.25790837, 0.11140029, 0.19265832, -0.057852317, -0.14505763, 0.17660345, -0.035438072, 0.039650936, -0.026742918, -0.28424945, -0.008196326, -0.08783806, 0.0724861) * inp_0_1_0;
    result3 += M4(-0.016836941, 0.447865, 0.23537706, -0.11496969, -0.17916246, 0.06284484, 0.075493254, -0.14673951, 0.07228553, 0.08387142, -0.01323897, -0.014762741, -0.06571965, 0.014800464, 0.053129252, 0.022321092) * inp_0_2_0;
    result3 += M4(-0.03225801, -0.013254923, -0.049449664, 0.10368128, -0.014822236, 0.14379115, -0.012314561, -0.04857298, 0.059768956, -0.21810994, -0.017382197, -0.018948931, -0.060333434, 0.18684264, 0.029073548, 0.0537134) * inp_0_0_1;
    result3 += M4(0.14980741, -0.12302613, -0.24128021, -0.04240094, -0.20636599, 0.61940354, -0.03317603, -0.10188193, 0.414584, 0.12571017, -0.037710812, 0.21150847, -0.5364628, -0.080196045, 0.08463311, -0.10717988) * inp_0_1_1;
    result3 += M4(-0.14753787, 0.070027456, -0.004840798, 0.087955885, 0.23476006, 0.3165586, -0.078767724, -0.23222874, 0.12382597, 0.06745098, -0.09012715, 0.22027019, -0.2762885, -0.15595597, 0.1651821, -0.15944606) * inp_0_2_1;
    result3 += M4(-0.0076093045, 0.051947378, 0.009461957, -0.00895193, 0.010692694, 0.1411922, -0.022074206, -0.061568845, 0.10074637, 0.08352702, 0.008732166, 0.039471895, -0.04476125, -0.064614415, -0.030955702, -0.039971095) * inp_0_0_2;
    result3 += M4(-0.002335175, -0.040745907, -0.03519685, 0.067979075, -0.06967422, 0.21495475, -0.01913206, -0.0480241, 0.21381289, -0.24430946, -0.0738635, 0.099480875, -0.08180257, 0.20464906, 0.09665928, -0.08889768) * inp_0_1_2;
    result3 += M4(-0.06306156, -0.02705543, 0.0032877647, -0.03128087, 0.13887748, 0.23720899, -0.056103412, -0.031428438, -0.007974259, -0.033150185, -0.0035954504, 0.058054622, -0.0026881977, -0.015850518, -0.01985044, -0.08097975) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.00965294, 0.084327675, 0.021611081, -0.032569133, 0.040829696, 0.018156793, -0.075815335, 0.07632206, 0.029152468, -0.10987207, -0.053671993, 0.047574878, 0.056858722, 0.049516726, -0.027211605, -0.012598119) * inp_1_0_0;
    result0 += M4(0.15067819, 0.084976465, -0.13804412, -0.024183692, -0.16670316, 0.3424201, 0.33857703, 0.16294076, -0.15235819, -0.19306692, 0.1073042, 0.05749693, 0.13468507, 0.06543227, -0.25044575, 0.035837535) * inp_1_1_0;
    result0 += M4(0.12149262, 0.12883444, 0.079828575, 0.065887496, 0.11989059, 0.14696592, 0.031544678, -0.0709036, -0.16385126, -0.1660778, -0.17230661, 0.07620066, 0.02877916, -0.027564328, 0.0075278166, 0.008372914) * inp_1_2_0;
    result0 += M4(-0.015736753, 0.043801807, 0.1263203, 0.028942399, 0.0009795792, 0.06669, -0.009691698, 0.0023721245, 0.017292568, -0.016427789, -0.07303583, -0.028469976, -0.09620867, -0.09986249, -0.023872355, -0.091100104) * inp_1_0_1;
    result0 += M4(0.34487927, 0.21257302, 0.04625845, 0.07020698, 0.34662306, 0.050864108, 0.34573781, 0.020506384, 0.34868878, -0.2827881, 0.3469389, -0.073736355, 0.62780243, -0.43770996, -0.039657984, 0.21617469) * inp_1_1_1;
    result0 += M4(0.033633348, 0.103605494, 0.0045043905, -0.07945611, -0.067525506, 0.034790672, 0.06695019, -0.08092933, -0.014897763, -0.031069204, 0.04396652, 0.044816364, -0.07494251, -0.056929816, 0.06796119, -0.028913539) * inp_1_2_1;
    result0 += M4(0.016716287, -0.0060605113, 0.0030548994, -0.042796314, -0.016653897, 0.057200555, -0.0078066187, -0.029333362, -0.040054828, 0.008098842, -0.0009000364, 0.0039355485, -0.003376226, -0.05677802, 0.21998975, 0.008806432) * inp_1_0_2;
    result0 += M4(0.14790075, -0.0021995544, 0.17122768, 0.08073891, 0.20274207, -0.053566962, 0.04103497, 0.046465173, 0.060315408, 0.07600236, 0.11886617, -0.026444966, -0.018987963, -0.22142409, 0.03713419, -0.008315327) * inp_1_1_2;
    result0 += M4(0.049866483, -0.032677457, -0.04242751, -0.013138667, -0.0003638298, 0.01730692, 0.07781988, -0.009731526, -0.057218056, -0.00962106, -0.036925834, -0.013128598, 0.02250413, 0.021642352, -0.10530216, -0.019979602) * inp_1_2_2;
    result1 += M4(-0.098608136, 0.01074715, -0.062189892, -0.05321479, 0.18510604, 0.1332778, -0.18870278, 0.025131445, 0.2232679, 0.08998039, -0.061706595, 0.018296558, -0.0631143, 0.08246188, -0.1399551, 0.005273282) * inp_1_0_0;
    result1 += M4(-0.04600991, 0.021229673, 0.060781438, -0.1701521, -0.02699882, -0.08487524, -0.19377495, -0.0266169, 0.1799508, 0.22106944, -0.19081837, -0.07918556, -0.07486441, 0.016270319, 0.28839725, -0.09804014) * inp_1_1_0;
    result1 += M4(-0.09087102, 0.0052383984, -0.07128076, -0.17217444, -0.079646155, 0.11586395, 0.19491515, -0.08360796, 0.14015625, 0.08553703, 0.22132231, -0.050010897, 0.024959313, 0.03687322, -0.0025175977, -0.066689506) * inp_1_2_0;
    result1 += M4(-0.18341856, 0.10624529, 0.15368588, 0.07954808, -0.014074588, 0.06932234, 0.028162839, -0.0561023, 0.03400203, 0.043338772, -0.035534848, 0.035299357, -0.055320174, -0.06114115, 0.14613871, -0.030413762) * inp_1_0_1;
    result1 += M4(-0.32900617, -0.08412446, -0.11222032, 0.3404563, -0.0016310974, 0.16697338, -0.20110965, 0.057698335, 0.12226842, 0.36086467, 0.342145, 0.29973608, -0.116431855, 0.33161882, 0.25795916, -0.24805412) * inp_1_1_1;
    result1 += M4(-0.09994632, -0.2163884, -0.08755298, -0.10933306, 0.05928119, 0.020742148, 0.12946264, 0.27981043, 0.07759674, 0.06454929, 0.1087241, 0.20542589, -0.05182686, -0.24789083, -0.2703696, 0.1054592) * inp_1_2_1;
    result1 += M4(-0.10510011, -0.036589053, -0.03227171, -0.017691564, -0.04887812, -0.027310187, 0.00027738104, -0.06885482, -0.01988358, -0.0021168492, 0.037009194, -0.01965942, 0.04380546, 0.07124692, 0.09506032, 0.03788834) * inp_1_0_2;
    result1 += M4(-0.03074074, -0.036485065, 0.0076437904, 0.0905556, -0.025104066, 0.15797547, 0.028388865, -0.021014955, 0.04772289, 0.10687708, -0.06627008, -0.1289184, -0.22212447, -0.18744215, 0.09903835, 0.06200664) * inp_1_1_2;
    result1 += M4(-0.07711873, -0.054344248, 0.032158256, 0.00036714957, 0.043368682, 0.016891422, 0.009703749, 0.19651553, 0.06029168, -0.019547224, -0.020317368, 0.02201641, -0.0024564655, -0.028203549, -0.069840066, -0.21009512) * inp_1_2_2;
    result2 += M4(-0.06953811, 0.07463819, 0.12840559, -0.04815832, 0.18332803, 0.015219696, 0.040637847, -0.06897326, 0.12844265, -0.07404985, 0.078044854, 0.047059424, -0.026850002, -0.04611176, 0.042108122, -0.08472934) * inp_1_0_0;
    result2 += M4(0.09701657, -0.113527715, -0.027008288, 0.047499295, -0.27645513, 0.25900117, -0.02227912, -0.090943135, 0.17437313, -0.08568584, -0.026393645, -0.31188846, 0.07002886, -0.07486813, -0.09612713, -0.027484717) * inp_1_1_0;
    result2 += M4(-0.18484768, -0.053301234, 0.052063845, -0.007747999, -0.039357882, -0.016669847, 0.07484304, -0.042698372, 0.19899191, 0.091321684, 0.011568314, -0.112918556, 0.049402148, -0.0010718335, -0.059404664, -0.037631698) * inp_1_2_0;
    result2 += M4(-0.037849005, 0.0928404, 0.072843015, 0.17943569, 0.10840789, -0.021618983, 0.04840385, 0.1244115, 0.1035436, -0.014231376, 0.0026200784, -0.08860773, 0.06145769, -0.031706322, 0.0066503193, 0.019006917) * inp_1_0_1;
    result2 += M4(0.22274794, -0.02323687, 0.13631934, -0.014671766, -0.1131221, 0.13817479, 0.051362693, -0.14238317, -0.1399627, 0.1144799, -0.13163854, -0.07474156, 0.4275794, -0.120694496, -0.012735516, -0.24040884) * inp_1_1_1;
    result2 += M4(-0.15730137, -0.08424996, -0.012985142, -0.055337418, 0.06061248, -0.03399998, 0.0284422, 0.0086135, 0.050454143, -0.017328102, 0.029985806, 0.014650305, -0.121217825, -0.012610437, 0.117438376, 0.07829135) * inp_1_2_1;
    result2 += M4(-0.056963596, -0.026820878, 0.09396825, 0.015416381, -0.04776979, -0.0059151473, 0.0037824286, -0.064484954, 0.0061604585, 0.0041289455, 0.0037528041, 0.017096464, 0.0089012, -0.0053344225, 0.058861375, 0.08591756) * inp_1_0_2;
    result2 += M4(-0.019427948, 0.054826964, 0.07024299, -0.10776373, -0.0044392864, 0.043971326, 0.111861646, 0.121911846, -0.048136033, -0.023778385, 0.036746964, 0.024848448, 0.036099587, 0.115910664, 0.16241716, -0.25846794) * inp_1_1_2;
    result2 += M4(-0.04084523, 0.029074002, -0.047607128, -0.051711764, 0.061734132, -0.017432913, -0.06690867, 0.055201616, 0.04772999, -0.0024329696, 0.030636752, 0.049678605, -0.02578237, 0.04524363, -0.060974743, -0.10082614) * inp_1_2_2;
    result3 += M4(0.024516277, -0.05114683, 0.029130349, -0.050478857, -0.09517409, 0.04407282, -0.10225681, -0.032697182, -0.15413882, -0.047846567, -0.018356204, 0.08064196, 0.066478685, 0.06408532, 0.033921707, -0.03264994) * inp_1_0_0;
    result3 += M4(0.26843792, 0.016587311, -0.00024283055, -0.108283415, -0.5155787, 0.1914261, 0.04065627, 0.08412338, -0.3409633, 0.1873329, -0.11146892, 0.07891239, 0.31885225, -0.083309084, 0.0006751257, -0.05525706) * inp_1_1_0;
    result3 += M4(-0.054990996, 0.0041452306, -0.00785503, -0.004240445, -0.3457458, -0.11141465, -0.06672617, -0.21869238, -0.15249957, -0.020570625, -0.103494495, 0.15924785, 0.028695298, -0.033431932, 0.0077760736, -0.017153863) * inp_1_2_0;
    result3 += M4(0.16772, 0.048028182, 0.03126869, -0.027218983, -0.109450065, -0.0060289325, -0.027391274, -0.036315687, -0.13668244, -0.24056527, 0.049973063, 0.067675225, 0.10539925, -0.29175317, 0.0463532, -0.03060017) * inp_1_0_1;
    result3 += M4(0.63484466, -0.26472586, -0.05584298, -0.12216918, -0.73128384, 0.13385713, -0.14732644, 0.030773768, -0.40508494, -0.0840783, 0.1958573, 0.2005784, 0.71671313, -0.1522182, 0.06896809, -0.014203696) * inp_1_1_1;
    result3 += M4(0.43605492, 0.11162175, 0.06935507, -0.08808365, -0.004576311, 0.10036702, 0.057383213, -0.21678594, -0.12136095, -0.017896326, 0.004686914, -0.015292422, 0.2884031, 0.1632863, 0.0998588, 0.079180665) * inp_1_2_1;
    result3 += M4(0.022506118, -0.051373687, 0.017452946, -0.007572393, -0.0320838, 0.049298175, -0.022457108, -0.041052543, -0.010358652, 0.02771611, -0.011134023, -0.00913688, 0.107487075, 0.100632384, 0.013892927, -0.012846227) * inp_1_0_2;
    result3 += M4(0.11580784, 0.049345024, -0.0070884717, 0.04680294, -0.29936758, -0.09699615, -0.031706836, 0.056841534, -0.16829932, 0.16064726, -0.043470636, -0.09427606, 0.53128254, -0.13054928, 0.04783305, 0.11196127) * inp_1_1_2;
    result3 += M4(0.03377268, 0.050416887, 0.0025014582, -0.021378914, 0.012301509, 0.0356246, 0.024432415, -0.008793685, -0.052969087, -0.023333663, -0.0065942397, -0.022497626, -0.06860533, -0.06464357, -0.037768275, 0.023771172) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.020207545, -0.048627283, -0.040440902, 0.07414671, 0.0099081565, 0.087992296, -0.087505184, -0.036724783, -0.05625163, 0.08044201, 0.19426799, 0.015280358, 0.017733056, 0.05286202, 0.04193002, -0.037155256) * inp_2_0_0;
    result0 += M4(-0.019430796, -0.007388932, 0.053243414, 0.03791606, -0.027585978, -0.008342125, -0.039573804, -0.06198348, -0.16844024, -0.026772557, -0.04844008, 0.16022587, 0.069726005, 0.02264753, -0.10728603, 0.065797254) * inp_2_1_0;
    result0 += M4(-0.06758255, -0.00092114566, 0.0398899, 0.03917604, -0.045973793, 0.04066517, 0.051243633, 0.080344826, -0.0015766446, -0.021616925, -0.012953359, -0.031852808, 0.1996749, 0.04188024, -0.056300838, -0.02621412) * inp_2_2_0;
    result0 += M4(-0.07749428, 0.01129348, 0.09155417, -0.011070108, -0.025910769, -0.010805403, -0.016472008, 0.012787492, -0.6703372, 0.14541934, 0.11127409, -0.630945, 0.12497146, -0.12746191, -0.04055239, -0.053569082) * inp_2_0_1;
    result0 += M4(0.039554697, -0.2282921, 0.11945334, 0.014711684, -0.032371916, -0.0074049877, 0.02139189, 0.010852747, -0.048258513, 0.14495961, -0.108165294, 0.21690416, 0.019594375, 0.3027761, -0.1385312, 0.033289876) * inp_2_1_1;
    result0 += M4(0.0024375233, -0.05754868, 0.036740154, -0.043554034, 0.042229116, 0.020552259, -0.075864986, 0.008452199, -0.034855973, 0.018686624, 0.07676639, 0.027220823, -0.041398752, 0.21177615, 0.2062565, -0.0038361468) * inp_2_2_1;
    result0 += M4(-0.023560235, 0.049527664, -0.03642455, 0.009908344, 0.0030689137, -0.015062787, 0.07780682, 0.07212966, -0.69332117, 0.04707257, -0.734876, -0.26745346, -0.01635358, 0.01030129, 0.005523748, 0.075887285) * inp_2_0_2;
    result0 += M4(-0.093769975, 0.013902717, -0.060354855, -0.03164615, -0.05729751, 0.040602226, 0.04084333, -0.051082958, 0.14017972, -0.10027177, 0.05221077, 0.15197401, 0.21350685, -0.033447627, 0.18143485, 0.028361995) * inp_2_1_2;
    result0 += M4(-0.06418023, 0.043061957, -0.09049974, -0.009979757, 0.075651206, 0.030079901, -0.01786162, -0.026372422, 0.03541161, -0.012120839, -0.060405113, 0.028421786, 0.17854309, -0.026382048, 0.06253361, 0.009902458) * inp_2_2_2;
    result1 += M4(0.07583048, 0.043789435, -0.04722503, 0.008931374, 0.06346936, 0.080045424, 0.016450929, -0.04180005, -0.003416122, -0.102529585, 0.028284721, -0.43256393, -0.15115851, -0.10297343, -0.034652792, -0.18905081) * inp_2_0_0;
    result1 += M4(0.045975324, 0.08839517, -0.18148437, -0.046686135, -0.06187308, 0.006353137, -0.015424574, -0.0413284, 0.07887822, 0.0824663, -0.020751676, 0.21750234, -0.062709965, 0.02875746, 0.22588184, -0.22682093) * inp_2_1_0;
    result1 += M4(0.06294379, 0.02722537, -0.06250601, -0.037634794, 0.07697512, -0.08541724, -0.027427867, 0.08228095, -0.016216667, -0.027471406, 0.015752187, 0.07701168, -0.059208702, 0.011807914, 0.052135717, 0.08899087) * inp_2_2_0;
    result1 += M4(0.07286916, 0.035668284, 0.04504326, 0.001770353, 0.0034440039, 0.08294304, 0.0049379487, -0.08176937, 0.122742556, -0.3371496, 0.066031106, -0.92376846, 0.066969134, 0.094834395, -0.022806952, 0.3923408) * inp_2_0_1;
    result1 += M4(0.09709655, -0.19454816, 0.080479644, -0.2487189, -0.0821697, -0.05281455, 0.0073578106, -0.028718108, 0.04306876, 0.27684847, -0.27908278, -0.123309545, 0.057690915, 0.3145351, -0.04689247, 0.7966208) * inp_2_1_1;
    result1 += M4(-0.037378993, 0.053195808, -0.059093244, 0.047549613, -0.046185292, -0.092283964, -0.08088165, 0.077223584, 0.06013618, 0.03474056, -0.028161183, 0.08267582, -0.14731167, 0.08527167, -0.18771155, -0.005883168) * inp_2_2_1;
    result1 += M4(-0.059321616, 0.01965449, 0.0182426, -0.03718474, 0.039561838, -0.010657126, -0.092220485, 0.009014431, -0.20923403, -0.42720932, -0.1361906, -1.2302862, 0.06850908, -0.122105, -0.029100059, -0.031209916) * inp_2_0_2;
    result1 += M4(0.16751885, -0.11061345, -0.08939132, -0.22387753, 0.010508949, -0.06816037, 0.044494353, -0.06499018, 0.03641012, 0.11087562, 0.02302137, -0.009152076, -0.18456285, 0.2951451, 0.14713709, 0.30021435) * inp_2_1_2;
    result1 += M4(-0.013439401, 0.03156969, -0.012432794, -0.06963441, -0.04537651, -0.03400716, 0.0047748843, -0.039648198, -0.0312989, -0.03500118, 0.048501495, -0.08609005, -0.23597084, 0.002340897, 0.16553383, 0.22596729) * inp_2_2_2;
    result2 += M4(0.031556968, -0.036207266, 0.012824447, 0.0465732, -0.026046328, 0.0021378323, 0.06295642, -0.008377187, 0.022660268, -0.112881996, 0.327087, 0.038644537, -0.2332299, -0.01357244, 0.13101617, -0.06454515) * inp_2_0_0;
    result2 += M4(0.16274598, 0.03749903, 0.08006664, -0.015641563, -0.08933473, -0.051488176, 0.07110782, 0.067795336, 0.011552231, 0.05684385, 0.10913438, -0.04758999, 0.08384125, 0.008883649, -0.020751342, -0.11891138) * inp_2_1_0;
    result2 += M4(0.032982353, -0.0061119725, 0.06502269, 0.028681923, -0.025512144, -0.076785855, 0.06401422, 0.08776045, 0.012991994, 0.008995588, -0.10376517, 0.03162267, -0.12666556, -0.050287027, -0.06965429, 0.0925445) * inp_2_2_0;
    result2 += M4(0.09121449, 0.03774648, 0.015756002, 0.020563653, 0.08268773, -0.030385848, -0.046853192, -0.044370376, 0.081192955, -0.31823996, 0.37043375, -0.028916087, -0.050416566, 0.04877849, -0.049659982, 0.07413116) * inp_2_0_1;
    result2 += M4(-0.16306476, -0.01526536, 0.07876917, -0.16466683, 0.054044414, 0.027264606, 0.0953816, 0.08294334, -0.13785428, -0.088126145, -0.3532354, 0.33495572, 0.5207311, 0.12801762, -0.12017873, -0.106189564) * inp_2_1_1;
    result2 += M4(0.056782857, 0.067476735, 0.039121848, 0.06474655, -0.03165144, 0.08093482, -0.0882701, -0.08254938, 0.035552092, 0.0010239014, 0.03423908, -0.005992503, 0.047707032, 0.009042142, 0.083608806, -0.15994045) * inp_2_2_1;
    result2 += M4(0.0263424, 0.023494147, 0.04943016, 0.037253913, 0.02471047, -0.0567334, 0.002708731, 0.027220642, -0.18452275, -0.33644086, 0.071137644, 0.24545218, -0.022857824, -0.013874981, -0.03070175, 0.052391585) * inp_2_0_2;
    result2 += M4(0.12270941, -0.00097015686, -0.029692303, 0.14379585, -0.057766538, 0.085698426, -0.04105045, 0.043139305, -0.19569124, -0.0058721723, 0.07314409, -0.3110368, -0.019620726, -0.00032418783, 0.12709214, 0.18574421) * inp_2_1_2;
    result2 += M4(-0.012172638, -0.017763969, -0.043641787, 0.04876324, 0.083840266, -0.019284535, 0.041372556, -0.05559395, -0.04331406, -0.0021282493, 0.02694275, -0.01579335, -0.115463965, 0.015821876, -0.03937238, -0.16070387) * inp_2_2_2;
    result3 += M4(0.04495557, 0.003832466, 0.037365112, 0.07371303, 0.078401536, -0.079524316, -0.016737366, -0.08345316, -0.23604724, 0.08602779, -0.030275598, 0.3310915, 0.017692512, 0.033104047, -0.005238374, -0.032119416) * inp_2_0_0;
    result3 += M4(0.050753966, 0.02163509, 0.10999947, -0.009899964, 0.08566106, -0.083776936, -0.05949974, 0.042102233, -0.05328923, 0.0052342764, -0.06420642, 0.1469041, 0.10462545, -0.09882177, 0.13190554, -0.04148256) * inp_2_1_0;
    result3 += M4(0.061185706, -0.05865044, -0.014716003, 0.025112838, -0.023566889, -0.050496314, 0.097668454, 0.049070265, 0.018443765, 0.016931098, 0.04745358, -0.026653444, -0.031026497, -0.00468053, 0.06913762, -0.05691503) * inp_2_2_0;
    result3 += M4(0.024533903, 0.0025464448, 0.058415312, -0.05429877, -0.07863332, -0.0051445197, -0.03523661, 0.073283575, -0.7601631, -0.49346313, 0.048551623, 0.3339551, -0.0017205997, 0.0802878, 0.032608792, -0.09229285) * inp_2_0_1;
    result3 += M4(-0.115505956, -0.11987465, 0.004163104, 0.17195243, -0.08188132, 0.017382601, 0.04839784, 0.041245855, 0.1951768, -0.074982025, -0.25006518, 0.18916197, 0.17522907, 0.25028157, -0.28756732, 0.13374135) * inp_2_1_1;
    result3 += M4(-0.11966834, 0.03808942, 0.060861338, 0.06823486, 0.09193537, 0.02450597, -0.010434413, 0.0392908, -0.025915403, -0.026565924, -0.03493053, 0.0023548899, 0.077187136, 0.08274353, -0.06994941, -0.13500883) * inp_2_2_1;
    result3 += M4(-0.018597364, -0.038538933, -0.019803446, 0.001727302, 0.022644605, -0.037871793, -0.054429796, -0.017152349, 0.15563084, 0.17152, -0.09784227, -0.06782339, -0.0046002828, -0.022464598, -0.06323127, 0.021923136) * inp_2_0_2;
    result3 += M4(0.017987123, -0.10221191, -0.01918475, -0.0480553, -0.032850854, -0.0848839, -0.07493111, -0.057165667, -0.03038331, -0.11524898, 0.028263038, 0.390509, -0.18054317, -0.23101157, 0.09556236, 0.040342104) * inp_2_1_2;
    result3 += M4(-0.03496991, -0.05679855, -0.009020087, -0.02375934, -0.04367662, -0.07573481, -0.061322533, 0.099954054, -0.017534409, 0.0329468, -0.021307139, 0.06570929, 0.109050415, 0.18283094, 0.07823374, 0.023471985) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.103896424, 0.08868816, -0.122110456, 0.017427774, 0.15443125, -0.0082290685, -0.15421541, 0.10081592, -0.011991251, 0.034101985, 0.0015686308, -0.040220674, 0.009845808, -0.021334808, -0.060732223, 0.04899304) * inp_3_0_0;
    result0 += M4(-0.16936465, 0.023037413, 0.17374985, -0.00370587, -0.25965026, -0.23917083, 0.21734443, 0.06576263, 0.14267759, 0.18235363, -0.06295011, 0.0069689695, -0.13151252, -0.13061084, 0.14957094, -0.006871944) * inp_3_1_0;
    result0 += M4(-0.043129344, 0.08310725, 0.11149492, -0.0032208262, -0.08043165, -0.16859087, -0.097519234, -0.031310774, -0.00092070043, 0.11447512, 0.093781106, 0.032307893, 0.03401338, -0.009098266, -0.06280055, 0.030048989) * inp_3_2_0;
    result0 += M4(-0.014907082, 0.15082112, 0.2983128, -0.012971413, 0.18323241, -0.22337282, 0.15680175, -0.071088195, -0.17726077, 0.21459016, -0.1687459, 0.002004792, -0.080672845, -0.010788751, 0.059339687, 0.046979833) * inp_3_0_1;
    result0 += M4(0.26228878, -0.5706164, 0.15396379, -0.0031143257, -0.33011264, -0.64951605, -0.4521757, -0.2605279, 0.3655052, 0.5140118, 0.2617174, 0.19486582, -0.3484066, -0.12601763, -0.17965955, 0.18925142) * inp_3_1_1;
    result0 += M4(-0.1347879, -0.098022625, -0.2715712, 0.055816427, -0.14067696, -0.05306649, 0.010901332, 0.087497145, 0.11809247, 0.051826604, -0.02602143, -0.05731637, -0.24161029, -0.67901427, -0.04701955, -0.22692935) * inp_3_2_1;
    result0 += M4(-0.027832054, -0.035275552, -0.0033691435, -0.084799305, -0.17978743, -0.21656139, 0.19689377, 0.091849126, 0.12329596, 0.08158405, -0.23893087, -0.04104101, -0.015453368, -0.013714816, -0.078473955, 0.009731675) * inp_3_0_2;
    result0 += M4(0.16394952, -0.07216966, 0.10191287, -0.012643125, -0.11019483, -0.14480953, -0.23569661, -0.009446188, 0.15728068, 0.06726232, 0.1623895, -0.02248302, -0.072900146, 0.018825121, 0.08317764, 0.017638488) * inp_3_1_2;
    result0 += M4(-0.028055668, -0.023101224, 0.07767325, -0.0010970386, 0.2045707, -0.06253665, 0.16408327, 0.06685215, -0.061654206, 0.022152353, 0.056211285, -0.010454413, 0.0035729383, 0.08954965, -0.2301561, -0.040639263) * inp_3_2_2;
    result1 += M4(0.06390887, 0.16092591, -0.09968298, 0.065226875, 0.03815598, 0.065168485, -0.014843062, 0.18090901, -0.026397636, 0.0025858728, 0.0018137856, 0.0030271139, 0.013568143, -0.047635842, 0.055199582, -0.060576413) * inp_3_0_0;
    result1 += M4(0.035493594, -0.13243946, -0.21494994, -0.009763096, 0.1815581, -0.029189115, -0.29055858, 0.13602142, 0.026861303, 0.09228207, 0.13469379, -0.01470994, 0.17583364, -0.052630972, 0.24339396, 0.15383016) * inp_3_1_0;
    result1 += M4(-0.029440165, -0.03531895, -0.07790051, -0.1545278, 0.09612406, -0.07028979, -0.015700087, 0.123534806, 0.03152363, 0.10351141, -0.025994087, -0.07535274, 0.15699503, 0.15040007, 0.08763702, 0.1320715) * inp_3_2_0;
    result1 += M4(0.006838406, 0.033620566, 0.0009892858, -0.32120645, 0.3553344, -0.0020737285, -0.12854953, 0.037277296, -0.2315787, -0.043336943, 0.18480453, -0.05761827, 0.10032551, -0.014350985, 0.0594166, 0.057578295) * inp_3_0_1;
    result1 += M4(-0.17282705, -0.18824765, 0.05549327, -0.6461919, 0.7410691, 0.18987654, 0.2211357, 0.19424577, -0.66751796, -0.13900417, 0.07310658, -0.4916967, 0.48140374, 0.0015044105, -0.06375618, -0.8432658) * inp_3_1_1;
    result1 += M4(0.12157859, -0.069507934, 0.047367405, -0.28821585, -0.028146178, 0.061450277, -0.053813685, -0.092651576, -0.14376949, -0.05122241, 0.02318799, -0.0252972, 0.45665607, -0.28875688, 0.00037871572, -0.08432836) * inp_3_2_1;
    result1 += M4(-0.17472628, 0.14075108, 0.093959585, -0.10160163, 0.26535678, -0.0023311325, 0.21910757, -0.08297109, -0.17680873, -0.050954334, -0.15022802, 0.21446384, 0.01378565, 0.022050621, -0.008305707, 0.05810594) * inp_3_0_2;
    result1 += M4(0.084873445, -0.044048607, 0.0024308423, -0.046919324, 0.10406962, -0.084040105, -0.1914424, -0.02152339, -0.07109937, 0.15043773, 0.061757702, 0.3245545, 0.19643691, 0.12854376, 0.12412676, -0.018050408) * inp_3_1_2;
    result1 += M4(0.22516814, 0.1592042, -0.021519314, -0.03786003, -0.0819906, 0.019215215, 0.07499211, 0.14374886, 0.07501131, 0.09973717, -0.034545768, 0.09362067, -0.042365573, -0.277411, -0.09363871, -0.0111536365) * inp_3_2_2;
    result2 += M4(0.09617032, 0.022926059, 0.17300391, 0.02380451, 0.0680802, -0.031806402, -0.054807875, 0.08753557, 0.011793984, 0.028865593, -0.03356619, -0.014285317, -0.006584328, -0.021633927, 0.019526815, 0.027415637) * inp_3_0_0;
    result2 += M4(-0.017717708, 0.017465267, -0.17154907, 0.055668272, 0.009716791, 0.060938504, -0.05687878, -0.039582968, 0.13459599, -0.04318817, 0.09269259, 0.09774076, 0.0423777, 0.029454967, -0.16609292, 0.20472136) * inp_3_1_0;
    result2 += M4(-0.03805986, 0.0040461966, 0.19737427, -0.012900707, 0.14087184, 0.039520822, -0.08469097, 0.05352572, -0.009107135, -0.004903696, 0.13441274, -0.037254315, 0.14265577, -0.020069234, -0.10101402, 0.0075874645) * inp_3_2_0;
    result2 += M4(-0.0024092107, -0.12517327, 0.20556724, -0.08223473, -0.07210528, -0.12389885, 0.12878701, -0.092096224, 0.14750494, 0.057853926, -0.073862806, -0.027644902, 0.0737155, 0.03778878, -0.15429105, -0.095814854) * inp_3_0_1;
    result2 += M4(-0.3475258, -0.06857174, 0.31716043, -0.38043785, 0.4377104, 0.14682363, 0.67058474, 0.03873451, -0.36953196, -0.12768029, -0.37886432, -0.28914082, -0.37747684, 0.0949612, -0.062255524, -0.2890643) * inp_3_1_1;
    result2 += M4(-0.00079196383, -0.012877565, -0.03742051, 0.001807738, 0.11861385, 0.100718096, 0.2248397, -0.29487717, -0.058905847, -0.043378726, -0.22443195, 0.10408852, 0.20387077, 0.017057413, 0.0967408, 0.261776) * inp_3_2_1;
    result2 += M4(-0.05791603, 0.00429622, 0.06623376, -0.021060035, -0.04957451, -0.062301688, -0.16009526, 0.19117704, 0.08397392, 0.07042184, 0.07975215, -0.1163406, 0.13249254, 0.01847068, 0.02772467, 0.054744836) * inp_3_0_2;
    result2 += M4(0.06678149, 0.054027185, 0.08816267, -0.1174925, 0.13151073, -0.028984703, -0.18673684, 0.0789458, -0.0026835506, 0.013697247, 0.0032067231, -0.036399826, 0.3224176, 0.08231368, -0.08732969, 0.28042474) * inp_3_1_2;
    result2 += M4(0.08474929, -0.013257999, -0.008789689, 0.19574665, -0.07156598, 0.026659627, 0.050820295, -0.16720198, 0.080529526, -0.01602121, -0.006789615, 0.11008151, -0.00012496139, 0.047050368, -0.11008712, -0.029181473) * inp_3_2_2;
    result3 += M4(0.0016817189, -0.020032192, -0.08581997, -0.0034779299, 0.018021002, 0.112368554, 0.0161787, 0.09671446, 0.054401178, 0.015232152, 0.033750325, -0.06521383, 0.028133787, -0.052827556, -0.02366077, 0.042135052) * inp_3_0_0;
    result3 += M4(0.31167877, -0.02301985, 0.0052938755, 0.004923515, -0.055306893, -0.093240336, 0.07544028, 0.092545904, -0.06177646, 0.07177642, -0.060160216, -0.047302987, -0.3073567, -0.077782564, -0.04862864, 0.08427869) * inp_3_1_0;
    result3 += M4(-0.10343691, 0.027565459, -0.05328749, -0.016303685, 0.08612503, 0.05287311, 0.061534803, 0.027836328, -0.12176882, -0.06633741, -0.12350185, -0.04676569, -0.19841664, -0.09594758, 0.0034747375, -0.056923445) * inp_3_2_0;
    result3 += M4(-0.27488765, 0.012837205, -0.035721395, -0.13200292, -0.17631228, 0.16607004, -0.09848817, -0.11460692, 0.23446439, -0.075501874, -0.046746638, 0.017633773, 0.03505302, -0.041189894, -0.033891372, 0.11933696) * inp_3_0_1;
    result3 += M4(-0.09862489, -0.19527613, 0.10524989, -0.082024895, -0.49262875, 0.7697383, -0.29797098, 0.18504214, 0.3190129, -0.50524586, 0.26549223, -0.11016206, 0.108111285, -0.16304946, 0.1080849, -0.0006569883) * inp_3_1_1;
    result3 += M4(0.13209769, 0.027188549, -0.04297357, 0.12809429, -0.101854555, 0.072679, -0.21426022, 0.08294178, 0.15075329, 0.050478756, 0.099904604, -0.11888882, 0.20569406, -0.1472366, 0.12865981, 0.067951955) * inp_3_2_1;
    result3 += M4(0.03969385, 0.040276334, 0.04078931, -0.060612354, 0.14501229, 0.24016961, -0.06866967, 0.012075383, -0.09448174, -0.42418212, 0.079587184, 0.040557824, -0.008153835, -0.20554505, 0.06362009, 0.08603608) * inp_3_0_2;
    result3 += M4(-0.10604692, 0.03306022, -0.07344774, 0.07055209, -0.07549406, -0.00053368707, 0.02807137, 0.107029326, 0.024991583, -0.06075677, 0.0899333, -0.013942616, 0.04862204, -0.05893895, 0.0014588727, -0.14270394) * inp_3_1_2;
    result3 += M4(-0.18445453, -0.20439447, -0.0465755, 0.034868255, 0.0127295405, 0.0654851, 0.0074030966, 0.14409053, -0.06999671, -0.11206251, 0.010179277, -0.05641104, -0.010181964, -0.021413999, -0.047465626, -0.14736806) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.07763817, 0.077495426, 0.0826062, 0.07739039);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10986861, -0.061911706, -0.029095352, -0.020431228, -0.005914573, -0.0021316805, -0.02296582, -0.02493271, 0.002447174, 0.019817712, -0.00865084, 0.009780481, 0.1481291, 0.10183851, 0.06985453, 0.079817854) * inp_0_0_0;
    result0 += M4(-0.17249638, -0.23509863, -0.0076036872, 0.0052001434, 0.0027674187, 0.0033437056, -0.08176526, -0.005149759, -0.03254099, -0.1427863, 0.07608921, 0.024634793, 0.020692738, 0.13315512, 0.05691039, 0.012525753) * inp_0_1_0;
    result0 += M4(-0.0014543344, -0.045658417, -0.005540865, -0.020549973, -0.050655004, -0.046678506, -0.033214796, -0.067307115, -0.04995998, 0.025777046, -0.014368963, 0.04867705, 0.08791142, 0.043766793, 0.06123391, 0.040413443) * inp_0_2_0;
    result0 += M4(0.18633638, -0.024854464, 0.009969713, 0.010501181, 0.058910638, -0.07598951, 0.15105289, -0.044324704, 0.0010642378, 0.040818304, 0.051226143, 0.018210812, 0.17285763, 0.110921845, 0.16568929, 0.11348394) * inp_0_0_1;
    result0 += M4(0.07275626, 0.21260475, -0.10105022, -0.12959018, -0.22892961, 0.14777245, -0.12259291, 0.3021012, -0.11457604, -0.010924116, -0.13518818, -0.10482381, 0.19475128, 0.1907069, 0.14762169, 0.22619756) * inp_0_1_1;
    result0 += M4(0.007882788, 0.08858027, 0.06723045, 0.035277583, 0.024466831, -0.11382975, 0.028393315, -0.12526849, 0.007917352, -0.027008718, -0.04288059, 0.07534241, 0.15142629, 0.17986272, 0.14622773, 0.21818134) * inp_0_2_1;
    result0 += M4(-0.011470893, 0.014313828, 0.019936042, -0.0037446076, -0.016690245, -0.0016405184, -0.035491936, -0.017813515, 0.04920516, 0.01833034, 0.05336211, 0.032089792, 0.10318611, 0.027276507, 0.18461806, 0.0073406133) * inp_0_0_2;
    result0 += M4(-0.007158734, -0.0356619, 0.12549792, 0.08169969, 0.08337283, 0.033986613, 0.08963681, -0.03153287, 0.023498554, 0.028553374, -0.09934563, 0.060107943, 0.039574075, 0.066689536, 0.06565202, 0.17523421) * inp_0_1_2;
    result0 += M4(-0.009675167, -0.0052519976, -0.017417828, 0.055580515, 0.059519704, 0.059314188, 0.064503096, 0.024498431, 0.015651828, 0.019344913, 0.0031296993, -0.07514646, 0.059232604, 0.12044485, 0.0718756, 0.10878138) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.09846432, -0.032222778, -0.06744023, -0.06299683, -0.006615315, -0.062175773, 0.0070797424, -0.020866549, -0.059435505, 0.018292794, 0.00973402, -0.004191142, 0.028529817, 0.06261996, 0.005941103, 0.004143231) * inp_1_0_0;
    result0 += M4(0.018065521, -0.14395006, -0.15066493, -0.03013856, 0.121754535, 0.10672553, 0.13504653, 0.01616663, 0.067331694, -0.040737346, 0.015108636, 0.022617143, 0.03695386, -0.04853925, 0.034925193, 0.021877235) * inp_1_1_0;
    result0 += M4(-0.07391019, 0.05384579, -0.015141741, -0.027856385, -0.01064066, 0.110868864, -0.0071753766, 0.110105924, -0.047586605, 0.065453105, -0.012498163, 0.031899296, 0.019769676, -0.026565967, 0.011503333, -0.016756266) * inp_1_2_0;
    result0 += M4(-0.01847863, -0.102611445, 0.04471222, -0.047359493, -0.1336133, -0.058147687, -0.15866956, -0.15293881, 0.13823247, 0.00071329, -0.027835295, 0.018319625, -0.023691252, 0.010313044, 0.08481909, 0.044098727) * inp_1_0_1;
    result0 += M4(0.18257596, 0.063855365, 0.22274636, 0.05688911, 0.0925812, 0.11945104, -0.11841681, -0.020038601, -0.038233448, 0.04345221, -0.018554442, -0.051506788, 0.0989231, -0.0006223375, -0.0071504037, 0.099466495) * inp_1_1_1;
    result0 += M4(0.041339, 0.108134866, -0.0005355179, 0.075297825, -0.017377948, -0.005713637, -0.0403935, -0.12142349, 0.016647788, -0.06974765, -0.011841362, 0.032560684, 0.010949615, 0.024101317, 0.015330299, -0.022836713) * inp_1_2_1;
    result0 += M4(-0.03964625, -0.006740405, -0.06249495, -0.00084449956, -0.048863273, -0.04187319, -0.051813792, -0.0051382054, 0.0011960969, -0.0045678536, 0.003958928, -0.029317858, -0.029631352, -0.0108394455, -0.06534851, -0.028117172) * inp_1_0_2;
    result0 += M4(0.026406914, 0.068520315, 0.08342606, -0.017692061, 0.006538317, -0.035951853, 0.12782858, 0.05262702, -0.012760395, 0.016645826, 0.017719455, -0.06777597, -0.056514554, -0.03473715, -0.0577002, -0.123174176) * inp_1_1_2;
    result0 += M4(0.028512508, -0.008885933, 0.015346047, 0.04829548, -0.013636003, -0.015269603, 0.006028768, 0.089362904, 0.040271085, -0.0027465313, 0.033403985, -0.08501941, -0.0148652755, -0.03093538, -0.007018244, -0.0016798391) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.03188049, 0.041129466, 0.01705993, 0.038706787, -0.10920832, -0.081375025, -0.027880318, -0.04306617, 0.03281799, 0.07201195, 0.0045747836, 0.0033459172, 0.10837866, -0.02537318, 0.0060272245, 0.002406286) * inp_2_0_0;
    result0 += M4(-0.13099466, -0.03789704, 0.017842827, -0.00050422625, -0.13712898, -0.048293177, 0.029055176, 0.019237075, 0.027904904, -0.057885583, 0.03636335, 0.004376785, -0.1120594, 0.09458628, 0.026223289, -0.0390897) * inp_2_1_0;
    result0 += M4(0.0006833979, -0.113655396, -0.016799329, -0.0412955, 0.056402046, 0.11523046, 0.031196536, 0.06429816, 0.03516636, 0.028479442, 0.020431496, 0.023014437, -0.00043856355, 0.06607879, -0.0010979198, 0.07326452) * inp_2_2_0;
    result0 += M4(0.032901302, 0.078461945, 0.014421725, 0.08277079, -0.20838062, -0.0226318, -0.25242195, -0.0432847, -0.023006273, 0.015400741, 0.038918473, 0.094713695, 0.020326758, -0.019923747, 0.06323012, -0.06562644) * inp_2_0_1;
    result0 += M4(-0.07659194, -0.2233218, -0.29562905, -0.2653706, -0.4224673, -0.3676284, -0.235387, -0.21505332, -0.0064314, -0.16926552, -0.15936194, -0.1791605, -0.03559817, -0.092028394, -0.028651198, 0.059180375) * inp_2_1_1;
    result0 += M4(-0.12310497, -0.045634877, -0.05868045, -0.060112234, 0.4012432, 0.06792942, 0.4268091, 0.093143955, 0.006560116, 0.0010468991, 0.03988206, -0.0055753062, 0.013146077, 0.016089145, 0.0673651, 0.08462943) * inp_2_2_1;
    result0 += M4(0.032630466, 0.0056977104, 0.09716852, 0.0205522, -0.060543295, -0.013182376, -0.11105605, 0.02776753, -0.021247637, -0.004738034, -0.0042490717, 0.004761687, -0.020542981, 0.0040973756, -0.062490646, -0.016277663) * inp_2_0_2;
    result0 += M4(0.015240796, -0.036250085, 0.14133047, 0.0067741796, 0.08401965, 0.038985096, -0.104482524, -0.09755037, 0.009761492, 0.055447068, 0.03828215, -0.120475166, -0.009241899, -0.04093726, -0.078629225, -0.061356254) * inp_2_1_2;
    result0 += M4(-0.00026216859, 0.03897951, -0.0073444606, -0.0019773652, 0.118948415, 0.14015606, 0.13942157, 0.12168276, 0.0006549121, -0.002585852, 0.012425043, 0.042833693, 0.0032511791, 0.025623994, -0.0016333496, 0.016660955) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.034224823, 0.005658517, -0.04320623, -0.019063108, -0.011925761, 0.025447369, 0.0090254685, 0.004088583, 0.014100037, 0.0152594745, 0.018816786, 0.0019071046, -0.1030899, -0.06691941, -0.03167633, -0.049594223) * inp_3_0_0;
    result0 += M4(-0.013386087, -0.059702706, 0.03546458, 0.012480999, 0.054018658, 0.016914971, -0.032089647, -0.0142356185, -0.042142306, -0.072099805, -0.06575606, -0.04429321, -0.062270775, -0.09052803, 0.020807324, 0.027253889) * inp_3_1_0;
    result0 += M4(0.0012072128, 0.059317, 0.0039687343, 0.039500277, -0.10840212, 0.034085073, -0.03877017, 0.013307257, 0.028235171, 0.055604976, 0.02801354, 0.034613874, -0.066499986, -0.094771326, -0.047707602, -0.03658253) * inp_3_2_0;
    result0 += M4(-0.02366286, -0.057772808, 0.057091802, 0.0006033979, -0.037554838, 0.017905148, -0.05145777, 0.060547, 0.027193323, -0.03652924, 0.02398785, 0.022938952, -0.045396537, 0.003856647, -0.07608064, 0.025606753) * inp_3_0_1;
    result0 += M4(0.16425388, 0.25189862, -0.19580328, -0.04513383, 0.10045907, -0.19525681, 0.1369515, -0.14521497, -0.4847381, -0.3880396, -0.40427178, -0.36191493, 0.34141108, 0.33131415, 0.3528175, 0.2540118) * inp_3_1_1;
    result0 += M4(0.021732425, -0.0021767383, 0.041968107, -0.047272738, -0.044052754, 0.10543207, -0.09428607, 0.05433509, 0.027192121, -0.030349065, -0.005295722, -0.009992517, -0.11705378, -0.12980744, -0.10295337, -0.14934787) * inp_3_2_1;
    result0 += M4(-0.047060024, -0.019107943, -0.05291399, -0.012928475, -0.0023092637, 0.010974323, 0.0119541, 0.0010172299, 0.12460559, 0.06503494, 0.16655998, 0.017918125, -0.01899163, 0.012929833, -0.0469841, 0.015247421) * inp_3_0_2;
    result0 += M4(-0.00787718, -0.04686464, 0.08899137, 0.028174246, 0.043385167, 0.0045365193, 0.03486679, -0.08255094, 0.18622828, 0.18846819, -0.025234867, 0.10237805, 0.1390688, 0.055858664, 0.08730738, -0.019166775) * inp_3_1_2;
    result0 += M4(-0.021823552, -0.017668545, -0.02647408, 0.010642378, 0.007740398, 0.01655864, 0.016853975, 0.08251782, 0.11037802, 0.17536323, 0.102086455, 0.14680274, -0.024177117, -0.0029431542, -0.043654364, -0.037172157) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DN (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
