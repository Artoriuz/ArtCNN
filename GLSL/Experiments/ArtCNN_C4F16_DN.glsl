// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DN (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(0.0026736397, -0.0077412818, -0.015510446, -0.048091214);
    V4 result1 = V4(-0.030328367, -0.0051578297, 0.002184257, 0.0032856048);
    V4 result2 = V4(0.03307459, 0.00050252397, -0.0087561775, -0.0019135708);
    V4 result3 = V4(0.001284613, 0.009891028, 0.013063735, -0.061734363);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.026666222, -0.12051083, 0.024188807, 0.04132962) * inp_0_0_0;
    result0 += V4(0.03868704, 0.15727803, 0.095831364, 0.123575866) * inp_0_1_0;
    result0 += V4(-0.011898716, 0.112200275, -0.07133382, 0.062853456) * inp_0_2_0;
    result0 += V4(-0.0100828735, 0.053781588, -0.022535754, 0.16618672) * inp_0_0_1;
    result0 += V4(-0.049714718, -0.07202084, -0.34462947, 0.26923603) * inp_0_1_1;
    result0 += V4(-0.22372924, -0.1360224, 0.07354275, 0.111753285) * inp_0_2_1;
    result0 += V4(0.021286352, 0.15236108, 0.004647974, 0.09520034) * inp_0_0_2;
    result0 += V4(0.10057648, -0.11100825, 0.19067965, -0.003534986) * inp_0_1_2;
    result0 += V4(0.1647752, -0.016327683, 0.05240241, 0.09002061) * inp_0_2_2;
    result1 += V4(0.07585071, -0.054057766, -0.1082821, 0.016244864) * inp_0_0_0;
    result1 += V4(-0.055928074, -0.029560497, 0.0039601247, -0.1767376) * inp_0_1_0;
    result1 += V4(0.031227104, 0.115042605, 0.04354586, 0.123785704) * inp_0_2_0;
    result1 += V4(-0.038249247, 0.07634634, 0.11799729, -0.028646821) * inp_0_0_1;
    result1 += V4(0.098027185, -0.15535289, 0.12785354, 0.14360154) * inp_0_1_1;
    result1 += V4(-0.11529511, 0.24096261, -0.18421862, -0.093756616) * inp_0_2_1;
    result1 += V4(0.04925964, -0.011523488, 0.006857886, 0.028884765) * inp_0_0_2;
    result1 += V4(0.09011971, -0.2297601, -0.09267078, 0.035469897) * inp_0_1_2;
    result1 += V4(-0.07519635, 0.05281791, 0.08889867, -0.049444642) * inp_0_2_2;
    result2 += V4(-0.05630107, 0.114900164, -0.06876118, -0.057796292) * inp_0_0_0;
    result2 += V4(0.07738073, -0.056377277, 0.11169019, -0.0021519049) * inp_0_1_0;
    result2 += V4(0.067000926, 0.0007431516, 0.03896566, 0.0029321956) * inp_0_2_0;
    result2 += V4(-0.17763703, 0.262567, 0.2867226, 0.14403883) * inp_0_0_1;
    result2 += V4(-0.2712401, -0.69163024, -0.28093606, -0.052557148) * inp_0_1_1;
    result2 += V4(0.12627542, 0.10824486, -0.08002123, -0.043495815) * inp_0_2_1;
    result2 += V4(0.04105979, 0.12727214, -0.08563523, 0.00024544334) * inp_0_0_2;
    result2 += V4(0.18862422, 0.05921509, 0.04386603, 0.14251444) * inp_0_1_2;
    result2 += V4(-0.14279638, 0.006909891, 0.028962156, -0.12739791) * inp_0_2_2;
    result3 += V4(0.05464215, -0.12293826, 0.22329485, -0.096095264) * inp_0_0_0;
    result3 += V4(-0.15575887, 0.15754005, 0.34345064, 0.17082149) * inp_0_1_0;
    result3 += V4(-0.012650923, -0.0055741654, 0.065984055, 0.058070667) * inp_0_2_0;
    result3 += V4(0.039286237, -0.04301616, 0.017875526, -0.19450596) * inp_0_0_1;
    result3 += V4(0.01574792, -0.12673883, -0.40090075, -0.0004232166) * inp_0_1_1;
    result3 += V4(0.048943825, 0.12653533, -0.17452517, 0.19635956) * inp_0_2_1;
    result3 += V4(-0.05800648, 0.1688038, -0.05067212, -0.08307335) * inp_0_0_2;
    result3 += V4(0.0921578, -0.096430406, -0.16173808, 0.018203113) * inp_0_1_2;
    result3 += V4(-0.023413146, -0.06837008, -0.015752146, 0.14836508) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.019132428, 0.01255377, 0.101864524, 0.018071953);
    V4 result1 = V4(0.035493232, -0.0016578829, -0.005522787, 0.017314114);
    V4 result2 = V4(0.010853644, 0.035166156, 0.006571057, 0.013875039);
    V4 result3 = V4(0.014921696, 0.0067043845, 0.0049709994, -0.017127845);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.079007454, 0.40818453, -0.011287986, -0.012536121, 0.07572691, 0.041350354, 0.05814134, -0.0040052766, -0.28909615, 0.25100565, -0.08048318, -0.068678185, 0.0028010001, -0.05837673, -0.12524453, 0.03126325) * inp_0_0_0;
    result0 += M4(-0.2675466, 0.16996907, 0.0090861, 0.03417426, 0.5986274, 0.24457657, 0.0059957607, 0.102419145, -0.5949136, -0.44608876, -0.060475484, -0.13395987, -0.34312424, 0.09077658, 0.037845142, 0.10843414) * inp_0_1_0;
    result0 += M4(0.31829122, 0.0019456435, 0.02699585, -0.0046121357, 0.14262186, -0.19321053, 0.2055933, -0.122886956, -0.2714007, 0.082136326, -0.08342426, 0.047138702, -0.0754936, -0.015847692, -0.090666406, -0.053728323) * inp_0_2_0;
    result0 += M4(-0.19236264, -0.1653687, -0.012653966, -0.1399281, -0.25708938, -0.18892108, 0.19686931, -0.1365243, 0.21728003, 0.14110643, 0.008695832, -0.014546528, 0.03733642, 0.0822848, -0.017711591, 0.030368498) * inp_0_0_1;
    result0 += M4(-0.041953914, -0.16444623, -0.03755681, -0.11472598, -0.43372065, 0.22119947, 0.07544019, -0.05117305, -0.46417618, 0.57016844, 0.007401694, -0.35602367, 0.039464768, 0.035151508, 0.10271392, 0.1216215) * inp_0_1_1;
    result0 += M4(-0.337607, 0.024389286, -0.06856435, -0.096483715, -0.39132354, -0.08749184, -0.052931104, -0.03431083, 0.19142531, 0.14150155, 0.06683714, -0.15779042, -0.044161968, 0.066641785, 0.05252235, 0.040558457) * inp_0_2_1;
    result0 += M4(0.038138706, 0.046473075, -0.005986598, 0.10605787, -0.037532702, -0.119446866, -0.06551769, 0.22129104, 0.2612925, -0.19655494, 0.044711906, -0.061920863, -0.04107729, -0.051767834, -0.108183905, -0.019114962) * inp_0_0_2;
    result0 += M4(0.040024944, 0.050520517, -0.053691924, 0.13625793, 0.09595522, 0.18820104, -0.048451614, 0.4626942, 0.27074513, -0.13554125, -0.19316809, 0.760464, 0.008500452, -0.035536766, -0.05412222, 0.024627352) * inp_0_1_2;
    result0 += M4(-0.14644669, -0.119900264, -0.0039430163, 0.053442646, 0.17832667, -0.26752907, -0.15344912, -0.08638515, 0.07758083, -0.056433104, 0.06848042, -0.065055385, 0.041990448, -0.0649023, 0.03902411, -0.07360683) * inp_0_2_2;
    result1 += M4(-0.119757906, -0.00090111914, 0.08359985, 0.16464093, -0.08384719, -0.051788244, 0.018748587, 0.044684447, 0.05874891, -0.00044829218, -0.01910282, 0.0104960315, 0.08244759, -0.06942608, -0.05921419, -0.112166464) * inp_0_0_0;
    result1 += M4(0.10683521, -0.031551033, 0.09218241, -0.0627153, -0.05966352, 0.11159602, 0.10381223, 0.048739053, -0.114107594, 0.041931856, 0.055059664, -0.004437256, 0.13876195, -0.053396337, -0.110084355, -0.046297587) * inp_0_1_0;
    result1 += M4(0.123237506, 0.037714634, 0.014625548, -0.08166096, -0.15660225, 0.28999853, 0.07105442, -0.04830042, 0.054056387, 0.10784867, -0.111797996, 0.10916515, -0.10928453, -0.03460677, -0.054254733, 0.13990815) * inp_0_2_0;
    result1 += M4(-0.062028646, 0.23552243, -0.10300786, 0.34773615, -0.06393478, -0.063280754, 0.11160293, 0.0870193, -0.117974356, 0.26828027, 0.050771963, 0.1327831, 0.06952715, -0.05935962, -0.03736491, -0.10294252) * inp_0_0_1;
    result1 += M4(0.11222188, -0.17619972, 0.24977572, -0.04135824, 0.20499815, -0.19016334, -0.055818643, -0.049239565, -0.18288656, 0.12903099, 0.8714943, -0.06789775, 0.17153713, 0.06742257, -0.10694815, -0.08220352) * inp_0_1_1;
    result1 += M4(0.122861736, -0.16553058, -0.01334931, -0.119796894, -0.04065156, -0.19469601, 0.23000781, -0.11172272, 0.3712014, -0.11575893, 0.1437726, 0.057134684, -0.20034218, 0.08822197, -0.025576495, 0.02291131) * inp_0_2_1;
    result1 += M4(-0.0010185066, -0.015556486, 0.039242364, -0.16324295, 0.1405833, -0.44830588, -0.121342145, 0.07615744, 0.11637926, 0.004891665, -0.10220131, 0.13541473, -0.009490363, -0.063418105, 0.11134161, -0.03237416) * inp_0_0_2;
    result1 += M4(0.09995853, -0.1190065, -0.13663442, -0.046266705, 0.18139929, -0.039283972, -0.52624166, -0.33041236, -0.047781006, -0.4051833, -0.59646505, -0.11879158, 0.08297079, 0.032246947, 0.079295054, 0.06080669) * inp_0_1_2;
    result1 += M4(0.20475504, -0.13709697, -0.03737461, -0.04831629, 0.04990949, 0.0061925263, -0.024720121, -0.011780244, 0.039492443, -0.13251974, -0.13181557, -0.13153517, -0.13481149, -0.11162416, 0.06766572, 0.08872735) * inp_0_2_2;
    result2 += M4(-0.25882867, -0.1022082, -0.4726243, -0.7950513, -0.007003302, -0.0009585801, 0.07219858, -0.41838115, -0.19938748, -0.18239892, 0.2722331, -0.300439, 0.010338998, -0.0671481, 0.026809521, 0.031098433) * inp_0_0_0;
    result2 += M4(0.049098223, 0.07876008, 0.056177013, -0.057185937, 0.032830615, 0.03030373, 0.113080606, -0.15042424, 0.04167346, 0.07899171, 0.047734223, -0.48539856, 0.05519736, 0.10757088, -0.049841404, -0.09751465) * inp_0_1_0;
    result2 += M4(0.059811935, 0.19667655, -0.14273286, -0.22369729, -0.0156119745, 0.052711215, 0.0858672, -0.5075403, -0.040046833, 0.21010745, -0.2912221, -0.22390534, -0.05381135, -0.16666083, -0.099375434, -0.026192563) * inp_0_2_0;
    result2 += M4(-0.100997165, -0.13308625, 0.5265876, -0.12571914, -0.052235894, -0.13916261, 0.41663566, -0.13633609, -0.07284284, -0.14538214, -0.4697406, 0.3562202, 0.06960663, 0.08970075, -0.035942823, 0.08568055) * inp_0_0_1;
    result2 += M4(-0.15787733, 0.03151035, 0.11499223, 0.13111109, -0.07469589, 0.09655969, 0.116954185, 0.1109517, -0.44642156, -0.16563077, 0.09805095, 0.14680283, 0.21373028, 0.086809054, 0.11222954, 0.06820979) * inp_0_1_1;
    result2 += M4(-0.21783075, 0.050458048, 0.22305527, -0.076687634, -0.05516231, 0.32383934, -0.069105394, 0.09717082, -0.09983567, 0.25312662, -0.0474901, 0.17446034, 0.089705266, -0.043105472, 0.082824335, 0.1453419) * inp_0_2_1;
    result2 += M4(-0.16770932, -0.011148581, -0.13099995, 0.09231499, 0.12305282, -0.09530849, -0.27563915, 0.40520725, 0.03377093, 0.05269409, 0.42387763, -0.06448764, -0.06555595, -0.015518415, -0.0052950736, -0.08168081) * inp_0_0_2;
    result2 += M4(0.0963755, -0.061967522, 0.036789816, 0.13261597, 0.46498454, 0.06124264, -0.20746237, 0.12128526, 0.45866284, -0.020920144, 0.042904656, 0.009911034, -0.1917893, 0.10629262, -0.023443857, -0.14315304) * inp_0_1_2;
    result2 += M4(0.07924392, 0.12791158, -0.16545565, -0.012966905, -0.07275195, 0.049347036, -0.0708037, -0.010724998, 0.057885136, -0.07609485, -0.14659649, -0.01343092, -0.07166424, -0.08587123, -0.03279748, -0.054901876) * inp_0_2_2;
    result3 += M4(0.17213187, 0.11376086, 0.23653078, -0.1016603, 0.07771198, -0.012497254, 0.25116032, 0.15646912, 0.019318175, -0.13874881, -0.10648485, -0.027720388, -0.030594083, -0.04841374, -0.009903806, 0.15066831) * inp_0_0_0;
    result3 += M4(-0.15884565, -0.090412475, -0.07454825, -0.04673515, -0.01600409, 0.044397842, 0.0017136945, 0.021544669, 0.13795096, -0.1337148, -0.3008656, 0.07346247, -0.010004904, 0.05737774, -0.010880675, -0.046868064) * inp_0_1_0;
    result3 += M4(-0.16063668, 0.036045197, 0.0073851026, 0.03277632, -0.046590738, -0.09868045, 0.14579195, 0.10075944, -0.19728717, -0.25934955, 0.08204915, 0.06278853, 0.005529561, 0.05427813, -0.01346314, -0.087637424) * inp_0_2_0;
    result3 += M4(0.19791675, 0.010551233, -0.2982492, 0.12807088, 0.13114686, -0.039918523, -0.02391624, 0.14532678, 0.123636454, -0.25062704, 0.118837684, -0.4302378, -0.142283, -0.11942125, 0.023075346, 0.099116705) * inp_0_0_1;
    result3 += M4(-0.09136759, -0.06522279, -0.048839636, -0.024627103, -0.303728, 0.052465636, -0.16308424, 0.1098271, 0.44478813, 0.017715497, 0.39698765, 0.2138025, -0.027661208, 0.095255494, -0.05596882, 0.020429406) * inp_0_1_1;
    result3 += M4(-0.052494213, 0.049579162, -0.112426534, 0.057678297, -0.33482882, -0.16395801, -0.2938953, 0.017699057, -0.35818666, -0.38527697, 0.0071522915, 0.030139696, 0.13072243, -0.11316333, -0.09688577, -0.023250775) * inp_0_2_1;
    result3 += M4(0.026032362, 0.024513613, -0.08699642, 0.029737042, 0.06552982, 0.4102771, 0.2691333, 0.037853062, -0.15094441, 0.028389687, 0.11143839, -0.038891386, -0.069599494, -0.052382685, -0.041140128, 0.042230576) * inp_0_0_2;
    result3 += M4(0.016869575, -0.27028197, 0.073061585, -0.0632777, 0.046994027, 0.15479356, -0.4720467, -0.099703975, 0.0046348553, 0.7576441, -0.25245437, 0.11497891, 0.014521094, 0.11247211, -0.0011082117, -0.0087339375) * inp_0_1_2;
    result3 += M4(-0.07072748, 0.035021465, -0.30383584, 0.038158607, 0.1447631, -0.033871863, -0.0016815363, -0.24583064, -0.065007605, 0.22309542, -0.2553857, 0.0035539982, 0.039454885, -0.013028412, -0.023272846, -0.0107719535) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.7651426, 0.016527355, -0.037393756, 0.07636009, -0.22679447, 0.11015738, 0.1788742, -0.021308938, -0.7363968, 0.38126737, -0.016416749, -0.12737635, -0.42808518, 0.8356519, 0.0111734625, 0.07166528) * inp_1_0_0;
    result0 += M4(-0.36920112, 0.07745465, 0.061017506, 0.0106371865, 0.64684397, -0.39411557, -0.013684742, -0.22057052, 0.7873794, -0.09627775, 0.013642692, 0.021573419, -0.25312114, -0.2707895, -0.17068526, 0.03232856) * inp_1_1_0;
    result0 += M4(0.22272417, 0.25236502, 0.007260084, 0.023525525, 0.17724362, -0.040894557, 0.040296923, 0.043279216, -0.3346598, -0.48166308, 0.04071011, 0.15644577, 0.047948457, -0.15975259, -0.049420517, 0.085334964) * inp_1_2_0;
    result0 += M4(-0.33400202, -0.08709564, 0.062431436, -0.056105193, -0.108582705, 0.057586376, -0.17162472, 0.034313887, -0.08004107, -0.3098943, -0.04407552, 0.23204231, -0.27438498, 0.48617852, 0.12116099, 0.24452093) * inp_1_0_1;
    result0 += M4(0.1692844, -0.37726393, 0.07588049, 0.09331662, -0.09752708, 0.24165724, 0.029015154, 0.064395964, 0.06434338, 0.33828172, 0.1339654, -0.046694726, 0.86133045, -0.6487241, -0.19198857, 0.1768571) * inp_1_1_1;
    result0 += M4(-0.17370401, 0.06646408, -0.12579064, -0.13445121, -0.22574383, -0.030671198, -0.13654834, 0.10918445, -0.14889234, 0.3112287, -0.058849268, -0.17609347, 0.38436604, 0.42738512, -0.043940913, 0.1451607) * inp_1_2_1;
    result0 += M4(0.064015016, 0.16041672, -0.0012469372, 0.13731986, 0.09514273, -0.12834649, -0.08592753, 0.05106471, 0.2841954, 0.12078545, -0.18801114, -0.25196946, 0.03172784, 0.19567771, -0.21328944, 0.10417909) * inp_1_0_2;
    result0 += M4(0.07332625, -0.07330527, 0.11691926, -0.14320703, 0.07048267, 0.017212559, -0.01007914, 0.15651529, -0.020882387, 0.11408779, 0.057771567, 0.2093027, -0.16725539, -0.13377072, 0.2197664, -0.70305395) * inp_1_1_2;
    result0 += M4(-0.120687164, 0.18130559, -0.1625079, -0.0019971319, 0.109281264, -0.031829916, -0.08268029, -0.13543415, 0.23777904, -0.5033827, 0.08074863, -0.04743122, -0.023288358, -0.47097108, 0.02654412, -0.14577165) * inp_1_2_2;
    result1 += M4(-0.29176652, -0.124042384, -0.0031724486, -0.03425726, 0.24018289, 0.37866303, 0.051121794, 0.1920061, 0.037518628, 0.069291666, 0.26169553, -0.11440354, 0.042022485, -0.10099842, -0.3063226, -0.17356212) * inp_1_0_0;
    result1 += M4(0.113286816, 0.044193685, -0.06863115, -0.03310854, -0.22529839, 0.06823516, 0.14179426, -0.09872885, 0.13809796, -0.09946269, 0.09144928, 0.2595325, 0.11713113, -0.22210525, -0.03304215, 0.0049365973) * inp_1_1_0;
    result1 += M4(0.05128958, 0.12376414, 0.111801565, -0.061484218, -0.04199398, -0.08148662, 0.1097773, -0.019067537, -0.19739482, 0.23720355, -0.18164848, 0.065532446, 0.08850463, -0.12219107, -0.060799412, 0.0016997178) * inp_1_2_0;
    result1 += M4(-0.015500963, -0.5360916, 0.054665495, -0.38902235, 0.12172561, 0.4008507, 0.012226992, 0.47662517, -0.0121641625, -0.17711475, -0.16273631, 0.028591242, -0.17524236, -0.39444295, -0.1189361, -0.5030205) * inp_1_0_1;
    result1 += M4(0.3606658, 0.04803154, -0.13943762, 0.16922803, -0.28431723, 0.03823609, -0.13542393, -0.29068294, 0.14980148, -0.16973534, -0.36226633, -0.21798071, 0.31506345, 0.044423044, -0.15490489, 0.12924933) * inp_1_1_1;
    result1 += M4(0.2643292, 0.06693207, 0.15138379, 0.0058445316, -0.1310567, 0.07804042, 0.00921688, -0.14201836, -0.18301976, -0.21856718, 0.14440116, 0.10801624, 0.21695426, 0.01894227, -0.20435056, -0.06340325) * inp_1_2_1;
    result1 += M4(-0.14919679, -0.49783006, -0.037746575, -0.21987885, 0.28196764, 0.44644594, -0.15353446, 0.9154021, -0.2896429, 0.009799281, 0.11689514, -0.03442202, 0.025135966, 0.023046149, 0.015968435, 0.48523337) * inp_1_0_2;
    result1 += M4(0.13466544, -0.017860815, 0.17236885, 0.21056278, -0.15056396, -0.03347064, -0.3618485, -0.18879321, 0.24101977, 0.24985641, 0.021613624, -0.33262855, -0.04091371, 0.62605774, 0.84890354, 0.14330935) * inp_1_1_2;
    result1 += M4(0.15456092, -0.07108883, -0.16809864, -0.09199774, -0.2248164, 0.11246705, -0.019293439, -9.946725e-05, -0.0226932, 0.09507382, 0.18610594, 0.04082938, -0.25312734, -0.033388346, 0.20083857, 0.15850678) * inp_1_2_2;
    result2 += M4(-0.071115404, 0.06419664, 0.6090684, -0.5098204, 0.21880296, 0.15722272, -0.2136159, 0.75684077, -0.22600013, -0.17606707, -0.82923037, -0.3282414, -0.18281949, 0.03670046, 0.6576911, -0.54009384) * inp_1_0_0;
    result2 += M4(-0.032064583, 0.123431295, 0.12877901, -0.08381606, -0.1094369, -0.25813532, 0.0075733573, -0.11501397, -0.13693184, 0.20625909, 0.19008811, 0.13274096, -0.16296077, 0.016152428, -0.11029819, -0.20842604) * inp_1_1_0;
    result2 += M4(-0.014349107, 0.016573241, 0.32284027, -0.045262385, 0.0050610006, 0.016433889, 0.10274311, 0.038085353, 0.1927914, -0.3043529, -0.11636541, 0.115280025, -0.1800684, 0.14818422, -0.14405808, 0.5340989) * inp_1_2_0;
    result2 += M4(-0.33994654, 0.004075557, -0.2390405, -0.35462135, 0.25402933, 0.06706698, -0.026960209, 0.4837009, 0.0057722917, -0.113295175, 1.2479937, -0.14280301, -0.46237448, -0.025150396, 0.7340978, 0.3459181) * inp_1_0_1;
    result2 += M4(-0.06641905, 0.22051601, -0.386036, -0.1935388, -0.026402649, -0.2613295, -0.0071263458, 0.069238596, 0.4772221, 0.09216403, 0.26167452, -0.023434505, 0.15006824, 0.091884464, -0.29323596, -0.454093) * inp_1_1_1;
    result2 += M4(-0.023944627, -0.07787995, -0.2050594, -0.03162737, 0.11330166, 0.13872856, 0.073299825, -0.061205313, 0.066687234, 0.1447272, 0.07934121, -0.08551556, -0.07888248, 0.05999581, -0.09318732, 0.28420642) * inp_1_2_1;
    result2 += M4(-0.04972167, -0.17772445, 0.10114282, -0.25449133, 0.29890305, -0.06411374, -0.06277403, 0.5059366, -0.22037925, -0.110060826, -0.91443783, 0.29804188, 0.7050649, -0.49867523, -0.8131195, -0.38025936) * inp_1_0_2;
    result2 += M4(0.20846362, 0.0011545006, -0.026413273, 0.15916003, 0.19238657, -0.17201664, -0.17914201, 0.1843233, -0.09254396, 0.030067679, 0.065553114, 0.100844145, -0.3602968, 0.33269098, 0.00017070242, 0.11140104) * inp_1_1_2;
    result2 += M4(0.012961569, -0.06234509, -0.049681693, 0.08438627, -0.056652047, -0.04953899, -0.008257987, -0.01524248, -0.12790425, 0.13676843, 0.12908497, -0.01515183, -0.2229191, -0.025438247, -0.032802105, 0.12283722) * inp_1_2_2;
    result3 += M4(0.0037637805, 0.20693298, 0.10384973, 0.23811114, 0.0032090696, -0.16767883, -0.121842995, -0.28710073, -0.020867921, 0.22794193, 0.36992085, 0.014141448, -0.096457124, -0.055704556, -0.5934749, 0.227728) * inp_1_0_0;
    result3 += M4(0.08370475, 0.13009523, -0.149592, 0.05566977, 0.12748623, -0.09701818, -0.03908914, 0.13097759, 0.113243446, 0.046311334, 0.4572452, -0.12897307, 0.06587035, 0.12557286, -0.04638367, -0.028064616) * inp_1_1_0;
    result3 += M4(-0.11727897, 0.00022416958, -0.11720075, 0.0707543, -0.17707552, -0.031694766, 0.08493201, 0.031241326, 0.2460406, -0.10123367, -0.1289462, 0.019540729, -0.14465635, -0.30137584, 0.5674171, -0.0058162287) * inp_1_2_0;
    result3 += M4(-0.004009346, 0.42966223, 0.0052751494, 0.28768003, 0.07382785, -0.3073846, 0.17722964, -0.7011239, 0.15218402, 0.07661936, -0.4459453, 0.5654864, -0.19249223, 0.056970757, -0.6300453, 0.47265685) * inp_1_0_1;
    result3 += M4(-0.39373854, -0.022328924, -0.31324893, -0.04674193, 0.57162726, 0.07652004, 0.11370667, 0.26985523, -0.56515414, 0.05663463, -0.20707223, -0.12424545, -0.6961964, -0.09127351, -0.45148733, -0.4399864) * inp_1_1_1;
    result3 += M4(0.095027596, 0.06395554, 0.1308707, 0.030856906, -0.16200277, -0.09621881, -0.025187101, 0.0751179, -0.033932023, -0.008326039, -0.06757945, 0.03042685, 0.3196313, -0.11117125, 0.48116145, -0.1754954) * inp_1_2_1;
    result3 += M4(0.026029661, 0.2653791, -0.013474271, -0.031689197, -0.08150717, -0.28964406, 0.025982615, -0.08945046, -0.07483108, 0.08214779, 0.1251261, -0.18388474, 0.06236965, 0.23001389, 0.18364567, 0.0648852) * inp_1_0_2;
    result3 += M4(-0.06616789, -0.08870394, -0.058256164, -0.11061456, 0.17768532, 0.068746835, -0.19153728, 0.077218406, 0.040474694, -0.06490178, 0.024347065, -0.14715165, 0.18655305, -0.036909673, 0.5476251, 0.028748743) * inp_1_1_2;
    result3 += M4(0.08559815, 0.049108457, 0.23065414, 0.09004924, -0.028893713, -0.030373668, -0.06385772, -0.0011923473, 0.11141377, -0.0898241, -0.02219053, -0.051630005, 0.10275614, 0.3457455, 0.33271533, -0.008850942) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.044588596, -0.0796007, -0.08372927, 0.04147854, -0.15629241, 0.31141362, 0.0016476396, -0.06389734, 0.36992574, 0.3661813, -0.016024707, -0.06704128, 0.82776934, 0.09814556, -0.009075929, 0.010875672) * inp_2_0_0;
    result0 += M4(-0.6314963, -0.14551136, -0.08747055, 0.027336858, -0.010846102, -0.42639387, -0.037871867, -0.057958223, 0.009163566, -0.3358276, 0.10635092, -0.009067858, -1.0727218, -0.15258206, 0.064686894, 0.04565126) * inp_2_1_0;
    result0 += M4(-0.20534588, 0.09358756, 0.13767874, 0.00677698, -0.20070857, 0.27763113, 0.008590807, -0.014361642, -0.65580535, -0.20657933, -0.20220022, 0.08659335, 0.3894377, 0.046517957, 0.06373157, 0.018193433) * inp_2_2_0;
    result0 += M4(0.06417464, 0.17394814, -0.032403618, -0.084127896, 0.16648376, -0.024574455, -0.104672216, -0.052565414, 0.041237723, -0.42019606, 0.13095085, -0.13709153, -0.19675241, -0.0032504695, 0.1994154, -0.06869895) * inp_2_0_1;
    result0 += M4(-0.16660145, 0.4075888, 0.076739855, -0.32387805, -0.0477293, 0.11138495, 0.22459783, -0.5686413, -0.14280152, 0.63263863, 0.116991065, -0.35744143, 0.23439643, 0.23550667, -0.2106682, -0.15234299) * inp_2_1_1;
    result0 += M4(-0.04596868, 0.13906558, 0.103897765, -0.034138784, 0.15739319, -0.0853567, -0.08485574, -0.10902461, -0.011904717, -0.1212113, -0.06971498, 0.095176555, -0.05638234, 0.13292032, -0.039534837, -0.0436922) * inp_2_2_1;
    result0 += M4(0.18291874, 0.010554638, -0.2513917, 0.14746964, -0.028810486, -0.04357543, -0.012487275, 0.04556785, -0.003863167, 0.057728704, 0.03441715, 0.03747858, -0.084051475, 0.10740771, 0.008676507, 0.17060712) * inp_2_0_2;
    result0 += M4(-0.3721914, 0.057552207, -0.22546682, 0.66904616, -0.20281541, 0.17787035, 0.11887141, 0.34961417, 0.054781713, 0.05832069, -0.18420528, 0.4446541, 0.08647871, -0.24916466, 0.11204006, -0.073335506) * inp_2_1_2;
    result0 += M4(0.092209816, -0.14174245, -0.0690051, -0.023826523, -0.08753262, 0.10486814, 0.077229775, 0.17470041, 0.19592048, -0.03879743, -0.12735526, 0.008828513, -0.03404363, -0.1320109, -0.034761317, 0.038752686) * inp_2_2_2;
    result1 += M4(-0.03942595, -0.13259771, -0.21830736, -0.10914821, 0.23123546, 0.3504, 0.0832826, 0.11077341, -0.11619116, 0.07950792, 0.07063582, 0.08976109, -0.10875913, -0.034856774, -0.20087828, 0.1104358) * inp_2_0_0;
    result1 += M4(-0.117772445, 0.21383844, 0.12556022, 0.06539129, 0.07430236, 0.031132594, 0.22337988, -0.068999, 0.09005079, -0.055769417, -0.07307613, -0.06606213, 0.11269045, 0.15561451, -0.06695204, -0.04478756) * inp_2_1_0;
    result1 += M4(0.050926615, -0.008764629, -0.08671802, 0.038990717, -0.07594194, 0.16200069, -0.050664514, -0.04982429, -0.17553124, -0.27525347, 0.11292749, 0.03947905, -0.09537713, -0.15024944, 0.13674098, -0.07297531) * inp_2_2_0;
    result1 += M4(0.06745825, 0.16686846, 0.02768107, -0.17301348, 0.16143925, 0.2539499, -0.0045544254, -0.09690915, -0.15657805, 0.06923322, 0.029908637, 0.40155238, 0.022931939, 0.0641963, 0.1178406, -0.34189233) * inp_2_0_1;
    result1 += M4(-0.13008076, 0.42491707, 0.7866201, -0.0282066, -0.11047332, -0.13126634, 0.83738863, -0.07892931, 0.17587242, 0.11719349, 0.27870178, -0.33735853, 0.15633062, -0.034340177, 0.36224288, 0.32509032) * inp_2_1_1;
    result1 += M4(0.34671724, -0.04922618, 0.02005681, 0.1095132, -0.3633228, -0.040631447, 0.20147857, -0.11175714, -0.25769788, 0.26821807, 0.2777139, 0.21455292, -0.13642524, -0.090306535, -0.10293642, 0.05634115) * inp_2_2_1;
    result1 += M4(0.21909377, -0.14541768, -0.1599684, 0.51791555, 0.15894958, 0.44700027, -0.19440132, 0.62679446, -0.13075364, -0.13620467, -0.11539261, -0.09809764, 0.08596345, -0.36663455, -0.07866228, -0.21300414) * inp_2_0_2;
    result1 += M4(-0.17389464, -0.23589717, -0.38788426, 0.042391498, 0.10215412, -0.17445153, -0.5185068, -0.1568825, 0.4909303, -0.009384209, -0.4807912, -0.5383337, 0.06603146, 0.3672239, -0.088542014, -0.20127372) * inp_2_1_2;
    result1 += M4(0.2880226, -0.23249209, 0.008246332, 0.113689825, -0.30348116, -0.124443635, -0.14003716, -0.013488496, -0.2030096, -0.36478433, -0.17274508, -0.04021057, -0.10839361, 0.07627174, 0.035209924, 0.10503228) * inp_2_2_2;
    result2 += M4(-0.12201929, -0.009832204, 0.3723795, -0.13380288, -0.008268724, 0.13490444, 0.07788654, -0.235147, -0.0008709087, -0.009049635, 0.38977405, 0.06599702, -0.00400351, 0.018575909, 0.86239105, -0.57540697) * inp_2_0_0;
    result2 += M4(0.14099841, -0.10934541, 0.2901743, -0.8597045, 0.013877964, -0.044181447, 0.0034986879, -0.28726032, 0.08907766, -0.25486052, -0.43403974, 0.4072597, 0.09407239, 0.06337431, -0.38342267, 0.20145066) * inp_2_1_0;
    result2 += M4(0.024485173, 0.013747873, -0.23563947, -0.12988986, -0.095572226, 0.015505196, -0.07445482, 0.03048281, -0.034483224, 0.15587422, -0.35198992, -0.6307126, 0.006023815, -0.024071913, -0.119372725, -0.13426848) * inp_2_2_0;
    result2 += M4(-0.016034154, -0.100106336, -0.21384996, 0.55354583, -0.14262995, 0.022833684, -0.21896085, 0.50726354, -0.16185036, 0.008478489, 0.4347232, -0.047722336, -0.10221193, -0.028613262, -0.11808342, -0.25152287) * inp_2_0_1;
    result2 += M4(-0.32526794, -0.21475498, 0.052703027, 0.005730065, -0.45045355, -0.55530393, -0.17676806, -0.08266826, -0.2828198, -0.6590086, 0.14338157, -0.076821916, -0.09225469, -0.016777912, 0.28748548, -0.18242061) * inp_2_1_1;
    result2 += M4(-0.19276331, -0.084728695, -0.001984739, -0.06901737, -0.007403714, 0.59375155, 0.21002524, 0.06251639, 0.1286212, 0.9969854, 0.3791242, -0.09426353, 0.11111233, 0.03470717, -0.09629106, 0.10064727) * inp_2_2_1;
    result2 += M4(0.19163695, -0.11971216, 0.24921471, 0.045610346, 0.25606886, 0.04288245, 0.10754103, 0.29327846, 0.0036941487, -0.20049277, -0.04118084, 0.36649638, 0.12992497, -0.06290242, -0.38815203, 0.5801658) * inp_2_0_2;
    result2 += M4(0.16880631, -0.006830449, -0.1365265, -0.0152029535, 0.27559775, -0.19369252, -0.09530364, 0.121994674, 0.46176633, 0.08371909, -0.52515996, 0.11159708, -0.01762508, -0.12572764, -0.0986261, 0.1634188) * inp_2_1_2;
    result2 += M4(-0.06730965, -0.066537514, -0.15972553, -0.1943228, 0.08524037, -0.08748652, -0.10806029, 0.10437154, -0.17197159, -0.06529897, -0.03798866, -0.06749874, -0.21894692, 0.11752809, -0.0074850814, 0.082898326) * inp_2_2_2;
    result3 += M4(0.023640165, -0.15716313, -0.6628599, -0.099737465, 0.0088928975, -0.15359843, -0.3230053, -0.30292928, 0.12272453, 0.016795097, 0.07713327, -0.110431604, 0.11058256, -0.044374745, -0.07161787, -0.072642304) * inp_2_0_0;
    result3 += M4(0.18357635, -0.08633393, -0.17036319, 0.018764775, 0.23455007, -0.06316252, -0.18468603, 0.22717977, 0.121172264, -0.11719729, 0.416504, -0.13591342, 0.05415453, 0.011075699, -0.13657148, -0.03009293) * inp_2_1_0;
    result3 += M4(-0.023894882, 0.09788998, 0.22248194, 0.033942875, -0.19904588, -0.06621626, -0.017787905, 0.09245713, -0.26468974, 0.09099959, -0.31939912, -0.08760212, -0.17923197, -0.09954242, -0.12686323, 0.0802856) * inp_2_2_0;
    result3 += M4(0.028922115, -0.12728286, -0.09062328, -0.832056, 0.10587209, -0.11570732, -0.11731713, -0.44576293, -0.048922233, -0.075341776, 0.32758227, -0.22633116, -0.12227234, 0.35330445, -0.11152387, 0.27149206) * inp_2_0_1;
    result3 += M4(0.44445756, 0.036702503, 0.1841867, 0.10172458, 0.44472307, -0.36965406, 0.3995839, 0.7080997, 0.44304723, 0.16622213, 0.57147795, 0.99639666, -0.18987711, 0.0062034954, 0.016842628, 0.11356715) * inp_2_1_1;
    result3 += M4(-0.061956324, -0.12147818, -0.098191425, 0.10377269, -0.7940078, 0.036780097, -0.2134368, -0.044046413, -0.9239904, 0.24857384, 0.023448788, 0.018505016, -0.2962395, 0.25723052, 0.110682614, -0.067153215) * inp_2_2_1;
    result3 += M4(-0.021292005, -0.15896034, 0.11115108, -0.21926518, 0.049340416, -0.28722924, 0.017535655, -0.19437295, 0.049396653, 0.109125026, 0.016989164, -0.081309915, 0.12474159, 0.042420078, 0.32311547, -0.1517566) * inp_2_0_2;
    result3 += M4(0.1338809, 0.33883172, -0.018786428, 0.14364283, 0.18909216, 0.32024074, -0.22964966, 0.2548097, 0.120354526, 0.42479137, -0.5895485, -0.25392115, 0.23641504, 0.14157403, -0.15757026, -0.088359214) * inp_2_1_2;
    result3 += M4(0.068001, 0.11601308, -0.11522845, -0.10332049, -0.19827446, -0.14609258, -0.17155448, 0.058528837, 0.35539582, -0.18166249, -0.3535831, 0.010279795, 0.06947546, -0.352079, 0.25942668, 0.15103719) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.33273223, 0.09454613, 0.07995356, -0.030264044, 0.6083847, -0.63222647, 0.080231875, 0.093296036, 0.09349062, 0.0069759204, 0.051136263, -0.0011008931, 0.008481091, 0.16285658, -0.032575745, -0.0074825115) * inp_3_0_0;
    result0 += M4(-0.28373373, -0.2248837, -0.07285279, -0.004733568, -0.33746105, 0.46824646, 0.014921516, 0.0721694, 0.22522138, -0.10914466, -0.027388548, -0.03577806, 0.07007488, -0.11084355, 0.017650904, -0.010659705) * inp_3_1_0;
    result0 += M4(0.22483589, 0.091599315, -0.05244779, 0.006821634, 0.3961405, -0.14767122, 0.24136823, -0.25587353, -0.08044742, 0.058111146, -0.021074703, 0.022145357, 0.29092348, -0.050202865, 0.058326554, -0.0023858733) * inp_3_2_0;
    result0 += M4(0.007323157, 0.18194517, 0.025071774, -0.0067764902, 0.15481627, -0.18946008, -0.058348358, -0.1136664, -0.26136282, -0.027588153, 0.008061429, -0.030030616, 0.0031928, -0.03231629, -0.05820482, -0.056985777) * inp_3_0_1;
    result0 += M4(0.19859408, -0.002371937, 0.01435271, 0.000110322915, -0.44295323, 0.39097598, 0.097719, 0.078038655, -0.4434457, 0.3399955, 0.07713186, 0.010933997, -0.2345089, 0.051729854, 0.05429841, 0.076527864) * inp_3_1_1;
    result0 += M4(0.095847555, 0.08283759, -0.13229851, 0.053737648, -0.36145675, -0.19803943, -0.087904446, -0.103375666, 0.016945465, 0.062404603, -0.019377159, 0.12649235, -0.1622464, 0.103939936, 0.0622015, -0.017355168) * inp_3_2_1;
    result0 += M4(-0.13506801, 0.06334625, 0.0015232423, 0.026493004, -0.100212984, 0.085999385, 0.06473801, 0.0028802643, -0.0973593, -0.1836905, -0.10703139, 0.28181234, -0.069409356, 0.10374906, 0.0026782528, 0.11127128) * inp_3_0_2;
    result0 += M4(0.01592628, -0.07574631, 0.056708798, -0.57207835, 0.07595701, 0.13465814, -0.013316554, 0.30361047, 0.30630243, 0.005473803, -0.13267457, 1.3618337, -0.028395131, 0.069243014, -0.042548526, 0.3618742) * inp_3_1_2;
    result0 += M4(-0.04871055, 0.04623569, -0.041391876, -0.12531571, 0.048966866, 0.029034568, -0.05728153, -0.06675036, -0.22216445, 0.00039132917, -0.029372994, 0.25027746, -0.08086061, 0.020438459, -0.15361339, 0.19348143) * inp_3_2_2;
    result1 += M4(0.08298438, -0.009467188, 0.039972566, 0.04524679, -0.048413996, -0.07657397, 0.023385206, 0.07981802, -0.098361365, 0.14916909, 0.0748385, 0.08002634, 0.03629841, 0.052093253, 0.04754591, 0.0030260724) * inp_3_0_0;
    result1 += M4(-0.1490021, -0.0847866, -0.10215685, -0.01140409, 0.073330246, 0.1328343, 0.07446628, 0.120475546, 0.059381012, -0.19631548, -0.08369921, -0.034651063, -0.27171504, -0.027087694, -0.0058489847, 0.04338476) * inp_3_1_0;
    result1 += M4(-0.14686759, -0.094589375, 0.025174322, -0.014025744, -0.2100948, 0.13632509, 0.17920254, -0.14574392, 0.07694397, -0.0816454, -0.0022839617, -0.03538398, 0.20276259, -0.03476579, -0.05449243, -0.0618314) * inp_3_2_0;
    result1 += M4(-0.006295453, 0.047900047, -0.026253998, 0.015369326, 0.26669127, -0.04138775, 0.20450082, -0.30345774, -0.27678546, 0.13215622, -0.015037941, 0.26794973, 0.17964776, 0.41462657, 0.0055354163, 0.44050133) * inp_3_0_1;
    result1 += M4(0.0074442923, -0.010455422, 0.040255, 0.06725872, -0.10984524, -0.031162882, -0.004797924, 0.18151878, 0.02335214, -0.019844735, -0.12176708, -0.18398216, -0.3499109, 0.021824945, -0.012205853, 0.050573587) * inp_3_1_1;
    result1 += M4(-0.03919909, -0.015515117, 0.017146293, -0.031850956, -0.122723065, -0.31624544, 0.079754084, -0.109180756, 0.05159701, -0.030138938, 0.03131261, -0.09221927, 0.46080276, -0.0053248648, 0.060252547, 0.018174937) * inp_3_2_1;
    result1 += M4(0.21408038, 0.27633402, 0.0035431548, -0.044753887, 0.011593967, 0.26734492, -0.21229045, 0.41443765, 0.05827381, -0.83348155, -0.21847177, 0.2540037, 0.14050835, 0.11524064, -0.10480922, 0.39920768) * inp_3_0_2;
    result1 += M4(-0.10003875, 0.27724513, 0.4479894, 0.12447654, -0.18997428, -0.12334989, -0.38165906, -0.31359634, 0.5870894, -0.5956689, -0.9745383, -0.20309189, -0.30536404, -0.15746649, -0.12875235, -0.0377017) * inp_3_1_2;
    result1 += M4(-0.3364209, 0.04059398, 0.09142049, -0.035735458, 0.05890847, 0.10404623, -0.041644145, 0.06721563, 0.10194439, -0.28953344, -0.2158102, -0.06354012, 0.24218427, -0.18063006, -0.085278355, -0.026083296) * inp_3_2_2;
    result2 += M4(0.06567621, 0.08356537, 0.3388913, 0.17241286, 0.15674552, 0.19227523, 0.5220872, 0.20463552, 0.04070237, 0.008904802, -0.19767614, 0.30485567, -0.011234269, 0.03827945, -0.00090391055, 0.38722348) * inp_3_0_0;
    result2 += M4(0.071208775, -0.14533575, -0.07543586, -0.23370859, -0.13026935, 0.0003495579, 0.23360588, -0.3943456, -0.07938347, -0.06437198, 0.061379194, 0.1091244, -0.0022418727, -0.17748219, -0.010577589, 0.006245136) * inp_3_1_0;
    result2 += M4(0.060944647, 0.3434851, 0.15366296, 0.18903156, 0.013509957, -0.1471481, 0.1604128, -0.3575222, 0.01910836, 0.13783653, 0.02335696, -0.035840146, 0.109876245, 0.0978307, 0.014869474, -0.15317373) * inp_3_2_0;
    result2 += M4(-0.0032990526, 0.015488217, -0.33300743, -0.020422354, 0.044040754, 0.21792023, -0.7284985, 0.11441966, 0.07660348, -0.124146365, 0.05333959, -0.048388842, 0.025187211, 0.10691197, -0.020644512, -0.03834818) * inp_3_0_1;
    result2 += M4(-0.12763269, -0.17240416, -0.26575592, -0.43842503, 0.21092549, -0.30537674, 0.08463292, 0.16671145, -0.11418092, 0.0772051, -0.020369185, 0.036345057, 0.06007952, -0.3419462, 0.011464466, 0.08852021) * inp_3_1_1;
    result2 += M4(-0.08206247, 0.023532882, 0.042442806, -0.05564065, -0.109543346, -0.039176155, -0.35740092, 0.19647805, 0.1316391, 0.21089597, 0.13359274, -0.22667925, -0.13971953, -0.15014367, -0.110754445, 0.032503672) * inp_3_2_1;
    result2 += M4(0.012206171, 0.009457929, -0.18057221, 0.28927717, 0.007589529, 0.11483905, 0.42651245, 0.44420508, 0.12303296, -0.08824923, 0.19002219, -0.11883836, 0.11551027, -0.014620582, 0.1294984, 0.06653889) * inp_3_0_2;
    result2 += M4(-0.3943371, -0.109624565, -0.015445775, 0.18454373, 0.23973064, -0.07658658, -0.61779034, -0.13965155, 0.64115214, 0.15342297, 0.019712415, 0.055950895, 0.16106148, -0.1529105, 0.16381851, -0.005882809) * inp_3_1_2;
    result2 += M4(-0.40234166, -0.07220998, 0.09978505, 0.13621043, -0.07791795, 0.0867927, 0.3477272, -0.10619353, 0.22941072, -0.10920782, -0.16141373, -0.0363689, 0.1341956, 0.17707299, -0.024225859, -0.051176663) * inp_3_2_2;
    result3 += M4(-0.03182545, -0.07636811, -0.2041197, -0.010791901, -0.099092394, -0.17113759, 0.21645047, 0.18777281, 0.024158668, -0.009275619, 0.054637436, -0.105692185, -0.016728673, -0.04933872, -0.050827038, -0.10974027) * inp_3_0_0;
    result3 += M4(0.08459626, -0.079154745, -0.0024293289, 0.08994476, -0.062174696, -0.065987565, -0.31344056, 0.093968466, -0.03756161, 0.08309818, 0.15381832, 0.07397319, 0.18457481, 0.0040524076, -0.106928356, 0.0058834474) * inp_3_1_0;
    result3 += M4(-0.19168267, 0.04333747, -0.024547642, -0.03852435, -0.09534921, 0.09285349, -0.15542464, 0.25750074, -0.05186724, -0.030976307, -0.083857246, -0.02389413, 0.08424111, 0.0416008, -0.06118756, 0.0066435435) * inp_3_2_0;
    result3 += M4(-0.027661566, 0.21672337, 0.23771651, 0.0024143406, -0.008820465, 0.18833198, 0.20873404, -0.3615667, 0.12825966, -0.082497686, 0.01459539, -0.21224378, 0.093440816, -0.07906246, 0.050944604, -0.34578857) * inp_3_0_1;
    result3 += M4(0.17568806, -0.019644594, -0.053738102, 0.20257515, 0.5476241, 0.056154605, 0.086240344, -0.11562469, 0.10445986, 0.13681392, 0.24692263, 0.19543476, 0.117360376, 0.00796949, -0.032333184, -0.5742066) * inp_3_1_1;
    result3 += M4(-0.13000686, 0.12738045, 0.25607362, 0.057132676, -0.08824018, -0.01744257, 0.006697237, 0.02709567, -0.34147492, 0.036649663, -0.2968176, 0.15632136, 0.16747782, 0.08609965, 0.24349104, 0.0026308452) * inp_3_2_1;
    result3 += M4(0.04843017, -0.21846424, -0.13596527, -0.13604456, -0.0062888325, -0.35441157, 0.17334644, -0.16483533, 0.0051321248, 0.32139596, -0.20370816, -0.045265466, 0.1015758, -0.1356573, -0.14279643, -0.14469771) * inp_3_0_2;
    result3 += M4(0.051369954, -0.5836535, 0.2340759, -0.14728944, -0.10530267, 0.10687107, -0.427132, 0.10777029, 0.12796186, 0.5468069, -0.3865926, 0.11568255, 0.105648085, 0.076917484, 0.016768316, -0.024762036) * inp_3_1_2;
    result3 += M4(-0.1484276, -0.17572491, 0.18438935, 0.089991644, -0.014819302, -0.07475682, 0.22821592, 0.018329967, -0.17954971, 0.104089096, -0.24183628, -0.010338403, -0.02505742, 0.16068792, -0.07421385, 0.061554663) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.039242983, -0.008997265, 0.016398218, 0.033048287);
    V4 result1 = V4(0.021945195, 0.06409249, -0.011252141, 0.05087018);
    V4 result2 = V4(0.032062054, 0.055188462, 0.01535237, 0.024478836);
    V4 result3 = V4(-0.01989919, -0.02303074, 0.034919314, 0.017494015);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.023917926, 0.13069655, -0.047266696, 0.004215769, 0.030646412, 0.016524464, -0.015760796, -0.03754935, -0.08177104, 0.4065868, -0.079444215, -0.07598269, -0.049648367, -0.10259838, 0.010872449, -0.06843203) * inp_0_0_0;
    result0 += M4(-0.054170594, -0.17732102, 0.034397658, 0.028712057, -0.045623843, -0.030319227, -0.07571139, -0.01245634, 0.19369526, -0.20922428, -0.0091855135, -0.0836742, -0.17751157, 0.41825184, 0.050278056, 0.18957849) * inp_0_1_0;
    result0 += M4(0.09202481, 0.12058526, 0.05971855, 0.0012052939, -0.11087573, 0.10349731, -0.037719987, -0.033471625, 0.023870477, -0.03666922, -0.05468431, 0.053185202, 0.029233566, 0.05325439, 0.109796464, -0.014253842) * inp_0_2_0;
    result0 += M4(0.0659841, -0.2243062, 0.14965418, -0.008207134, 0.060583137, -0.068544865, 0.025164455, 0.009573244, 0.13734248, 0.20559038, 0.07808059, 0.08659236, 0.0024257174, -0.10669919, -0.020543369, -0.06041933) * inp_0_0_1;
    result0 += M4(-0.13512188, 0.3819695, -0.25797293, -0.089282945, -0.030432856, -0.015403147, 0.010785974, 0.050523702, -0.054260686, -0.082746126, -0.025341224, 0.10486982, -0.6058926, 0.051632386, -0.260323, -0.023838589) * inp_0_1_1;
    result0 += M4(-0.03457283, -0.121816, 0.08377152, 0.08472494, 0.0076208557, 0.26094282, -0.0074685337, 0.063399896, -0.15408994, -0.12722382, 0.009918256, -0.069727026, -0.5773029, 0.04398195, 0.08987178, 0.086548835) * inp_0_2_1;
    result0 += M4(0.06947481, -0.055804167, 0.0011253906, -0.03776688, 0.024365805, 0.01215035, 0.046300698, 0.013473621, 0.028911779, 0.11402482, -0.029621065, -0.1427686, 0.02506263, -0.26498348, 0.07270105, -0.043155827) * inp_0_0_2;
    result0 += M4(0.52770954, -0.25669, 0.39967066, 0.4245501, 0.07515211, 0.13679358, 0.10129561, -0.0039100973, -0.30006862, -0.108942054, -0.18032825, -0.11886265, 0.035303213, 0.041178666, 0.032764766, 0.0012978531) * inp_0_1_2;
    result0 += M4(-0.44531968, 0.062298864, -0.2759478, -0.12281738, 0.051291924, 0.05120584, -0.0044849096, -0.02195708, 0.17375505, 0.027622184, 0.07788114, 0.05912803, -0.32033178, 0.06159211, 0.011387947, -0.016947731) * inp_0_2_2;
    result1 += M4(0.11101181, -0.037428103, 0.0065215724, 0.024057053, 0.03796873, 0.20739302, 0.054753102, -0.00978334, -0.16764729, -0.08504598, 0.010218012, -0.05219059, -0.35929343, -0.1716136, 0.008931845, 0.35292476) * inp_0_0_0;
    result1 += M4(-0.09350373, -0.11739921, 0.045995787, -0.04632026, -0.015047072, 0.0862164, 0.16871728, 0.13373145, 0.20572345, -0.20974475, 0.15428028, -0.029048622, -1.2680099, -0.47324866, 0.0716073, -0.10294994) * inp_0_1_0;
    result1 += M4(0.037084308, 0.17297852, -0.055698086, 0.08866754, 0.15542565, -0.063799806, -0.024566108, 0.14466012, -0.056168962, 0.32660538, -0.052708823, 0.26423293, -0.11571317, -0.27727896, -0.25226521, 0.07271596) * inp_0_2_0;
    result1 += M4(-0.13929254, -0.039677393, -0.14091934, 0.16592398, 0.15430614, 0.27683505, 0.0641971, 0.04189968, 0.038925514, -0.21691966, 0.11715127, -0.0763181, -0.16942108, -0.053169493, -0.059850413, 0.054190163) * inp_0_0_1;
    result1 += M4(-0.047681656, 0.13866808, 0.44633982, -0.16713631, 0.13925941, 0.18570238, 0.18072969, -0.0071948613, -0.0030092492, -0.07355043, -0.5862218, -0.62351006, -0.44014966, -0.37109873, 0.18988763, 0.4417267) * inp_0_1_1;
    result1 += M4(0.21137474, -0.09692264, -0.2846214, 0.09448295, 0.16672128, 0.39196232, 0.08778513, -0.016617987, 0.054051973, 0.4225981, 0.24802434, 0.34855178, -0.17164451, -0.27630726, 0.08466376, 0.004489261) * inp_0_2_1;
    result1 += M4(0.04673991, -0.34842935, 0.30486697, 0.31361023, 0.14049596, 0.2166807, 0.10257207, 0.048475042, -0.1254905, -0.051507838, -0.0478963, -0.00847441, -0.06011396, -0.010074985, -0.07221877, 0.0100590205) * inp_0_0_2;
    result1 += M4(-0.22687028, 0.26075587, -0.86227864, -1.1239979, 0.075102784, 0.007547615, 0.09121432, 0.10482793, 0.20037088, -0.15744668, 0.08582396, -0.08920339, -0.19355689, -0.06825843, -0.00507903, -0.34254497) * inp_0_1_2;
    result1 += M4(-0.30627632, 0.8941658, 0.35827294, 0.22505204, 0.1292118, 0.27301943, 0.12277917, 0.025623959, 0.030878339, -0.13596563, 0.083799325, 0.020690694, 0.12192747, -0.14401218, 0.02394764, 0.124626786) * inp_0_2_2;
    result2 += M4(-0.0062716953, -0.048196036, -0.060283236, -0.08784265, 0.01564486, -0.05692423, 0.117020786, 0.16196577, -0.14203092, 0.07365355, -0.17271546, 0.03840272, 0.11074542, 0.16940972, -0.08438475, -0.34747407) * inp_0_0_0;
    result2 += M4(0.030853098, 0.025856473, 0.0009028141, 0.0042389813, -0.052927185, 0.015456792, 0.21586034, -0.025343569, 0.08627885, -0.030959086, 0.04805935, 0.024998993, 0.04844935, 0.07199726, -0.20689951, -0.10493249) * inp_0_1_0;
    result2 += M4(0.050615124, -0.012950695, 0.08386722, 0.054787498, -0.20247564, -0.02623578, 0.07211211, -0.0126239285, 0.08354098, -0.16579534, -0.11058207, 0.05897844, 0.14177072, 0.078489356, -0.02010317, -0.2282729) * inp_0_2_0;
    result2 += M4(0.24619469, 0.12754795, 0.01717429, 0.045862593, 0.010535665, -0.0015811294, 0.03159167, 0.13449518, -0.15654287, -0.12156207, -0.22294146, 0.026246592, 0.16589928, 0.10023466, -0.35889912, -0.123519905) * inp_0_0_1;
    result2 += M4(0.056750134, -0.31008658, 0.13485934, -0.05695625, -0.113479584, 0.09560407, -0.083099425, 0.15382214, 0.019919913, -0.1791406, -0.38598785, -0.19885777, 0.1345739, -0.3126788, -2.292152, -0.30708018) * inp_0_1_1;
    result2 += M4(-0.28210306, 0.10409385, -0.08653361, -0.010318628, -0.0053044893, -0.16234146, 0.13008499, 0.058523994, -0.11043476, 0.2754725, -0.25440422, 0.023042092, 0.18747482, 0.08592786, 0.2208999, -0.2894934) * inp_0_2_1;
    result2 += M4(-0.13234681, -0.18967183, -0.1510715, -0.38609716, -0.08281889, -0.13453615, 0.2085856, 0.25365263, 0.30583966, 0.061189722, -0.10142834, 0.2252334, -0.2048713, 0.07615664, -0.022265969, -0.014389278) * inp_0_0_2;
    result2 += M4(0.38693032, 1.3520504, -0.20791514, -0.43558437, -0.16533217, -0.05359191, -0.08483633, 0.40262353, -0.1142207, -0.34156498, 1.0827396, -0.28557572, 0.098213255, -0.18712392, -0.27234343, -0.38371897) * inp_0_1_2;
    result2 += M4(0.074393734, -0.5755933, -0.3301366, -0.21730639, 0.057739843, -0.19395801, 0.2015134, 0.2609849, -0.01852136, 0.12753916, 0.20848368, 0.06662591, 0.07718527, 0.039716944, -0.093971744, -0.18768294) * inp_0_2_2;
    result3 += M4(0.016080061, 0.044915818, -0.011669539, 0.04813994, 0.026316661, 0.014163947, -0.0092988815, 0.021136422, -0.053637493, -0.016235268, -0.07764887, 0.05784117, 0.0015942104, 0.029192613, -0.08578358, -0.02163065) * inp_0_0_0;
    result3 += M4(0.015171114, -0.03437999, 0.04314621, -0.048361097, -0.015489659, -0.06124862, -0.040059965, 0.18768154, 0.060939733, 0.045435414, -0.030654842, -0.020412037, 0.08605474, -0.22135854, 0.0153040355, -0.13727967) * inp_0_1_0;
    result3 += M4(-0.016807064, -0.08716116, -0.002797873, -0.0071170167, 0.028606825, -0.055133726, -0.00090726797, 0.07225531, -0.14783499, 0.11868987, 0.020071356, 0.04500309, 0.16881064, 0.11497154, 0.028609429, 0.10021664) * inp_0_2_0;
    result3 += M4(-0.029607529, 0.14243852, -0.09293842, -0.016120424, 0.023968628, -0.051846266, 0.020439046, 0.043083873, 0.04837968, 0.11442788, -0.019165877, -0.09287911, -0.09541173, 0.14891966, -0.030730534, -0.06999527) * inp_0_0_1;
    result3 += M4(0.28400105, -0.07655483, 0.09822889, 0.1460384, -0.03510999, -0.022673821, 0.02886093, 0.25844604, 0.18585421, 0.0075795436, 0.022067184, 0.025493616, -0.22006528, 0.3545872, 0.47442558, -0.18299736) * inp_0_1_1;
    result3 += M4(-0.23046234, 0.048459444, -0.028943058, -0.15779662, 0.05427643, 0.010723628, 0.0073631355, 0.15356651, 0.18182777, 0.010688887, -0.15674502, 0.10505141, -0.22209097, 0.23740092, 0.023023317, 0.18645354) * inp_0_2_1;
    result3 += M4(-0.19689904, -0.9134775, -0.053505853, -0.49616605, 0.027197203, -0.33209053, 0.035239942, 0.11628907, 0.007897366, -2.934861, -0.079741746, 0.062968165, -0.04983927, 0.21759605, 0.015352221, 0.15356411) * inp_0_0_2;
    result3 += M4(0.23263885, -0.7856674, 0.3360164, 1.0553367, 0.05111065, -0.8183346, 0.11419893, 0.21218857, -0.052396715, -3.021463, 0.011897262, -0.14414023, -0.028196523, 0.17783393, 0.021172471, -0.12563623) * inp_0_1_2;
    result3 += M4(0.25744554, -0.057228826, -0.27359527, 0.08558437, 0.083902694, -0.32276225, -0.045897465, 0.1405046, 0.017602041, -2.417169, 0.15784913, -0.12588502, -0.07867618, 0.3080943, -0.036617562, 0.11299439) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0040591764, 0.04005967, 0.00058982696, 0.036036134, -0.019446077, 0.010020793, 0.06093196, 0.005164588, 0.09954798, -0.39448148, -0.060166694, 0.011638395, -0.030292766, 0.045354374, 0.008368118, 0.010392991) * inp_1_0_0;
    result0 += M4(0.11448088, 0.049516104, -0.037725393, 0.0708218, -0.09364159, 0.44627076, -0.016440269, 0.039873168, -0.107451744, -0.4536931, -0.09748185, -0.0182066, -0.012515068, 0.17390944, -0.029217085, -0.09440182) * inp_1_1_0;
    result0 += M4(0.09427645, -0.06691926, -0.028693227, 0.02313766, -0.03917688, 0.11991085, 0.095241085, 0.043012667, 0.17074884, -0.05149341, 0.004178716, 0.07143705, 0.14038438, -0.0048953146, 0.070880726, 0.067083426) * inp_1_2_0;
    result0 += M4(-0.02027112, 0.003993772, 0.058888577, -0.038365223, -0.16901287, 0.0644955, -0.01869847, 0.03374369, 0.013988968, -0.29119706, 0.00080242864, 0.07935082, 0.17650872, 0.061128564, -0.037388597, -0.0288259) * inp_1_0_1;
    result0 += M4(0.20773514, 0.24083458, -0.0092759635, -0.16173652, -0.05763826, 0.055322465, 0.0009349847, 0.043259446, 0.27092305, 0.18160634, 0.74171597, 0.28238812, 0.034054276, -0.3724546, 0.06074287, 0.06832672) * inp_1_1_1;
    result0 += M4(-0.36655793, -0.023275983, -0.083939575, -0.080679074, -0.67585593, 0.032912493, 0.10808391, -0.0098223165, 0.4591951, -0.08421023, -0.04626028, -0.045811325, 0.4158746, -0.34671715, -0.06510783, -0.0123349) * inp_1_2_1;
    result0 += M4(-0.13597023, 0.00072249473, 0.02633268, -0.02633464, -0.016409457, 0.010576444, -0.0040659285, -0.047756687, 0.029760413, 0.00079481053, 0.056033842, 0.058619704, -0.06287724, -0.12470931, 0.03787322, 0.03114405) * inp_1_0_2;
    result0 += M4(-0.0997948, -0.06642765, 0.16941537, 0.09022266, -0.06276011, -0.013204112, -0.053340606, -0.026299905, 0.20719399, -0.0035648153, -0.056737963, 0.016044332, -0.024356455, -0.05473157, 0.04934891, 0.0070957793) * inp_1_1_2;
    result0 += M4(0.31529525, 0.067407645, 0.017137898, 0.058287654, -0.07440161, 0.120911375, -0.04848841, -0.013816496, -0.009706008, -0.13160801, -0.007445115, 0.0022536211, 0.11519938, -0.05694801, -0.023998974, 0.0067129647) * inp_1_2_2;
    result1 += M4(0.37506709, 0.17980665, -0.20455009, -0.09551786, 0.0498447, -0.010535182, -0.022081034, 0.13740838, 0.032714732, -0.11194339, -0.07621175, -0.26871702, 0.012183121, 0.004002615, -0.018686242, -0.10083027) * inp_1_0_0;
    result1 += M4(-0.057566345, -0.07170513, 0.0709958, -0.40370673, -0.01090129, 0.14124545, 0.13096221, 0.096367195, -0.30751172, -0.3750308, 0.14622049, 0.2069847, 0.12855606, -0.019401386, 0.056987558, -0.49821755) * inp_1_1_0;
    result1 += M4(0.11395786, 0.06346924, -0.025791865, -0.13178472, 0.2537761, -0.14821085, -0.19953142, 0.19543502, -0.076058276, -0.6590672, 0.12864272, -0.45970175, -0.22309613, -0.19366202, -0.15256938, 0.007881231) * inp_1_2_0;
    result1 += M4(0.025507363, 0.27201614, -0.07998818, 0.16235654, -0.015265637, -0.08400866, -0.035436008, 0.06512441, -0.3631796, 0.12862296, -0.024682807, 0.001731738, 0.10949193, -0.019699134, -0.06218273, -0.03562879) * inp_1_0_1;
    result1 += M4(0.19119711, 0.014577265, 0.14719734, -0.5757523, 0.16192354, -0.017830852, -0.22393155, 0.1956783, -0.46016133, -0.32782122, 0.36190182, -0.06337381, -0.1654996, 0.00921847, -0.030127605, 0.20366856) * inp_1_1_1;
    result1 += M4(-0.19345933, -0.122170344, -0.011944193, 0.46745378, -0.04793508, 0.16906933, 0.0788535, 0.8425433, -0.037115898, -0.03452554, -0.1912157, -0.64074236, 0.04241191, -0.39949372, -0.3871493, -0.10214518) * inp_1_2_1;
    result1 += M4(0.13124849, 0.08086188, -0.11558449, 0.1607521, 0.009434435, 0.0056640184, 0.0067215846, -0.0115964515, -0.04499865, 0.13027434, 0.03134263, -0.0076657496, 0.03858133, -0.0018022354, -0.010999191, -0.05553426) * inp_1_0_2;
    result1 += M4(-0.011371555, 0.019596681, 0.1134225, 0.3201801, 0.016258312, -0.14743112, -0.02715675, 0.3336074, 0.05344435, 0.032022495, -0.0012702703, -0.3095665, 0.044099923, 0.06703388, 0.021394825, -0.137479) * inp_1_1_2;
    result1 += M4(-0.0059207235, 0.11281821, 0.12483064, -0.24892262, 0.070237696, -0.3213471, -0.053926326, 0.36062214, -0.09269245, 0.12543184, -0.06239671, -0.2270787, 0.021009458, -0.11770127, -0.04930045, -0.37098056) * inp_1_2_2;
    result2 += M4(-0.08774369, -0.19092175, 0.36026764, 0.06005226, 0.115560144, -0.022496225, -0.0017946839, -0.13437438, 0.09613262, -0.05632238, -0.00011855425, 0.08281461, 0.10692965, -0.10454304, -0.0977194, 0.11785702) * inp_1_0_0;
    result2 += M4(-0.034853093, 0.068813145, 0.009421192, -0.028358074, 0.07972036, -0.06330879, -0.006932113, -0.00515439, -0.37832424, -0.0807093, 0.10165818, 0.06754189, 0.008289929, -0.15865491, -0.08108179, -0.03656242) * inp_1_1_0;
    result2 += M4(0.030555235, -0.1548268, 0.177225, -0.09254758, 0.07478086, 0.07974213, -0.023225699, 0.012420731, -0.050352108, 0.057429638, 0.043189563, 0.09927713, -0.20673274, -0.05984215, -0.2687426, -0.0023067705) * inp_1_2_0;
    result2 += M4(-0.13336378, -0.35553634, 0.513114, -0.058356125, 0.013201743, 0.08016963, -0.012899043, -0.16643271, -0.19526738, -0.05101958, 0.3959169, -0.24719554, -0.11051689, -0.1252954, 0.070799164, 0.1768162) * inp_1_0_1;
    result2 += M4(0.18072072, -0.26846132, -0.18105038, 0.2842049, 0.54939, 0.01315374, -0.55039984, -0.75939566, -0.083124995, 0.3900669, 0.20144717, 0.07633189, -0.18197916, -0.028016578, 0.41758308, 0.5410107) * inp_1_1_1;
    result2 += M4(-0.051111802, 0.06463308, -0.13302968, 0.06027652, 0.079265125, 0.066841684, 0.36261857, -0.34481883, -0.15646118, 0.08432093, -0.1631687, 0.03283203, 0.37787262, 0.13331342, -2.8830912, 0.32231504) * inp_1_2_1;
    result2 += M4(0.11020215, -0.11970974, 0.037491843, -0.13841574, 0.086282864, -0.004118619, -0.07200031, -0.1901376, -0.13747285, -0.001241457, -0.2165729, -0.124869004, 0.023457812, 0.02048261, 0.000107182685, 0.037003834) * inp_1_0_2;
    result2 += M4(0.08325285, 0.16755304, 0.3741668, 0.019850306, 0.041661043, 0.044082344, 0.14035133, -0.5575352, 0.0020038055, 0.14137742, -1.40331, 0.24704407, -0.13446058, -0.12558675, -0.20817938, 0.27145028) * inp_1_1_2;
    result2 += M4(-0.017224787, 0.08300154, -0.11383444, -0.023301657, 0.1396119, -0.06568378, -2.0226111, -0.38684106, -0.053315733, 0.024763327, 0.14117761, -0.020157514, -0.10653729, -0.09901544, 0.16841303, 0.28209868) * inp_1_2_2;
    result3 += M4(0.021163905, -0.06125016, -0.092467874, -0.20985074, 0.003501071, 0.006160299, 0.020737015, 0.007882967, -0.034227043, -0.013159495, 0.014788803, -0.07983657, -0.031981777, -0.09381134, -0.043230344, 0.00526351) * inp_1_0_0;
    result3 += M4(0.2151923, 0.08339156, 0.021558164, -0.090556525, 0.008330123, 0.060791448, 0.011442904, -0.04521579, -0.0016228029, 0.078820996, -0.033571158, -0.18115899, 0.0002769786, 0.30455726, 0.043903522, 0.06420663) * inp_1_1_0;
    result3 += M4(-0.38149562, 0.15590502, -0.0103481915, -0.06777655, -0.10177251, -0.0342294, 0.10862984, -0.024642479, -0.6746398, -0.06068704, 0.012651873, -0.21810035, -0.31973046, -0.18907936, -0.02366591, -0.116516985) * inp_1_2_0;
    result3 += M4(0.10986523, -0.5290976, 0.15775767, -0.14427163, 0.012718856, -0.20165564, 0.013903074, 0.028271504, -0.011090022, -0.6018284, 0.032360304, -0.0014550448, 0.035388622, 0.46162644, -0.030896494, -0.071161106) * inp_1_0_1;
    result3 += M4(0.5348606, 0.22054209, 0.17807752, -0.28258288, -0.011436387, 0.22299017, -0.0062045273, 0.066998325, -0.114111096, -0.8729958, -0.2915594, -0.07837409, 0.10136769, 0.39819062, -0.03609412, 0.05365875) * inp_1_1_1;
    result3 += M4(-0.10934516, -0.123636596, 0.034529287, 0.06583741, 0.004337589, -0.049678594, -0.017405907, 0.0006272335, -0.04146135, -0.84344006, 0.066080935, -0.17414379, -0.022002492, -0.94085974, -0.025664534, -0.18451078) * inp_1_2_1;
    result3 += M4(-0.041917942, 0.50258684, 0.048200596, -0.119202405, 0.0060789906, -0.46683732, 0.0049519744, 0.013763547, 0.019186256, 0.118557386, 0.093050405, -0.013795856, 0.0077309003, -0.26130077, 0.077505924, 0.04294031) * inp_1_0_2;
    result3 += M4(0.23811111, -1.1074467, 0.012068514, 0.14139012, -0.038872343, -0.8348867, 0.07296522, 0.0010156973, 0.033247296, 0.38843426, -0.014250312, -0.06769444, -0.011868421, -1.7538472, 0.06662167, 0.06103674) * inp_1_1_2;
    result3 += M4(0.13479407, -0.07018416, -0.052334398, -0.0087627685, -0.07123799, 0.2541578, -0.027795436, 0.048982672, 0.039713316, -1.674352, -0.032511313, -0.059709102, -0.050069682, -2.175421, 0.032541938, 0.072900884) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06882392, 0.10653184, 0.05211057, 0.088450946, -0.1597106, -0.09120489, 0.13065489, -0.08029199, -0.04722704, -0.072987765, -0.019519355, 0.006149246, 0.016437728, -0.08627492, -0.02180733, 0.030637622) * inp_2_0_0;
    result0 += M4(0.09200747, -0.17301627, 0.0026910913, 0.029977066, -0.2974344, 0.2556109, -0.14981158, -0.119806446, -0.020029824, -0.1305516, 0.036961008, 0.017119655, 0.0056134737, -0.114644654, 0.05269179, 0.0096237855) * inp_2_1_0;
    result0 += M4(-0.05838582, 0.18854167, -0.055194024, -0.041757256, -0.04601032, 0.019937877, 0.05175929, -0.02492203, 0.020271115, -0.056836784, 0.016108144, 0.04355612, 0.053203642, -0.11859013, -0.013089881, 0.025837427) * inp_2_2_0;
    result0 += M4(0.035303447, 0.24449204, 0.07177409, 0.06408428, 0.14194605, 0.10724987, -0.11581354, 0.58531594, -0.041454762, 0.018527988, 0.021569038, 0.022847021, 0.02432296, -0.1435061, -0.041398514, 0.040905) * inp_2_0_1;
    result0 += M4(0.58572346, -0.21748614, 0.20194069, 0.09558891, 0.18169926, -0.36151683, 0.21486267, 0.19994023, -0.10577826, 0.13271074, -0.028626006, 0.009782408, 0.031072596, -0.340926, 0.011451057, 0.032542165) * inp_2_1_1;
    result0 += M4(0.5475769, -0.011647686, -0.023544326, 0.040383548, 0.045585442, -0.04265255, -0.021978285, 0.042736907, 0.048969135, 0.20636426, 0.039036278, 0.03110492, 0.21397997, -0.2874902, -0.013203498, -0.027707601) * inp_2_2_1;
    result0 += M4(-0.042324375, 0.1983908, -0.08416913, 0.045947716, 0.1428245, 0.0011527443, 0.290664, 0.1480682, 0.06739726, 0.090310685, 0.05152273, 0.015814537, 0.056893054, -0.052957535, 0.07690657, 0.06765856) * inp_2_0_2;
    result0 += M4(-0.14822327, -0.108404696, 0.07186574, 0.014186409, -0.14792651, -0.13785335, 0.020987393, -0.02001247, 0.21615838, 0.075371176, 0.017215537, -0.016519908, 0.023615103, -0.17244646, 0.25130352, 0.11260927) * inp_2_1_2;
    result0 += M4(0.37198487, -0.061356504, -0.008783349, 0.022117598, -0.0016694736, 0.048029587, 0.040826056, -0.009669559, -0.059061743, 0.011387161, 0.030206483, 0.00023700373, 0.46504855, -0.052971825, 0.035380926, 0.03786611) * inp_2_2_2;
    result1 += M4(-0.010715752, -0.033816874, 0.060238212, -0.08685513, 0.16293246, -0.2681269, -0.039009254, 0.35843194, -0.019395687, 0.042524222, 0.07910758, -0.024635172, 0.037769116, 0.08884082, 0.010339595, -0.06478414) * inp_2_0_0;
    result1 += M4(-0.37482998, -0.39718822, 0.28678033, 0.11428161, -0.25098667, 0.50939244, 0.034273982, 0.3841189, 0.031030783, 0.1425737, 0.06486877, 0.0017672037, -0.058881883, -0.086774744, -0.032411247, 0.033373974) * inp_2_1_0;
    result1 += M4(-0.017534085, -0.08748352, 0.020526221, 0.20054966, 0.05372197, -0.12690221, -0.008280302, 0.2053625, 0.0750001, 0.24194369, 0.110585876, 0.07852855, -0.019707745, -0.26126915, 0.0024232748, -0.0708487) * inp_2_2_0;
    result1 += M4(0.15031558, -0.18557143, 0.041142736, -0.098392084, 0.11541042, 0.44044563, 0.30930215, -0.14054032, -0.07651456, 0.10228419, 0.07207482, 0.0093337195, -0.08209934, 0.058046762, 0.08096458, -0.092198886) * inp_2_0_1;
    result1 += M4(0.34724012, 0.73792917, -0.105630465, -0.4253419, -0.02881628, -0.89374864, 0.15437213, -1.1385114, 0.06967482, -0.025639372, 0.116098255, 0.07662906, -0.021324245, 0.12514248, -0.09134034, -0.18758126) * inp_2_1_1;
    result1 += M4(0.054358624, 0.30001512, -0.017436745, 0.16175692, 0.056837708, 0.08365885, -0.14138588, -0.26005074, -0.0673893, 0.3418102, 0.2596388, 0.1571123, -0.21524508, -0.0045944494, -0.0037949511, -0.44084448) * inp_2_2_1;
    result1 += M4(0.095929295, -0.119363606, 0.07803925, -0.079861075, -0.065414205, 0.20980616, 0.14658609, 0.6577946, -0.061220948, 0.15491505, 0.03646771, 0.22267866, -0.13202885, 0.18365067, 0.08235167, -0.1007652) * inp_2_0_2;
    result1 += M4(-0.026711663, 0.08707891, -0.080114655, 0.45721063, 0.17568548, 0.34592643, 0.06832609, -0.0662302, -0.041627944, 0.18537895, -0.01761161, 0.017851373, -0.12846333, 0.15244138, 0.14456919, -0.123812124) * inp_2_1_2;
    result1 += M4(-0.08854248, 0.099053316, -0.0082436185, -0.2158094, 0.00029631788, 0.04958484, 0.05295897, 0.0037235087, 0.10320039, 0.3214138, 0.06682556, 0.12073028, -0.21756655, 0.102009386, -0.18655248, -0.49308315) * inp_2_2_2;
    result2 += M4(0.171345, -0.0965888, -0.0013853707, 0.10929347, -0.0067134923, 0.099677324, 0.15712069, -0.007250842, 0.02186842, 0.0974262, 0.11726137, -0.10021762, -0.008000313, 0.00966194, 0.05821483, 0.07461134) * inp_2_0_0;
    result2 += M4(0.2079986, 0.23625995, 0.06127829, 0.018695403, 0.092989646, 0.031708665, 0.1361838, 0.012241086, 0.058035243, 0.09061176, 0.29003108, -0.02466728, -0.07572363, 0.021057878, 0.04237357, 0.05741854) * inp_2_1_0;
    result2 += M4(-0.25112313, 0.13619564, 0.040687677, 0.16208209, 0.104217544, 0.10724351, -0.07981372, 0.012946743, -0.11419492, 0.12086239, 0.22702838, -0.065890536, 0.03919627, 0.053991232, 0.010755639, 0.051821258) * inp_2_2_0;
    result2 += M4(0.055622704, -0.037231814, -0.080335476, -0.064250804, -0.2471381, -0.22188869, 0.3105962, 0.06282506, -0.009991029, 0.067954555, 0.11369282, -0.15669169, -0.14860575, 0.03173271, 0.041961864, 0.089331985) * inp_2_0_1;
    result2 += M4(-0.07242322, 0.21676603, -0.15212014, -0.22470841, -0.042341705, -0.0347366, 0.064012975, -0.16476867, -0.061580688, 0.18217681, 0.104265876, -0.10512076, -0.42969754, 0.16127191, 0.11458505, 0.02127838) * inp_2_1_1;
    result2 += M4(0.054931965, -0.06615102, -0.17973432, -0.03161254, -0.061475307, -0.04799726, -0.028021494, -0.08485579, -0.1252982, 0.105075255, 0.3015381, -0.09042573, -0.25465992, 0.19381632, 0.12863435, -0.018529767) * inp_2_2_1;
    result2 += M4(0.20905603, -0.041104637, 0.0910866, -0.054562446, -0.094780765, 0.07016011, 0.3115756, -0.0069372873, -0.17688401, 0.013027515, 0.09110219, -0.005754673, -0.18054323, 0.11836925, -0.03117486, 0.009677972) * inp_2_0_2;
    result2 += M4(-0.10444845, 0.19880758, 0.27361834, -0.36764264, -0.30216798, 0.09068733, -0.40524006, -0.1729894, -0.033526435, 0.09132811, 0.12243894, -0.103830345, -0.5634028, 0.20082569, 0.14812592, 0.10154982) * inp_2_1_2;
    result2 += M4(-0.046459045, -0.038207535, -0.012159568, 0.10877847, 0.019565286, -0.036410093, 0.2146516, 0.12122314, 0.14385293, 0.12976715, -0.1370742, -0.06438175, -0.415304, 0.10403138, -0.01700525, 0.0745512) * inp_2_2_2;
    result3 += M4(-0.06571884, -0.008478845, 0.081733674, 0.09417172, -0.0014468981, -0.036338553, 0.03212291, 0.09849231, 0.030147111, -0.015288346, 0.0071813907, 0.0011186764, 0.017709387, -0.020942695, -0.006877025, -0.046241187) * inp_2_0_0;
    result3 += M4(-0.25977442, 0.067664005, -0.019089729, 0.05744047, -0.051323224, 0.13107109, -0.02993628, 0.23139004, 0.038768414, -0.023783674, 0.05440792, -0.09576967, 0.004356834, 0.004599146, 0.00992143, 0.002660702) * inp_2_1_0;
    result3 += M4(-0.07851068, -0.023195317, -0.057109542, -0.10023023, 0.05957883, -0.0730036, 0.05625921, -0.029547686, 0.10347599, -0.022448374, 0.038609315, -0.0101102535, 0.0042556445, 0.06669557, -0.0032069902, -0.013557202) * inp_2_2_0;
    result3 += M4(0.064943604, 0.2803217, 0.055912513, 0.10704106, -0.12021883, 0.031512693, 0.11781784, 0.0839349, -0.042255305, 0.029427752, 0.011923434, -0.0010712192, -0.01092981, 0.02359429, 0.006755943, -0.034142498) * inp_2_0_1;
    result3 += M4(0.33028498, 0.30099857, 0.3414448, 0.065649696, 0.2285966, 0.23205413, 0.13525873, -0.06156523, -0.030082919, -0.0069962423, -0.021396214, -0.07236939, -0.039201885, -0.08478484, 0.03631466, -0.0070146355) * inp_2_1_1;
    result3 += M4(0.1785123, 0.24825114, 0.014304762, -0.08875206, -0.03523517, 0.068414606, 0.00468253, 0.013832137, 0.05509962, -0.08497555, 0.073384255, 0.061307464, 0.03668648, -0.0027948874, -0.050610725, 0.020310817) * inp_2_2_1;
    result3 += M4(0.038338553, 0.02040225, -0.055770285, -0.06179551, -0.08715644, -0.08985776, -0.026367946, 0.021988237, 0.008961725, 0.4265527, 0.02055675, -0.031134157, -0.0215968, -0.0665286, 0.08702875, 0.03689228) * inp_2_0_2;
    result3 += M4(0.02909711, -0.5099151, -0.022908097, 0.066747524, 0.037446868, -0.5876879, -0.0065968856, 0.09071708, 0.042694952, 0.16157041, -0.049450208, -0.11530706, -0.06028184, -0.5664215, 0.2769946, -0.04222457) * inp_2_1_2;
    result3 += M4(0.048882004, -0.3894901, 0.082922764, -0.031187741, 0.0457189, 0.027840596, -0.008193884, 0.02165296, 0.099914484, 0.9626489, 0.0051660123, -0.20211671, -0.10088442, -0.9062751, 0.042626232, -0.12445692) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.048992973, -0.16610707, -0.009774129, 0.029783914, -0.0067284876, 0.21124431, -0.13513003, -0.026151573, -0.022041269, -0.016355932, 0.08898624, -0.0013163281, 0.114498295, -0.13907012, 0.037256137, 0.017185511) * inp_3_0_0;
    result0 += M4(-0.06717587, -0.17325914, 0.050944973, 0.096753255, 0.3544896, -0.23361447, 0.15390725, -0.05722566, -0.08200278, 0.3109737, 0.008474752, 0.009953538, 0.092820354, -0.041465078, -0.08987676, 0.0048970575) * inp_3_1_0;
    result0 += M4(-0.0011957764, 0.023952462, 0.003380378, 0.010365107, -0.22909343, -0.24015939, -0.13399905, -0.06254938, -0.117268614, 0.16005899, 0.002680059, 0.025171598, 0.16181615, -0.01148252, 0.050861217, -0.027496489) * inp_3_2_0;
    result0 += M4(-0.027029125, -0.28466374, 0.21278113, -0.4169629, 0.15892689, 0.16415761, -0.0034686627, -0.03953395, -0.26933616, 0.19464406, -0.00961336, 0.035659526, -0.020940652, -0.1288003, 0.009202345, -0.04617523) * inp_3_0_1;
    result0 += M4(-0.14455794, 0.37261298, 0.022554256, -0.014586981, -0.05689133, -0.13050534, 0.18377933, -0.033854194, -0.24237913, -0.001479465, 0.0729573, 0.07287937, -0.3444134, -0.0048442, 0.07523961, 0.5146682) * inp_3_1_1;
    result0 += M4(0.16302663, 0.026699534, -0.0058381516, -0.01085757, -0.018664459, -0.02785429, 0.010352692, 0.0017824953, -0.19111556, 0.24180827, 0.056808915, 0.04906052, -0.16183089, 0.20594893, -0.10577812, -0.04710631) * inp_3_2_1;
    result0 += M4(0.08531489, 0.24213289, 0.0132736005, -0.11572905, 0.0051934943, 0.2101695, -0.11811004, 0.021410039, -0.13208175, 0.055159565, 0.09338223, 0.0019433982, -0.13070667, -0.069702245, 0.053497475, 0.043541864) * inp_3_0_2;
    result0 += M4(-0.45108745, 0.20575476, -0.020117832, 0.03298136, 0.08086405, 0.13312556, -0.040713094, -0.052442476, -0.106699795, 0.0488382, 0.03261128, -0.0070880367, 0.049050756, 0.13560054, 0.06263023, 0.047505304) * inp_3_1_2;
    result0 += M4(-0.024099894, -0.0779644, -0.025424492, 0.004826355, 0.060726624, -0.004760956, -0.1636067, -0.04619289, -0.1752579, 0.11662675, 0.019777723, -0.012622899, 0.24857318, 0.06053566, 0.06860595, 0.007559677) * inp_3_2_2;
    result1 += M4(0.0064863823, 0.05396272, 0.023350222, 0.07876449, -0.027010307, -0.034807082, 0.057593253, -0.13875632, 0.0858345, 0.18385945, -0.002775036, 0.061967064, 0.00049183925, 0.054895427, 0.000322959, -0.019468974) * inp_3_0_0;
    result1 += M4(0.004014419, -0.6055139, -0.016843608, -0.15195616, -0.18716265, 0.44319448, -0.25486392, -0.12526573, 0.052347794, -0.07182153, 0.044754665, 0.07616229, 0.016180519, -0.061368987, -0.10128912, -0.22490224) * inp_3_1_0;
    result1 += M4(0.039732084, -0.014720155, -0.01651859, -0.19994292, -0.07890743, -0.2042507, 0.18043427, 0.25899088, -0.033494536, 0.103731714, 0.020808708, 0.27141204, 0.24029577, -0.6035063, -0.13929158, 0.021309357) * inp_3_2_0;
    result1 += M4(0.026210606, -0.093813874, 0.0068765995, 0.30212808, -0.09146931, -0.07982312, -0.017576257, 0.12170786, -0.013264667, -0.010094754, 0.049359787, 0.06982223, 0.03644284, 0.057668176, -0.01774304, 0.007229484) * inp_3_0_1;
    result1 += M4(0.1347349, -0.39040124, 0.5828473, -0.018068105, -0.023868538, -0.1667335, 0.091616824, -0.107963026, 0.050562948, 0.2189957, -0.0007701187, 0.0095511675, -0.2119204, -0.3718404, 0.5384856, 0.033612724) * inp_3_1_1;
    result1 += M4(0.032914724, -0.21357633, 0.0016200786, -0.42494008, 0.09336637, -0.21233723, -0.12395374, 0.10645749, 0.09299304, 0.18096237, 0.10531121, 0.28353903, 0.096395165, -0.53364533, -0.12985152, -0.38813907) * inp_3_2_1;
    result1 += M4(0.13183738, -0.14512132, -0.10823966, -0.43359596, 0.059017565, -0.0061454475, 0.013773106, 0.10413364, 0.009789895, 0.057191685, 0.08596073, 0.060581118, -0.008336961, -0.052753273, 0.022560857, -0.11992596) * inp_3_0_2;
    result1 += M4(0.0428893, 0.13055082, 0.39800975, -0.31188324, 0.22567813, 0.1696061, 0.023141691, -0.06943457, 0.022981066, 0.21377243, 0.05520721, 0.1353661, 0.031724237, -0.009020646, 0.08503836, -0.3561921) * inp_3_1_2;
    result1 += M4(0.007852555, -0.015099063, -0.035158858, -0.19213606, 0.07698588, 0.28692663, 0.07008868, 0.08879878, 0.08199167, 0.19448793, 0.1380239, 0.21152666, -0.032411266, -0.31750774, -0.029468384, -0.4321674) * inp_3_2_2;
    result2 += M4(-0.048432637, -0.14504021, 0.12305458, 0.08290915, -0.23811069, -0.0590194, 0.031088406, 0.26612997, 0.07857316, -0.058581624, 0.12911527, -0.110595256, 0.018267322, 0.04094404, -0.0348021, -0.03714213) * inp_3_0_0;
    result2 += M4(-0.10310466, -0.14998113, -0.13433367, 0.03713557, 0.13893732, 0.019060485, -0.06971567, 0.014019032, 0.18204144, -0.11446047, 0.07576525, -0.19535956, 0.059057638, -0.011109921, -0.35682803, -0.029138125) * inp_3_1_0;
    result2 += M4(-0.034692775, -0.03372222, 0.102488935, 0.014089404, 0.027549976, -0.3449929, 0.124654315, -0.0044288305, 0.08326675, -0.052911222, -0.054166112, -0.091491535, 0.02455733, -0.020171141, 0.0238722, -0.009103368) * inp_3_2_0;
    result2 += M4(0.1664349, -0.28563076, 0.14851195, 0.14724049, 0.07038303, 0.13505371, -0.24889326, -0.00087571907, 0.077220365, -0.07181507, 0.061331544, -0.3166573, 0.0156055605, 0.031037629, 0.0359285, 0.010653904) * inp_3_0_1;
    result2 += M4(0.13829541, 0.22218965, -0.060759414, 0.16426384, 0.047746196, -0.026652653, -1.4735289, 0.07456825, 0.26320612, -0.29550865, -0.09108002, -0.15744558, 0.08898159, 0.08268568, -0.25619268, 0.13140032) * inp_3_1_1;
    result2 += M4(0.004429989, 0.0010930785, 0.05389331, 0.06752108, -0.23263583, -0.2862711, -0.03994312, 0.043419383, 0.08401302, -0.08905724, 0.06460258, -0.023725836, 0.058480028, -0.43983233, 0.07620683, 0.16352989) * inp_3_2_1;
    result2 += M4(0.27337453, -0.18919776, -0.1583419, 0.12397, -0.09775345, -0.03722219, 0.19852664, -0.16676399, 0.13089809, -0.08540095, 0.052508727, -0.020238277, 0.06144098, 0.015690368, -0.10777502, 0.06971984) * inp_3_0_2;
    result2 += M4(0.076231755, -0.22603258, 0.30157223, 0.046165153, -0.0125289755, -0.010423847, -0.22858839, -0.0030018375, 0.0019436943, -0.091103315, 0.565065, -0.1448458, 0.02929254, 0.061806094, -1.9962778, 0.047635764) * inp_3_1_2;
    result2 += M4(0.028765881, -0.0014877232, -0.1393611, -0.00377486, -0.089304805, -0.026674516, 0.25720862, 0.09044319, 0.12466465, -0.05893729, 0.11665328, -0.14820442, 0.20622374, -0.11938933, -0.005355788, -0.03563226) * inp_3_2_2;
    result3 += M4(0.08583238, -0.04554302, 0.016861042, 0.011605793, 0.03210652, 0.013633935, 0.05558247, -0.053001683, 0.0713278, 0.031367596, 0.0661334, 0.034328625, -0.0039778347, 0.08228057, 0.019608712, 0.0036189666) * inp_3_0_0;
    result3 += M4(-0.08841535, -0.06699682, 0.03548373, 0.0013044237, 0.22438958, 0.18349981, 0.080071576, 0.0362438, 0.075874746, 0.026604766, 0.035364036, -0.010917496, -0.07063404, 0.012149111, -0.021007529, 0.029983398) * inp_3_1_0;
    result3 += M4(0.09009425, 0.0014059992, -0.0038552985, -0.008509896, -0.012465999, -0.016643833, 0.038666938, 0.12590922, 0.09687734, 0.018438183, 0.025708636, 0.013555506, -0.031999953, -0.015754186, 0.001806937, 0.009213332) * inp_3_2_0;
    result3 += M4(-0.17234245, -0.18497543, 0.25989404, -0.15059379, -0.06345641, -0.1408955, -0.08838325, 0.025157984, -0.018283915, -0.16195439, 0.011345648, 0.065935224, 0.006623931, 0.013227802, 0.04914066, 0.11015704) * inp_3_0_1;
    result3 += M4(0.13332613, 0.06957094, -0.021905197, 0.4289767, -0.051700674, 0.31915265, 0.0994923, -0.2506537, -0.08393982, 0.09292264, -0.0458029, 0.19349343, -0.102288485, -0.19292717, -0.05549536, 0.42255718) * inp_3_1_1;
    result3 += M4(-0.1178246, -0.008895876, 0.02232057, 0.035283666, -0.064993076, -0.20497374, -0.0046105273, -0.28717294, 0.16572341, 0.07240177, 0.049790263, -0.003459444, -0.43497092, 0.10303399, 0.1257833, -0.2711551) * inp_3_2_1;
    result3 += M4(-0.016070079, 0.11947042, -0.030050837, -0.08666034, 0.02232171, 0.2363869, -0.075107545, -0.07461078, 0.0062925015, 0.36900768, 0.0069916314, 0.06173693, -0.015422307, 0.14647633, 0.032543804, 0.07987842) * inp_3_0_2;
    result3 += M4(-0.028500069, 0.7862236, 0.009944577, 0.20595308, -0.06104235, -0.7955145, -0.13413276, -0.11119104, 0.035535287, -0.7014986, 0.030573353, 0.07567459, -0.035181843, -1.9134692, 0.097927004, 0.1389086) * inp_3_1_2;
    result3 += M4(0.024397263, 0.5213898, -0.008391261, -0.004129648, -0.0140446415, 0.31857067, -0.03797513, -0.15318324, 0.0151360445, -0.2365883, 0.0083548855, 0.053523175, -0.05552854, -2.07749, 0.06731052, 0.034793917) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.014743491, 0.008447425, 0.016837716, -0.008285715);
    V4 result1 = V4(0.0026835946, -0.00035079388, 0.00995871, 0.030403538);
    V4 result2 = V4(0.016700013, -0.016188355, -0.014380065, 0.0014124163);
    V4 result3 = V4(-0.018843036, 0.020458914, 0.010391057, 0.0049514757);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.09669462, -0.51727986, 0.16689135, 0.12865463, 0.014862814, 0.03364586, 0.009240925, 0.005602186, 0.08356024, -0.0070086224, -0.047346078, 0.013710585, 0.017497204, 0.09340822, 0.031881224, -0.0063712546) * inp_0_0_0;
    result0 += M4(-0.30402306, -0.47816098, -0.005851242, -0.29767832, 0.22042488, 0.060394857, -0.02084408, 0.023418957, -0.11704115, 0.049852435, -0.18155172, 0.012788493, 0.0018181612, -0.3215121, 0.050879516, -0.07715527) * inp_0_1_0;
    result0 += M4(-0.18081735, -0.11681565, -0.009983127, 0.06417219, 0.14624277, -0.035704654, 0.11221979, 0.15229608, -0.07877042, 0.035432428, -0.109470524, -0.13027176, -0.047281325, -0.07864592, 0.026410662, -0.021823991) * inp_0_2_0;
    result0 += M4(-0.017375262, 0.06432483, -0.33819324, -0.09564716, 0.012645792, 0.11355446, -0.07056961, 0.1138706, 0.054735556, -0.17333035, 0.052966367, 0.03537563, -0.050096262, -0.06500094, 0.04259476, 0.13797723) * inp_0_0_1;
    result0 += M4(0.004587724, 0.18660945, -0.28017706, -0.08183587, 0.02810211, -0.2336591, 0.08558877, 0.0032179423, -0.22301407, -0.025391778, 0.479598, -0.08096792, 0.09486208, 0.28636363, 0.2904506, -0.2859276) * inp_0_1_1;
    result0 += M4(0.046698608, 0.12483556, -0.007426217, -0.0745275, -0.09561974, -0.23023765, 0.0969323, -0.11898025, 0.05752804, -0.1443764, 0.07453734, -0.08087552, -0.010079216, 0.23470046, -0.0016940522, 0.27033862) * inp_0_2_1;
    result0 += M4(-0.010143421, 0.030261895, -0.11623658, -0.0681976, 0.16214468, -0.24786402, 0.24712084, 0.07215327, -0.020669077, 0.0119814975, 0.11314551, -0.04901038, -0.17738578, -0.008051028, -0.10060487, 0.06391298) * inp_0_0_2;
    result0 += M4(-0.13910525, -0.032301217, -0.044074938, -0.051138677, 0.058007278, 0.13186592, -0.40264955, -0.08485298, 0.13767226, -0.016024506, 0.11699538, 0.036634095, -0.045233797, 0.03604915, -0.3768328, -0.004891721) * inp_0_1_2;
    result0 += M4(-0.10195228, -0.030465607, -0.10490818, 0.0058461186, 0.07750096, 0.25438946, -0.06350747, -0.07243008, 0.018125214, 0.034017064, 0.09547121, 0.063200004, -0.13379368, -0.21720023, -0.07190602, -0.049828544) * inp_0_2_2;
    result1 += M4(0.13679023, -0.049360715, -0.10681172, -0.20227167, 0.008825511, -0.057146493, 0.0062395167, 0.047435135, -0.04310406, -0.04685926, -0.05554932, -0.123523496, -0.037166152, 0.020022562, 0.0061102672, -0.16872597) * inp_0_0_0;
    result1 += M4(0.2786589, -0.0029480397, -0.011365734, 0.22597302, -0.0072297603, -0.0016465593, 0.0050900956, -0.36896762, 0.08199596, 0.0563941, 0.030638587, -0.009148844, 0.0025860453, 0.056893066, -0.020458935, -0.0811078) * inp_0_1_0;
    result1 += M4(-0.09934554, 0.020202575, -0.019141953, -0.060106725, 0.06794824, 0.010158999, -0.003842948, -0.35968035, -0.04938273, -0.049717776, 0.03116162, -0.050380226, 0.0110367285, 0.07146439, -0.026813079, 0.092662096) * inp_0_2_0;
    result1 += M4(-0.35383496, -0.026246829, -0.19484198, -0.06707076, -0.02030493, -0.11761234, -0.046231456, 0.23448543, -0.029608294, 0.13226543, -0.028703276, 0.062291022, 0.019186903, 0.06362464, 0.0020071892, 0.07772449) * inp_0_0_1;
    result1 += M4(-0.4095227, 0.10817836, 0.08506463, -0.27124378, -0.03858656, 0.06013611, -0.058903776, -0.5606449, -0.15937015, 0.37564144, 0.06815554, -0.06645209, 0.104078524, 0.28974771, -0.05966602, -0.16134262) * inp_0_1_1;
    result1 += M4(0.053414613, 0.033399764, 0.00012346715, 0.105109744, -0.017690057, 0.039992653, -0.019384783, -0.015943388, -0.061685394, 0.06171594, 0.013982697, 0.088258706, 0.02319026, -0.027317306, -0.03034021, -0.3300828) * inp_0_2_1;
    result1 += M4(-0.0674281, 0.004213404, -0.08944409, 0.13014373, 0.1770149, -0.111514285, 0.01713667, 0.35004476, -0.07275309, 0.05754977, 0.11291046, -0.06684879, -0.045542937, -0.017815158, -0.13759197, -0.16393445) * inp_0_0_2;
    result1 += M4(0.051613577, 0.020379698, -0.029539434, 0.04315933, -0.17619999, 0.009260252, 0.04926086, -0.19072102, -0.00044491875, 0.06040538, 0.07848341, 0.026530022, -0.09606722, 0.015028245, -0.17334901, 0.1726304) * inp_0_1_2;
    result1 += M4(-0.018549846, -0.018595971, -0.042936027, 0.0699962, -0.110357545, -0.027245088, -0.014893876, 0.1270623, 0.045371324, -0.034947384, -0.04655074, 0.12777017, -0.08992883, 0.06208615, 0.112433776, -0.30601078) * inp_0_2_2;
    result2 += M4(-0.19290519, 0.21821947, -0.020033857, -0.018511718, -0.06284054, 0.13180867, -0.06596542, -0.03173574, -0.06807363, 0.09497352, -0.075335056, 0.011884318, 0.051110614, -0.02265791, 0.03611945, -0.052455217) * inp_0_0_0;
    result2 += M4(-0.06046697, -0.20544153, 0.030143712, -0.0112752095, 0.10681537, -0.015305811, 0.032225806, 0.050840184, 0.10273827, 0.00021649066, -0.1635033, -0.0029131724, 0.058209892, -0.08077112, 0.09468401, 0.03262688) * inp_0_1_0;
    result2 += M4(-0.032035574, 0.07638275, -0.018192545, 0.08913092, 0.04711123, 0.1764784, 0.026611874, -0.016336842, -0.047937397, 0.09100534, -0.05760317, -0.15142119, 0.06643865, -0.09395961, 0.022041045, -0.039791424) * inp_0_2_0;
    result2 += M4(-0.2420003, 0.48537076, 0.017026233, 0.038695678, 0.11234081, -0.059946522, -0.17729814, -0.107568845, 0.093289495, -0.030434918, -0.049395256, 0.036810398, 0.087646924, -0.06288253, -0.033308744, -0.072716914) * inp_0_0_1;
    result2 += M4(-0.08900565, -0.20442967, 0.1432971, -0.087602176, -0.0077055376, -0.014944711, -0.011433352, -0.14634351, 0.41547734, -0.15460475, -0.12898764, 0.09246774, -0.26745868, -0.1686408, 0.57033515, 0.08213527) * inp_0_1_1;
    result2 += M4(-0.07422049, 0.0052624843, 0.05734575, 0.07264251, -0.17885843, -0.027561892, 0.0624052, -0.20721664, 0.048925605, -0.10632946, 0.07491031, 0.04103424, -0.08749118, 0.17255907, -0.06615718, 0.141634) * inp_0_2_1;
    result2 += M4(-0.042742137, -0.038808208, 0.035763286, 0.047172304, 0.15272203, -0.18513694, -0.052076742, -0.16817792, 0.055223346, 0.13639803, -0.009273963, -0.00016011784, -0.044394743, 0.026474966, -0.008077779, 0.08198665) * inp_0_0_2;
    result2 += M4(-0.009294328, -0.14119484, 0.01620882, 0.030138899, -0.12895411, 0.3846931, -0.043249372, -0.06919045, 0.042118035, -0.11729, 0.06732996, -0.01418403, -0.13430043, -0.19262958, -0.032274604, -0.22905628) * inp_0_1_2;
    result2 += M4(-0.0069775763, 0.041782536, -0.005207038, 0.11637499, 0.015683675, 0.09891202, 0.05209425, -0.09379904, 0.038376838, 0.04093883, -0.01453073, 0.0713685, -0.11854214, -0.0013213286, 0.06226215, -0.116664395) * inp_0_2_2;
    result3 += M4(-0.042564485, -0.13498509, 0.0003227555, 0.017483495, 0.039681625, 0.09790231, -0.06315765, 0.00094946095, -0.0057121613, -0.0046687676, -0.04760951, -0.0015351939, -0.00842225, 0.06984992, 0.050250757, 0.023757126) * inp_0_0_0;
    result3 += M4(0.07925726, -0.10265112, 0.0054982593, -0.039113924, -0.062108316, 0.29912958, 0.0015080736, 0.0071726646, 0.0056089303, 0.12567732, 0.06060876, -0.0050455006, 0.015813246, -0.016268224, -0.003158896, 0.03418766) * inp_0_1_0;
    result3 += M4(-0.018346261, -0.1942828, -0.0068691983, 0.046132527, 0.006217456, 0.15407395, -0.0003955581, -0.23395696, -0.08817686, -0.033767596, 0.049345594, -0.42440724, 0.016661385, -0.10175964, 0.020863013, 0.021855671) * inp_0_2_0;
    result3 += M4(-0.05694522, -0.29225603, -0.0697431, -0.053856164, 0.01542944, 0.1760382, -0.044815, 0.0028423313, 0.058516778, 0.05884138, 0.11954834, 0.01777969, 0.045833696, -0.115968555, -0.0012925453, -0.03364715) * inp_0_0_1;
    result3 += M4(0.0733962, -0.33634365, 0.08778992, -0.074659176, 0.026442517, 0.42425495, -0.031352986, -0.020463493, -0.18212363, -0.24794087, 0.13709515, 0.09453743, 0.014944405, -0.19513871, -0.2658104, -0.08369585) * inp_0_1_1;
    result3 += M4(-0.052014746, 0.1156601, 0.031057248, -0.101051666, -0.023288988, 0.3666479, -0.0059185605, 0.26026347, -0.092179745, 0.0366354, 0.07181872, 0.12319983, 0.17066643, -0.012337397, -0.07523156, -0.32268113) * inp_0_2_1;
    result3 += M4(-0.037612665, -0.039752763, 0.040436942, 0.003927988, 0.041614007, 0.16621259, -0.007927197, 0.02869322, -0.010916102, 0.029694196, 0.03881742, 0.002398144, -0.026395729, -0.15304051, -0.015781535, 0.031999897) * inp_0_0_2;
    result3 += M4(0.010682647, -0.13836206, 0.00824429, -0.0018022764, -0.021858942, 0.45196384, -0.007947654, -0.003221016, 0.048450068, -0.027470956, 0.064894654, 0.071933046, -0.017586008, -0.07260157, -0.22017652, -0.06519044) * inp_0_1_2;
    result3 += M4(-0.048585974, 0.03361448, 0.0017898267, -0.0052089216, 0.12277903, -0.24197204, 0.012972934, 0.05145952, -0.042581618, -0.09284519, 0.0007723377, 0.008141312, 0.007731768, 0.009947188, 0.056945924, -0.034313086) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.035307094, -0.22462827, 0.02893714, 0.0705183, 0.14638296, -0.04741856, 0.053179894, 0.06006561, 0.027007962, 0.018934332, -0.046450507, -0.047895495, 0.06784427, -0.066190414, 0.05672039, 0.0073642163) * inp_1_0_0;
    result0 += M4(-0.040154148, -0.33778942, -0.16254307, 0.032322407, -0.058038857, -0.12892365, 0.060897592, -0.18497175, 0.04446734, 0.25797698, -0.10786834, 0.015366105, -0.03232007, -0.23022367, 0.05717434, -0.18556425) * inp_1_1_0;
    result0 += M4(0.037927702, -0.2778493, -0.22759408, 0.02817924, -0.031104615, 0.04360486, 0.0013502915, -0.012866219, 0.1232454, 0.13763793, 0.029688539, 0.11380627, -0.18375547, -0.05234157, -0.043208826, -0.2310726) * inp_1_2_0;
    result0 += M4(0.06202119, -0.24255009, -0.105840944, -0.0035240366, -0.13502687, -0.07916542, -0.00934368, -0.038388964, -0.01685464, 0.059792675, -0.024917092, -0.1450941, -0.07494404, 0.3886076, 0.06875921, -0.040583137) * inp_1_0_1;
    result0 += M4(-0.19549684, -0.27794704, -0.060144525, -0.10823565, -0.18694748, -0.053931635, -0.06565508, -0.096244104, 0.4860585, 0.02455953, 0.02359939, 0.1358206, -0.0834915, 0.2457574, -0.12594818, -0.2728281) * inp_1_1_1;
    result0 += M4(0.2715175, -0.3768017, -0.08240863, 0.20733851, -0.11790635, -0.23469342, -0.034391105, -0.13828483, 0.19593412, 0.10162837, 0.057506915, 0.2543738, 0.19740894, 0.064815246, 0.03988291, -0.11376157) * inp_1_2_1;
    result0 += M4(0.11411424, 0.17855513, 0.033305686, -0.039786693, -0.16202122, -0.08041213, -0.22074015, 0.060294196, 0.24851874, 0.0278207, 0.1289657, -0.063846335, 0.0069530634, -0.26245794, -0.08659776, -0.048029214) * inp_1_0_2;
    result0 += M4(-0.016051685, 0.058368858, -0.21438567, 0.09648696, -0.19259804, 0.0070537445, -0.1257383, -0.17116722, -0.036247693, -0.05495778, 0.34008875, 0.0825288, 0.052197807, -0.091909945, 0.111572765, -0.31417903) * inp_1_1_2;
    result0 += M4(-0.041979555, 0.16564235, -0.007699287, -0.10394334, 0.21448088, 0.028234955, -0.28358594, -0.035047367, -0.024415355, -0.08500183, 0.07462696, 0.13502209, -0.077151865, 0.11487438, 0.009708692, -0.0136879785) * inp_1_2_2;
    result1 += M4(0.06710795, -0.036564108, 0.016816592, 0.20245928, 0.037936475, 0.01752738, -0.052676886, -0.026520208, 0.046500497, 0.006762676, -0.023052854, 0.12308466, 0.04281151, 0.055413403, -0.017464085, -0.244455) * inp_1_0_0;
    result1 += M4(0.03184625, 0.002454491, -0.037582345, -0.34083068, 0.016453179, 0.007889139, 0.015759861, 0.23176444, -0.03130845, 0.021686712, -0.0063926373, 0.06537249, -0.010633387, -0.06096136, 0.030145492, -0.6199989) * inp_1_1_0;
    result1 += M4(0.16703884, -0.07723761, 0.018894766, 0.09598742, 0.016286822, -0.010862463, 0.013161377, -0.012619773, -0.07545294, 0.0060423636, 0.016989285, 0.008718494, -0.21020028, -0.038951073, -0.021596521, -0.25364184) * inp_1_2_0;
    result1 += M4(-0.04736388, 0.043360736, 0.10172182, 0.287544, -0.047053415, 0.023556797, -0.100429274, -0.35656545, -0.026372423, 0.05838307, 0.07758092, 0.14705868, -0.03816837, -0.06925101, -0.083963305, -0.43623888) * inp_1_0_1;
    result1 += M4(-0.16577064, 0.1317909, -0.04244943, 0.023594461, -0.03703336, 0.009753034, 0.03570712, -0.25989243, -0.18398088, 0.07561942, 0.041793153, 0.31895882, 0.4154428, 0.03660585, 0.0332385, 0.05766325) * inp_1_1_1;
    result1 += M4(-0.15018132, -0.060445055, 0.027498959, 0.11794749, 0.06978229, 0.0038192568, -0.0032891657, 0.13252087, 0.040139116, 0.005331578, -0.033397064, 0.16884711, 0.25623837, -0.017721524, 0.014558868, -1.056883) * inp_1_2_1;
    result1 += M4(-0.24897018, 0.01863012, 0.033846132, 0.045181293, -0.021580081, 0.010961583, -0.1266293, -0.11902338, 0.16360618, -0.017353127, 0.17520739, 0.03788776, -0.084356934, -0.12774551, -0.091455705, -0.24153528) * inp_1_0_2;
    result1 += M4(-0.25574994, 0.12944426, 0.01939243, -0.18390705, -0.2102094, 0.06139838, -0.05176977, -0.28542477, 0.46161944, -0.00958426, -0.04397203, 0.08907043, 0.022172661, -0.09046796, 0.023510974, 0.32375327) * inp_1_1_2;
    result1 += M4(-0.13321182, -0.024350787, -0.026406009, 0.02703533, -0.09859518, 0.0090976255, 0.0219098, 0.04347102, 0.117921956, -0.021278035, -0.0015259426, 0.2396171, -0.012874458, -0.034123577, 0.007611878, -0.35813758) * inp_1_2_2;
    result2 += M4(0.0391673, 0.026417663, 0.009541693, -0.061538618, 0.048945192, 0.08287025, -0.015584271, -0.025552861, -0.080462694, 0.03661094, -0.002410224, 0.07844339, 0.107802056, -0.089975595, -0.046263643, -0.04106495) * inp_1_0_0;
    result2 += M4(-0.06529702, 0.10902999, -0.013934024, 0.002752938, -0.01982749, 0.02488407, -0.020244107, -0.062493734, -0.10214959, -0.0013774877, -0.047455113, 0.0019728085, -0.18016483, 0.06273995, -0.035042547, -0.22802566) * inp_1_1_0;
    result2 += M4(-0.07045124, 0.012150407, -0.048288018, -0.15007214, -0.0036278954, 0.11252546, -0.02986524, 0.108506896, -0.008923874, -0.029198747, -0.0058204927, -0.038273804, -0.025462639, 0.115739584, 0.012683735, -0.20538843) * inp_1_2_0;
    result2 += M4(0.12894863, 0.013747988, 0.09016243, 0.01735002, -0.13965407, 0.13291594, 0.0049233628, -0.14133473, -0.027627664, -0.14910255, 0.16844939, 0.11846999, 0.02805649, 0.31186017, -0.052807767, -0.09423178) * inp_1_0_1;
    result2 += M4(0.22947294, -0.044059295, 0.0016154664, -0.021715935, -0.1738222, 0.23619922, 0.037097644, -0.19200113, 0.38940015, -0.02779095, 0.04611081, 0.44163048, 0.14140546, 0.14475667, 0.05574702, -0.10961533) * inp_1_1_1;
    result2 += M4(-0.025075698, 0.054736048, -0.016397255, 0.16951144, -0.091041975, 0.018718587, -0.0028245847, -0.03403032, 0.06329755, 0.10590856, 0.008780845, 0.08099479, 0.06740175, 0.10145647, 0.039735124, 0.073602) * inp_1_2_1;
    result2 += M4(-0.14377022, 0.11206873, -0.0031509665, 0.017683567, -0.10667504, -0.085793294, 0.024912745, -0.07191567, 0.022260113, -0.07158728, 0.0022069595, -0.09936891, -0.048354574, 0.08850675, -0.04810338, -0.20789626) * inp_1_0_2;
    result2 += M4(0.03542753, 0.032648664, 0.048831794, 0.08271609, -0.10326753, 0.08178507, 0.02606525, -0.21694726, 0.012158983, 0.10125329, -0.006998079, 0.038845733, 0.013523188, -0.4400596, -0.04443807, -0.14778714) * inp_1_1_2;
    result2 += M4(0.010083771, 0.051624633, 0.058027424, -0.11802435, -0.019047186, 0.014849058, -0.0081415735, -0.023896877, -0.04986721, 0.064185135, -0.0148785105, 0.111404434, -0.006652467, 0.18769675, -0.028108647, 0.113790415) * inp_1_2_2;
    result3 += M4(0.026400158, 0.039371315, -0.013667459, 0.020767527, 0.015798403, 0.1025639, 0.0064333146, 0.112132035, -0.018587692, 0.014270278, -0.011238069, 0.007073513, 0.010500185, 0.13267097, 0.031540312, 0.06889396) * inp_1_0_0;
    result3 += M4(-0.013152437, 0.25699076, 0.0036128866, 0.04250009, 0.05294525, -0.011331713, -0.0027460253, 0.077428795, 0.057955775, 0.07290498, 0.027424118, -0.055459335, 0.07707575, -0.026249958, -0.080674194, -0.03469352) * inp_1_1_0;
    result3 += M4(0.058332123, -0.05461233, -0.014227895, -0.13327888, 0.049989082, 0.007489991, -0.021943497, 0.15098834, 0.005377574, 0.019050064, -0.008514207, -0.134915, -0.06988006, 0.17538334, -0.03415106, 0.16733105) * inp_1_2_0;
    result3 += M4(0.008160888, 0.0034357756, 0.0639525, -0.019393096, -0.010406365, -0.13060865, 0.054562487, -0.032735292, 0.023514858, -0.045053665, 0.040615927, 0.064908154, -0.09089405, 0.21162036, 0.014249912, 0.06714826) * inp_1_0_1;
    result3 += M4(-0.044109173, -0.16518602, 0.021425916, 0.09954025, 0.04527165, -0.32703304, 0.054141317, -0.16744952, 0.025903784, -0.003051907, 0.03095702, 0.12225285, 0.17237897, 0.17171845, 0.068107456, 0.14853135) * inp_1_1_1;
    result3 += M4(0.06341984, 0.15279792, -0.019082531, -0.100570485, 0.057532657, -0.042876966, -0.004997573, 0.12761652, 0.06215633, 0.071263425, 0.014513835, -0.016484993, -0.072954424, 0.18368165, 0.012159842, -0.35126635) * inp_1_2_1;
    result3 += M4(-0.05880356, 0.107662015, -0.03719247, -0.009439112, 0.03642334, -0.013007598, 0.042426657, -0.053998515, 0.028424285, 0.20107721, -0.028509352, -0.00332949, -0.022407876, 0.081036404, -0.0055418, 0.08517427) * inp_1_0_2;
    result3 += M4(0.03089438, 0.14947397, -0.022230234, 0.15192387, -0.0005440606, -0.10358376, 0.05006092, -0.04285323, 0.055256974, 0.1520512, 0.07114252, 0.06578517, 0.044554185, 0.11229202, -0.036441587, 0.014489925) * inp_1_1_2;
    result3 += M4(-0.08944192, -0.026293617, 0.03143248, 0.07266941, 0.08130813, 0.03678022, -0.0023124611, 0.06801184, 0.068284996, 0.008893379, 0.01586005, 0.026941683, -0.06279147, 0.26304987, -0.019896379, -0.021788506) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.10331382, -0.23202312, 0.016055262, -0.024022143, -0.057415713, 0.20173353, -0.04435085, 0.051488668, -0.050727885, -0.043531567, -0.07642566, 0.16454566, -0.27059227, -0.26260674, -0.00036394567, 0.08248317) * inp_2_0_0;
    result0 += M4(-0.07678349, -0.25499627, 0.06827457, -0.053109396, -0.058974452, -0.09748348, 0.11763023, -0.02083621, -0.18378258, -0.22061342, -0.060317468, -0.10734181, 0.17886561, -0.26261646, -0.11759466, -0.015683154) * inp_2_1_0;
    result0 += M4(-0.0885096, -0.33100793, 0.019577805, -0.16861075, -0.0289117, -0.039858285, -0.02109974, -0.048541002, -0.1466946, -0.064937025, -0.061047807, -0.14967132, -0.16115189, -0.099355884, -0.106154494, -0.11200228) * inp_2_2_0;
    result0 += M4(-0.022772973, 0.092853725, -0.0971941, -0.06562428, -0.25398943, 0.06104681, 0.019879585, 0.0592308, 0.081811495, -0.010198778, -0.008245901, 0.07035904, -0.0016996779, 0.21786666, -0.13666002, -0.015125131) * inp_2_0_1;
    result0 += M4(-0.11581669, 0.098671414, -0.16253874, 0.08151299, -0.21887386, 0.06423309, -0.14590642, -0.11930663, -0.18402559, -0.03617159, -0.30571488, 0.042377375, -0.028524017, -0.14741947, -0.07452061, 0.0015540565) * inp_2_1_1;
    result0 += M4(-0.048982475, -0.15259306, -0.059291363, -0.25574088, -0.026649857, 0.08794329, 0.031321023, -0.16349345, -0.08525855, 0.04237919, -0.029906943, -0.050611306, 0.068894066, -0.13692664, -0.06035279, -0.008178748) * inp_2_2_1;
    result0 += M4(0.06747343, 0.090397485, 0.013687013, 0.06838068, 0.10894274, -0.014406836, 0.062072765, 0.07570208, 0.028203458, -0.014049769, 0.059746705, 0.0480441, -0.092543714, 0.10467542, 0.049212173, 0.03989288) * inp_2_0_2;
    result0 += M4(-0.11079747, 0.015920933, -0.17490797, -0.09309042, -0.2049496, 0.14900483, 0.002623412, -0.034972806, -0.047668956, -0.00781394, 0.07599934, 0.06380704, -0.07767516, 0.120712325, -0.0139197325, -0.008760945) * inp_2_1_2;
    result0 += M4(-0.0054851566, 0.080654316, -0.04634152, -0.10911116, 0.08811733, 0.023428842, -0.06353982, -0.12679209, 0.0072546727, 0.040569928, 0.09365838, -0.031406358, 0.034625124, 0.18412372, -0.20426889, -0.050669998) * inp_2_2_2;
    result1 += M4(-0.01722257, 0.030929599, -0.04249095, -0.41748384, 0.07798379, 0.06593586, 0.003901689, 0.103961095, 0.060375962, -0.032679558, -0.031532682, -0.28349024, -0.13016057, 0.0637872, 0.026097078, 0.25029403) * inp_2_0_0;
    result1 += M4(-0.038236294, 0.028780553, -0.029106373, 0.023978775, 0.009594432, -0.059322894, -0.012062702, 0.081448406, -0.09653482, 0.04960315, 0.007853254, -0.26338923, 0.04226963, 0.022615043, -0.04047412, -0.5191292) * inp_2_1_0;
    result1 += M4(0.14774707, 0.025888104, 0.025511662, 0.059914038, -0.018825714, -0.026331577, 0.011492837, 0.08769893, 0.10317115, 0.031551246, 0.010109654, -0.020558167, 0.08100068, -0.043510947, 0.0069929855, 0.4939093) * inp_2_2_0;
    result1 += M4(-0.14191958, 0.075780004, -0.06667866, -0.09604292, -0.031691354, 0.067305826, 0.008099796, 0.012976859, -0.050812926, -0.0041813985, -0.17793414, -0.064958245, -0.025892055, 0.05747672, -0.046553466, -0.2022085) * inp_2_0_1;
    result1 += M4(-0.21237734, -0.012178057, -0.11155403, -0.13346319, 0.044859543, -0.1491787, -0.042408984, -0.35206726, -0.1115078, 0.041442025, -0.09143298, -0.22427571, -0.08367773, 0.06110095, -0.007808362, 0.3306318) * inp_2_1_1;
    result1 += M4(-0.24604529, 0.021425849, 0.030921469, -0.21021128, 0.12356705, -0.009330199, -0.01410766, -0.15740632, -0.058696695, 0.04825989, 0.06936692, 0.050455607, 0.029119454, -0.05816204, -0.03083768, -0.10083762) * inp_2_2_1;
    result1 += M4(-0.06071463, 0.04338974, -0.04346017, -0.2004032, 0.148547, -0.01390929, -0.03146638, 0.058135748, 0.0073164967, -0.025130795, -0.12995467, 0.124720365, -0.082201675, 0.08639597, -0.01129114, -0.11088829) * inp_2_0_2;
    result1 += M4(-0.1441515, 0.018544678, -0.12775643, -0.15587132, -0.039046012, -0.04253012, -0.15495078, -0.05037985, -0.12681386, 0.04681175, 0.06490529, -0.028138973, 0.25193265, -0.10787947, 0.044257484, 0.24549314) * inp_2_1_2;
    result1 += M4(-0.070368834, 0.06530865, -0.0018444939, -0.27068996, 0.026035324, -0.001706248, 0.016719842, -0.13245541, 0.0049758446, -0.029458147, 0.03315055, 0.026872475, 0.062271763, 0.15927802, -0.019770538, 0.12117482) * inp_2_2_2;
    result2 += M4(-0.034219906, -0.0546114, 0.07204672, -0.07108039, 0.08447823, -0.0011453492, 0.0014355864, 0.07844601, -0.15007722, 0.18119645, -0.05157075, 0.0034927146, 0.0029033443, -0.12506902, 0.04355085, 0.102637164) * inp_2_0_0;
    result2 += M4(-0.05985656, 0.008725317, -0.011160627, -0.112184666, -0.06704475, 0.0809822, -0.06695033, -0.007979577, -0.17686036, 0.22079803, 0.0713024, -0.09379245, -0.08833314, 0.253783, 0.058704663, 0.24462728) * inp_2_1_0;
    result2 += M4(0.11164854, -0.17786022, 0.018709572, 0.0908316, -0.015229039, -0.038543347, -0.02591453, -0.0058368435, -0.04284336, 0.107253835, 0.022740265, 0.0003926357, 0.14184631, -0.10228822, 0.011818813, -0.24865563) * inp_2_2_0;
    result2 += M4(0.044083804, 0.069744036, 0.11737105, 0.121008284, 0.09899665, -0.16467594, 0.014907641, -0.04156373, 0.07824859, 0.17309876, -0.0002367827, 0.113147974, -0.14165385, -0.084733754, 0.013123037, 0.0066704415) * inp_2_0_1;
    result2 += M4(-0.22862598, -0.022915212, 0.030560967, -0.067539535, -0.26515582, -0.06164331, -0.16711664, -0.2151926, -0.06129305, 0.22600229, 0.022460025, -0.0008834431, 0.07121288, 0.085569054, 0.03599565, -0.17332263) * inp_2_1_1;
    result2 += M4(-0.09832734, -0.188941, -0.0021092042, -0.13086477, -0.08078453, 0.025309559, -0.032772288, -0.042567823, 0.06462029, 0.05663697, 0.024834273, 0.06595383, -0.18133253, -0.052367415, -0.04857755, -0.06564097) * inp_2_2_1;
    result2 += M4(0.023365932, -0.11010476, 0.07077815, -0.05363998, 0.0023490987, 0.018680936, 0.0010652881, 0.049829192, -0.013899994, 0.034186646, -0.044909682, 0.015340161, 0.06787743, 0.16509612, 0.042832997, 0.15857291) * inp_2_0_2;
    result2 += M4(-0.033091806, -0.008526286, 0.020981789, 0.013125525, 0.11568761, 0.11054455, -0.058314122, 0.110038064, 0.02922132, 0.11304509, -0.020089766, 0.1022511, 0.1474001, -0.011684899, 0.060112193, 0.008220844) * inp_2_1_2;
    result2 += M4(0.10029704, -0.14659515, 0.014492249, -0.15379952, -0.023687638, -0.024331102, 0.016124364, -0.013314363, 0.020083727, 0.010160492, -0.03581296, 0.022506833, -0.007574076, 0.100007504, 0.010479295, 0.019859018) * inp_2_2_2;
    result3 += M4(0.02663524, -0.020420467, 0.023707993, 0.012860362, 0.041616865, -0.034695745, 0.017730715, -0.058133304, 0.02638252, 0.29015028, -0.03251978, -0.090828635, 0.029947637, -0.20537491, 0.067102276, 0.021250963) * inp_2_0_0;
    result3 += M4(0.021176193, -0.11718522, -0.009967636, -0.016500384, -0.028512346, 0.0220359, -0.0014232139, -0.21660562, 0.05878102, -0.0033516595, 0.034079976, -0.16187555, 0.01666771, 0.14130203, -0.004451923, 0.017385945) * inp_2_1_0;
    result3 += M4(0.08222431, -0.18000492, 0.0443864, 0.19313174, 0.014700964, 0.03388802, -0.02329214, 0.058661155, 0.14032188, 0.14628457, 0.012345078, 0.10566541, 0.046674315, -0.02706865, 0.008669663, -0.027181044) * inp_2_2_0;
    result3 += M4(-0.021796279, -0.108118825, 0.06423044, 0.0038502226, -0.010974346, -0.18079321, 0.1342583, 0.05977892, 0.024545847, 0.32303885, 0.022211608, 0.002415554, -0.01111025, 0.07285588, 0.011558545, -0.04276499) * inp_2_0_1;
    result3 += M4(0.025260512, -0.27416927, 0.06842829, -0.23825333, 0.08017633, -0.13784009, -0.03999707, -0.096667826, 0.04140003, 0.46591088, 0.0905245, -0.040413085, 0.021327183, 0.33992374, 0.10951494, -0.10995733) * inp_2_1_1;
    result3 += M4(0.0006832856, -0.14342341, 0.006739081, -0.16503862, 0.09390141, -0.07791662, -0.028877636, -0.06259282, 0.17193507, 0.11815068, 0.058167536, 0.0062595727, 0.048576534, -0.010606277, -0.027680699, -0.16466911) * inp_2_2_1;
    result3 += M4(0.010105512, 0.027911747, 0.0546273, -0.032281898, 0.02319509, 0.045231793, -0.007987493, -0.011338777, 0.009633742, 0.06779503, -0.03373727, 0.030814048, 0.0074367747, -0.028163329, 0.07414294, 0.038749292) * inp_2_0_2;
    result3 += M4(-0.005186773, -0.05980079, 0.019207302, -0.11443175, -0.0631937, -0.097173624, -0.020399202, -0.043884028, 0.037308797, 0.118860155, 0.022065328, 0.014274275, -0.0018383645, -0.05759553, -0.006054153, -0.05979268) * inp_2_1_2;
    result3 += M4(-0.0038812035, -0.018808238, 0.028966691, 0.02231878, 0.0069035892, 0.071678154, 0.0019482146, 0.05458758, 0.028467514, 0.118824735, -0.030402709, 0.060826574, -0.03695301, 0.08552819, 0.03985578, -0.12097176) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.5130179, -0.48740873, -0.06249573, 0.4072273, 0.28267393, -0.15360999, 0.0044240155, 0.32803732, -0.030966436, 0.092507645, 0.008514546, 0.04284642, -0.08391292, -0.35159194, 0.084394, 0.06885697) * inp_3_0_0;
    result0 += M4(0.107626915, -0.07124839, 0.13235442, -0.0925281, 0.5245613, 0.075709976, 0.24346925, 0.030982971, 0.06191302, 0.1120362, 0.11585757, -0.09695664, -0.10923765, -0.43653166, -0.0183583, 0.10772187) * inp_3_1_0;
    result0 += M4(0.014799247, -0.19186112, 0.018664492, 0.026397612, 0.09635958, -0.19342065, 0.24379851, -0.70285773, 0.107578166, 0.07418388, -0.061901, -0.009534054, 0.09631516, -0.012181808, 0.039483108, 0.15189286) * inp_3_2_0;
    result0 += M4(-0.6026141, -0.10475492, -0.71507436, 0.044734105, 0.09113209, 0.021075044, 0.19229944, -0.06501546, -0.056328356, 0.032362774, -0.038067423, -0.01737118, 0.20319489, 0.17973597, 0.045115992, -0.10176323) * inp_3_0_1;
    result0 += M4(-0.3802139, 0.020516245, 0.05148666, 0.12976256, -0.08213196, -0.102906935, -0.18511106, 0.14461079, 0.09499581, -0.27104872, -0.3501212, 0.085869804, -0.49071452, -0.14024639, -0.1631463, 0.2065476) * inp_3_1_1;
    result0 += M4(-0.1318924, 0.17496125, 0.0055694683, -0.12780675, 0.00765233, 0.11399454, 0.23897223, 0.021077342, -0.12576424, 0.032242775, 0.08805875, -0.12248893, 0.0016443266, -0.05266841, 0.058189794, -0.059473027) * inp_3_2_1;
    result0 += M4(-0.4899379, 0.20179042, -0.500651, -0.5812482, -0.005197028, -0.036198605, 0.09384809, -0.031099731, -0.06463097, 0.037090953, -0.06403015, 0.0020358162, 0.0125502525, 0.03310322, -0.13879561, -0.04416296) * inp_3_0_2;
    result0 += M4(0.059015848, -0.018546358, -0.3015356, 0.13799211, 0.04868807, 0.035557587, 0.042981315, 0.050363835, -0.05656608, -0.02115734, -0.11232429, 0.023481123, 0.06993867, -0.092966154, -0.29885754, -0.013755269) * inp_3_1_2;
    result0 += M4(-0.01580375, -0.058247883, -0.10366358, -0.022524845, 0.076837726, -0.06622648, 0.031908497, 0.05289013, 0.037103552, 0.053972874, 0.08209636, -0.05064642, 0.010306632, 0.16144416, -0.046862204, 0.0548604) * inp_3_2_2;
    result1 += M4(-0.43922433, 0.047098175, -0.18759465, -0.80212545, 0.10941286, 0.16834836, -0.0780389, -1.8361233, 0.056425452, -0.022277068, 0.028586948, 0.050517455, 0.0035222108, -0.04159351, 0.033657875, 0.19126078) * inp_3_0_0;
    result1 += M4(-0.08622647, 0.023561101, -0.03437964, 0.002346377, -0.23505418, 0.65599185, -0.44501826, -1.2550944, -0.1168995, 0.02194757, 0.02168546, 0.026359161, 0.033735506, -0.03288989, 0.024005435, -0.1287959) * inp_3_1_0;
    result1 += M4(0.059651524, 0.0021647096, -0.0012779842, 0.0064382083, -0.21990351, 0.45035505, -0.17084084, -1.058114, -0.08088792, 0.035430145, -0.007068428, 0.042007912, 0.041520443, -0.021529127, -0.0010990115, -0.039026994) * inp_3_2_0;
    result1 += M4(-0.11429026, -0.080608614, -0.28877202, -1.098366, -0.029715775, 0.0070576905, 0.34617332, -0.27923682, 0.05548511, -0.1259158, 0.001326055, -0.10651702, 0.020445341, -0.028716924, 0.012827563, -0.080533035) * inp_3_0_1;
    result1 += M4(0.108111426, 0.025738306, -0.055360653, -0.26088318, 0.081461795, 0.17324291, 0.581994, 0.3379319, 0.44169486, -0.355483, 0.073266685, 0.06425456, -0.43675724, 0.056368448, 0.01675965, -0.3765464) * inp_3_1_1;
    result1 += M4(-0.047526058, 0.071933635, -0.008661502, -0.1385432, -0.04517908, 0.040857177, 0.16045748, 0.09049756, 0.056149524, 0.004073265, -0.043373436, 0.07414144, -0.046865754, 0.01851227, 0.012130993, 0.12852712) * inp_3_2_1;
    result1 += M4(-0.9897097, -0.17120796, -0.8310248, -0.901228, 0.10373547, -0.10392589, 0.047173385, 0.19306156, -0.025000105, -0.026912866, -0.10839136, -0.12418768, -0.03526837, -0.056039046, -0.07279657, 0.18482986) * inp_3_0_2;
    result1 += M4(-0.17764914, -0.13968265, 0.03033913, 0.05659585, -0.0117670605, 0.03481201, 0.0759614, -0.023920717, -0.17672323, 0.09850377, 0.10017633, -0.0022347397, -0.3533554, -0.08034363, 0.13455091, -0.18581644) * inp_3_1_2;
    result1 += M4(-0.06347186, -0.026022166, 0.032919735, -0.10226172, 0.046458267, -0.046654966, -0.013549794, 0.101758786, 0.13222165, -0.009606103, -0.028174078, -0.017701246, -0.019426638, 0.026546571, -0.009428304, -0.045469824) * inp_3_2_2;
    result2 += M4(-0.28286502, 0.09559901, -0.016867746, -0.48610035, 0.2854771, 0.56215465, 0.08594333, -1.0474812, 0.06505963, -0.06308861, 0.0010183161, -0.053441305, 0.048422195, -0.047155127, -0.07480864, 0.010331467) * inp_3_0_0;
    result2 += M4(0.2499047, -0.067140155, -0.043241873, -0.06487558, 0.72249645, -0.15064758, 0.22521816, -0.6387851, -0.047288097, -0.0733141, 0.28443903, -0.10300069, 0.058763396, 0.12478983, -0.047503926, 0.14252536) * inp_3_1_0;
    result2 += M4(0.01747294, -0.01610241, -0.013980567, 0.122313336, 0.50483197, 0.021771036, -0.037468016, 0.011351686, 0.08120853, -0.033799335, 0.13305634, 0.1316398, 0.014064878, 0.036113996, -0.012592559, 0.107961014) * inp_3_2_0;
    result2 += M4(-0.6391618, 0.640802, 0.055872865, -0.6871418, 0.015154947, -0.09006477, -0.0077092103, -0.11445191, -0.046627678, 0.04321628, -0.028265974, -0.030822592, -0.09105146, 0.25431794, -0.025544783, -0.05420803) * inp_3_0_1;
    result2 += M4(-0.19784577, 0.21524414, -0.024046307, -0.12109016, 0.015154698, 0.22978868, 0.111488335, 0.14914697, -0.30320916, -0.24378188, 0.26159608, -0.127502, -0.1403523, 0.11841476, -0.0370204, -0.38670272) * inp_3_1_1;
    result2 += M4(-0.1328479, 0.0038533218, 0.084447734, -0.049742285, 0.1931379, 0.008603574, -0.10543021, 0.030425668, 0.13293855, 0.021438876, -0.109526694, -0.07341959, -0.04248707, -0.024301521, 0.010946703, -0.027250947) * inp_3_2_1;
    result2 += M4(-0.6902066, -0.108738065, -0.060437456, -0.47835556, -0.022560261, 0.014441277, -0.047882285, -0.0388303, -0.05949209, -0.001905107, -0.0015972469, 0.023261314, 0.00938927, -0.17935234, -0.0030943349, -0.06603726) * inp_3_0_2;
    result2 += M4(-0.18597023, -0.030557906, -0.0863128, 0.014103612, 0.0067979945, 0.040555924, -0.028450686, 0.033556733, 0.042485055, 0.04334003, 0.07603231, 0.05164186, -0.12890899, 0.06417541, -0.07067657, -0.039691135) * inp_3_1_2;
    result2 += M4(0.07130664, -0.040046487, -0.05287365, -0.122670144, 0.0140242325, -0.0020328807, 0.011249256, 0.059827656, 0.041554194, 0.013056616, -0.04377092, -0.038486466, 0.07275451, -0.035372507, 0.0031974588, 0.04468379) * inp_3_2_2;
    result3 += M4(0.1802119, -0.34225163, 0.0060240626, 0.04418127, 0.07728356, -1.0383857, 0.030370196, 0.20695792, 0.019646775, 0.05384813, 0.044118866, 0.0010877864, 0.011349631, -0.022582464, -0.04365236, 0.013999602) * inp_3_0_0;
    result3 += M4(0.1482508, -0.14272997, -0.02221264, 0.17536172, 0.39534095, 0.08212112, 0.14597465, 0.4144991, -0.060378827, -0.0891992, -0.042422406, 0.028815217, -0.021242037, -0.16041616, -0.047101986, 0.11334545) * inp_3_1_0;
    result3 += M4(0.045287695, -0.00073709304, -0.007646727, 0.12966178, 0.3226362, 0.07417944, 0.005259562, 0.33995137, -0.042182785, -0.021802697, 0.05064202, 0.21888061, 0.026478037, 0.08579564, -0.005049521, 0.21746574) * inp_3_2_0;
    result3 += M4(0.09482832, -1.4198025, 0.21974587, -0.5535172, 0.08569916, -0.3645075, 0.2580222, 0.05808359, -0.07347753, -0.005786675, -0.10086361, 0.00058943185, -0.033853278, 0.1660203, -0.060719945, -0.06792415) * inp_3_0_1;
    result3 += M4(0.3590349, -0.10291577, 0.01827476, 0.28381482, 0.37221307, -0.6192082, 0.5691061, 0.10024929, 0.2517214, 0.1575198, 0.29606086, -0.013785393, 0.010139506, -0.58896536, 0.048143297, -0.060098) * inp_3_1_1;
    result3 += M4(-0.009875111, -0.102994524, 0.06821895, -0.12536599, 0.2666004, -0.6855443, 0.027887205, 0.03839774, -0.11940169, -0.100759484, -0.0084105935, -0.008461764, -0.004076226, -0.017315222, 0.035134338, -0.054515883) * inp_3_2_1;
    result3 += M4(-0.18289202, -0.7642114, 0.08687956, -0.16487616, 0.009732711, -0.024797423, 0.019254768, 0.026185414, -0.024160292, -0.09031976, -0.015341588, 0.01695019, -0.013726554, 0.025795162, -0.024101472, -0.03659675) * inp_3_0_2;
    result3 += M4(0.13826837, 0.14046381, -0.075956374, -0.011972677, 0.0682837, -0.003356551, -0.014055697, 0.051276535, 0.051134992, -0.04536314, 0.06424869, -0.0111763105, -0.10276134, 0.023321953, -0.06474141, -0.045443255) * inp_3_1_2;
    result3 += M4(-0.04053993, 0.111445315, -0.037090093, 0.059196223, -0.060359813, 0.098391734, -0.023469303, -0.024469832, -0.067187406, 0.06008487, -0.03516074, -0.0022713647, -0.0052286237, -0.0018443818, 0.004858288, -0.035992432) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0020244846, -0.015682139, -0.0011040512, -0.0014215678);
    V4 result1 = V4(-0.00047038018, -0.0030603097, 0.0012177353, -0.0101103885);
    V4 result2 = V4(0.0031863647, -0.08034487, -0.0049829134, 0.008954567);
    V4 result3 = V4(0.006154867, -0.0018690204, -0.0028274385, -0.0069631184);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.016280716, -0.09451353, -0.024786675, 0.04180871, 0.004256248, 0.027001008, 0.03380394, -0.047289874, -0.025133178, -0.046958767, 0.03820376, -0.10030981, -0.0009027495, 0.068263195, -0.060369503, 0.08441805) * inp_0_0_0;
    result0 += M4(-0.018819626, -0.035039645, -0.041060477, 0.1308173, -0.0115550095, 0.035335533, 0.050394956, -0.006166782, 0.008720875, 0.14199914, 0.118303925, -0.108161196, 0.011019164, -0.09547509, 0.035091974, -0.019259186) * inp_0_1_0;
    result0 += M4(0.00013838743, -0.018234042, 0.024930116, -0.018670954, 0.0035438156, 0.026977733, -0.012191812, -0.0070112008, 0.0004243699, -0.03634044, 0.04050501, 0.01203333, 0.00023356815, 0.011492375, -0.051140122, 0.030256772) * inp_0_2_0;
    result0 += M4(0.02796353, -0.032492764, -0.098075576, 0.113836125, 0.02265411, -0.07093371, -0.0631641, 0.043848403, -0.035534434, -0.06372118, 0.029579611, 0.0029900884, -0.0015762374, 0.45229772, -0.025810704, 0.0052017327) * inp_0_0_1;
    result0 += M4(0.02870454, -0.006936258, 0.2673352, -0.0034316143, -0.09836381, 0.015948275, -0.21388914, 0.1461437, 0.05754576, -0.06489074, 0.1421224, -0.17948917, 0.038990624, -0.014673482, -0.11363526, 0.017038722) * inp_0_1_1;
    result0 += M4(0.009367629, 0.022024656, -0.08050891, 0.051656067, 0.028652515, 0.022398757, 0.015870517, 0.037219442, -0.031260036, -0.07722186, 0.068978205, -0.02313954, -0.039603, 0.005683097, 0.025209192, -0.038366117) * inp_0_2_1;
    result0 += M4(-0.036400326, -0.03781416, 0.024196712, -0.048498087, -0.05843351, 0.03298684, -0.004606377, 0.0030678601, 0.0057862718, -0.09138895, 0.028676009, 0.011994191, 0.05867853, 0.3194063, 0.07267984, -0.09512056) * inp_0_0_2;
    result0 += M4(0.016382327, 0.04590351, -0.072442845, 0.04740413, 0.10532612, -0.00527788, 0.106629334, -0.06102205, -0.08330004, -0.050483596, 0.0036749423, 0.01028793, -0.112979665, -0.1443054, -0.08228548, 0.10577728) * inp_0_1_2;
    result0 += M4(0.0059326985, -0.07520514, -0.07668427, 0.03736658, -0.031689454, 0.03904999, -0.032047067, 0.021230536, 0.0056896247, -0.0036075355, -0.02207434, 0.04029524, 0.038793765, 0.046414908, 0.007945417, -0.0012851439) * inp_0_2_2;
    result1 += M4(-0.004110988, -0.075941846, -0.009172782, -0.064530715, -0.015207104, 0.024270115, 0.007995338, 0.014323263, -0.09281169, 0.05065206, 0.024763169, 0.025765518, 0.024651425, 0.03518126, 0.0028507398, -0.05829465) * inp_0_0_0;
    result1 += M4(0.027483203, -0.07458494, -0.01623684, -0.10181683, 0.028788894, 0.018267343, -0.016238732, 0.059463006, -0.07714755, 0.059523888, -0.06929109, 0.007252665, -0.0043849293, 0.035540216, -0.02278289, 0.16682854) * inp_0_1_0;
    result1 += M4(0.01712518, -0.009852338, 0.00507661, -0.014440276, -0.02540345, 0.027288929, -0.005535216, 0.055525675, 0.06935298, 0.019567858, 0.0074509447, 0.04815452, -0.04288979, 0.022529073, 0.02669738, 0.038637772) * inp_0_2_0;
    result1 += M4(0.07545067, -0.018969102, -0.0659234, 0.019306496, 0.016583847, -0.07259684, -0.011258803, -0.060728766, -0.0065121287, 0.060610227, 0.006728119, 0.025188496, 0.10138139, -0.038181394, 0.005094984, -0.04793261) * inp_0_0_1;
    result1 += M4(0.12332543, 0.11923744, 0.12088272, 0.2067078, -0.26797023, 0.08061988, -0.021256566, -0.26720965, 0.025725303, 0.2732745, 0.04997916, 0.36199895, 0.11518712, -0.010820736, -0.13001227, -0.22478263) * inp_0_1_1;
    result1 += M4(-0.030772936, 0.01714667, -0.032587778, 0.08686629, -0.0073873736, -0.069240525, -0.046110798, -0.0051606917, -0.06178015, 0.01732124, -0.049415592, 0.057822928, -0.025241217, -0.050190955, 0.0569573, -0.014491582) * inp_0_2_1;
    result1 += M4(0.041453972, 0.013140734, -0.088895015, -0.014117889, -0.06683837, 0.079296306, -0.08013863, 0.14806475, -0.00983415, 0.03550585, -0.064045705, 0.04689278, 0.11780446, -0.06504561, -0.030914733, 0.0998221) * inp_0_0_2;
    result1 += M4(-0.051322527, -0.06759722, 0.1592365, -0.12976584, 0.0880508, 0.2253419, 0.024330419, 0.2719817, -0.0033736564, -0.25051183, -0.053215455, -0.04540154, 0.013305829, -0.06641453, -0.21521215, 0.004220919) * inp_0_1_2;
    result1 += M4(-0.0021835982, 0.045811757, -0.09000352, 0.023768777, -0.026262926, 0.123238064, -0.012157109, 0.32959515, -0.0025579934, -0.028792746, 0.0036023767, -0.035322722, -0.015225405, -0.012067504, 0.030307032, -0.0784986) * inp_0_2_2;
    result2 += M4(-0.017121391, -0.013554774, 0.006333235, 0.016816162, -0.013896526, 0.04954355, 0.016584624, -0.024168324, 0.01272958, 0.05843041, 0.004798456, 0.02173285, 0.018855423, -0.029392846, 0.03377332, -0.07005174) * inp_0_0_0;
    result2 += M4(0.041031923, -0.07516192, 0.020001838, -0.086685345, -0.010652625, -0.10903683, -0.043359347, -0.0147532, -0.044656914, 0.018923093, 0.05010531, 0.031623956, -0.007779188, 0.01961093, -0.047745332, 0.005027169) * inp_0_1_0;
    result2 += M4(-0.02960708, -0.10139728, 0.0044965497, -0.020972732, -0.002279693, 0.06917721, 0.033042885, 0.009696459, -0.029761873, -0.019998953, -0.06342004, 0.02005721, 0.010808461, -0.09197292, 0.10898919, -0.026145618) * inp_0_2_0;
    result2 += M4(0.029394861, -0.013412287, -0.02263483, -0.12024974, -0.036172956, 0.035249278, -0.030440308, -0.015451982, -0.013104253, -0.025810167, -0.018872658, -0.03795732, 0.038247377, 0.060806684, -0.11427043, -0.20565185) * inp_0_0_1;
    result2 += M4(-0.071797214, 0.041385993, -0.039252393, -0.05026295, 0.0012684626, 0.048063233, 0.098594956, -0.04547213, -0.34561142, -0.042630572, -0.13733348, -0.18609928, -0.011947987, 0.042077783, 0.18927738, 0.09748514) * inp_0_1_1;
    result2 += M4(-0.055163454, -0.016121335, -0.09271761, -0.0044253473, 0.038503483, -0.050231118, -0.21406785, -0.031820677, -0.041859474, -0.01981626, -0.01899995, -0.04003569, -0.025330706, -0.074817814, -0.05990597, -0.0048042336) * inp_0_2_1;
    result2 += M4(-0.11557865, -0.10057176, 0.0055491007, -0.015734123, 0.022162521, -0.10275917, 0.006743755, -0.01647862, -0.025840184, 0.049695022, -0.028621683, -0.014166169, -0.042985585, -0.017574267, 0.04334483, -0.08415647) * inp_0_0_2;
    result2 += M4(-0.12618701, 0.017956238, -0.0035254327, 0.047449023, 0.09960947, -0.07405793, -0.03006496, 0.025669036, -0.042754386, -0.013649736, 0.020515839, -0.02531098, -0.024481691, -0.055876963, -0.031526472, 0.0428919) * inp_0_1_2;
    result2 += M4(-0.077382214, -0.039835043, 0.0017567681, -0.014061262, 0.05645371, 0.07092343, -0.08104386, 0.0010956469, -0.0030745761, 0.010934012, 0.0003318806, -0.01673656, -0.023932952, -0.04107293, 0.0113360025, -0.00087848306) * inp_0_2_2;
    result3 += M4(0.03161372, -0.05733291, 0.050645385, 0.01632597, 0.0005959741, 0.012800567, -0.0045882706, 0.003662344, -0.068308964, 0.116856895, -0.11688003, -0.08542632, -0.016680086, 0.097745605, 0.12617582, 0.25841552) * inp_0_0_0;
    result3 += M4(-0.029911136, 0.14243479, -0.0021328058, 0.17455623, -0.005628686, 0.013853684, -0.024597561, -0.048991464, 0.02571066, -0.093978316, 0.15311226, 0.02040859, -0.0007111612, 0.18046808, 0.16156358, 0.011398122) * inp_0_1_0;
    result3 += M4(0.015877666, -0.1286103, 0.0099474285, 0.0077347187, 0.005841207, 0.09577534, 0.015645962, -0.006111499, -0.010054125, -0.13363126, -0.022893287, -0.033678476, -0.023425646, 0.07955629, -0.08748127, -0.029367559) * inp_0_2_0;
    result3 += M4(-0.0329043, -0.17762156, 0.122449905, 0.39728057, 0.123264804, -0.026433574, 0.006547376, -0.19196467, 0.09402502, -0.13779338, 0.09200906, 0.10791117, -0.089899875, -0.0148891695, 0.15077178, -0.121827) * inp_0_0_1;
    result3 += M4(0.032029387, 0.28789294, 0.08764352, 0.07255008, 0.03305299, 0.048974663, -0.059489537, 0.0063009583, -0.068687946, -0.06480888, -0.04093628, -0.16442145, 0.056041367, -0.21985635, 0.33444235, 0.15585795) * inp_0_1_1;
    result3 += M4(0.028619124, -0.09880761, 0.09992303, 0.033928588, -0.007993907, 0.026926477, -0.037201833, -0.050631497, -0.002062811, 0.15804788, 0.004920377, -0.048240885, 0.0041685603, 0.13262282, -0.009485761, -0.014611966) * inp_0_2_1;
    result3 += M4(-0.04084945, -0.17881201, -0.017171362, 0.17067336, -0.040063087, 0.10197221, -0.12530367, -0.00057625154, -0.003499567, -0.021062074, 0.02136058, -0.007835784, -0.037002306, 0.10727908, 0.10038394, 0.030456189) * inp_0_0_2;
    result3 += M4(0.057057377, 0.086893424, -0.01726554, 0.1514893, -0.031713516, -0.014417857, 0.02057127, -0.039126813, 0.00914274, -0.011566874, 0.0031529209, -0.05944635, 0.008245336, 0.10179687, 0.03615454, -0.10707722) * inp_0_1_2;
    result3 += M4(-0.017371904, -0.011571906, -0.0038922045, -0.01834843, -0.0019885118, -0.07114048, -0.0029510998, 0.0053064707, 0.004176108, 0.08483299, -0.01821487, -0.027404072, -0.020919643, 0.073689096, -0.04425017, 0.0026225962) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0014745623, -0.13284244, 0.025794953, 0.034138996, 0.0168233, 0.029493676, -0.06248857, 0.07343543, 0.037695624, 0.29634738, -0.064976886, 0.0240187, 0.023601783, 0.17377213, 0.006433776, -0.031901844) * inp_1_0_0;
    result0 += M4(0.082439125, -0.19604602, 0.20972987, -0.083694786, -0.09793729, -0.044946857, -0.088129655, 0.17912628, -0.24373397, 0.20053074, 0.03975232, -0.3479906, -0.00032395305, 0.04462769, -0.055092998, 0.05056105) * inp_1_1_0;
    result0 += M4(-0.049136527, 0.0443964, -0.005003084, 0.079228245, 0.013142325, 0.06714816, -0.03802925, 0.005629588, -0.15170696, -0.01944953, -0.11437599, 0.20612012, 0.017528802, 0.036485545, -0.07149236, -0.052173425) * inp_1_2_0;
    result0 += M4(-0.00012350128, -0.2029789, -0.021558356, 0.06260456, -0.002360004, -0.07565895, -0.088335216, 0.0995302, -0.0037598063, -0.26519224, -0.033907752, 0.00078212447, -0.015212159, 0.21817122, -0.00911046, -0.06531938) * inp_1_0_1;
    result0 += M4(-0.008456957, 0.018020317, -0.23960942, 0.20916538, -0.0188591, 0.087538786, -0.25875783, 0.2656257, 0.14557694, 0.22274444, -0.10237766, 0.04881641, 0.15055928, -0.12942529, -0.011681333, 0.027593976) * inp_1_1_1;
    result0 += M4(0.043492094, 0.06478596, -0.0071199513, 0.074795425, -0.08248519, 0.012698592, -0.17512964, 0.1726882, 0.1512465, 0.38664937, 0.13249591, -0.10928006, -0.0674754, -0.0017275455, 0.035503, -0.1310795) * inp_1_2_1;
    result0 += M4(-0.027804572, -0.19167337, 0.008871159, -0.034871556, -0.025851866, -0.20287067, -0.0030769978, -0.026788466, 0.013791265, 0.24727224, 0.027577728, -0.00024927696, 0.056156334, 0.22635391, -0.04120571, -0.012194689) * inp_1_0_2;
    result0 += M4(0.06685339, 0.25879657, -0.005444386, 0.02678101, 0.10365845, 0.18076214, -0.055250924, 0.049483716, 0.064019054, 0.03579741, 0.013582617, 0.046475332, -0.06621353, -0.20381151, -0.061456546, 0.00080194545) * inp_1_1_2;
    result0 += M4(0.018578816, -0.030139878, 0.03824359, -0.00995391, -0.031725887, -0.04640879, -0.02407787, 0.0020567484, -0.01975695, -0.04696168, 0.009718256, 0.011412686, 0.036579385, 0.06726593, -0.026699537, -0.010354121) * inp_1_2_2;
    result1 += M4(0.0685388, -0.02441808, 0.025440274, 0.12050229, 0.030404298, -0.009653923, -0.005315266, 0.035971485, 0.06394242, 0.038128026, -0.07064337, 0.11812669, -0.028383235, -0.022810271, 0.031198086, 0.084813595) * inp_1_0_0;
    result1 += M4(0.39653367, -0.05473544, 0.01273471, 0.21153966, -0.013985715, -0.09735094, 0.00043260228, -0.22203684, -0.2218706, -0.17285949, 0.11723506, -0.25946796, 0.090875596, -0.04734114, 0.04186324, -0.09054845) * inp_1_1_0;
    result1 += M4(-0.015412558, 0.01930529, 0.06359789, 0.13340619, -0.097076364, -0.023348635, 0.030579489, -0.050339192, 0.13115498, 0.020069186, 0.17483756, -0.41621074, -0.05443674, -0.018599885, -0.039947964, -0.21041897) * inp_1_2_0;
    result1 += M4(0.026905697, 0.0004092412, 0.061806872, -0.050588444, -0.019017834, -0.041856997, 0.014251772, -0.013646547, 0.04494519, -0.13904701, -0.04559487, -0.033784464, -0.06516647, 0.032379344, 0.07407032, -0.07955515) * inp_1_0_1;
    result1 += M4(-0.082865044, 0.089381225, 0.04605266, -0.23956585, -0.1226617, -0.16988426, 0.11245582, -0.06322338, -0.11472981, -0.5403811, 0.3207914, -0.3576454, 0.21706559, 0.021989431, -0.039626975, -0.025320962) * inp_1_1_1;
    result1 += M4(0.019667523, 0.07898531, 0.09844766, -0.03000245, -0.030406449, -0.046444047, 0.09689406, 0.025534308, -0.017723091, -0.07756848, 0.04245318, 0.20938654, -0.06530193, -0.1037809, 0.07973914, -0.013363418) * inp_1_2_1;
    result1 += M4(0.021846985, 0.024988282, 0.0057645524, 0.0028111301, -0.008282299, 0.01562626, -0.016985036, 0.031013528, 0.0029385767, 0.08661091, -0.025347477, -0.0024241402, -0.042972483, -0.060276926, 0.015036954, 0.0010753912) * inp_1_0_2;
    result1 += M4(-0.031328604, 0.26660267, 0.07664489, 0.16375898, 0.023036057, 0.013852759, 0.15217581, 0.014570563, -0.0076159523, 0.17795241, 0.112383336, 0.14107612, -0.0059986995, -0.17106633, 0.0571181, -0.071514614) * inp_1_1_2;
    result1 += M4(0.005184838, 0.11456159, -0.023802087, 0.03556988, -0.037217006, 0.07830845, -0.027299736, 0.002517088, -0.033885945, -0.039563328, -0.010608271, -0.018715633, -0.035057325, -0.026127864, 0.08694836, -0.0054186424) * inp_1_2_2;
    result2 += M4(0.00088383514, -0.101299174, -0.025216945, -0.034410235, -0.0127666425, -0.10592181, -0.009310064, 0.04499417, 0.029776858, 0.023688786, -0.02985316, -0.08661997, -0.017031334, 0.025365459, 0.004367092, -0.00037727968) * inp_1_0_0;
    result2 += M4(0.03217717, -0.026685806, -0.057991415, -0.15415226, 0.03479572, -0.100697175, -0.010710841, -0.12427554, -0.09770919, -0.026831012, 0.051376898, 0.16164026, 0.021939395, -0.005445632, 0.048360195, -0.059399046) * inp_1_1_0;
    result2 += M4(-0.034086823, -0.034684952, 0.34832183, -0.056390088, -0.020135801, -0.046444923, -0.18553616, -0.034824826, -0.02378348, 0.06893431, -0.32336873, -0.27788612, -0.006146167, 0.054336265, 0.09372738, 0.011284089) * inp_1_2_0;
    result2 += M4(-0.030692466, -0.00068993797, 0.01413064, 0.033027392, 0.019786065, -0.06281158, 0.011830655, 0.053650435, -0.0682053, -0.07978753, 0.0047609257, -0.0071143275, -0.034483545, -0.008154875, 0.010666087, 0.023851829) * inp_1_0_1;
    result2 += M4(0.12080309, -0.08398432, 0.102972165, 0.1199657, 0.35532, -0.080990165, -0.04096103, 0.19808403, -0.030612836, 0.040882915, -0.03447434, 0.13412231, 0.038681276, -0.055337694, 0.050936703, 0.00898236) * inp_1_1_1;
    result2 += M4(0.0709368, -0.0895585, -0.01713442, -0.029194212, 0.14898899, -0.107177846, 0.1659752, 0.052415896, 0.012041125, 0.032675523, -0.043637536, -0.06041099, -0.049442723, 0.0060678674, 0.10359657, -0.039000828) * inp_1_2_1;
    result2 += M4(0.008776425, -0.036892373, 0.0129379, 0.0008431515, 0.024452487, -0.08523667, -0.015826674, -0.010828819, 0.0032453865, -0.08653794, -0.021267666, -0.023580253, 0.019666495, 0.052922986, -0.012541726, 0.0088650985) * inp_1_0_2;
    result2 += M4(0.021137921, -0.035755247, -0.05208792, 0.02294514, 0.08439572, -0.042115584, 0.03701282, 0.05460533, -0.021332318, -0.046354268, 0.023047546, 0.007161174, 0.017373424, 0.027218603, -0.0002882007, 0.015971286) * inp_1_1_2;
    result2 += M4(-0.020173294, -0.09898808, 0.015353944, -0.0004905661, 0.06709483, 0.022842176, -0.0028756787, 0.03191641, 0.016449042, -0.01715558, -0.033975918, 0.010980967, 0.013415241, 0.039882608, -0.042600222, -0.017603733) * inp_1_2_2;
    result3 += M4(0.02746553, -0.16629344, -0.0143274, 0.025420362, 0.103734925, -0.06227219, 0.025846234, -0.068505995, -0.0132758245, -0.31554872, 0.078109816, 0.42165777, -0.07775312, 0.17279406, -0.088325836, -0.03455562) * inp_1_0_0;
    result3 += M4(-0.018827423, -0.24739586, 0.057703458, 0.027489329, -0.0736315, -0.091627836, -0.067060865, 0.095965326, -0.72518396, 0.9288294, -0.37098297, 0.1078158, 0.005925906, -0.0840586, 0.11575433, -0.00038858576) * inp_1_1_0;
    result3 += M4(-0.016001875, 0.046399347, -0.12878822, 0.047014553, -0.038883206, 0.17218214, -0.17295748, -0.034868576, -0.22024581, 0.8495382, -0.06523128, -0.08905749, 0.027489407, 0.03123212, -0.10469209, -0.04036882) * inp_1_2_0;
    result3 += M4(-0.022940269, 0.030153805, 0.00065411086, -0.1471696, -0.018851802, 0.012936166, 0.0061665266, 0.071996704, -0.036053598, -0.054378796, 0.10645233, 0.02843003, -0.044597942, 0.089478426, -0.049643084, -0.11697662) * inp_1_0_1;
    result3 += M4(0.101559915, -0.1023828, -0.20873185, 0.023859363, 0.06626876, -0.19672233, -0.19668531, -0.042994082, -0.11009411, 0.27017376, 0.074846745, 0.17594554, -0.1239597, -0.041703407, -0.021336572, -0.0073890374) * inp_1_1_1;
    result3 += M4(0.0030859064, -0.068611436, 0.05788131, 0.056271564, 0.03316157, 0.014038371, -0.0015513067, 0.05088129, -0.040776324, 0.2748596, -0.07179239, -0.03987189, -0.02739114, 0.10933556, -0.08721891, -0.037946083) * inp_1_2_1;
    result3 += M4(0.0082476, 0.04533109, 0.039609637, -0.052331544, -0.00031017727, -0.11259322, 0.027292257, -0.011484536, 0.020742558, -0.05057053, 0.102109276, 0.08704508, 0.0053495467, 0.0030693545, -0.010827123, -0.025639607) * inp_1_0_2;
    result3 += M4(0.010698576, -0.006034059, -0.06265688, 0.049049966, 0.021905985, 0.14689597, -0.03130629, 0.0936608, -0.030720145, 0.052898485, 0.006677707, 0.034630127, 0.01641264, 0.03299258, -0.018843707, -0.05701455) * inp_1_1_2;
    result3 += M4(-0.0091476105, -0.15368642, 0.038749, 0.029286258, 0.009333864, -0.13901848, 0.010522798, 0.031607307, -0.019016482, 0.09165295, 0.046687767, -0.031166192, -0.0116, 0.15376727, 0.020766169, 0.0056923297) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.029434076, 0.24161273, 0.056997765, -0.07861143, 0.0142565835, -0.4382781, 0.03648147, -0.057089042, -0.0013928842, 0.011928775, -0.0021671776, -0.03020127, 0.0058590905, -0.11134627, -0.013190511, -0.016279371) * inp_2_0_0;
    result0 += M4(0.044514906, -0.061013658, 0.1088631, -0.099773355, -0.08138273, 0.06719494, -0.11658461, -0.011502799, 0.00901141, -0.09636644, -0.004606888, -0.026439624, 0.027080363, -0.06498663, 0.09295698, -0.16507797) * inp_2_1_0;
    result0 += M4(0.005212237, 0.0050736624, -0.010069671, 0.01654404, 0.03740692, 0.09474799, 0.021935113, -0.060842603, 0.008890122, 0.018089127, 0.038992304, -0.023604676, -0.0012031129, -0.057178833, 0.012294311, -0.05393685) * inp_2_2_0;
    result0 += M4(0.015929608, 0.32412702, 0.08220798, -0.05078546, 0.013713381, -0.16083677, -0.065781906, -0.0298594, -0.07794488, 0.10944945, 0.141936, -0.1455422, 0.10596286, -0.034164585, -0.04297236, 0.10273403) * inp_2_0_1;
    result0 += M4(-0.10983648, -0.23933445, -0.08452047, 0.3211333, -0.010101034, -0.34147045, -0.05571183, -0.06596097, -0.02908768, 0.017928591, 0.2805961, -0.36271003, 0.010881913, 0.015064838, 0.068384334, 0.16235092) * inp_2_1_1;
    result0 += M4(0.017846527, 0.007543214, 0.06353306, -0.09143559, -0.130163, -0.12115492, -0.054701865, -0.08118045, 0.038326543, -0.03518244, 0.19445758, -0.1490316, 0.055265874, -0.018550953, -0.038665023, 0.03761432) * inp_2_2_1;
    result0 += M4(0.0069818245, 0.33258134, -0.021141155, 0.051493224, -0.040715095, -0.6147569, -0.03604917, -0.022747528, 0.06964059, 0.17000408, -0.00036130843, -0.009487781, -0.058886148, -0.039382607, 0.02551982, -0.030881904) * inp_2_0_2;
    result0 += M4(-0.04833944, -0.06430051, 0.059660517, -0.096573316, -0.17423196, -0.051705595, 0.006790255, 0.009808893, -0.22054654, -0.06143163, 0.06320544, -0.04570271, 0.31682324, -0.03293704, 0.08060901, -0.13578758) * inp_2_1_2;
    result0 += M4(0.025624914, 0.10944904, 0.045479782, -0.065764934, -0.07661969, 0.16138661, -0.072748505, 0.09074158, -0.0118312305, -0.0050301915, 0.11844993, -0.13361175, 0.034798067, 0.037368767, -0.0397172, 0.0033132974) * inp_2_2_2;
    result1 += M4(-0.059005976, 0.06459598, 0.020368969, 0.059837703, 0.004180234, 0.112903416, 0.017065598, 0.15681916, -0.029811503, 0.028508784, -0.0035462365, -0.020294603, -0.033317912, 0.003998357, 0.030255701, -0.0142706325) * inp_2_0_0;
    result1 += M4(0.05379134, 0.04803615, 0.007242097, 0.2795021, -0.067803666, -0.107070744, -0.0047722342, -0.59584147, 0.040691752, -0.0073846444, 0.028246338, 0.06427352, 0.025985938, 0.0016362414, -0.014827271, 0.12804) * inp_2_1_0;
    result1 += M4(-0.018245772, -0.018704005, 0.02235973, 0.05142491, 0.07020166, 0.033612937, 0.0016403804, -0.16022336, 0.013155967, 0.0071719596, 0.0144823, -0.024170076, -0.031039644, 0.0479767, 0.03459589, 0.0024045536) * inp_2_2_0;
    result1 += M4(-0.057451125, -0.040285338, -0.03979028, -0.1005332, -0.00065414555, -0.5183846, 0.032330018, -0.12584844, -0.013074514, -0.008933238, 0.011386894, -0.046977226, 0.1778484, -0.104567245, -0.0011965515, -0.012614921) * inp_2_0_1;
    result1 += M4(0.40066266, -0.2283416, -0.06245727, -0.03937208, 0.067119025, -0.33389372, -0.118139915, -0.9110553, 0.041430604, 0.05282223, -0.09585501, -0.12261118, -0.10554582, -0.09489127, -0.04111584, 0.08132188) * inp_2_1_1;
    result1 += M4(-0.08727217, -0.05436184, -0.0043850685, -0.03697162, 0.0047837077, -0.30515692, 0.030791461, -0.586397, -0.04374244, 0.07974142, 0.10966138, 0.091821454, 0.051501773, -0.060697746, -0.10386515, -0.14232229) * inp_2_2_1;
    result1 += M4(-0.026030816, 0.3159437, 0.10993397, 0.057848793, -0.044318143, -0.015384735, 0.016695052, -0.0029169545, 0.0052098734, -0.036211908, 0.0323404, -0.02571617, 0.06614779, 0.05548779, -0.14141199, -0.04773786) * inp_2_0_2;
    result1 += M4(0.025135625, 0.43292436, 0.08227542, -0.07301973, -0.03407832, -0.43971545, -0.048606392, -0.137531, -0.040123064, -0.18599354, -0.11342567, -0.011263724, -0.027472364, 0.3907779, 0.23892245, 0.05600426) * inp_2_1_2;
    result1 += M4(0.044869635, 0.109121814, 0.096937805, -0.02477389, 0.022619413, -0.19113973, -0.04416922, 0.097086996, -0.0121490685, -0.07728936, 0.15164748, -0.12832636, 0.03116953, 0.004428146, -0.039878823, 0.025711076) * inp_2_2_2;
    result2 += M4(0.013062121, -0.09916534, 0.013858197, -0.06533259, -0.0011306665, -0.10877217, -0.021586597, -0.0068751276, -0.0011753333, -0.019224208, -0.0018287031, -0.03255494, -0.0111712925, -0.013648513, 0.023258828, -0.013811766) * inp_2_0_0;
    result2 += M4(-0.052192014, -0.041465253, -0.0878174, -0.028315011, 0.0120050525, -0.07934849, -0.032446098, -0.063216306, 0.009672716, -0.07984663, -0.006601082, 0.07171305, -0.05844754, -0.06118074, 0.04396732, 0.06511599) * inp_2_1_0;
    result2 += M4(-0.016876668, -0.031748243, -0.034117285, -0.049315784, 0.035170685, -0.08311499, -0.5830981, -0.06390101, 0.03156037, -0.048165653, -0.021780785, -0.017119795, -0.010186039, 0.061549574, 0.046380885, 0.019536234) * inp_2_2_0;
    result2 += M4(-0.04207875, -0.05220423, -0.050206926, -0.061296865, -0.028968103, -0.10039586, -0.001752798, -0.030277286, -0.028702665, -0.070345186, -0.0037967758, 0.0180385, 0.061082717, -0.0651789, -0.027763806, -0.12676862) * inp_2_0_1;
    result2 += M4(-0.106680766, -0.013248729, 0.07465672, -0.1295314, -0.036436833, 0.0656159, 0.07223375, -0.14574927, -0.091421954, -0.039755166, 0.063225485, 0.12827666, -0.029445473, -0.09810863, 0.10129147, -0.10833843) * inp_2_1_1;
    result2 += M4(-0.10318359, 0.054779544, 0.034837373, -0.036706142, -0.029002393, -0.01572003, -0.6256471, -0.0671075, -0.116984785, -0.08157063, -0.3920793, -0.07166519, 0.042700425, -0.055708043, 0.34480235, 0.022375626) * inp_2_2_1;
    result2 += M4(0.011691328, -0.0534039, 0.03831463, -0.0055954335, -0.045341544, -0.108432785, -0.010802335, -0.0022066312, 0.021408904, -0.10020454, -0.006548187, -0.03366434, -0.048272848, -0.012830161, 0.0049601947, -0.008246072) * inp_2_0_2;
    result2 += M4(-0.18289809, -0.11402099, -0.029434994, -0.002864785, -0.12363852, -0.09988371, -0.066808, -0.017407048, -0.18285538, 0.016256167, 0.030835424, -0.10403967, -0.227037, 0.010093041, -0.079803, -0.072105646) * inp_2_1_2;
    result2 += M4(0.022322396, -0.08916807, -0.07650155, -0.00836604, -0.07417496, -0.08434237, -0.06450053, 0.011441568, 0.039044734, -0.00084078097, -0.019758606, 0.025770515, -0.0019455758, -0.005579194, 0.08265535, -0.002815966) * inp_2_2_2;
    result3 += M4(-0.10019786, 0.1574626, -0.091970585, 0.065895565, 0.017819906, 0.17792124, 0.00033758467, -0.35337496, -0.05643278, 0.0983692, -0.04784796, 0.047305133, -0.038680848, -0.39793724, 0.017305579, 0.09311038) * inp_2_0_0;
    result3 += M4(-0.03654211, -0.09031951, 0.085138194, 0.014737552, 0.018750945, -0.7098079, -0.09723449, -0.120143875, 0.015202429, -0.15813692, 0.036602523, -0.05826613, 0.02482591, 0.20419788, 0.13315155, -0.17189726) * inp_2_1_0;
    result3 += M4(-0.010841215, 0.016986018, -0.04750419, -0.030158518, -0.035632186, -0.40807322, -0.13499399, 0.11201494, -0.019485308, 0.03221709, -0.060263332, 0.004265313, 0.0036829014, -0.0012652193, 0.08906427, 0.019595867) * inp_2_2_0;
    result3 += M4(-0.23951335, 0.054988842, -0.1268563, -0.09794043, -0.009845728, 0.009906131, -0.013807979, -0.12634307, -0.054256212, 0.116349116, -0.016083797, -0.14267808, 0.019448482, -0.21557078, 0.18878065, 0.10835628) * inp_2_0_1;
    result3 += M4(-0.19621, 0.023454303, 0.16416651, -0.06277605, -0.035159692, -0.23458852, -0.035641752, -0.45317855, -0.30201358, -0.11539603, -0.022352481, -0.037609026, 0.043103073, 0.44492832, 0.031637177, -0.015140321) * inp_2_1_1;
    result3 += M4(-0.059017263, 0.006166867, -0.1341327, -0.021000655, 0.0042578387, -0.5177771, 0.11352276, 0.10536966, -0.075548075, 0.079053335, -0.11834175, -0.013306981, 0.0417084, -0.22310248, 0.064679086, 0.03076931) * inp_2_2_1;
    result3 += M4(0.009179042, 0.24106514, -0.098640054, 0.11666157, 0.01293787, 0.11537936, -0.009527154, -0.1154804, -0.003346187, 0.06213897, -0.014894479, -0.00491188, 0.039755467, -0.019042758, -0.0087506985, -0.07580379) * inp_2_0_2;
    result3 += M4(-0.048498616, -0.087909915, 0.078896336, -0.10302848, -0.012046886, 0.059064105, 0.0032332689, 0.035586804, -0.05480393, -0.006894852, 0.02420171, -0.09508771, -0.0790854, 0.013813792, 0.019227676, 0.036283683) * inp_2_1_2;
    result3 += M4(0.0047459244, 0.046236165, -0.0124608, -0.025256684, -0.0010231705, 0.24517842, -0.037828382, -0.067535974, -0.0031323587, 0.19748779, 0.014295914, -0.0552059, -0.0018734622, -0.12676099, 0.01450207, 0.009166876) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.057299264, 0.17573285, 0.06567107, -0.10352792, -0.0025131968, -0.007962057, -0.029329883, -0.029361963, -0.021748567, -0.18182378, -0.00037372258, 0.043050326, -0.015203819, 0.28035372, -0.049726207, -0.010664693) * inp_3_0_0;
    result0 += M4(-0.009680182, 0.1927293, -0.005392846, 0.012064898, -0.0024537758, 0.071008645, -0.016370252, 0.001751736, -0.0122428695, -0.10557206, -0.036209717, 0.07369133, 0.066352434, -0.20231739, -0.04158456, 0.09414967) * inp_3_1_0;
    result0 += M4(0.037597347, -0.02496926, -0.0012234685, -0.03173276, 0.032382254, 0.0670959, 0.0017941922, 0.032334924, 0.026496766, 0.031788893, -0.03411994, -0.068833016, -0.05187747, 0.071070425, 0.010591164, 0.0135149835) * inp_3_2_0;
    result0 += M4(0.10105702, -0.86559874, 0.06376528, 0.02057833, -0.10924229, -0.11341885, 0.018393515, 0.032026578, 0.008798236, -0.138978, -0.019959414, 0.016800275, -0.025315786, -0.035737164, 0.06741974, -0.28795576) * inp_3_0_1;
    result0 += M4(0.030157426, 0.037054647, 0.08743625, -0.21843207, -0.100086085, -0.03368393, -0.07789387, -0.13923919, 0.19578499, -0.07927253, -0.066642694, 0.1511688, 0.08858858, -0.000119671226, 0.044013396, 0.02575323) * inp_3_1_1;
    result0 += M4(0.036030017, 0.04749873, -0.011191791, 0.057746, 0.011759456, 0.032657787, -0.071228124, 0.03918419, -0.03434482, -0.11208948, -0.08062719, 0.067935914, 0.005594844, -0.09601547, 0.004392337, 0.06236328) * inp_3_2_1;
    result0 += M4(0.0759555, -0.32502282, -0.015103403, -0.0482752, 0.11776842, -0.12740332, -0.0023596594, 0.042543124, 0.0030780828, -0.10363869, -0.023951754, 0.015689027, -0.1751852, 0.2335523, -0.05826136, -0.24739145) * inp_3_0_2;
    result0 += M4(0.046932414, 0.14655413, 0.026329566, -0.051629722, -0.18923847, 0.02858838, 0.015507789, 0.072046615, -0.11324331, -0.019826327, -0.058639172, 0.058021132, -0.2493323, -0.15827361, -0.048978955, 0.13365492) * inp_3_1_2;
    result0 += M4(-0.058023214, -0.023307197, 0.043554094, -0.056952327, -0.008556744, 0.05654501, 0.056576073, -0.01800822, 0.024274217, -0.0056302994, -0.045373384, 0.021071877, 0.0299947, 0.038761508, 0.0020870878, -0.07892384) * inp_3_2_2;
    result1 += M4(0.0037339546, 0.15146713, -0.03801911, 0.25351942, -0.0518886, 0.100201994, -0.0078037595, 0.02888048, 0.009513219, -0.09555161, 0.0018767262, -0.12638633, -0.020083863, 0.044566803, -0.057508815, -0.02865281) * inp_3_0_0;
    result1 += M4(0.030742966, 0.07391587, -0.02862645, 0.23040646, 0.05048587, -0.08119551, -0.017062254, -0.17192529, 0.09364216, -0.106357194, -0.019397337, -0.20338356, 0.0348207, -0.09202704, -0.033741336, -0.13624606) * inp_3_1_0;
    result1 += M4(-0.01212621, -0.010621722, -0.062287558, 0.0052469643, -0.017612383, 0.03737539, 0.008962748, 0.22449894, 0.020138543, 0.056521263, -0.04371035, -0.019001389, -0.04687733, -0.06797063, 0.09293438, -0.15613736) * inp_3_2_0;
    result1 += M4(-0.0034938795, 0.039180744, -0.0070752897, 0.055915743, 0.09295624, -0.09028288, -0.07668217, 0.05137229, 0.028557051, 0.05932142, 0.01629935, 0.035232384, 0.021504065, 0.15239795, 0.0667824, 0.36485276) * inp_3_0_1;
    result1 += M4(-0.30505604, 0.063704126, 0.068078764, -0.09853054, -0.38125116, 0.15764482, 0.102445774, -0.043853942, 0.23103915, 0.11582879, -0.2238146, 0.24449621, 0.1194464, 0.13822412, 0.0859431, 0.39032286) * inp_3_1_1;
    result1 += M4(0.024626901, 0.018160492, -0.02349175, 0.013679791, 0.036928292, -0.06332558, -0.06838933, -0.32137474, 0.03499682, -0.119261324, -0.20826016, -0.041751865, 0.027370388, 0.10410249, 0.032914966, 0.32526168) * inp_3_2_1;
    result1 += M4(-0.043523595, 0.19386597, 0.12615757, -0.047901276, -0.043354172, -0.015448588, 0.031418588, 0.009312553, 0.0030873537, -0.15344873, -0.000976869, -0.04646874, -0.027908435, -0.5086894, -0.16412807, -0.87042063) * inp_3_0_2;
    result1 += M4(0.013684666, 0.01904376, 0.19995908, 0.013304994, 0.054554407, -0.2784321, -0.18387134, 0.060292933, 0.032576226, -0.2102855, -0.19430235, -0.0758965, 0.08306874, -0.18316658, -0.15593073, -0.40706202) * inp_3_1_2;
    result1 += M4(0.033996895, 0.0493268, 0.0073582395, 0.056261837, -0.021137774, 0.13786644, 0.029726682, 0.032672215, 0.009227426, -0.03244514, -0.16314791, 0.0030736008, -0.093455486, -0.039233018, 0.033336714, -0.19967456) * inp_3_2_2;
    result2 += M4(-0.008535297, -0.07117358, -0.059259333, 0.04169845, -0.0076109855, -0.036585018, -0.021512402, 0.046500918, -0.0007387209, -0.018527605, 0.006731989, 0.038478654, 0.010560383, -0.096193634, -0.007550152, 0.033467945) * inp_3_0_0;
    result2 += M4(0.00036340908, -0.07554126, 0.047488432, -0.0019321353, 0.011695685, 0.040234722, 0.035890985, 0.030726954, -0.005265255, 0.006582353, -0.040759247, 0.06359723, 0.043344945, 0.04278196, -0.017652864, 0.025212876) * inp_3_1_0;
    result2 += M4(0.00351903, -0.069682136, 0.057790723, 0.03660964, -0.0075747636, 0.06937519, -0.1362351, 0.022068178, 0.0071445266, -0.016671728, 0.2211132, 0.13671322, -0.009014562, -0.03295465, 0.22760054, -0.009889183) * inp_3_2_0;
    result2 += M4(-0.00080839737, -0.014385289, 0.013545933, 0.04935591, 0.04435709, -0.10818918, 0.041870367, 0.029347409, 0.037381776, -0.012839942, 0.031842146, 0.012045152, 0.011663424, -0.043534063, -0.06140874, 0.05155338) * inp_3_0_1;
    result2 += M4(-0.18399487, -0.049163073, 0.28259593, -0.05061571, 0.051849723, 0.023610603, -0.049087226, 0.13374074, 0.07833556, 0.052408647, 0.055931274, -0.24262871, 0.11388632, 0.02372241, 0.16845372, 0.1366808) * inp_3_1_1;
    result2 += M4(-0.0025676913, -0.07175247, -0.13451748, -0.03000673, 0.045022655, 0.009328533, -0.14834087, 0.03929789, 0.0840728, 0.044631056, -0.09024351, 0.14496453, 0.0153543195, 0.056414105, -0.28718317, 0.025088884) * inp_3_2_1;
    result2 += M4(-0.0375336, -0.078822546, 0.006358385, 0.037320156, 0.0065420205, 0.07384834, -0.020652745, 0.026150497, -0.0033626286, 0.019004766, -0.008791966, 0.037932888, 0.06529104, -0.08257279, 0.056785844, 0.008841176) * inp_3_0_2;
    result2 += M4(0.076522194, -0.023155704, 0.08438747, -0.039719682, 0.17634346, -0.04012112, 0.030412843, 0.012913227, 0.09450908, 0.019380236, -0.023308564, 0.034250516, 0.03510494, 0.021219479, 0.10318389, 0.05453946) * inp_3_1_2;
    result2 += M4(0.026868705, 0.002615583, 0.030869199, -0.023669006, 0.040444944, -0.10785316, 0.03936726, 0.0169441, -0.09884262, 0.0007823254, -0.018534964, -0.027333945, -0.032445427, 0.07939134, 0.057804927, 0.049846377) * inp_3_2_2;
    result3 += M4(-0.052247982, 0.19471046, -0.0753286, -0.04104852, 0.022853242, -0.04578403, -0.0267237, 0.042061742, 0.03169581, -0.02030968, 0.04585873, -0.07490702, 0.048972797, -0.050811753, 0.05610037, -0.32508758) * inp_3_0_0;
    result3 += M4(0.04393131, -0.044597976, -0.102130465, -0.07986328, 0.017515734, 0.03888373, -0.086922966, -0.05585312, 0.15132394, -0.37332532, 0.3129797, -0.07200724, -0.013490269, 0.2578802, 0.16756627, 0.17363265) * inp_3_1_0;
    result3 += M4(0.045991812, 0.006710307, 0.05266997, 0.035930842, 0.012162399, 0.06471319, 0.01427404, -0.0011667374, 0.046614125, -0.12304427, 0.1392015, 0.014728755, -0.014929581, 0.2530923, -0.06602619, -0.01367202) * inp_3_2_0;
    result3 += M4(-0.08710436, 0.1955351, -0.2150733, -0.032288752, 0.002214273, -0.025733009, 0.051562384, -0.10298686, 0.110425286, -0.032110646, -0.036434617, -0.12869348, -0.08165177, 0.2069846, -0.012350924, -0.23491158) * inp_3_0_1;
    result3 += M4(-0.100481145, -0.11102631, -0.48503235, -0.12936476, 0.017690174, -0.5066593, -0.06854617, 0.07276949, 0.23026595, -0.22134072, 0.27844757, 0.08183025, -0.028093042, -0.033314046, 0.1963896, 0.1040733) * inp_3_1_1;
    result3 += M4(-0.025252303, -0.1989705, -0.0075382353, -0.019397508, 0.007886583, 0.014371389, -0.059271347, 0.022639107, 0.09269638, -0.19452257, 0.24192971, 0.06500799, -0.060163084, -0.08652943, 0.016795034, 0.017152907) * inp_3_2_1;
    result3 += M4(-0.011803047, 0.026722843, -0.0793523, -0.17620717, -0.008551103, 0.09155494, -0.0001003358, -0.08917971, -0.010943561, 0.02764597, -0.048481118, -0.017864814, -0.012851513, -0.1728312, -0.16795702, -0.14047973) * inp_3_0_2;
    result3 += M4(0.0018999528, 0.13988587, -0.02108499, 0.02981234, 0.016895702, -0.0043610656, 0.057875697, 0.046483845, 0.0467157, -0.17301708, -0.023921749, 0.07518257, 0.0032942558, -0.099918276, 0.09677892, -0.04942618) * inp_3_1_2;
    result3 += M4(0.016888395, -0.049684256, -0.015980894, 0.013286224, 0.011074216, 0.0419506, -0.02668404, 0.031983506, -0.006402857, -0.10391971, -0.013228145, -0.021643644, 0.005062496, 0.21037234, -0.03934332, -0.029827256) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.0017134588, -0.0042940457, 0.012159223, -0.0120553225);
    V4 result1 = V4(0.0073731495, 0.004617562, -0.0055996757, -0.010604235);
    V4 result2 = V4(0.011506984, 0.0064820964, 0.0064256173, 0.0005873432);
    V4 result3 = V4(-0.0032329906, 0.00114876, 0.032726623, -0.023926727);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.21154593, -0.311885, -0.23082621, 0.07796332, 0.0033908857, 0.039594643, 0.05753589, -0.06382542, 0.112349205, -0.01634088, -0.15044257, 0.10233761, -0.14653519, -0.024269404, 0.124924675, -0.097751595) * inp_0_0_0;
    result0 += M4(-0.4380544, -0.92277145, -0.06299034, -0.3410587, 0.037966024, 0.024886021, 0.107632115, -0.08970542, -0.048123084, -0.05035107, 0.01969876, 0.0031131832, -0.052442122, 0.046354357, 0.013777848, 0.021347139) * inp_0_1_0;
    result0 += M4(0.575231, -0.31492996, -0.5217038, -0.34974328, 0.21118456, 0.1434849, 0.14838056, -0.20757431, -0.0133830495, -0.07899083, -0.026970971, 0.01798003, 0.03681348, 0.055596054, 0.018979384, 0.012291308) * inp_0_2_0;
    result0 += M4(-0.010725346, 0.064939946, 0.12425209, 0.08561976, 0.0073727327, 0.14289595, 0.10165896, -0.012306946, -0.06981113, -0.091320835, 0.020639865, -0.07994963, 0.06608029, 0.035802163, -0.095535755, 0.021947997) * inp_0_0_1;
    result0 += M4(0.119472906, 0.11595413, 0.17601141, 0.25136253, 0.086807586, 0.15157937, 0.413054, 0.17550823, 0.27832097, -0.62268037, -0.04467697, -0.13375193, -0.52526546, 0.6066542, -0.11705517, 0.019934239) * inp_0_1_1;
    result0 += M4(0.10454277, -0.06824527, -0.1204794, 0.047229905, -0.2191088, 0.3036376, -0.08342919, 0.0035029035, -0.19466184, -0.10980291, 0.012942223, 0.07195554, 0.1743962, 0.17726824, 0.010091454, -0.10578405) * inp_0_2_1;
    result0 += M4(0.008409447, 0.0044252574, -0.0010377557, -0.014604777, -0.017044116, 0.060081903, 0.03857471, -0.062865905, -0.049748536, -0.058921035, 0.10242884, 0.0068752496, -0.046816383, 0.00525235, -0.11930576, -0.038215313) * inp_0_0_2;
    result0 += M4(0.13704625, -0.12293823, 0.24007423, 0.032621324, 0.15628293, 0.0878742, -0.19369863, -0.034745395, -0.01758454, -0.02810076, 0.061671894, 0.06603082, -0.2677042, 0.05694115, -0.39363816, -0.029337212) * inp_0_1_2;
    result0 += M4(-0.03414105, 0.014635167, -0.0911962, -0.011400909, -0.106147416, 0.12843682, 0.01454959, -0.005411796, 0.12597567, -0.01239538, -0.026402637, 0.015722226, -0.24893303, 0.037927188, -0.084178336, -0.028372072) * inp_0_2_2;
    result1 += M4(0.46854448, 0.12443485, -0.033219714, 0.38369805, -0.042640466, -0.041791357, 0.0018863359, 0.032842632, 0.051916245, 0.11536947, -0.063615985, 0.06401147, -0.043832507, -0.16646731, 0.095578946, 0.010268965) * inp_0_0_0;
    result1 += M4(-0.29712805, -0.41364637, -0.07737894, 1.6605107, -0.22225678, -0.08780087, -0.08371436, 0.017106514, 0.04329848, 0.016049404, -0.057978813, -0.04054145, 0.03639325, -0.01795303, 0.022820313, 0.08678532) * inp_0_1_0;
    result1 += M4(-0.74536794, -0.2900863, 0.5981529, 0.45199552, -0.23841412, -0.10017612, -0.3239703, -0.004230478, 0.027824748, -0.021609545, -0.041351557, 0.08830061, -0.029706415, 0.0030357216, -0.016691502, 0.011524989) * inp_0_2_0;
    result1 += M4(0.08666732, -0.0017420402, 0.061687693, 0.058925543, -0.117726296, -0.010726006, -0.022962904, -0.13729547, 0.0743038, -0.011343908, 0.08983685, 0.037231192, -0.014977133, -0.073079124, -0.18474266, 0.02884114) * inp_0_0_1;
    result1 += M4(0.22275357, 0.0009928807, -0.263241, -0.07575818, -0.026645849, -0.0027343058, 0.06644874, 0.014587728, 0.43353602, 0.15002377, 0.06012276, -0.07698851, -0.31840977, -0.20946307, -0.077649795, 0.17004472) * inp_0_1_1;
    result1 += M4(0.06630233, -0.19290851, 0.11199263, 0.15340444, -0.44184443, -0.107968844, 0.05842911, -0.29109678, 0.01815548, -0.11306488, -0.2168432, 0.028689938, 0.02724424, 0.048855364, 0.13377553, 0.11690391) * inp_0_2_1;
    result1 += M4(-0.0007119603, 0.016201193, -0.009172341, -0.0113355545, -0.07874424, -0.019651689, -0.0028105902, -0.085690945, 0.0020864895, 0.07399029, 0.16592143, -0.02297801, 0.07914542, -0.13773397, -0.11569286, -0.073737055) * inp_0_0_2;
    result1 += M4(-0.011189112, 0.053254385, 0.13684887, 0.22537495, -0.14203209, -0.16416135, -0.33578143, -0.21067323, 0.030034436, -0.19274041, -0.048407592, -0.006567106, 0.052000627, 0.0069096754, -0.036885086, -0.2299806) * inp_0_1_2;
    result1 += M4(0.04758304, -0.025740275, -0.054521933, -0.04798283, -0.124790505, -0.084292166, 0.09648702, -0.21261722, -0.053155053, 0.018546864, 0.06475027, -0.075531706, 0.15205833, -0.039779563, -0.100955024, -0.13716125) * inp_0_2_2;
    result2 += M4(0.22343315, -0.02399227, -0.34178486, 0.08761097, -0.0025263566, 0.031340025, -0.049050417, 0.034408458, 0.019129612, -0.051494833, 0.040008884, -0.023241466, 0.014254087, 0.039830092, -0.1762126, 0.042847823) * inp_0_0_0;
    result2 += M4(-0.42700163, 0.36636904, -1.2521045, -0.42652905, -0.33169833, 0.01876887, 0.10141306, 0.027551392, 0.0482674, 0.0057412726, -0.088250354, -0.019925123, -0.038802564, 0.045385655, 0.13436782, 0.06529317) * inp_0_1_0;
    result2 += M4(-0.56471646, 0.03586337, -0.64519346, -0.14064176, -0.36094204, -0.032686975, 0.15725966, 0.016183445, 0.040040005, 0.0041624405, 0.031157862, 0.023876173, -0.053078804, -0.009447396, -0.04181173, -0.007162848) * inp_0_2_0;
    result2 += M4(0.07299563, -0.040679637, 0.045320377, 0.019754361, -0.112639636, 0.0067204502, 0.058992825, -0.007667197, 0.16855028, -0.03889289, 0.04507773, -0.0042333375, -0.16041446, -0.005919078, -0.13491572, 0.0048580924) * inp_0_0_1;
    result2 += M4(-0.050574858, -0.091340244, -0.20772092, -0.15456983, -0.3630494, -0.1462424, 0.072181165, 0.3123896, 0.4356816, -0.10710746, -0.13334748, -0.1688637, -0.51707625, 0.22264667, -0.014940626, 0.34144574) * inp_0_1_1;
    result2 += M4(-0.12981817, 0.008068328, 0.02499088, 0.032411013, -0.25478917, 0.015880683, -0.24854489, -0.07062832, 0.047291104, 0.07840144, 0.07687094, -0.06618571, -0.11288143, -0.104630664, -0.06524625, 0.20529488) * inp_0_2_1;
    result2 += M4(0.018140899, 0.0023406844, 0.004709893, 0.021739257, -0.05921563, -0.019690687, -0.014943726, -0.026382117, 0.0066913795, -0.036363233, 0.03613568, 0.14353138, -0.015344096, -0.032766026, -0.08103672, -0.13589932) * inp_0_0_2;
    result2 += M4(0.047594767, 0.10337299, 0.02571742, -0.11769675, -0.16681835, -0.02069033, 0.09974481, -0.14558665, 0.10865245, 0.040485334, 0.05803346, 0.018899042, -0.1069125, -0.10888187, -0.22056352, -0.08887082) * inp_0_1_2;
    result2 += M4(0.0015614756, -0.014495988, -0.072631456, -0.027782299, -0.12508765, -0.044527624, 0.21479616, 0.033904254, -0.089925885, 0.021761382, -0.09797111, -0.08796281, 0.10127275, -0.038968477, 0.06472436, 0.18317579) * inp_0_2_2;
    result3 += M4(-0.019019818, 0.42864254, -0.14181027, -0.20130686, -0.008883771, 0.08088876, 0.0024791402, -0.047185734, 0.03353152, 0.038784135, -0.046325356, 0.04813331, -0.003611118, -0.07326329, 0.056281008, 0.026406689) * inp_0_0_0;
    result3 += M4(-0.22502771, 0.85448223, 0.14597088, -0.23235339, 0.10629572, 0.19114128, -0.05065313, -0.14249718, 0.17044976, -0.031374965, 0.070477754, -0.00026117158, -0.27611148, -0.011721454, -0.09726033, 0.050215323) * inp_0_1_0;
    result3 += M4(0.00092074776, 0.41489393, 0.22458294, -0.08057887, -0.21793182, 0.06241024, 0.08794378, -0.15023413, 0.07134796, 0.07530632, -0.01913818, -0.018128011, -0.063573666, 0.008615491, 0.05777069, 0.017457768) * inp_0_2_0;
    result3 += M4(-0.02560975, 0.003322049, -0.047448616, 0.11086337, 0.00955328, 0.139141, -0.006718297, -0.049201764, 0.057754025, -0.19527552, -0.018396905, 0.0011811907, -0.07245591, 0.19778115, 0.022817075, 0.030086225) * inp_0_0_1;
    result3 += M4(0.14115328, -0.13162442, -0.23902339, -0.02991915, -0.19153467, 0.6195598, -0.04593052, -0.10243135, 0.4080467, 0.122210056, -0.042310897, 0.20868577, -0.53422123, -0.06341548, 0.07543098, -0.10794803) * inp_0_1_1;
    result3 += M4(-0.14109638, 0.066241466, -0.0006271925, 0.08737918, 0.22206211, 0.30599844, -0.088572964, -0.2271097, 0.12250521, 0.045646124, -0.08766431, 0.21626177, -0.27554038, -0.14382927, 0.15690832, -0.15987417) * inp_0_2_1;
    result3 += M4(-0.010255505, 0.051984023, 0.013691715, -0.012568804, 0.008031088, 0.123407856, -0.019501006, -0.072076924, 0.08651889, 0.062594876, 0.010298954, 0.035528254, -0.05587894, -0.060827453, -0.0341867, -0.024682792) * inp_0_0_2;
    result3 += M4(0.0030593427, -0.042165797, -0.03688089, 0.06446035, -0.0908417, 0.20897146, -0.02969143, -0.03707564, 0.1917222, -0.26208517, -0.07514968, 0.1035788, -0.078343295, 0.20613162, 0.10462625, -0.08532177) * inp_0_1_2;
    result3 += M4(-0.073348, -0.023875171, 0.0020647258, -0.027970092, 0.14776991, 0.2196735, -0.05300189, -0.028123505, -0.024943452, -0.04062817, -0.004178909, 0.06618523, 0.0046469974, 0.004689956, -0.020459387, -0.07526019) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.022185113, 0.09179987, 0.032468893, -0.03322882, 0.04742759, 0.035822865, -0.05888282, 0.0742788, 0.05062951, -0.11210488, -0.055605628, 0.062092006, 0.061270412, 0.048354633, -0.031106371, -0.016595228) * inp_1_0_0;
    result0 += M4(0.15216906, 0.08932515, -0.14149138, -0.019499639, -0.1631176, 0.3244661, 0.27022722, 0.16886313, -0.12960313, -0.1938257, 0.093586795, 0.05526349, 0.143899, 0.04424068, -0.22724104, 0.040481746) * inp_1_1_0;
    result0 += M4(0.12456291, 0.13301647, 0.07944247, 0.059939403, 0.10344492, 0.12507804, 0.027466841, -0.070535764, -0.15557326, -0.1617074, -0.17490122, 0.068790995, 0.02876591, -0.027710386, 0.014304926, -0.0030999582) * inp_1_2_0;
    result0 += M4(-0.020861495, 0.0541255, 0.10948416, 0.029419571, -0.0044483887, 0.053051095, 0.007057271, 0.00806349, 0.016440926, -0.023931516, -0.07356465, -0.040815372, -0.09372279, -0.10079113, -0.031977426, -0.09069853) * inp_1_0_1;
    result0 += M4(0.32229054, 0.22787471, 0.020044273, 0.07007984, 0.3348117, 0.046536587, 0.34078613, 0.01836668, 0.32936415, -0.2726813, 0.31509477, -0.06987796, 0.613205, -0.43504193, -0.05495696, 0.21492541) * inp_1_1_1;
    result0 += M4(0.014793596, 0.10264445, 0.028975865, -0.08953884, -0.06633627, 0.03932843, 0.08241963, -0.081204064, -0.01792217, -0.024367413, 0.01729368, 0.036996335, -0.071083784, -0.054386586, 0.047104653, -0.022088807) * inp_1_2_1;
    result0 += M4(0.008896023, -0.0067473855, 0.002145509, -0.044717543, -0.016906442, 0.0564981, -0.0051431586, -0.031242145, -0.046243884, 0.015598108, -0.0080383, 0.004167363, -0.00864445, -0.05050391, 0.20262314, 0.011991858) * inp_1_0_2;
    result0 += M4(0.14006528, 0.011105019, 0.13664967, 0.088139124, 0.19201274, -0.050177604, 0.021244157, 0.04636842, 0.06447502, 0.078067556, 0.109051555, -0.018590435, -0.01857471, -0.19647752, 0.047919735, -0.007064114) * inp_1_1_2;
    result0 += M4(0.04407278, -0.04037958, -0.053728066, -0.016405227, -0.004253986, 0.019781902, 0.066003025, -0.0077684065, -0.06629006, -0.003944528, -0.039930236, -0.015753945, 0.026803184, 0.028376782, -0.10051576, -0.019055575) * inp_1_2_2;
    result1 += M4(-0.11413026, -0.0047646933, -0.041588116, -0.0599955, 0.18960817, 0.14622113, -0.20340592, 0.027508317, 0.21844532, 0.07592247, -0.07320876, 0.019534973, -0.06828694, 0.08037341, -0.116480544, 0.011189992) * inp_1_0_0;
    result1 += M4(-0.044858407, 0.013691706, 0.060367256, -0.17939915, -0.0038154358, -0.07207125, -0.16248408, -0.028027134, 0.1937358, 0.19786225, -0.18853146, -0.06748628, -0.06510742, 0.011333542, 0.30322164, -0.09933598) * inp_1_1_0;
    result1 += M4(-0.09389545, 0.0011340372, -0.058600776, -0.17737317, -0.07226167, 0.10780872, 0.19915913, -0.08620686, 0.1385135, 0.07746837, 0.21439518, -0.036527373, 0.026759243, 0.025493622, -0.0059194528, -0.08072552) * inp_1_2_0;
    result1 += M4(-0.16543448, 0.10589873, 0.13123801, 0.06649081, -0.015028185, 0.06030102, 0.030743206, -0.045322366, 0.03554208, 0.037543792, -0.054299925, 0.01388122, -0.057717383, -0.052195117, 0.1666364, -0.03420119) * inp_1_0_1;
    result1 += M4(-0.33285093, -0.07920309, -0.12545756, 0.36138314, 0.0020911316, 0.16428187, -0.17824306, 0.047725417, 0.13058826, 0.35277945, 0.32430893, 0.28798983, -0.110123046, 0.3272989, 0.25587142, -0.23658265) * inp_1_1_1;
    result1 += M4(-0.09463258, -0.21616642, -0.10950031, -0.11001615, 0.06048976, 0.020624205, 0.112198554, 0.29558972, 0.07902673, 0.049107995, 0.114150785, 0.2080062, -0.04571397, -0.2397537, -0.2360968, 0.08660267) * inp_1_2_1;
    result1 += M4(-0.08947173, -0.038071737, -0.033011638, -0.030918358, -0.049554665, -0.024757829, 0.0055497354, -0.079846375, -0.030613488, 0.0022686275, 0.041222677, -0.019393293, 0.03646781, 0.06657233, 0.10664305, 0.042625483) * inp_1_0_2;
    result1 += M4(-0.039059628, -0.03538824, 0.008412972, 0.06679597, -0.018309241, 0.15737042, 0.037211068, -0.030786896, 0.06733846, 0.10598378, -0.0698193, -0.12639579, -0.21700905, -0.1734769, 0.07343902, 0.06633051) * inp_1_1_2;
    result1 += M4(-0.064082615, -0.04539409, 0.03225615, -0.009936424, 0.050160386, 0.023596099, 0.0063437396, 0.19274898, 0.061056368, -0.014186128, -0.02349869, 0.026079804, 0.0030641165, -0.032680966, -0.05618486, -0.19369082) * inp_1_2_2;
    result2 += M4(-0.07867564, 0.06853345, 0.113827825, -0.04802783, 0.18654323, 0.010901163, 0.027929924, -0.081138186, 0.113535285, -0.058005758, 0.09027309, 0.037896596, -0.014457605, -0.04565478, 0.04558334, -0.070001975) * inp_1_0_0;
    result2 += M4(0.095226415, -0.11354164, -0.041518, 0.04963775, -0.2927846, 0.2272153, 0.023295633, -0.09777918, 0.1882122, -0.094044164, -0.009602071, -0.2597172, 0.072335266, -0.08824021, -0.08761669, -0.0026301376) * inp_1_1_0;
    result2 += M4(-0.1874445, -0.05120286, 0.057598785, -0.008695382, -0.04131213, -0.0050050085, 0.07506881, -0.040334716, 0.19037172, 0.085370146, 0.011669516, -0.08531702, 0.063289665, 0.0053606723, -0.056243572, -0.035904285) * inp_1_2_0;
    result2 += M4(-0.04439046, 0.08013142, 0.05389422, 0.1542267, 0.11021724, -0.0035624432, 0.051469572, 0.11847855, 0.103536054, -0.014831509, 0.011801358, -0.0866363, 0.06598442, -0.034230858, -0.00724628, 0.015784228) * inp_1_0_1;
    result2 += M4(0.2268938, -0.023094904, 0.15056707, 0.012091412, -0.11781766, 0.119350195, 0.055364188, -0.12176818, -0.14397345, 0.10566807, -0.14308995, -0.07785493, 0.4189527, -0.11540002, 0.002491415, -0.23507594) * inp_1_1_1;
    result2 += M4(-0.16308326, -0.081705354, -0.0014073177, -0.046612673, 0.0700897, -0.023189757, 0.013025878, 0.028146531, 0.034800798, -0.02050753, 0.033584952, 0.027008446, -0.12178862, -0.009950862, 0.1091579, 0.08462558) * inp_1_2_1;
    result2 += M4(-0.048317477, -0.019507758, 0.07971709, 0.012461301, -0.04938555, -0.003576704, -0.0010057117, -0.063058615, 0.005489319, 0.0010258297, 0.0020860198, 0.015076465, 0.0043509505, -0.010061699, 0.0537087, 0.08293475) * inp_1_0_2;
    result2 += M4(-0.015987648, 0.04014087, 0.06490326, -0.077324815, -0.016004367, 0.03385931, 0.107867934, 0.12487346, -0.043882173, -0.022596814, 0.02785244, 0.047197144, 0.0482915, 0.102251254, 0.1413912, -0.2467898) * inp_1_1_2;
    result2 += M4(-0.024537241, 0.035959415, -0.045760565, -0.02743486, 0.054150563, -0.022937883, -0.07110471, 0.06341948, 0.05087367, -0.009739086, 0.029442837, 0.06825261, -0.027049107, 0.0417279, -0.059151366, -0.09794957) * inp_1_2_2;
    result3 += M4(0.03404841, -0.05350909, 0.03591607, -0.04625779, -0.10176076, 0.040242728, -0.07569379, -0.024112903, -0.14949852, -0.043152552, -0.016967477, 0.073649324, 0.06186608, 0.06466882, 0.032048296, -0.02283117) * inp_1_0_0;
    result3 += M4(0.27050483, -0.0007087087, -0.0011828993, -0.09581692, -0.4949758, 0.15222806, 0.04865721, 0.060425106, -0.31526387, 0.18207304, -0.105764225, 0.08147085, 0.30746588, -0.09503071, 0.004809106, -0.040385384) * inp_1_1_0;
    result3 += M4(-0.064906776, -0.002713032, -0.0058031874, -0.003027605, -0.35401526, -0.1128499, -0.09078465, -0.22843274, -0.15787314, -0.028051635, -0.09533786, 0.1620307, 0.031405687, -0.025344413, 0.005891841, -0.019589731) * inp_1_2_0;
    result3 += M4(0.15471599, 0.059643324, 0.042117767, -0.026563589, -0.10703269, -0.04587248, -0.0235323, -0.050876115, -0.1411771, -0.24853386, 0.05019324, 0.06677109, 0.08479366, -0.27199745, 0.03798744, -0.023920957) * inp_1_0_1;
    result3 += M4(0.60478836, -0.2616198, -0.04604084, -0.13812076, -0.7227946, 0.121471, -0.14134218, 0.01623887, -0.41071144, -0.08361011, 0.1924797, 0.18881705, 0.69979876, -0.13226052, 0.0672189, -0.019228108) * inp_1_1_1;
    result3 += M4(0.4369319, 0.10608822, 0.06732952, -0.080391146, -0.015234854, 0.1316251, 0.038989946, -0.209752, -0.13188379, -0.027530741, 0.014880794, -0.005652531, 0.28484753, 0.14505084, 0.092099, 0.07375025) * inp_1_2_1;
    result3 += M4(0.02209391, -0.050524484, 0.0069108168, -0.021132033, -0.037029713, 0.046035446, -0.028631965, -0.04147336, -0.012076703, 0.02804702, -0.005424127, -0.0048608873, 0.11529613, 0.122220464, 0.007951177, -0.01963556) * inp_1_0_2;
    result3 += M4(0.112878524, 0.046822842, -0.0042624855, 0.042536575, -0.30041438, -0.09935808, -0.021180194, 0.054029334, -0.16466506, 0.15789005, -0.047742512, -0.092582755, 0.5096404, -0.12496731, 0.048164614, 0.103541166) * inp_1_1_2;
    result3 += M4(0.03624726, 0.044424187, 4.3207558e-05, -0.01890893, 0.0032945746, 0.009067419, 0.025594512, -0.017827874, -0.058020458, -0.02490303, -0.0033673476, -0.030300835, -0.070129335, -0.04418822, -0.037135404, 0.031464837) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.023840016, -0.059162445, -0.03524829, 0.07195579, 0.009675326, 0.08612965, -0.08564254, -0.03579346, -0.038711894, 0.08682479, 0.16698597, 0.0022080038, 0.025157176, 0.044613414, 0.05856668, -0.040419888) * inp_2_0_0;
    result0 += M4(-0.031142507, -0.032647498, 0.057857733, 0.036377586, -0.027120316, -0.008109295, -0.03864248, -0.060120836, -0.17964391, -0.032079246, -0.03743375, 0.1522719, 0.050507862, 0.022353046, -0.07765531, 0.07030926) * inp_2_1_0;
    result0 += M4(-0.035851326, 0.015998485, 0.033385232, 0.03243807, -0.04504247, 0.039733846, 0.05031231, 0.07848218, 0.014884608, -0.024154572, -0.016037863, -0.03247562, 0.21179675, 0.027038531, -0.05119688, -0.019180046) * inp_2_2_0;
    result0 += M4(-0.074784495, 0.010833097, 0.07356482, -0.00852017, -0.025445107, -0.010572572, -0.016006347, 0.012554661, -0.67353714, 0.15715903, 0.12457653, -0.6070599, 0.08081535, -0.122185335, -0.056536723, -0.050598826) * inp_2_0_1;
    result0 += M4(0.053801626, -0.22935548, 0.08609907, 0.018690422, -0.031440593, -0.007172157, 0.020926228, 0.010619916, -0.057065587, 0.16117232, -0.1116454, 0.2157984, 0.029827736, 0.2808818, -0.14597398, 0.036039665) * inp_2_1_1;
    result0 += M4(-0.000874633, -0.06458517, 0.03512675, -0.042036675, 0.041297793, 0.020086598, -0.07400234, 0.008219369, -0.038104076, 0.016229661, 0.08482929, 0.028135497, -0.049560394, 0.19556983, 0.20119946, -0.0032482382) * inp_2_2_1;
    result0 += M4(-0.019413782, 0.052314315, -0.028054813, 0.008920818, 0.003010706, -0.014597125, 0.07594418, 0.070267014, -0.6771991, 0.039413895, -0.72531325, -0.2859643, -0.024068214, 0.018564004, 0.021603502, 0.07245592) * inp_2_0_2;
    result0 += M4(-0.06937535, 0.0012070176, -0.034635525, -0.02941733, -0.055657107, 0.039670903, 0.039912008, -0.050151635, 0.16715865, -0.09319017, 0.064079076, 0.13878016, 0.22174217, -0.022355117, 0.19101048, 0.03171391) * inp_2_1_2;
    result0 += M4(-0.054736003, 0.029733906, -0.087670535, -0.005116872, 0.07378856, 0.029148579, -0.017395958, -0.02590676, 0.026641754, -0.0033123665, -0.06637579, 0.027549645, 0.15389729, -0.011363112, 0.03328051, 0.0132563) * inp_2_2_2;
    result1 += M4(0.08484912, 0.041129977, -0.032163724, 0.00653002, 0.061606713, 0.07818278, 0.015985267, -0.040868726, 0.018523268, -0.0752183, 0.031007221, -0.45574468, -0.12742038, -0.08047604, -0.039338496, -0.17299487) * inp_2_0_0;
    result1 += M4(0.027709384, 0.10169737, -0.1835924, -0.056797083, -0.060010433, 0.0062367218, -0.0149589125, -0.040397078, 0.07760968, 0.07552672, -0.04139306, 0.23545828, -0.07240935, 0.02129881, 0.2037535, -0.21839474) * inp_2_1_0;
    result1 += M4(0.07913186, 0.0336624, -0.048220556, -0.025452161, 0.07511248, -0.083554596, -0.026962206, 0.0804183, -0.017784731, -0.018915217, 0.020492777, 0.07581876, -0.045556676, 0.018112935, 0.04540375, 0.075499944) * inp_2_2_0;
    result1 += M4(0.06703403, 0.015339602, 0.02228191, -0.026451206, 0.0033857962, 0.08108039, 0.0048215333, -0.079906724, 0.09110615, -0.33152956, 0.09827833, -0.8932703, 0.0673251, 0.09050095, 0.0017228393, 0.38422066) * inp_2_0_1;
    result1 += M4(0.08946157, -0.18570952, 0.07539602, -0.22355768, -0.08030705, -0.051883228, 0.00712498, -0.02786323, 0.02810467, 0.27244097, -0.2761051, -0.09399723, 0.06907336, 0.29662988, -0.006715078, 0.74598426) * inp_2_1_1;
    result1 += M4(-0.0505537, 0.06653122, -0.06169855, 0.032009747, -0.04525397, -0.09042132, -0.079019, 0.07536094, 0.055288054, 0.026869923, -0.01790868, 0.10181957, -0.15105484, 0.08574797, -0.19248277, 0.018058205) * inp_2_2_1;
    result1 += M4(-0.076332614, 0.004794311, 0.020357152, -0.048703797, 0.038630515, -0.010424295, -0.09035784, 0.008781601, -0.18098025, -0.44723067, -0.14546387, -1.200792, 0.049871605, -0.0944035, -0.026146991, -0.02793548) * inp_2_0_2;
    result1 += M4(0.1611801, -0.12237502, -0.091405004, -0.20578593, 0.010276118, -0.066297725, 0.04356303, -0.06312753, 0.04822947, 0.09128401, -3.4529527e-05, -0.019248473, -0.16196282, 0.2779099, 0.116295725, 0.29931673) * inp_2_1_2;
    result1 += M4(-0.016325874, 0.026013426, -0.0030200728, -0.051416073, -0.044445187, -0.03307584, 0.004658469, -0.038716875, -0.018481562, -0.04857872, 0.05553503, -0.075216874, -0.23204966, -0.007905649, 0.1725022, 0.19998708) * inp_2_2_2;
    result2 += M4(0.019581165, -0.056245055, 0.041811988, 0.07763599, -0.025580667, 0.0020796247, 0.061093777, -0.008144356, 0.038078196, -0.12867796, 0.34188813, 0.050761778, -0.21813655, -0.014011074, 0.13531011, -0.05438118) * inp_2_0_0;
    result2 += M4(0.15539917, 0.047087174, 0.100909166, -0.047445584, -0.08747208, -0.050556853, 0.069245175, 0.06593269, 0.0018100911, 0.05836928, 0.12118583, -0.034396093, 0.08133138, 0.02652226, 0.011204448, -0.12285335) * inp_2_1_0;
    result2 += M4(0.028430086, -0.019943997, 0.065353304, 0.05295439, -0.025046483, -0.07492321, 0.062151574, 0.0858978, 0.004892034, 0.010140485, -0.11342032, 0.02477075, -0.11994575, -0.046261054, -0.086134374, 0.0793902) * inp_2_2_0;
    result2 += M4(0.09533, 0.043792833, 0.02440679, 0.025495375, 0.08082508, -0.029454526, -0.04592187, -0.043439053, 0.088392794, -0.2975526, 0.34812334, -0.021682758, -0.04971841, 0.07866179, -0.024647456, 0.0829146) * inp_2_0_1;
    result2 += M4(-0.13936378, -0.04278911, 0.07986149, -0.15471807, 0.05311309, 0.026798945, 0.09351896, 0.0810807, -0.13640042, -0.088668086, -0.35070416, 0.33965802, 0.4978249, 0.10168799, -0.14562935, -0.10635915) * inp_2_1_1;
    result2 += M4(0.061958086, 0.07315048, 0.055115018, 0.049558565, -0.030720118, 0.07907218, -0.08640745, -0.08068673, 0.037408806, 6.5602755e-05, 0.045525752, -0.022668313, 0.058393642, 0.019954916, 0.10276977, -0.19293316) * inp_2_2_1;
    result2 += M4(0.014279942, 0.024289642, 0.05271777, 0.030412914, 0.02424481, -0.05537505, 0.0026505233, 0.02675498, -0.19673252, -0.31737712, 0.05990976, 0.24467994, -0.03535509, -0.010491025, -0.010225814, 0.058338106) * inp_2_0_2;
    result2 += M4(0.12220612, -0.0015982405, -0.024901725, 0.13548754, -0.055903893, 0.08383578, -0.040119126, 0.042207982, -0.18835096, -0.0022630899, 0.08047485, -0.31400335, -0.016656822, -0.0016287838, 0.14042367, 0.20533885) * inp_2_1_2;
    result2 += M4(-0.016841155, -0.011508099, -0.04398827, 0.031329982, 0.08197762, -0.018818874, 0.040441234, -0.054662626, -0.035158213, -0.007062496, 0.024868583, 0.0076886206, -0.119740844, 0.0044456255, -0.066022396, -0.14534043) * inp_2_2_2;
    result3 += M4(0.0278391, 0.020628007, 0.035014033, 0.09438223, 0.07653889, -0.07766167, -0.016271705, -0.08159052, -0.23745127, 0.08348993, -0.032693055, 0.28870744, 0.0029493473, 0.06392908, -0.01661288, -0.04627168) * inp_2_0_0;
    result3 += M4(0.07514179, 0.012176505, 0.11922853, -0.0077550523, 0.083798416, -0.08191429, -0.057637095, 0.04117091, -0.063061975, 0.0031238305, -0.058706515, 0.14921995, 0.09132468, -0.073854476, 0.15116921, -0.023576377) * inp_2_1_0;
    result3 += M4(0.03932953, -0.071843356, -0.011058433, 0.02628387, -0.023101227, -0.04956499, 0.09580581, 0.048138943, 0.003036533, 0.009612612, 0.054063004, -0.03231817, -0.037370156, -0.005851675, 0.068993084, -0.056831628) * inp_2_2_0;
    result3 += M4(0.04341562, -0.0073043397, 0.055459455, -0.053494215, -0.07677068, -0.0050281044, -0.034305286, 0.07142093, -0.76707107, -0.49764642, 0.038250912, 0.34890985, -0.006265628, 0.049452815, 0.037155725, -0.089972) * inp_2_0_1;
    result3 += M4(-0.091984585, -0.11420208, -0.0062687313, 0.15393518, -0.08001868, 0.01691694, 0.047466516, 0.040314533, 0.19526449, -0.08798712, -0.24927224, 0.18312283, 0.16570283, 0.23211336, -0.29397392, 0.13669069) * inp_2_1_1;
    result3 += M4(-0.12313834, 0.03940989, 0.042405646, 0.06563757, 0.09007272, 0.024040308, -0.010201583, 0.038359478, -0.025053687, -0.02653666, -0.039913934, 0.004377225, 0.041803688, 0.09429442, -0.07300078, -0.13420896) * inp_2_2_1;
    result3 += M4(-0.0017424935, -0.03578545, -0.01631101, -0.010236943, 0.022178944, -0.03694047, -0.053498473, -0.016686687, 0.11835351, 0.14142929, -0.0991079, -0.055627503, -0.02315963, -0.02640251, -0.07698337, 0.014861168) * inp_2_0_2;
    result3 += M4(0.029723808, -0.0919841, -0.019445276, -0.042234614, -0.03191953, -0.08302125, -0.07306846, -0.055591185, -0.021122485, -0.11773455, 0.038066704, 0.37527293, -0.15639906, -0.26025555, 0.10384247, 0.039868437) * inp_2_1_2;
    result3 += M4(-0.027273849, -0.042685904, -0.0065475395, -0.010575851, -0.042745296, -0.073872164, -0.059459887, 0.09809141, -0.0094094295, 0.033148605, -0.022210142, 0.061763097, 0.11362793, 0.16640458, 0.07779778, 0.0075525665) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.095088564, 0.09160359, -0.12071895, 0.013873344, 0.12990625, -0.012169826, -0.147081, 0.095310785, -0.025909506, 0.034270305, 0.0013019609, -0.04891608, -0.0019726274, -0.05800937, -0.054948505, 0.04793056) * inp_3_0_0;
    result0 += M4(-0.19021787, 0.036032137, 0.15218955, 0.0014713047, -0.25640082, -0.23385328, 0.22306435, 0.052877266, 0.13011436, 0.17856432, -0.068931, 0.009319114, -0.13714647, -0.11928822, 0.1318952, 0.004153483) * inp_3_1_0;
    result0 += M4(-0.06282791, 0.08733454, 0.109848835, 0.00089440093, -0.09466455, -0.14392993, -0.0923254, -0.029896444, 0.009559501, 0.11102214, 0.08887221, 0.034719087, 0.049269415, 0.0033782825, -0.05262419, 0.032477267) * inp_3_2_0;
    result0 += M4(-0.020998897, 0.15091091, 0.3232776, -0.016944395, 0.16021235, -0.2238516, 0.14570147, -0.06475363, -0.17607577, 0.22057214, -0.18512619, 0.00047238142, -0.0898188, -0.0058778175, 0.062269725, 0.036625884) * inp_3_0_1;
    result0 += M4(0.25905913, -0.559908, 0.14838406, -0.0023476984, -0.3375594, -0.6386354, -0.43715617, -0.24957693, 0.3487625, 0.4977503, 0.24743046, 0.18902881, -0.3515115, -0.09468653, -0.12646137, 0.18677883) * inp_3_1_1;
    result0 += M4(-0.1217694, -0.12532969, -0.2563531, 0.0597624, -0.18072972, -0.04874883, 0.010045745, 0.08830244, 0.10772776, 0.03850428, -0.015860602, -0.061251745, -0.23484349, -0.6735298, -0.03157873, -0.23331767) * inp_3_2_1;
    result0 += M4(-0.0479514, -0.017669488, -0.05325839, -0.083970785, -0.20003267, -0.21624927, 0.20071687, 0.090534166, 0.12050271, 0.07996849, -0.24345545, -0.040370144, -0.007785882, 0.012678023, -0.0564515, 0.0035082488) * inp_3_0_2;
    result0 += M4(0.14195687, -0.044572264, 0.07815113, -0.015885228, -0.09884894, -0.14121751, -0.2250191, -0.0053945086, 0.14919494, 0.06211915, 0.15711242, -0.022047361, -0.096183375, 0.020453885, 0.09940146, 0.014106634) * inp_3_1_2;
    result0 += M4(0.01437237, -0.022145357, 0.121513575, 0.00018264941, 0.19701286, -0.06365072, 0.14719836, 0.06831642, -0.08460662, 0.030587057, 0.043052163, -0.0066128885, 0.010618877, 0.10646755, -0.21787088, -0.039691187) * inp_3_2_2;
    result1 += M4(0.06539263, 0.13999197, -0.10271658, 0.032157727, 0.04362949, 0.0515169, -0.020392956, 0.16472185, -0.02918741, -0.019996475, 0.011741075, 0.0055449493, 0.041067798, -0.05918912, 0.08323262, -0.05829004) * inp_3_0_0;
    result1 += M4(0.046532024, -0.115591414, -0.19546185, 0.035643417, 0.17534168, -0.022949306, -0.28988954, 0.097081356, 0.039092902, 0.08422335, 0.16484708, 0.010167152, 0.14940387, -0.04458163, 0.20594099, 0.115576945) * inp_3_1_0;
    result1 += M4(-0.043621745, -0.027788054, -0.06115935, -0.14510639, 0.09076365, -0.07409059, -0.025337366, 0.16638066, 0.020270878, 0.110263795, -0.023222642, -0.07871838, 0.14375773, 0.1734211, 0.072501674, 0.13889453) * inp_3_2_0;
    result1 += M4(-0.0015472393, 0.022538573, 0.016409462, -0.28603482, 0.33857486, -0.0013230095, -0.13234283, 0.006793155, -0.22692367, -0.049524583, 0.19254427, -0.050503448, 0.09124537, -0.018856056, 0.059212856, 0.045898207) * inp_3_0_1;
    result1 += M4(-0.1448426, -0.17276397, 0.072302505, -0.5836762, 0.74564373, 0.17662437, 0.20373705, 0.23364705, -0.6386533, -0.14126511, 0.07758127, -0.46061322, 0.46404943, 0.0007715717, -0.039111346, -0.8654587) * inp_3_1_1;
    result1 += M4(0.12419963, -0.04948501, 0.063753255, -0.31553856, -0.026820377, 0.05774564, -0.082392745, -0.07309558, -0.12891424, -0.05659642, 0.037635773, -0.04505489, 0.46442077, -0.30129755, -0.015477197, -0.08014765) * inp_3_2_1;
    result1 += M4(-0.15383546, 0.12753627, 0.09812369, -0.12602858, 0.25352585, 0.01372428, 0.24026914, -0.106909394, -0.17611277, -0.071175605, -0.15658593, 0.23022561, -0.0025054477, 0.023190891, -0.021736387, 0.067995265) * inp_3_0_2;
    result1 += M4(0.066968404, -0.02421731, 0.013388108, -0.072764814, 0.101711094, -0.07049157, -0.19575852, -0.02446801, -0.05442616, 0.1427783, 0.033402015, 0.31972247, 0.20965429, 0.12966773, 0.11779052, -0.06375109) * inp_3_1_2;
    result1 += M4(0.22729442, 0.13342221, -0.038161587, -0.005629653, -0.07872306, 0.030662276, 0.09151347, 0.124676175, 0.08485791, 0.08892716, -0.040191315, 0.0839872, -0.074594416, -0.25267702, -0.112493776, -0.05403266) * inp_3_2_2;
    result2 += M4(0.09486562, 0.02103314, 0.16457073, 0.021212049, 0.06816502, -0.013390272, -0.051891726, 0.08561132, 0.0083539635, 0.031594194, -0.04791048, -0.0045014075, -0.0065116743, -0.03444653, 0.005991366, 0.04568997) * inp_3_0_0;
    result2 += M4(-0.019415362, 0.009624724, -0.16003147, 0.0746645, 0.008227389, 0.060485825, -0.070249625, -0.047874708, 0.12963116, -0.03374454, 0.09861004, 0.11000193, 0.0481724, 0.040761866, -0.16464296, 0.15743734) * inp_3_1_0;
    result2 += M4(-0.045848217, -0.0008427834, 0.20764004, -0.02314328, 0.13820149, 0.033585936, -0.07617513, 0.073683016, -0.01464249, -0.008736589, 0.13759342, -0.05552495, 0.12597427, -0.032778736, -0.09507194, 0.030791223) * inp_3_2_0;
    result2 += M4(-0.0018736114, -0.1231489, 0.2009249, -0.057570398, -0.080829956, -0.112371735, 0.1293834, -0.076507114, 0.1452584, 0.053244736, -0.06424992, -0.0240933, 0.06867682, 0.033961065, -0.15347122, -0.10400748) * inp_3_0_1;
    result2 += M4(-0.3396336, -0.0647085, 0.31680483, -0.3466915, 0.43107474, 0.14354204, 0.6599016, 0.034047883, -0.37454414, -0.116232276, -0.37038904, -0.28486565, -0.39448932, 0.09491912, -0.083342254, -0.31405076) * inp_3_1_1;
    result2 += M4(-0.0114400145, -0.015001632, -0.08036848, -0.0011647661, 0.1119142, 0.102709666, 0.22237635, -0.26647475, -0.051784117, -0.040386617, -0.19535393, 0.12869787, 0.20516708, 0.039730355, 0.12694982, 0.2442412) * inp_3_2_1;
    result2 += M4(-0.07022862, 0.004947063, 0.054269273, -0.019843083, -0.06326906, -0.059230894, -0.1562455, 0.18643555, 0.0827489, 0.06730255, 0.07987566, -0.11261401, 0.1380488, 0.006096063, 0.00829753, 0.046164546) * inp_3_0_2;
    result2 += M4(0.059938777, 0.053833097, 0.054546528, -0.0805204, 0.1477214, -0.0249791, -0.19117056, 0.104081325, 0.0061357906, 0.008853818, 0.014220421, -0.025669534, 0.269286, 0.06909637, -0.0912535, 0.2614693) * inp_3_1_2;
    result2 += M4(0.08837463, -0.0077681197, -0.0049253046, 0.1814539, -0.07065577, 0.027234377, 0.03625559, -0.18250892, 0.08751831, -0.020470025, -0.0039839754, 0.117389195, -0.020712174, 0.056966707, -0.111111544, -0.05066865) * inp_3_2_2;
    result3 += M4(0.02213624, -0.032517362, -0.077835955, 0.023531534, 0.013327417, 0.11383766, 0.01604601, 0.11111469, 0.059140984, 0.011955584, 0.03302648, -0.06714976, 0.014131734, -0.048719574, -0.03646479, 0.04412596) * inp_3_0_0;
    result3 += M4(0.31201163, -0.01421628, 0.00410097, -0.0020978348, -0.04328856, -0.10148868, 0.08959813, 0.07710869, -0.07919263, 0.074023545, -0.057320066, -0.03330734, -0.30660734, -0.070119925, -0.042543277, 0.111717075) * inp_3_1_0;
    result3 += M4(-0.09555663, 0.01652286, -0.011700857, 0.011971182, 0.09379964, 0.058080614, 0.06597217, 0.017304413, -0.12783355, -0.0660838, -0.117630914, -0.044185206, -0.21083479, -0.09139872, -0.008322376, -0.056775212) * inp_3_2_0;
    result3 += M4(-0.27552804, -0.0010729152, -0.020345619, -0.13327353, -0.16062139, 0.16248097, -0.09064849, -0.1252991, 0.2182547, -0.078059465, -0.05475533, 0.022094654, 0.05730662, -0.03302982, -0.035190202, 0.13423137) * inp_3_0_1;
    result3 += M4(-0.092303805, -0.14417762, 0.10193467, -0.111014254, -0.48482117, 0.7610633, -0.29716834, 0.18101929, 0.29613417, -0.48628223, 0.2507931, -0.09464903, 0.13769552, -0.16851626, 0.11211493, 0.00401949) * inp_3_1_1;
    result3 += M4(0.16103043, 0.053436976, -0.07135771, 0.11587097, -0.1069116, 0.07328642, -0.21376123, 0.08627795, 0.15071124, 0.058939803, 0.11207189, -0.11089581, 0.17985381, -0.117413, 0.11503081, 0.09363244) * inp_3_2_1;
    result3 += M4(0.03072331, 0.04853143, 0.044079054, -0.07125329, 0.14907625, 0.23544608, -0.06611718, 0.00089088513, -0.0914431, -0.40936604, 0.08022873, 0.048337895, -0.022225302, -0.18074611, 0.051092967, 0.085616514) * inp_3_0_2;
    result3 += M4(-0.13491517, 0.059948202, -0.09304837, 0.059804477, -0.09183918, 0.012578797, 0.021296024, 0.114591084, 0.01679683, -0.069412544, 0.088821925, -0.015882043, 0.044616114, -0.05946585, 0.020773038, -0.1423247) * inp_3_1_2;
    result3 += M4(-0.17223574, -0.21409571, -0.032832567, 0.0550123, -0.0082381535, 0.06444299, -0.0042522848, 0.14739211, -0.055799194, -0.104807936, 0.008642533, -0.060494427, -0.03557417, 0.0066159316, -0.06586822, -0.14227952) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.0753433, 0.0764732, 0.08077355, 0.07640322);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10888199, -0.070538014, -0.020260442, -0.0203658, 0.0016795096, -0.009124508, -0.015679615, -0.023757994, -0.0009786475, 0.018988611, -0.0025121046, 0.010390251, 0.14684685, 0.102195896, 0.07042952, 0.077732444) * inp_0_0_0;
    result0 += M4(-0.19391537, -0.24463066, -0.007080502, 0.005016123, 0.005575301, 0.024453133, -0.071772695, -0.00020410118, -0.060125943, -0.1554155, 0.070994146, 0.02431979, 0.02245064, 0.13202326, 0.057630092, 0.015236691) * inp_0_1_0;
    result0 += M4(0.00023470678, -0.045819674, -0.004046972, -0.015273485, -0.06267246, -0.06038371, -0.0395485, -0.06768062, -0.05407943, 0.0206127, -0.018424112, 0.048133325, 0.08698331, 0.044679977, 0.059373353, 0.043533333) * inp_0_2_0;
    result0 += M4(0.1951407, -0.020427918, 0.01827543, 0.0028086687, 0.074209675, -0.077722, 0.16239607, -0.044978663, 0.005402486, 0.035568967, 0.051395297, 0.019047774, 0.17276363, 0.111003, 0.16415973, 0.111555845) * inp_0_0_1;
    result0 += M4(0.072774604, 0.21015674, -0.103863835, -0.12072824, -0.22995315, 0.14255367, -0.11854349, 0.30535027, -0.12236044, -0.015893733, -0.13270515, -0.102059975, 0.1948307, 0.19044569, 0.14740546, 0.22301084) * inp_0_1_1;
    result0 += M4(0.009261659, 0.09791577, 0.07383781, 0.039974563, 0.019643122, -0.120489776, 0.027840165, -0.12771375, 0.0070945527, -0.034492273, -0.04116, 0.070916116, 0.14907959, 0.17939399, 0.14512533, 0.21619186) * inp_0_2_1;
    result0 += M4(-0.008611726, 0.01534443, 0.023123328, -0.009761832, -0.01627453, -0.0037040808, -0.03766189, -0.024314778, 0.049997944, 0.022450177, 0.054133978, 0.03637783, 0.10300189, 0.02723725, 0.18371366, 0.009618082) * inp_0_0_2;
    result0 += M4(-0.0028446086, -0.035024013, 0.12635021, 0.082968384, 0.08400486, 0.029370062, 0.07742326, -0.02833545, 0.024645215, 0.033589464, -0.109603815, 0.051598728, 0.04171139, 0.06709144, 0.06662887, 0.1728045) * inp_0_1_2;
    result0 += M4(-0.00818584, -0.0053232606, -0.018768715, 0.05620834, 0.057869416, 0.06314282, 0.0609237, 0.025421236, 0.016274124, 0.023198206, 0.0018163855, -0.07772661, 0.059477963, 0.118010946, 0.07159817, 0.1091003) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.091667846, -0.039804112, -0.05974505, -0.061496757, -0.012219757, -0.047098678, -0.009261138, -0.020478273, -0.065433525, 0.008921837, 0.0025537321, -0.003394436, 0.034820966, 0.058626167, 0.013365929, 0.005483531) * inp_1_0_0;
    result0 += M4(0.017809521, -0.15374182, -0.13992028, -0.034003485, 0.1439593, 0.12811822, 0.11181476, 0.012432857, 0.07840987, -0.032565743, 0.012891973, 0.020571344, 0.03425782, -0.04162449, 0.029086858, 0.0209392) * inp_1_1_0;
    result0 += M4(-0.07150305, 0.052084077, -0.016432857, -0.029920321, 0.00029979183, 0.12361692, 0.00072416564, 0.10493964, -0.04339209, 0.06620857, -0.011737965, 0.029187173, 0.012674596, -0.025024101, 0.006752238, -0.014693617) * inp_1_2_0;
    result0 += M4(-0.0054282486, -0.10358931, 0.054887917, -0.047045365, -0.15714547, -0.059959993, -0.18372333, -0.15081795, 0.13701387, 0.0015416455, -0.019325154, 0.013853525, -0.015029369, 0.008385343, 0.09490357, 0.045297325) * inp_1_0_1;
    result0 += M4(0.18846026, 0.065590404, 0.2158759, 0.05003352, 0.08582632, 0.1173296, -0.11546304, -0.028625716, -0.029671937, 0.0389161, -0.015354646, -0.051578365, 0.09329434, 0.00025928006, -0.0077231177, 0.09452107) * inp_1_1_1;
    result0 += M4(0.040712755, 0.11449455, 0.0027213811, 0.07797417, -0.018216725, -0.019189596, -0.04051539, -0.13054614, 0.021610819, -0.0713609, -0.012811983, 0.029820899, 0.012296273, 0.027209453, 0.012873429, -0.020347731) * inp_1_2_1;
    result0 += M4(-0.03696923, -0.009411203, -0.059909318, -0.008506082, -0.054699842, -0.037646502, -0.06509712, -0.0027252005, 0.0015054042, -0.0058053117, 0.005876921, -0.03166686, -0.030998351, -0.014902093, -0.06571948, -0.026347777) * inp_1_0_2;
    result0 += M4(0.0272231, 0.06632849, 0.08459517, -0.014172733, 0.0031889745, -0.032778446, 0.12847447, 0.05621392, -0.011041288, 0.0071514267, 0.01682957, -0.05542897, -0.05806297, -0.033886362, -0.05393271, -0.12098678) * inp_1_1_2;
    result0 += M4(0.027646797, -0.010374946, 0.013093453, 0.043172017, -0.011959494, -0.015749857, 0.006271641, 0.08542796, 0.036209233, 0.0012469996, 0.031688124, -0.07905843, -0.012745546, -0.030142255, -0.0047794473, -0.0010875225) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.031632785, 0.041348238, 0.024070323, 0.04049998, -0.12025623, -0.07801317, -0.03409777, -0.039347712, 0.03344907, 0.06506318, 0.008126047, 0.003075829, 0.12008719, -0.018766323, 0.013500102, 0.0034058874) * inp_2_0_0;
    result0 += M4(-0.14262076, -0.050019257, 0.025290761, 0.0060491734, -0.15197243, -0.06309559, 0.02604687, 0.02247459, 0.022888126, -0.065638624, 0.031204166, 0.0060220617, -0.12040015, 0.07937315, 0.018051371, -0.036092263) * inp_2_1_0;
    result0 += M4(-0.0057410845, -0.11925865, -0.017947206, -0.036451634, 0.051236283, 0.10191817, 0.029120967, 0.06353596, 0.039364, 0.03489482, 0.022793157, 0.023168601, -0.0009882087, 0.06547365, 0.0016181956, 0.07444347) * inp_2_2_0;
    result0 += M4(0.0309045, 0.0789878, 0.013674861, 0.079566814, -0.21764182, -0.020789575, -0.26894554, -0.043329876, -0.030431308, 0.012603415, 0.047552284, 0.094774626, 0.023052331, -0.01902662, 0.0636459, -0.06653616) * inp_2_0_1;
    result0 += M4(-0.077584945, -0.22078986, -0.28835547, -0.26006636, -0.43335447, -0.36780977, -0.23117103, -0.2150098, -0.010674928, -0.18186629, -0.16733718, -0.1841266, -0.041232817, -0.09149144, -0.025151908, 0.059236642) * inp_2_1_1;
    result0 += M4(-0.12535353, -0.04877851, -0.059475344, -0.058705945, 0.39284584, 0.055313177, 0.40802804, 0.075013764, 0.014933045, 0.0016515336, 0.04066316, -0.008089041, 0.015682034, 0.012275781, 0.064142786, 0.08425214) * inp_2_2_1;
    result0 += M4(0.035580803, 0.0066042882, 0.09167825, 0.02289302, -0.063039064, -0.013721171, -0.11696837, 0.025534334, -0.011991695, -0.006194408, 0.0024284883, 0.010004095, -0.01982277, 0.005908278, -0.059629805, -0.022134244) * inp_2_0_2;
    result0 += M4(0.018664334, -0.03823165, 0.13377948, 0.0049128137, 0.07398363, 0.03369112, -0.12192991, -0.10723777, 0.010645614, 0.05700643, 0.035523865, -0.11651233, -0.010165789, -0.04327485, -0.067644134, -0.063807875) * inp_2_1_2;
    result0 += M4(-0.0018251435, 0.043592036, -0.010315958, 0.004881836, 0.114187166, 0.13474408, 0.13822508, 0.104212545, 0.0066755614, -0.002306807, 0.018865114, 0.044430465, 0.00312311, 0.024116479, -0.0031741804, 0.010639195) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.035263136, -0.0031063566, -0.040772352, -0.021174463, -0.0075791543, 0.029884338, 0.007201631, 0.009610896, 0.014213661, 0.016458936, 0.01592174, 0.0014571846, -0.10490042, -0.05921069, -0.033716086, -0.044697233) * inp_3_0_0;
    result0 += M4(-0.018115506, -0.057459727, 0.03188971, 0.015085961, 0.060714576, 0.016534105, -0.019726213, -0.0077972948, -0.038604777, -0.07117405, -0.06838833, -0.045322444, -0.06967658, -0.093339846, 0.017704204, 0.02492226) * inp_3_1_0;
    result0 += M4(0.010685928, 0.06450778, 0.0037770995, 0.035430096, -0.11181106, 0.01939405, -0.038134497, 0.010130204, 0.031291, 0.054820642, 0.028217407, 0.029001769, -0.071967535, -0.09114201, -0.04506283, -0.033392362) * inp_3_2_0;
    result0 += M4(-0.019231398, -0.05574374, 0.05509076, 0.0030468868, -0.04327334, 0.021779453, -0.053431492, 0.06279373, 0.023014156, -0.03920856, 0.026490543, 0.021116456, -0.047778152, 0.004974249, -0.08147058, 0.02753147) * inp_3_0_1;
    result0 += M4(0.15898697, 0.2530069, -0.19245565, -0.045171943, 0.09429458, -0.19466214, 0.13054527, -0.15093312, -0.4774362, -0.38457322, -0.40588766, -0.36199126, 0.33455497, 0.3289869, 0.3482996, 0.25051755) * inp_3_1_1;
    result0 += M4(0.020052718, -0.012165986, 0.03894559, -0.055031497, -0.04700344, 0.107393436, -0.09531916, 0.05163099, 0.023882268, -0.035500526, -0.008620049, -0.01686972, -0.11918013, -0.1277508, -0.10321956, -0.14354923) * inp_3_2_1;
    result0 += M4(-0.049919005, -0.017966593, -0.0611171, -0.014388935, 0.0018678405, 0.0069634393, 0.0152588645, 0.0039534504, 0.13094781, 0.061274357, 0.16165999, 0.011366562, -0.018828098, 0.01159128, -0.050686307, 0.011480428) * inp_3_0_2;
    result0 += M4(-0.0075821024, -0.04618578, 0.09532082, 0.028442759, 0.04056779, 0.0059248363, 0.023056274, -0.08889624, 0.18844683, 0.1968267, -0.030218247, 0.087352216, 0.13872713, 0.05624102, 0.08104379, -0.023543105) * inp_3_1_2;
    result0 += M4(-0.023310868, -0.01994872, -0.028325463, 0.011941563, 0.009859911, 0.018042931, 0.017733587, 0.08407952, 0.111402944, 0.17417456, 0.10375577, 0.14471732, -0.024596585, -0.00064922863, -0.04779132, -0.03367507) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DN (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
