// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DN (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(0.0005972453, -0.008562388, -0.015517822, -0.048355777);
    V4 result1 = V4(-0.029541684, -0.005515299, 0.0020750002, 0.0026512155);
    V4 result2 = V4(0.03317399, 0.0002327175, -0.0075491588, -0.0011475097);
    V4 result3 = V4(0.0012354986, 0.008544977, 0.012763224, -0.062230613);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.023286756, -0.12055807, 0.024373617, 0.04058965) * inp_0_0_0;
    result0 += V4(0.039216377, 0.1563739, 0.097889535, 0.12389232) * inp_0_1_0;
    result0 += V4(-0.011907772, 0.112836026, -0.07221167, 0.06350877) * inp_0_2_0;
    result0 += V4(-0.007866776, 0.055034187, -0.020006334, 0.16669728) * inp_0_0_1;
    result0 += V4(-0.048192866, -0.07260967, -0.349242, 0.27105138) * inp_0_1_1;
    result0 += V4(-0.2210833, -0.13677415, 0.07740101, 0.111765765) * inp_0_2_1;
    result0 += V4(0.017561436, 0.14792122, 0.002857545, 0.09540479) * inp_0_0_2;
    result0 += V4(0.09322433, -0.11160022, 0.19209155, -0.0045623877) * inp_0_1_2;
    result0 += V4(0.16159306, -0.014429111, 0.05174588, 0.0910764) * inp_0_2_2;
    result1 += V4(0.076648936, -0.055724, -0.109441884, 0.015968787) * inp_0_0_0;
    result1 += V4(-0.056880966, -0.026243985, 0.0039496487, -0.18079552) * inp_0_1_0;
    result1 += V4(0.030212868, 0.11377662, 0.04252128, 0.12722366) * inp_0_2_0;
    result1 += V4(-0.037789546, 0.07652911, 0.11606794, -0.028171718) * inp_0_0_1;
    result1 += V4(0.09977665, -0.15662168, 0.12957765, 0.14799954) * inp_0_1_1;
    result1 += V4(-0.11836441, 0.24012096, -0.18580225, -0.09428091) * inp_0_2_1;
    result1 += V4(0.051374145, -0.009765077, 0.010674617, 0.0258918) * inp_0_0_2;
    result1 += V4(0.08758346, -0.22845985, -0.094599284, 0.034850843) * inp_0_1_2;
    result1 += V4(-0.0797833, 0.053088743, 0.09059533, -0.04766383) * inp_0_2_2;
    result2 += V4(-0.056624435, 0.11840553, -0.07312991, -0.059194457) * inp_0_0_0;
    result2 += V4(0.07876112, -0.055440024, 0.11362702, -0.0045563295) * inp_0_1_0;
    result2 += V4(0.06809949, -0.0010619343, 0.037969362, 0.003946361) * inp_0_2_0;
    result2 += V4(-0.17799456, 0.26805198, 0.28970474, 0.14838652) * inp_0_0_1;
    result2 += V4(-0.27458024, -0.69806504, -0.28714746, -0.052642304) * inp_0_1_1;
    result2 += V4(0.12964931, 0.10869027, -0.08072929, -0.044655807) * inp_0_2_1;
    result2 += V4(0.040682603, 0.12861913, -0.08753699, -0.0024133683) * inp_0_0_2;
    result2 += V4(0.19129328, 0.060704403, 0.04537394, 0.14278382) * inp_0_1_2;
    result2 += V4(-0.1435901, 0.004055594, 0.03167372, -0.12435821) * inp_0_2_2;
    result3 += V4(0.053781085, -0.11760596, 0.22566341, -0.0973175) * inp_0_0_0;
    result3 += V4(-0.1553098, 0.16112578, 0.34482253, 0.17304982) * inp_0_1_0;
    result3 += V4(-0.013076493, -0.01032636, 0.06820761, 0.054892175) * inp_0_2_0;
    result3 += V4(0.039809864, -0.04207421, 0.01903584, -0.19571917) * inp_0_0_1;
    result3 += V4(0.01733419, -0.13220595, -0.40584895, 0.0033065733) * inp_0_1_1;
    result3 += V4(0.047845192, 0.12591079, -0.17332506, 0.19420232) * inp_0_2_1;
    result3 += V4(-0.056980386, 0.16293754, -0.04854109, -0.0836625) * inp_0_0_2;
    result3 += V4(0.09231293, -0.091774665, -0.16119199, 0.015356691) * inp_0_1_2;
    result3 += V4(-0.024116926, -0.06432913, -0.012806052, 0.14284447) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.018981056, 0.011984346, 0.107727565, 0.017041307);
    V4 result1 = V4(0.038684953, -0.0012934067, -0.0042033135, 0.01812512);
    V4 result2 = V4(0.010265788, 0.036045227, 0.006045238, 0.015172885);
    V4 result3 = V4(0.016051896, 0.006151307, 0.005597129, -0.017440414);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.075784534, 0.41673455, -0.017934551, -0.0043215216, 0.090308204, 0.05193482, 0.050731894, -0.0071248403, -0.29679972, 0.25954986, -0.08415645, -0.06901432, 0.003493072, -0.059538934, -0.12760107, 0.030771257) * inp_0_0_0;
    result0 += M4(-0.27152017, 0.17310682, 0.013837245, 0.041822862, 0.6073652, 0.23354968, 0.003170762, 0.1046596, -0.5962029, -0.45511952, -0.06417575, -0.12209374, -0.34543732, 0.0920423, 0.03799613, 0.10874059) * inp_0_1_0;
    result0 += M4(0.31858298, -0.013115092, 0.03903093, 0.0020959275, 0.14779025, -0.18695395, 0.2026119, -0.11962329, -0.276394, 0.07463542, -0.08319097, 0.05590825, -0.07623151, -0.016334306, -0.09259343, -0.055067178) * inp_0_2_0;
    result0 += M4(-0.18870716, -0.16341598, -0.010323579, -0.14451249, -0.25334424, -0.1904956, 0.2046979, -0.14279963, 0.21739325, 0.13981506, 0.009712519, -0.011368739, 0.03732463, 0.08291004, -0.018507084, 0.029521247) * inp_0_0_1;
    result0 += M4(-0.0530017, -0.16854908, -0.03865813, -0.11622547, -0.44292545, 0.23538472, 0.07088727, -0.048755318, -0.47271416, 0.5800053, 0.007127123, -0.36137718, 0.040425837, 0.03586789, 0.10317941, 0.1228186) * inp_0_1_1;
    result0 += M4(-0.3518133, 0.02474733, -0.062115118, -0.095250964, -0.39173266, -0.09972734, -0.053280666, -0.034586884, 0.18542637, 0.13237678, 0.066219725, -0.1580308, -0.04359024, 0.06693391, 0.053007472, 0.04005962) * inp_0_2_1;
    result0 += M4(0.044332925, 0.044533968, -0.001216469, 0.118826605, -0.051609717, -0.11291007, -0.063487165, 0.22039887, 0.26984313, -0.20466414, 0.05379955, -0.07100482, -0.042323392, -0.051942453, -0.109553285, -0.02016613) * inp_0_0_2;
    result0 += M4(0.03826011, 0.054046478, -0.054811984, 0.13816567, 0.09833659, 0.17889404, -0.045207817, 0.4731576, 0.26845747, -0.13310584, -0.2021122, 0.77691096, 0.008203974, -0.0357452, -0.055105634, 0.024438139) * inp_0_1_2;
    result0 += M4(-0.15080322, -0.10773414, -0.007560164, 0.042379647, 0.17577486, -0.28300998, -0.16326311, -0.10606074, 0.07767604, -0.05356658, 0.06619586, -0.066447124, 0.041960478, -0.0664113, 0.03923508, -0.075651996) * inp_0_2_2;
    result1 += M4(-0.113508105, -0.0018912154, 0.07045807, 0.16769181, -0.07926993, -0.045296926, 0.020424163, 0.050242342, 0.06171031, -0.0043929266, -0.025595488, 0.011900603, 0.08329189, -0.070147924, -0.06053757, -0.11416305) * inp_0_0_0;
    result1 += M4(0.11793672, -0.032125674, 0.07263591, -0.064424366, -0.07053563, 0.10535645, 0.1068267, 0.056263667, -0.109396696, 0.03737335, 0.041048847, -0.006899367, 0.14030313, -0.05325681, -0.11123649, -0.04603008) * inp_0_1_0;
    result1 += M4(0.12455614, 0.04559989, -0.00034564358, -0.08940091, -0.15385745, 0.29986563, 0.06447662, -0.044696104, 0.060519163, 0.11021265, -0.11873242, 0.10796435, -0.10871089, -0.03408753, -0.054824334, 0.14255065) * inp_0_2_0;
    result1 += M4(-0.057865944, 0.23887162, -0.09078015, 0.35411996, -0.06906545, -0.06818254, 0.11713547, 0.095621526, -0.10863176, 0.27188575, 0.05248634, 0.12837636, 0.07025242, -0.06017981, -0.03781009, -0.103944294) * inp_0_0_1;
    result1 += M4(0.11781869, -0.17691508, 0.25663432, -0.039820265, 0.20313965, -0.19067176, -0.056696694, -0.05167391, -0.18457668, 0.13226844, 0.8852863, -0.06449595, 0.17319863, 0.06893829, -0.10848945, -0.0827971) * inp_0_1_1;
    result1 += M4(0.11650144, -0.16407695, -0.011060168, -0.11831935, -0.03546424, -0.18758382, 0.23740236, -0.10933349, 0.37842396, -0.113826685, 0.14666623, 0.056950644, -0.2001015, 0.089851595, -0.026161233, 0.023378722) * inp_0_2_1;
    result1 += M4(0.009263457, -0.020092992, 0.022283781, -0.1663871, 0.14486633, -0.45771766, -0.118029736, 0.061273452, 0.116742946, -1.2614257e-05, -0.094928354, 0.14736605, -0.009350517, -0.06404638, 0.113678634, -0.03346485) * inp_0_0_2;
    result1 += M4(0.10535708, -0.1255338, -0.13916335, -0.044185925, 0.17930995, -0.042503875, -0.5301219, -0.33270487, -0.045426916, -0.40914735, -0.6104624, -0.12548962, 0.08383294, 0.03364767, 0.08058364, 0.062360182) * inp_0_1_2;
    result1 += M4(0.20477395, -0.13527776, -0.036286693, -0.049628705, 0.04805653, 0.0010185736, -0.020942392, -0.018438712, 0.040178016, -0.1326113, -0.12915224, -0.13216774, -0.13474506, -0.11217077, 0.06893093, 0.08984734) * inp_0_2_2;
    result2 += M4(-0.26372832, -0.10514169, -0.47763398, -0.79868096, -0.0029378652, -0.005834009, 0.059453238, -0.41768578, -0.20436811, -0.18207408, 0.28290352, -0.30349898, 0.011005007, -0.06801182, 0.029193714, 0.0323838) * inp_0_0_0;
    result2 += M4(0.050558977, 0.08641481, 0.05977055, -0.050463744, 0.029821547, 0.027790321, 0.10133077, -0.15518057, 0.045112144, 0.09119766, 0.049431674, -0.49588776, 0.055449847, 0.10760956, -0.049951542, -0.09785592) * inp_0_1_0;
    result2 += M4(0.05893272, 0.20757012, -0.15574677, -0.22828819, -0.013654038, 0.04948363, 0.08383768, -0.48780486, -0.039074413, 0.2197946, -0.2960459, -0.22001569, -0.05493858, -0.16829212, -0.09947705, -0.02570383) * inp_0_2_0;
    result2 += M4(-0.107658766, -0.13559674, 0.53931123, -0.12068264, -0.05449536, -0.14331487, 0.43418062, -0.13301075, -0.07133719, -0.14246286, -0.47779706, 0.36534458, 0.07036358, 0.090425864, -0.034168143, 0.085356444) * inp_0_0_1;
    result2 += M4(-0.15414335, 0.033465754, 0.11751663, 0.13562605, -0.08157412, 0.096230626, 0.11150024, 0.11456867, -0.45241472, -0.15722449, 0.10995092, 0.15575196, 0.21526857, 0.086219326, 0.11450041, 0.068171285) * inp_0_1_1;
    result2 += M4(-0.21126379, 0.05012382, 0.21837822, -0.07424855, -0.054598156, 0.3272766, -0.06059823, 0.09924323, -0.097494386, 0.2553961, -0.050984617, 0.17763293, 0.08982932, -0.044097964, 0.08482648, 0.14642675) * inp_0_2_1;
    result2 += M4(-0.1786651, -0.007243135, -0.15232445, 0.09184859, 0.11827136, -0.098932154, -0.30681247, 0.38794395, 0.02567214, 0.05903151, 0.4422443, -0.06779713, -0.067418225, -0.015345011, -0.0040120133, -0.08397484) * inp_0_0_2;
    result2 += M4(0.09699125, -0.06274374, 0.04316503, 0.13212577, 0.47210327, 0.0658926, -0.20472033, 0.13264708, 0.46534377, -0.018355845, 0.03179453, 0.010302808, -0.1927419, 0.10700289, -0.02308737, -0.14566246) * inp_0_1_2;
    result2 += M4(0.07730283, 0.123058185, -0.15901253, -0.014598951, -0.08245318, 0.06380397, -0.07934936, -0.00802474, 0.05750685, -0.082426324, -0.14449212, -0.0106263915, -0.07200559, -0.08696442, -0.03263798, -0.055810545) * inp_0_2_2;
    result3 += M4(0.18050025, 0.12100164, 0.2048661, -0.10037012, 0.08207329, -0.024744477, 0.23457523, 0.13959658, 0.021345733, -0.13396019, -0.12639461, -0.016489424, -0.03118733, -0.04824284, -0.009726992, 0.1519442) * inp_0_0_0;
    result3 += M4(-0.15218794, -0.08862424, -0.096282385, -0.04190613, -0.012030351, 0.049576096, 0.018885348, 0.03131554, 0.1386544, -0.13334133, -0.32418776, 0.07586483, -0.009815495, 0.05808283, -0.010513211, -0.047766726) * inp_0_1_0;
    result3 += M4(-0.15723497, 0.04391544, -0.010602068, 0.03815632, -0.04002319, -0.09931904, 0.1333874, 0.09432775, -0.19612363, -0.25870198, 0.07882776, 0.071177036, 0.00542653, 0.054377973, -0.012956729, -0.08929559) * inp_0_2_0;
    result3 += M4(0.20866244, 0.010418438, -0.29466, 0.12652636, 0.13715808, -0.043253247, 0.008290046, 0.15103215, 0.13038372, -0.2443966, 0.11076442, -0.43722796, -0.14455326, -0.121012546, 0.024528893, 0.09935179) * inp_0_0_1;
    result3 += M4(-0.08951185, -0.061763424, -0.051854018, -0.025056139, -0.3118568, 0.053479847, -0.16898994, 0.119990356, 0.4484923, 0.02079671, 0.41173443, 0.21448962, -0.027795702, 0.09634343, -0.05592601, 0.019731505) * inp_0_1_1;
    result3 += M4(-0.048621982, 0.048906513, -0.11857418, 0.059328828, -0.34280157, -0.1691033, -0.29112884, 0.02317206, -0.36232153, -0.38351187, 0.00036260093, 0.032606985, 0.13251434, -0.1137199, -0.09675081, -0.025047345) * inp_0_2_1;
    result3 += M4(0.026446603, 0.026867123, -0.08648895, 0.024345623, 0.06307516, 0.40936735, 0.28309384, 0.043886412, -0.15425238, 0.016803, 0.11643704, -0.03684587, -0.06982419, -0.05154299, -0.04038182, 0.042158727) * inp_0_0_2;
    result3 += M4(0.016199436, -0.27601665, 0.062122863, -0.068127625, 0.038265288, 0.1549379, -0.47957522, -0.1031069, 0.0050663995, 0.7799046, -0.25953484, 0.115330756, 0.015374067, 0.11504265, -0.00033580666, -0.009710734) * inp_0_1_2;
    result3 += M4(-0.06642214, 0.039815746, -0.28870267, 0.040267173, 0.15260324, -0.008521934, 0.022371957, -0.23952343, -0.06402405, 0.21808614, -0.26240864, 0.0065418375, 0.040788032, -0.009695932, -0.022078682, -0.012140023) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.7769822, 0.0049223783, -0.03682443, 0.073929176, -0.23515034, 0.108416416, 0.17774275, -0.020181783, -0.73863053, 0.40030125, -0.027409067, -0.12322817, -0.42472988, 0.8141256, 0.00803662, 0.09232959) * inp_1_0_0;
    result0 += M4(-0.36791217, 0.08864047, 0.05347908, 0.012791987, 0.6504254, -0.40345797, -0.0145348655, -0.22713552, 0.780708, -0.10084853, 0.023346854, 0.013874614, -0.2623863, -0.24760367, -0.18274528, 0.02567441) * inp_1_1_0;
    result0 += M4(0.22558817, 0.24363786, 0.0059235496, 0.025580842, 0.17777964, -0.026220977, 0.03395139, 0.040440757, -0.34517857, -0.4855354, 0.049211875, 0.15458737, 0.0396516, -0.12265486, -0.036613744, 0.083874196) * inp_1_2_0;
    result0 += M4(-0.34202525, -0.08257672, 0.069177985, -0.06427895, -0.11139121, 0.045586277, -0.17538542, 0.03507232, -0.071052775, -0.32199508, -0.042797033, 0.21671927, -0.2892596, 0.5142821, 0.123692445, 0.2443529) * inp_1_0_1;
    result0 += M4(0.17181467, -0.3787776, 0.073270045, 0.09543782, -0.096867196, 0.24780987, 0.028603755, 0.06463219, 0.053761832, 0.3417274, 0.13182756, -0.04472755, 0.8676356, -0.6680284, -0.19709986, 0.1923991) * inp_1_1_1;
    result0 += M4(-0.1763144, 0.05986334, -0.12437929, -0.13944662, -0.22570033, -0.031229941, -0.14417778, 0.11056397, -0.13921598, 0.31995678, -0.05055376, -0.16901757, 0.38954008, 0.45490977, -0.04344286, 0.14613278) * inp_1_2_1;
    result0 += M4(0.052572455, 0.15974776, 0.0013291627, 0.13204025, 0.09745708, -0.12969193, -0.09407662, 0.052642606, 0.2883671, 0.14411089, -0.19918756, -0.22553222, 0.010018919, 0.18450744, -0.22416097, 0.13416293) * inp_1_0_2;
    result0 += M4(0.073254324, -0.06650021, 0.11432066, -0.145007, 0.071856834, 0.018898962, -0.008844148, 0.15467674, -0.01716364, 0.119920075, 0.060857702, 0.20298305, -0.15794261, -0.14001301, 0.23521753, -0.7306482) * inp_1_1_2;
    result0 += M4(-0.121695206, 0.18039878, -0.1738445, -0.00035997055, 0.10915085, -0.03797229, -0.081364274, -0.14099336, 0.23481523, -0.509923, 0.08253987, -0.07005416, -0.011686711, -0.47043496, 0.02415155, -0.15228838) * inp_1_2_2;
    result1 += M4(-0.29536846, -0.13232662, 0.0016148125, -0.029629868, 0.25048012, 0.377711, 0.060611527, 0.19245183, 0.048686665, 0.07654092, 0.26027778, -0.11887484, 0.040536206, -0.10612201, -0.3062421, -0.1517159) * inp_1_0_0;
    result1 += M4(0.11057022, 0.038321864, -0.06629347, -0.03311458, -0.23003988, 0.073086195, 0.15433638, -0.09709831, 0.13834628, -0.0971442, 0.09629716, 0.2699645, 0.11746153, -0.21634004, -0.031764455, 0.012357053) * inp_1_1_0;
    result1 += M4(0.057204112, 0.11965203, 0.11700128, -0.05909051, -0.04198495, -0.07916826, 0.1162796, -0.017451964, -0.2116205, 0.25417033, -0.1760805, 0.06288943, 0.10021532, -0.11364317, -0.0806134, -0.0016321029) * inp_1_2_0;
    result1 += M4(-0.01049168, -0.54342175, 0.05362725, -0.39211375, 0.12419524, 0.39871916, 0.013527011, 0.48276195, -0.02618787, -0.17733072, -0.15128519, 0.047101222, -0.18591423, -0.3970847, -0.11810601, -0.49858865) * inp_1_0_1;
    result1 += M4(0.3628474, 0.048880953, -0.14450434, 0.1686095, -0.2884975, 0.036800772, -0.13690072, -0.29465201, 0.14955811, -0.17169781, -0.37006807, -0.22418521, 0.32782188, 0.049740557, -0.15749589, 0.12389657) * inp_1_1_1;
    result1 += M4(0.2683662, 0.070404895, 0.15515642, 0.008723835, -0.12473979, 0.07825013, 0.007710204, -0.14706443, -0.1908731, -0.21595821, 0.14104012, 0.105619155, 0.20887229, 0.022179577, -0.20275179, -0.05822153) * inp_1_2_1;
    result1 += M4(-0.15092431, -0.50361496, -0.030318199, -0.22170258, 0.28685468, 0.44738108, -0.15125097, 0.9250016, -0.28300557, 0.0036582148, 0.09001253, -0.052096896, 0.051768318, 0.016867224, 0.009371063, 0.47652116) * inp_1_0_2;
    result1 += M4(0.13118441, -0.017191608, 0.17847665, 0.21637219, -0.15527594, -0.03610296, -0.3639824, -0.19375406, 0.24137484, 0.24666506, 0.030410113, -0.33177295, -0.043656845, 0.62757987, 0.8687655, 0.16297477) * inp_1_1_2;
    result1 += M4(0.1645249, -0.075645246, -0.17109138, -0.0971169, -0.2279348, 0.12101219, -0.015707128, 0.00011875014, -0.02717414, 0.10100936, 0.20034437, 0.04346378, -0.25782788, -0.043797795, 0.19237256, 0.14821441) * inp_1_2_2;
    result2 += M4(-0.0849776, 0.04930288, 0.6125285, -0.5210175, 0.23582815, 0.17777042, -0.21462405, 0.76281303, -0.2234593, -0.17344114, -0.8514851, -0.32012987, -0.19018716, 0.021337599, 0.6263308, -0.5737676) * inp_1_0_0;
    result2 += M4(-0.028944127, 0.119614385, 0.13677347, -0.07519596, -0.1093813, -0.25943193, 0.004230693, -0.12158643, -0.1413026, 0.20783895, 0.18618338, 0.14569259, -0.15884025, -0.0010700109, -0.10726965, -0.17639028) * inp_1_1_0;
    result2 += M4(-0.014564856, 0.01905318, 0.32104468, -0.049811516, 0.0050579086, 0.014793018, 0.12912795, 0.04791488, 0.18100405, -0.31113338, -0.12367079, 0.12381434, -0.18607989, 0.1585494, -0.104281954, 0.52300036) * inp_1_2_0;
    result2 += M4(-0.355641, -0.0105090635, -0.24582122, -0.3609451, 0.26854888, 0.08285923, -0.016065255, 0.488557, -0.012064824, -0.12082702, 1.2665466, -0.15103514, -0.48259494, -0.021357404, 0.7325236, 0.33922833) * inp_1_0_1;
    result2 += M4(-0.0613579, 0.22008091, -0.38630027, -0.19911033, -0.031972658, -0.26181266, -0.006460263, 0.070368186, 0.48453614, 0.07989755, 0.2533893, -0.037663642, 0.16076052, 0.09338217, -0.3096115, -0.49282455) * inp_1_1_1;
    result2 += M4(-0.031289, -0.07969818, -0.20070457, -0.024703598, 0.1151411, 0.14153291, 0.08420785, -0.06463188, 0.07522777, 0.14514941, 0.07207676, -0.096385315, -0.08772206, 0.0722503, -0.059854608, 0.30916262) * inp_1_2_1;
    result2 += M4(-0.05717439, -0.1966945, 0.08371236, -0.25666046, 0.31094444, -0.051823605, -0.049263395, 0.5078371, -0.20703663, -0.112965934, -0.9644215, 0.28644353, 0.7170847, -0.49664456, -0.8583445, -0.3700378) * inp_1_0_2;
    result2 += M4(0.21359967, 0.010112699, -0.028371593, 0.15773624, 0.19446203, -0.18223134, -0.17674187, 0.1955245, -0.0849942, 0.01991587, 0.08528053, 0.108801596, -0.3809403, 0.35793588, 0.019268041, 0.108306736) * inp_1_1_2;
    result2 += M4(0.012614894, -0.056336626, -0.05223295, 0.091197945, -0.050472546, -0.046032175, -0.012909869, -0.018537976, -0.13557184, 0.13211232, 0.1393782, -0.016762143, -0.21911596, -0.0049701747, -0.022980437, 0.116125844) * inp_1_2_2;
    result3 += M4(0.012240671, 0.20790038, 0.10512092, 0.24236569, -0.002936985, -0.17183778, -0.11745082, -0.2958902, -0.022779688, 0.22421305, 0.35656875, -0.0053816494, -0.073631085, -0.059958998, -0.56492734, 0.2260463) * inp_1_0_0;
    result3 += M4(0.08191432, 0.13290775, -0.15948567, 0.055728685, 0.13244799, -0.099474736, -0.029937474, 0.13128854, 0.12862967, 0.045456234, 0.48915392, -0.12662038, 0.07329857, 0.13447866, -0.049952816, -0.027744526) * inp_1_1_0;
    result3 += M4(-0.116547674, -0.005855492, -0.12037644, 0.07314415, -0.1809822, -0.03297082, 0.086728685, 0.033289567, 0.24974866, -0.097726375, -0.1399091, 0.016646769, -0.11615918, -0.3212735, 0.5448064, 0.0036633) * inp_1_2_0;
    result3 += M4(0.0066688242, 0.4333809, 0.007235811, 0.2901984, 0.066363536, -0.30819526, 0.17707384, -0.7053945, 0.153765, 0.05576049, -0.42835638, 0.574828, -0.19329156, 0.05024071, -0.620767, 0.48903006) * inp_1_0_1;
    result3 += M4(-0.399167, -0.023066707, -0.31718084, -0.049053304, 0.57887304, 0.07943267, 0.11631274, 0.2728006, -0.5766623, 0.055160414, -0.22494909, -0.12190943, -0.7075357, -0.09610729, -0.47377974, -0.44533664) * inp_1_1_1;
    result3 += M4(0.09617936, 0.06405632, 0.14584981, 0.03604694, -0.16813076, -0.095069535, -0.03169751, 0.07424091, -0.03254256, -0.015640322, -0.0680427, 0.026064327, 0.32804164, -0.11331316, 0.5091605, -0.17266048) * inp_1_2_1;
    result3 += M4(0.030739732, 0.26646674, -0.017302979, -0.028586712, -0.08377556, -0.28852478, 0.029271161, -0.0873822, -0.07012576, 0.09381165, 0.13302763, -0.1921131, 0.047763713, 0.26396447, 0.1637413, 0.04493107) * inp_1_0_2;
    result3 += M4(-0.06681929, -0.09129952, -0.049113076, -0.10786673, 0.18268302, 0.07179033, -0.19943391, 0.07976307, 0.037498582, -0.08266476, 0.004152753, -0.15043853, 0.20162995, -0.03416055, 0.57547605, 0.03200645) * inp_1_1_2;
    result3 += M4(0.08424749, 0.05285315, 0.23470032, 0.09693985, -0.033211175, -0.028301606, -0.061676703, 0.00032082153, 0.12016249, -0.07197129, 0.0072331848, -0.04440799, 0.08331629, 0.36046275, 0.31942987, -0.0073729604) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.047395505, -0.07640906, -0.08411166, 0.042187355, -0.16553709, 0.3127655, -0.00019515779, -0.06477389, 0.37199336, 0.38266602, -0.019880315, -0.06591233, 0.8367643, 0.117715165, -0.005077109, 0.004060769) * inp_2_0_0;
    result0 += M4(-0.6349934, -0.1506555, -0.089782104, 0.03101169, -0.0089670615, -0.4310337, -0.040425774, -0.057348248, 0.015955672, -0.34804773, 0.105973445, -0.00299577, -1.080944, -0.15934588, 0.060791716, 0.053178813) * inp_2_1_0;
    result0 += M4(-0.20436627, 0.1023172, 0.14296506, 0.007817643, -0.2058642, 0.2787461, 0.006218669, -0.013971289, -0.66894984, -0.20901613, -0.20458582, 0.0777321, 0.39025825, 0.051294174, 0.067101054, 0.015112765) * inp_2_2_0;
    result0 += M4(0.065345064, 0.17982143, -0.031841494, -0.0782825, 0.16688488, -0.02779714, -0.10641816, -0.05020113, 0.042114884, -0.43768463, 0.13279316, -0.1416207, -0.20016173, -0.00481758, 0.1983972, -0.067340665) * inp_2_0_1;
    result0 += M4(-0.16810177, 0.41148514, 0.081443585, -0.32804072, -0.0495936, 0.11548085, 0.22641574, -0.5772145, -0.14832462, 0.64342844, 0.11397411, -0.365575, 0.23650326, 0.24283361, -0.21459757, -0.15707564) * inp_2_1_1;
    result0 += M4(-0.05495596, 0.14554627, 0.10081607, -0.03530618, 0.15678467, -0.09282565, -0.09027966, -0.109272376, -0.0055896756, -0.12865357, -0.07198495, 0.11239873, -0.04847258, 0.13100584, -0.039739072, -0.0395753) * inp_2_2_1;
    result0 += M4(0.18592757, 0.0048166495, -0.24975324, 0.14778972, -0.02440017, -0.047153838, -0.008426971, 0.042291697, 0.0011041722, 0.06461873, 0.033315662, 0.042896364, -0.08815399, 0.11037665, 0.013119721, 0.17089799) * inp_2_0_2;
    result0 += M4(-0.37460184, 0.05379501, -0.22355416, 0.6792106, -0.20702495, 0.18254982, 0.11951345, 0.35519627, 0.049238916, 0.068055645, -0.19592895, 0.45818293, 0.08358721, -0.2518859, 0.108640395, -0.061287336) * inp_2_1_2;
    result0 += M4(0.096434325, -0.14018452, -0.06362631, -0.024720183, -0.08964628, 0.10044901, 0.07133426, 0.17442986, 0.19764335, -0.046075366, -0.11581106, -0.016091004, -0.035830457, -0.14150476, -0.03370288, 0.033090193) * inp_2_2_2;
    result1 += M4(-0.04296116, -0.13092963, -0.22254954, -0.10905209, 0.23625925, 0.34901863, 0.08133156, 0.11218459, -0.11524303, 0.080836535, 0.06940826, 0.0805937, -0.121090814, -0.024723742, -0.20845802, 0.111222975) * inp_2_0_0;
    result1 += M4(-0.11447809, 0.21329321, 0.117197886, 0.06705871, 0.07351684, 0.03184344, 0.22409254, -0.07504333, 0.09142707, -0.06116227, -0.076936275, -0.06945818, 0.1123869, 0.15039179, -0.07590793, -0.04656785) * inp_2_1_0;
    result1 += M4(0.05314339, -0.00865434, -0.09863975, 0.037681665, -0.067799576, 0.16496007, -0.054564845, -0.049579788, -0.17537525, -0.2737092, 0.12730165, 0.045208003, -0.09072787, -0.1508175, 0.14192194, -0.067760885) * inp_2_2_0;
    result1 += M4(0.06975155, 0.1690128, 0.024715045, -0.17752664, 0.16878267, 0.2549283, -0.0062326547, -0.103291325, -0.15449736, 0.0739877, 0.028478323, 0.40282646, 0.023083646, 0.07239697, 0.11167036, -0.34925577) * inp_2_0_1;
    result1 += M4(-0.127965, 0.42897812, 0.7982816, -0.02618442, -0.11526675, -0.1337909, 0.84815246, -0.07996903, 0.16379026, 0.118606605, 0.28723106, -0.33533084, 0.1551969, -0.032160424, 0.37128118, 0.3322151) * inp_2_1_1;
    result1 += M4(0.3478321, -0.05122553, 0.021652862, 0.11073749, -0.3547195, -0.037027944, 0.20545049, -0.11385813, -0.2498111, 0.2773108, 0.2691773, 0.21001951, -0.13067773, -0.08967772, -0.10929197, 0.047150597) * inp_2_2_1;
    result1 += M4(0.22146578, -0.14794193, -0.15904692, 0.5291674, 0.15825926, 0.44442812, -0.19057654, 0.6350628, -0.14451201, -0.14204232, -0.118798494, -0.08986739, 0.07706878, -0.3777894, -0.06602178, -0.19874255) * inp_2_0_2;
    result1 += M4(-0.16847116, -0.24037911, -0.39730814, 0.04176099, 0.1007114, -0.1785758, -0.5275615, -0.1644768, 0.4946835, -0.008608834, -0.49375817, -0.5569754, 0.071491554, 0.37228495, -0.09450898, -0.20929885) * inp_2_1_2;
    result1 += M4(0.28352123, -0.24134785, 0.004545204, 0.11395483, -0.29866844, -0.12363707, -0.13599731, -0.0126308175, -0.20569961, -0.36320627, -0.1527158, -0.034080744, -0.10956941, 0.067524, 0.045464966, 0.112534404) * inp_2_2_2;
    result2 += M4(-0.12507513, -0.013428242, 0.37184858, -0.13561402, -0.0017834397, 0.14325686, 0.087966695, -0.23976725, -0.003233215, -0.0073527335, 0.40017083, 0.06454585, -0.01965854, 0.0013356743, 0.86655295, -0.58150655) * inp_2_0_0;
    result2 += M4(0.14324872, -0.10846563, 0.28868458, -0.87025017, 0.017836645, -0.039713934, 0.010545666, -0.29017103, 0.09567499, -0.24634893, -0.43940264, 0.41194025, 0.09780719, 0.06206618, -0.38733637, 0.20723677) * inp_2_1_0;
    result2 += M4(0.02963762, 0.01623311, -0.23726451, -0.1276744, -0.09309644, 0.017907074, -0.06380793, 0.035377406, -0.041520245, 0.15215142, -0.35098994, -0.617489, 0.0027125296, -0.028954642, -0.11974209, -0.12120095) * inp_2_2_0;
    result2 += M4(-0.009857561, -0.097030446, -0.22010407, 0.5688753, -0.13518012, 0.031448435, -0.21305755, 0.5196284, -0.15869024, 0.012360912, 0.42674354, -0.034844916, -0.10517606, -0.0401652, -0.1419587, -0.25526035) * inp_2_0_1;
    result2 += M4(-0.3297953, -0.20947586, 0.05254626, 0.010621711, -0.45996708, -0.5519851, -0.17094813, -0.080103345, -0.2927046, -0.658558, 0.15462616, -0.07644843, -0.095298335, -0.013816449, 0.2990656, -0.19607002) * inp_2_1_1;
    result2 += M4(-0.19293255, -0.08303355, -0.00141279, -0.06686926, -0.003201176, 0.5943971, 0.21871342, 0.06486946, 0.13960989, 1.003879, 0.37547383, -0.09923484, 0.11103165, 0.032176364, -0.09799971, 0.09396566) * inp_2_2_1;
    result2 += M4(0.19132642, -0.11443129, 0.25992167, 0.049555995, 0.25295064, 0.048260022, 0.12867627, 0.2918527, 0.016522964, -0.19520092, -0.012208035, 0.36305073, 0.13874754, -0.07477838, -0.369062, 0.58689994) * inp_2_0_2;
    result2 += M4(0.16449167, -0.0008655737, -0.14374715, -0.016433867, 0.27232504, -0.19457504, -0.09568754, 0.12751888, 0.46776986, 0.07965957, -0.5455711, 0.11680949, -0.020123722, -0.116446495, -0.11922537, 0.16053249) * inp_2_1_2;
    result2 += M4(-0.06880355, -0.065354496, -0.16067494, -0.19604985, 0.0843803, -0.08914211, -0.10132191, 0.10463391, -0.17744958, -0.07498087, -0.023974126, -0.06472483, -0.22665836, 0.11662103, 0.00801287, 0.09004778) * inp_2_2_2;
    result3 += M4(0.029894501, -0.15828188, -0.6683787, -0.09795712, 0.007245705, -0.15401576, -0.33738154, -0.3013058, 0.12816745, 0.018524313, 0.056036126, -0.105796754, 0.11934501, -0.04521786, -0.08091455, -0.067886926) * inp_2_0_0;
    result3 += M4(0.18257773, -0.084616505, -0.17647499, 0.018835096, 0.24149579, -0.05862009, -0.19114174, 0.23209538, 0.11900157, -0.11931331, 0.428231, -0.14251441, 0.042714756, 0.014954081, -0.13884991, -0.03535195) * inp_2_1_0;
    result3 += M4(-0.012954448, 0.09828772, 0.21891028, 0.03554711, -0.20045264, -0.06581584, -0.017014079, 0.09067246, -0.26017854, 0.088381976, -0.3189529, -0.08521382, -0.17067733, -0.10490398, -0.12627803, 0.07645366) * inp_2_2_0;
    result3 += M4(0.030096356, -0.122094475, -0.092934065, -0.8391655, 0.103482984, -0.11253449, -0.12506314, -0.45062822, -0.055884197, -0.07933521, 0.33166355, -0.23171592, -0.12639111, 0.35457584, -0.10574279, 0.27119368) * inp_2_0_1;
    result3 += M4(0.4470114, 0.03619297, 0.18595253, 0.10312347, 0.44667542, -0.37127897, 0.4128912, 0.7164502, 0.44262844, 0.15911904, 0.5871933, 1.018676, -0.19654602, -0.0015122662, 0.024096157, 0.11868892) * inp_2_1_1;
    result3 += M4(-0.061772924, -0.12151677, -0.10275837, 0.10694539, -0.80222577, 0.04107469, -0.21583173, -0.04995586, -0.9408032, 0.2536141, 0.02160598, 0.016704377, -0.2981824, 0.26778325, 0.122631304, -0.073795326) * inp_2_2_1;
    result3 += M4(-0.029304495, -0.16549104, 0.11132822, -0.22252585, 0.048223812, -0.2923421, 0.022358544, -0.19249934, 0.047832087, 0.107360385, 0.032457415, -0.07587809, 0.12296536, 0.034872144, 0.33574498, -0.14951496) * inp_2_0_2;
    result3 += M4(0.13654363, 0.3547799, -0.015159628, 0.14207697, 0.19049586, 0.33323243, -0.23307218, 0.25954065, 0.124279544, 0.4458308, -0.60049206, -0.25781935, 0.24178876, 0.15578032, -0.1474251, -0.09276287) * inp_2_1_2;
    result3 += M4(0.06933352, 0.10894608, -0.12805872, -0.10494799, -0.20351575, -0.14636904, -0.17366365, 0.052781112, 0.35850683, -0.18825921, -0.35119966, 0.012802165, 0.071805105, -0.362619, 0.24694195, 0.15232813) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.320322, 0.084762365, 0.08550579, -0.029053904, 0.6194529, -0.61507136, 0.07753611, 0.07634444, 0.10084822, 0.0056687174, 0.052150477, 0.0019286744, 0.010913309, 0.16522363, -0.035141375, -0.008640081) * inp_3_0_0;
    result0 += M4(-0.28718582, -0.21305834, -0.07857763, -0.005280394, -0.34145254, 0.4572921, 0.015434227, 0.07318717, 0.2378671, -0.111873515, -0.026223859, -0.035321347, 0.069838606, -0.11193534, 0.015467948, -0.009787224) * inp_3_1_0;
    result0 += M4(0.22007659, 0.09537901, -0.046432853, -0.0013475053, 0.41145375, -0.12509827, 0.23338245, -0.24442415, -0.081201546, 0.056186453, -0.02496037, 0.021021197, 0.2963849, -0.050428513, 0.05731549, -0.0009302365) * inp_3_2_0;
    result0 += M4(-0.0033904545, 0.18184736, 0.018470408, -0.0045504794, 0.17086245, -0.19111083, -0.057523884, -0.09931599, -0.26241282, -0.02740249, 0.012077419, -0.030340953, 0.0011978492, -0.035407823, -0.05690307, -0.060573626) * inp_3_0_1;
    result0 += M4(0.20278631, -0.01507971, 0.014292869, -0.0019191403, -0.4470028, 0.40348238, 0.099213116, 0.0815416, -0.44655076, 0.34521863, 0.07903776, 0.0102656195, -0.23617081, 0.053505193, 0.05486655, 0.076775484) * inp_3_1_1;
    result0 += M4(0.09932221, 0.086421005, -0.13646874, 0.056260623, -0.36729354, -0.2139384, -0.09734149, -0.11464221, 0.014972868, 0.065007105, -0.021352522, 0.12799707, -0.16330202, 0.10218684, 0.06335976, -0.017525801) * inp_3_2_1;
    result0 += M4(-0.13010335, 0.054571938, -0.002204873, 0.03630678, -0.10512135, 0.08439663, 0.07871318, -0.012272177, -0.09700918, -0.18593588, -0.10726251, 0.28339624, -0.07344874, 0.104387514, 0.0009731764, 0.110195234) * inp_3_0_2;
    result0 += M4(0.01583432, -0.065778166, 0.054174103, -0.58075047, 0.07754677, 0.110554956, -0.0039434927, 0.31911796, 0.31019166, 0.0054570646, -0.1334868, 1.3760734, -0.0304293, 0.07314391, -0.046372104, 0.3652683) * inp_3_1_2;
    result0 += M4(-0.0454784, 0.046492446, -0.04096967, -0.119576246, 0.03844234, 0.024209125, -0.07377292, -0.062425114, -0.21965477, -0.0023030909, -0.025666486, 0.2501127, -0.08200632, 0.023038495, -0.14923784, 0.19327065) * inp_3_2_2;
    result1 += M4(0.07805981, -0.018409908, 0.0421047, 0.047413353, -0.05811032, -0.058258016, 0.020595573, 0.09201148, -0.09967908, 0.1498398, 0.0760854, 0.07576441, 0.04010846, 0.050944388, 0.05164271, 0.0026150686) * inp_3_0_0;
    result1 += M4(-0.1504167, -0.0799084, -0.10209493, -0.017882677, 0.068426296, 0.13068561, 0.07361962, 0.13411629, 0.058587443, -0.19955832, -0.08553465, -0.038718212, -0.273134, -0.029048225, -0.0021676745, 0.04729222) * inp_3_1_0;
    result1 += M4(-0.1449245, -0.0957128, 0.033928506, -0.014359914, -0.20992824, 0.14245789, 0.1627249, -0.14628917, 0.07861557, -0.085081406, -0.0034507788, -0.03432766, 0.2034009, -0.03421509, -0.05185337, -0.06350655) * inp_3_2_0;
    result1 += M4(-0.003722867, 0.05000256, -0.0273106, 0.009134674, 0.26207072, -0.047862504, 0.20505218, -0.30713144, -0.28081262, 0.1347907, -0.018063525, 0.2709343, 0.18621379, 0.41751435, 0.0072273165, 0.44312754) * inp_3_0_1;
    result1 += M4(0.004004912, -0.010780655, 0.046496686, 0.06903031, -0.10671282, -0.029385746, 0.0013754624, 0.18130583, 0.020382585, -0.020399114, -0.12336631, -0.185556, -0.35150307, 0.022416258, -0.015006945, 0.05204266) * inp_3_1_1;
    result1 += M4(-0.031467397, -0.019495223, 0.014299979, -0.038144868, -0.11355207, -0.31677645, 0.0925552, -0.106223196, 0.04968782, -0.028930796, 0.033000574, -0.09079249, 0.46835923, -0.0058607976, 0.05861476, 0.016969198) * inp_3_2_1;
    result1 += M4(0.21665588, 0.27016258, 0.011211512, -0.032786064, 0.008677164, 0.26677695, -0.18332863, 0.41106924, 0.05350789, -0.8362495, -0.22424956, 0.25491038, 0.1447124, 0.1188001, -0.103568144, 0.40283155) * inp_3_0_2;
    result1 += M4(-0.10368961, 0.2791243, 0.4574704, 0.12319124, -0.1811101, -0.12817952, -0.39105377, -0.31292492, 0.5911935, -0.60108566, -0.9921824, -0.20951445, -0.31100154, -0.15796264, -0.1309498, -0.037166476) * inp_3_1_2;
    result1 += M4(-0.33124137, 0.040448513, 0.10051952, -0.0302142, 0.04834892, 0.09222535, -0.048360415, 0.0637097, 0.10348308, -0.29115456, -0.21933775, -0.0664038, 0.24341682, -0.17985909, -0.085855596, -0.027722515) * inp_3_2_2;
    result2 += M4(0.06334518, 0.08773141, 0.34474972, 0.1672927, 0.17354774, 0.2009603, 0.52437705, 0.22488944, 0.04069191, 0.005630135, -0.19450895, 0.30572748, -0.011813748, 0.043847505, -0.0017034387, 0.39120677) * inp_3_0_0;
    result2 += M4(0.07958558, -0.1457452, -0.058049675, -0.22388017, -0.14633769, -0.006285567, 0.2226971, -0.4313235, -0.081398904, -0.065138705, 0.063667625, 0.10913115, -0.0021674694, -0.17419322, -0.015976343, 0.0047108596) * inp_3_1_0;
    result2 += M4(0.055930942, 0.35188532, 0.17875728, 0.17887022, 0.0312901, -0.15474597, 0.16179413, -0.32560802, 0.022906398, 0.13505834, 0.019867009, -0.035828777, 0.10753674, 0.10502709, 0.015473189, -0.15018944) * inp_3_2_0;
    result2 += M4(-0.0009574062, 0.020299599, -0.35133958, -0.030108605, 0.057578802, 0.22563796, -0.7132647, 0.111373216, 0.079803534, -0.12558973, 0.0543165, -0.035396345, 0.023228202, 0.10977274, -0.01843721, -0.041282855) * inp_3_0_1;
    result2 += M4(-0.12608424, -0.16766606, -0.25529012, -0.45504114, 0.19789933, -0.3021184, 0.0728762, 0.17631742, -0.11875662, 0.07939485, -0.019212276, 0.0463552, 0.061125163, -0.34626108, 0.011197303, 0.08895512) * inp_3_1_1;
    result2 += M4(-0.08390913, 0.02258632, 0.047913264, -0.05761133, -0.11371108, -0.039398264, -0.35011414, 0.18435107, 0.13381362, 0.21197854, 0.13425873, -0.2242658, -0.14412284, -0.14861539, -0.111755215, 0.032105047) * inp_3_2_1;
    result2 += M4(0.021443088, 0.014625744, -0.14478236, 0.3057525, -8.663032e-05, 0.11763483, 0.43170315, 0.43152586, 0.11518435, -0.09032008, 0.19099429, -0.1206582, 0.120357804, -0.00880127, 0.13029014, 0.06601696) * inp_3_0_2;
    result2 += M4(-0.4029921, -0.10717652, -0.020454276, 0.18278393, 0.24147774, -0.069208264, -0.6165354, -0.13349287, 0.64079154, 0.15427557, 0.017997224, 0.057990965, 0.17027183, -0.15895689, 0.16302697, -0.005782402) * inp_3_1_2;
    result2 += M4(-0.39908203, -0.08121777, 0.11694909, 0.1379987, -0.08619514, 0.10444415, 0.33190468, -0.10815048, 0.22715907, -0.10671801, -0.16490094, -0.036583107, 0.141927, 0.17900081, -0.029009476, -0.0502746) * inp_3_2_2;
    result3 += M4(-0.030117331, -0.0681978, -0.19614656, 0.003606041, -0.10926398, -0.19481602, 0.21239832, 0.17052875, 0.026083823, -0.009733787, 0.056133173, -0.10496341, -0.016755132, -0.048988692, -0.052520234, -0.112991594) * inp_3_0_0;
    result3 += M4(0.08177937, -0.0803986, -0.017855253, 0.08608226, -0.059130896, -0.06066084, -0.30480546, 0.10995862, -0.038091045, 0.08501935, 0.16018483, 0.074797735, 0.18574846, -0.0005022376, -0.10975216, 0.0034080574) * inp_3_1_0;
    result3 += M4(-0.18986093, 0.03824916, -0.020857748, -0.032041352, -0.09777719, 0.105575085, -0.17085128, 0.24247694, -0.051497053, -0.032971773, -0.080618285, -0.025346704, 0.08517233, 0.041444328, -0.063208275, 0.012722044) * inp_3_2_0;
    result3 += M4(-0.035767578, 0.2206349, 0.21817027, 0.0018529762, -0.008148415, 0.20251529, 0.2326698, -0.35660046, 0.13074562, -0.083502986, 0.012397848, -0.2127586, 0.09738036, -0.074463844, 0.052468568, -0.35283315) * inp_3_0_1;
    result3 += M4(0.17768247, -0.022794424, -0.049330745, 0.2001587, 0.5587824, 0.05952067, 0.08841341, -0.10996362, 0.10439873, 0.13805696, 0.252419, 0.20038244, 0.12026452, 0.01081463, -0.033083316, -0.58616805) * inp_3_1_1;
    result3 += M4(-0.12924966, 0.1372783, 0.26299688, 0.050453722, -0.090640545, -0.008779398, 0.0010738334, 0.026891489, -0.34655932, 0.031173546, -0.30129454, 0.16124292, 0.16781011, 0.088225044, 0.24649683, 0.0066230623) * inp_3_2_1;
    result3 += M4(0.046706155, -0.21169004, -0.1462996, -0.13976783, -0.010012402, -0.38738808, 0.18105407, -0.15757307, 0.004281964, 0.32552013, -0.20114808, -0.042848356, 0.10438931, -0.13864881, -0.14358428, -0.14783138) * inp_3_0_2;
    result3 += M4(0.062866025, -0.5803419, 0.24148789, -0.14424087, -0.1164804, 0.1109536, -0.43207514, 0.1013014, 0.12608531, 0.5522356, -0.3883008, 0.11832695, 0.10896798, 0.079795115, 0.01557845, -0.026567824) * inp_3_1_2;
    result3 += M4(-0.16223168, -0.1968421, 0.15884173, 0.08438111, 6.8521316e-05, -0.055909093, 0.2276776, 0.022962747, -0.18247725, 0.10897226, -0.24031314, -0.014438667, -0.023983493, 0.16163664, -0.0728575, 0.069767386) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.038440153, -0.014317591, 0.012070026, 0.034860816);
    V4 result1 = V4(0.015726004, 0.063254826, -0.011607484, 0.049029466);
    V4 result2 = V4(0.035657175, 0.05808402, 0.00762104, 0.018573662);
    V4 result3 = V4(-0.020129455, -0.022260861, 0.030802341, 0.021348778);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.024639135, 0.14116643, -0.047315203, 0.0047589126, 0.028058358, 0.009929244, -0.009942967, -0.03627842, -0.09891564, 0.3994508, -0.080231056, -0.07764602, -0.040995695, -0.07949468, 0.011739043, -0.0719945) * inp_0_0_0;
    result0 += M4(-0.05368021, -0.18344659, 0.032700717, 0.027699012, -0.042379666, -0.007030255, -0.066475704, -0.0018326718, 0.20012406, -0.21509197, -0.0023116965, -0.08078079, -0.17557035, 0.43421873, 0.0494469, 0.19117385) * inp_0_1_0;
    result0 += M4(0.098227866, 0.11100543, 0.05635709, -0.006072339, -0.110718146, 0.08012461, -0.033506297, -0.030684534, 0.025438448, -0.011759137, -0.055289667, 0.054430094, 0.037562784, 0.060446214, 0.104971096, -0.011319174) * inp_0_2_0;
    result0 += M4(0.05902597, -0.23714478, 0.14757857, -0.014782221, 0.05199129, -0.069904044, 0.031691298, 0.0016259805, 0.14585003, 0.21605895, 0.0879527, 0.09097986, 0.008727405, -0.095256224, -0.025357742, -0.053344913) * inp_0_0_1;
    result0 += M4(-0.12008914, 0.37217292, -0.2538674, -0.08126905, -0.036394928, -0.023280371, 0.0065449206, 0.05061049, -0.043448802, -0.09407008, -0.015821528, 0.113412306, -0.6128625, 0.053801034, -0.2613347, -0.027792314) * inp_0_1_1;
    result0 += M4(-0.04279477, -0.09221002, 0.08362544, 0.089517646, 0.008967609, 0.2757087, -0.0039424417, 0.06278074, -0.15007941, -0.119838394, 0.02405799, -0.064646915, -0.5804107, 0.04253541, 0.090878576, 0.07980034) * inp_0_2_1;
    result0 += M4(0.055766, -0.044815402, -0.008745145, -0.000503001, 0.032959685, 0.006335373, 0.046228927, 0.01375653, 0.034692377, 0.12834528, -0.033182614, -0.13610734, 0.031764697, -0.26764426, 0.07500586, -0.041905873) * inp_0_0_2;
    result0 += M4(0.5251913, -0.25560233, 0.38637364, 0.4131803, 0.08471716, 0.15865456, 0.08963391, -0.012707112, -0.29564497, -0.12875764, -0.17651348, -0.12359931, 0.050215825, 0.04147195, 0.031388424, 0.002321664) * inp_0_1_2;
    result0 += M4(-0.47725827, 0.045329962, -0.24201551, -0.09035031, 0.048054468, 0.076255664, -0.012727299, -0.02911925, 0.19483767, 0.02583433, 0.088278666, 0.059628807, -0.31512386, 0.066371806, 0.006237863, -0.012601444) * inp_0_2_2;
    result1 += M4(0.10712938, -0.04428249, 0.010133188, 0.018954786, 0.036452856, 0.20787096, 0.049038824, -0.00752767, -0.18454067, -0.06421238, 0.02196116, -0.0459485, -0.35175607, -0.1920865, 0.012463248, 0.35434783) * inp_0_0_0;
    result1 += M4(-0.08544791, -0.10882273, 0.042998873, -0.05477344, 0.0064201383, 0.08289554, 0.17898361, 0.14044555, 0.20617963, -0.20577544, 0.15351762, -0.01730664, -1.0130091, -0.5253605, 0.082079895, -0.11479407) * inp_0_1_0;
    result1 += M4(0.041598786, 0.16788505, -0.061659046, 0.09545605, 0.1884048, -0.053805154, -0.024391754, 0.14285101, -0.04904626, 0.32304576, -0.049514018, 0.26427397, -0.11994013, -0.33722404, -0.253378, 0.07648439) * inp_0_2_0;
    result1 += M4(-0.1594662, -0.040552083, -0.13576068, 0.15957506, 0.13820533, 0.29627487, 0.071277164, 0.059071396, 0.044498052, -0.2033888, 0.1264459, -0.07043259, -0.1895644, -0.057904318, -0.05341416, 0.051248126) * inp_0_0_1;
    result1 += M4(-0.026220465, 0.1383583, 0.44170275, -0.16681899, 0.123576224, 0.23204175, 0.1883677, -0.03751547, -0.01963973, -0.0634048, -0.5928758, -0.6207505, -0.3969382, -0.3794393, 0.19505496, 0.44563755) * inp_0_1_1;
    result1 += M4(0.214622, -0.10373643, -0.28924713, 0.09600172, 0.15738839, 0.39656228, 0.09069859, -0.024438487, 0.051767476, 0.42460456, 0.24487743, 0.3726671, -0.16856396, -0.28775978, 0.078743465, -0.005709073) * inp_0_2_1;
    result1 += M4(0.113919556, -0.2990229, 0.28551012, 0.2552021, 0.13742498, 0.20785573, 0.10349845, 0.049846213, -0.107610844, -0.06260431, -0.05260178, -0.014379847, -0.033501312, -0.005126311, -0.06512088, 0.011289363) * inp_0_0_2;
    result1 += M4(-0.17376836, 0.25766757, -0.9089163, -1.0948925, 0.10403755, 0.018512947, 0.10713262, 0.114214726, 0.20174775, -0.16746145, 0.072990805, -0.07758612, -0.17630993, -0.06409273, 0.0020842787, -0.34644055) * inp_0_1_2;
    result1 += M4(-0.3102548, 0.880859, 0.38153365, 0.3259813, 0.14383751, 0.2916419, 0.14116201, 0.032588862, 0.054419734, -0.13283478, 0.08232598, 0.018771192, 0.12501393, -0.1424572, 0.02729451, 0.13001299) * inp_0_2_2;
    result2 += M4(-0.021143638, -0.039277356, -0.050062202, -0.09209358, 0.0038953247, -0.059586044, 0.13121675, 0.15849204, -0.1310082, 0.080727585, -0.18224782, 0.042477008, 0.11461366, 0.15786645, -0.09291841, -0.38320208) * inp_0_0_0;
    result2 += M4(0.03254434, 0.0065832506, 0.0047562625, 0.010642751, -0.039760157, 0.012657149, 0.22019888, -0.031161966, 0.09485814, -0.04158208, 0.041938093, 0.038527846, 0.040043447, 0.063823566, -0.23341031, -0.093243524) * inp_0_1_0;
    result2 += M4(0.06297573, -0.012796819, 0.079847, 0.05911506, -0.21262434, -0.026213422, 0.09853492, -0.021387368, 0.08809941, -0.17343308, -0.10420143, 0.07736074, 0.14731881, 0.06858649, -0.038318913, -0.23793444) * inp_0_2_0;
    result2 += M4(0.24949753, 0.1478438, 0.006128212, 0.05706741, 0.0074506435, -0.0037000948, 0.0200625, 0.123209074, -0.15396664, -0.13139838, -0.2259433, 0.026701208, 0.17305101, 0.09403684, -0.38239026, -0.15783761) * inp_0_0_1;
    result2 += M4(0.060248446, -0.34376743, 0.14115311, -0.073202536, -0.12028006, 0.10238125, -0.06876535, 0.14010175, 0.023558961, -0.18094851, -0.39274392, -0.19269136, 0.14371797, -0.32603955, -2.4393878, -0.30388588) * inp_0_1_1;
    result2 += M4(-0.2860344, 0.10388257, -0.08900818, 0.0020621896, -0.021538831, -0.15344857, 0.12586135, 0.043444473, -0.10919772, 0.27726102, -0.25795895, 0.0317063, 0.20672227, 0.08362925, 0.20571621, -0.27857363) * inp_0_2_1;
    result2 += M4(-0.17959815, -0.19754206, -0.20104264, -0.28524578, -0.084306866, -0.12987782, 0.2133412, 0.2806422, 0.3010656, 0.062890865, -0.087441444, 0.20464878, -0.21444872, 0.07419863, -0.018759996, -0.024568459) * inp_0_0_2;
    result2 += M4(0.38608614, 1.3897102, -0.2550973, -0.44399637, -0.19597842, -0.0066071968, -0.033765413, 0.41891363, -0.12122039, -0.34306222, 1.1186441, -0.28831115, 0.100439854, -0.19640973, -0.29364386, -0.40369764) * inp_0_1_2;
    result2 += M4(0.04617267, -0.5324159, -0.3525329, -0.23811705, 0.06934462, -0.18586753, 0.1964956, 0.26123136, -0.025907652, 0.13838056, 0.21804872, 0.081439056, 0.08964527, 0.032397956, -0.08527123, -0.19125059) * inp_0_2_2;
    result3 += M4(0.010787156, 0.04505516, -0.012265937, 0.0331607, 0.028358543, 0.019010274, -0.008384668, 0.005074434, -0.061053652, -0.01786378, -0.07666097, 0.048107576, 0.0003821575, 0.016176056, -0.08806987, -0.031944286) * inp_0_0_0;
    result3 += M4(0.016620401, -0.03159075, 0.044059776, -0.05241375, -0.011092989, -0.057476427, -0.022622313, 0.18738925, 0.05462084, 0.033436332, -0.023688538, -0.031472225, 0.0848411, -0.20483449, 0.020414922, -0.14120679) * inp_0_1_0;
    result3 += M4(-0.010876417, -0.07452279, -0.0049327477, -0.00026028097, 0.0400551, -0.07022542, 0.0015680856, 0.06089788, -0.1576303, 0.10455551, 0.022526368, 0.040680833, 0.1672186, 0.119258165, 0.023086008, 0.0955168) * inp_0_2_0;
    result3 += M4(-0.03583039, 0.15425332, -0.085961945, -0.021018589, 0.022236543, -0.06754745, 0.023189545, 0.054255094, 0.054710314, 0.11986917, -0.01642483, -0.10260583, -0.10071899, 0.14877705, -0.022792019, -0.07425598) * inp_0_0_1;
    result3 += M4(0.2857375, -0.066129744, 0.084874414, 0.16139866, -0.034215834, -0.017286064, 0.024208358, 0.2526069, 0.1935361, 0.016289977, 0.042406127, 0.036196105, -0.23849073, 0.3528631, 0.4810479, -0.19235791) * inp_0_1_1;
    result3 += M4(-0.23325747, 0.05868567, -0.029773008, -0.1756906, 0.052964173, -0.0010231892, 0.016756361, 0.16166598, 0.18332957, 0.017137995, -0.14024043, 0.10666106, -0.2305912, 0.23645015, 0.033048388, 0.17690124) * inp_0_2_1;
    result3 += M4(-0.1889613, -0.9260172, -0.09568696, -0.5182903, 0.031328764, -0.3496235, 0.030748075, 0.11754272, 0.005581099, -2.9607766, -0.08058234, 0.067995176, -0.041180797, 0.21966502, 0.009963426, 0.14279509) * inp_0_0_2;
    result3 += M4(0.2250857, -0.7925755, 0.35499486, 1.0700027, 0.07314853, -0.8310849, 0.113610275, 0.1847443, -0.048511557, -3.0438867, 0.0055521866, -0.14855224, -0.020677984, 0.17997342, 0.012059365, -0.11126148) * inp_0_1_2;
    result3 += M4(0.27723637, -0.056506038, -0.29789704, 0.1277011, 0.10304309, -0.39906153, -0.058528744, 0.13032663, 0.020857828, -2.446189, 0.16150036, -0.12879798, -0.084465265, 0.3176509, -0.049184427, 0.11475201) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0061377245, 0.022188956, -0.0034000664, 0.029514799, -0.0091885, -0.0058441185, 0.059899345, -0.0023740034, 0.08993909, -0.39090154, -0.061011497, 0.021596799, -0.038712505, 0.04839834, 0.0062038177, 0.012536791) * inp_1_0_0;
    result0 += M4(0.1128543, 0.058577217, -0.032187466, 0.07127025, -0.08996934, 0.43500495, -0.012034864, 0.042564206, -0.108841464, -0.46438655, -0.09841183, -0.020470763, -0.01189312, 0.1774878, -0.034741167, -0.09607464) * inp_1_1_0;
    result0 += M4(0.093338996, -0.06424274, -0.027296439, 0.014766238, -0.042790916, 0.11610946, 0.0916099, 0.045706533, 0.17494859, -0.04939268, -0.00016079572, 0.06496958, 0.14669283, 0.00045673066, 0.07602272, 0.06343023) * inp_1_2_0;
    result0 += M4(-0.031842455, -0.0065687, 0.06053625, -0.030151071, -0.16712381, 0.055819202, -0.021901479, 0.036613967, 0.0044263783, -0.29483768, 0.007913118, 0.077351466, 0.1786045, 0.05425561, -0.035277613, -0.031055812) * inp_1_0_1;
    result0 += M4(0.20120798, 0.23201725, -0.0052958843, -0.16075818, -0.06455484, 0.061291713, 0.0007755204, 0.061238065, 0.27758342, 0.17091125, 0.75731754, 0.27763706, 0.038679384, -0.38762698, 0.07101629, 0.070089534) * inp_1_1_1;
    result0 += M4(-0.37689298, -0.035070825, -0.07700553, -0.07251714, -0.68055, 0.037254788, 0.11046768, -0.008069513, 0.47998726, -0.08250351, -0.043635838, -0.04210603, 0.41894397, -0.3449704, -0.06196779, -0.013545109) * inp_1_2_1;
    result0 += M4(-0.13334917, -0.004101896, 0.024836792, -0.029908102, -0.015961254, 0.0041069244, -0.010046008, -0.046875793, 0.03065062, 0.002204531, 0.053508416, 0.058818337, -0.059918165, -0.12138012, 0.036311917, 0.034209765) * inp_1_0_2;
    result0 += M4(-0.10276846, -0.069483, 0.17099412, 0.089384936, -0.0651145, -0.0013985026, -0.056113996, -0.034489356, 0.2144797, -0.007834604, -0.055114836, 0.0133547755, -0.021671984, -0.057295665, 0.05362445, 0.011517701) * inp_1_1_2;
    result0 += M4(0.32938626, 0.07325544, 0.015050199, 0.05269387, -0.074697606, 0.11947231, -0.042472713, -0.019637277, -0.0021889822, -0.13164662, -0.0076085646, 0.002635329, 0.11298463, -0.05174314, -0.0232873, 0.0022380834) * inp_1_2_2;
    result1 += M4(0.37593624, 0.16980173, -0.20469126, -0.11204113, 0.04417158, -0.003521225, -0.028354699, 0.12152377, 0.0339407, -0.11392324, -0.07969474, -0.26255608, 0.03805361, 0.009219279, -0.014831297, -0.10292294) * inp_1_0_0;
    result1 += M4(-0.07126329, -0.07024869, 0.07440395, -0.4247298, 0.00030771882, 0.14293554, 0.12190489, 0.09595287, -0.28615835, -0.3734179, 0.15204477, 0.20293261, 0.12516014, -0.030189447, 0.062492672, -0.5009192) * inp_1_1_0;
    result1 += M4(0.09450581, 0.07893731, -0.033457447, -0.13098255, 0.26693463, -0.09357216, -0.19936703, 0.19140571, -0.05925446, -0.7014086, 0.13078755, -0.46594092, -0.2262748, -0.26436275, -0.14638859, 0.030738413) * inp_1_2_0;
    result1 += M4(0.040478174, 0.24875645, -0.09080543, 0.14816177, -0.00376739, -0.092704706, -0.03676303, 0.057825405, -0.38494608, 0.12657936, -0.02415476, 0.004291383, 0.10136883, -0.012924361, -0.06397053, -0.041637428) * inp_1_0_1;
    result1 += M4(0.20707688, -0.0048207548, 0.13321657, -0.5888661, 0.16993232, -0.014274795, -0.22860612, 0.21188848, -0.508462, -0.32347366, 0.3728186, -0.06795322, -0.15656322, 0.013091594, -0.03777131, 0.1880909) * inp_1_1_1;
    result1 += M4(-0.19096038, -0.14053267, -0.014696397, 0.48873407, -0.054207, 0.16427949, 0.073369935, 0.8466456, -0.0018660178, -0.047591012, -0.18848844, -0.656496, 0.032781392, -0.4209988, -0.38868046, -0.09994643) * inp_1_2_1;
    result1 += M4(0.15943912, 0.07707228, -0.11782517, 0.18048224, 0.01734913, 0.008608001, 0.003983986, -0.0022867632, -0.056870967, 0.13878532, 0.03510939, -0.0047280244, 0.041361693, -0.0049902755, -0.021126153, -0.05315528) * inp_1_0_2;
    result1 += M4(-0.0013290298, 0.012600323, 0.11742762, 0.3099538, 0.002998457, -0.15179203, -0.035663653, 0.34163958, 0.06314907, 0.035599783, -0.000675681, -0.31767187, 0.049799122, 0.06276781, 0.012211981, -0.13276967) * inp_1_1_2;
    result1 += M4(-0.02760628, 0.1377831, 0.12634166, -0.25128892, 0.052693248, -0.3171394, -0.055866662, 0.36781886, -0.075874485, 0.11621415, -0.06648039, -0.22974174, 0.03159776, -0.111118704, -0.05382433, -0.3802685) * inp_1_2_2;
    result2 += M4(-0.08303726, -0.19771875, 0.35585877, 0.07489176, 0.11806845, -0.01646959, 0.008759378, -0.13945042, 0.098953635, -0.057628024, -0.0059787706, 0.10368083, 0.11313795, -0.101555735, -0.0963229, 0.11872204) * inp_1_0_0;
    result2 += M4(-0.038614992, 0.07698938, 0.003119503, -0.013992846, 0.07772568, -0.062418964, -0.0029620617, -0.00474533, -0.3856777, -0.09537607, 0.097259045, 0.076150484, 0.009693952, -0.1763641, -0.083429016, -0.03647307) * inp_1_1_0;
    result2 += M4(0.019632235, -0.16005686, 0.1891813, -0.09652595, 0.06948068, 0.07312575, 0.0016434692, 0.022945317, -0.04772703, 0.066488296, 0.03039514, 0.09920604, -0.21007481, -0.05631625, -0.26837942, -0.0018020323) * inp_1_2_0;
    result2 += M4(-0.14253283, -0.36151144, 0.5022197, -0.045889538, 0.0067488686, 0.071806744, -0.005516779, -0.16795053, -0.19474208, -0.041428532, 0.38891596, -0.25268522, -0.11818099, -0.116514824, 0.06785832, 0.17542127) * inp_1_0_1;
    result2 += M4(0.18213685, -0.27201295, -0.19886686, 0.288884, 0.5535856, 0.0047019543, -0.5553954, -0.76679355, -0.090553574, 0.38947493, 0.2051486, 0.06812805, -0.18374525, -0.008358812, 0.4177401, 0.5423391) * inp_1_1_1;
    result2 += M4(-0.054995082, 0.059768464, -0.1292723, 0.046011556, 0.082847066, 0.05926159, 0.36909154, -0.33589265, -0.14815837, 0.071091056, -0.1695146, 0.030838013, 0.38225403, 0.1353727, -3.1126254, 0.33011234) * inp_1_2_1;
    result2 += M4(0.11562093, -0.13285193, 0.03252046, -0.11995512, 0.078731835, -0.013973562, -0.069274224, -0.18834014, -0.13262905, -0.0058529153, -0.21133557, -0.12761422, 0.017813072, 0.011787882, -0.011076026, 0.039681394) * inp_1_0_2;
    result2 += M4(0.08784749, 0.17315878, 0.37380725, 0.012941599, 0.03818002, 0.04087777, 0.14771183, -0.53571886, 0.004115373, 0.14357337, -1.4427869, 0.2508494, -0.13047177, -0.12324054, -0.2071729, 0.2817131) * inp_1_1_2;
    result2 += M4(-0.01346484, 0.08856546, -0.11448682, -0.026142329, 0.13750885, -0.06329796, -2.0956833, -0.39487076, -0.053985845, 0.033976022, 0.1469365, -0.0071731675, -0.1033334, -0.0966151, 0.16182895, 0.28166997) * inp_1_2_2;
    result3 += M4(0.021908633, -0.05968523, -0.07873741, -0.23164213, 0.010815683, 0.010257537, 0.009190231, -0.0041853553, -0.037043866, -0.0024692991, 0.0048506507, -0.07800429, -0.043108292, -0.11017391, -0.038103342, 0.0006851788) * inp_1_0_0;
    result3 += M4(0.21214229, 0.08114573, 0.010541989, -0.09331807, 0.0064304, 0.056706697, 0.012392321, -0.04886391, -0.007791304, 0.07541881, -0.033420093, -0.18192227, -0.0018712659, 0.2861021, 0.048412956, 0.06521759) * inp_1_1_0;
    result3 += M4(-0.3910229, 0.16455714, -0.00598322, -0.066290975, -0.11349086, -0.023839675, 0.1015971, -0.023809206, -0.7584638, -0.061858915, 0.016089665, -0.22181985, -0.31909013, -0.20356515, -0.028330185, -0.11043438) * inp_1_2_0;
    result3 += M4(0.09336962, -0.5340953, 0.15617287, -0.15091576, 0.027570345, -0.1807077, 0.020322524, 0.026521191, -0.020920506, -0.6510209, 0.031732775, 0.00065464224, 0.027875425, 0.4528973, -0.026240025, -0.07232385) * inp_1_0_1;
    result3 += M4(0.53148925, 0.21268132, 0.16987938, -0.29195073, -0.0050655035, 0.19578724, -0.010992449, 0.06373339, -0.120149456, -0.92457485, -0.2834358, -0.07029035, 0.10670845, 0.40780497, -0.038334906, 0.045190487) * inp_1_1_1;
    result3 += M4(-0.096434854, -0.12574776, 0.014137136, 0.06131674, 0.006909027, -0.08335838, -0.001807438, -0.0074898684, -0.052428734, -0.8491396, 0.05528898, -0.17157549, -0.029982682, -0.88060504, -0.028348597, -0.18201286) * inp_1_2_1;
    result3 += M4(-0.035218023, 0.5154212, 0.045128483, -0.10169047, 0.004615917, -0.4561047, -0.0038524906, 0.01286875, 0.019513914, 0.07479546, 0.092822745, -0.016557734, 0.010844494, -0.27203262, 0.06864546, 0.033178076) * inp_1_0_2;
    result3 += M4(0.23814039, -1.1175687, 0.007046792, 0.14243494, -0.055085603, -0.8533356, 0.0742093, -0.0056479657, 0.036518857, 0.37412092, -0.010971109, -0.058389425, -0.014162016, -1.7474082, 0.059141543, 0.0525277) * inp_1_1_2;
    result3 += M4(0.13856314, -0.06468451, -0.04592, -0.009220457, -0.07773559, 0.25310308, -0.030362017, 0.03901137, 0.042325336, -1.6897295, -0.028097466, -0.05791432, -0.042156573, -2.220428, 0.024363443, 0.077546775) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.069938496, 0.107188635, 0.05076405, 0.08887639, -0.16309208, -0.102778964, 0.1339671, -0.073731095, -0.045844927, -0.071002685, -0.017909419, 0.0084949415, 0.013514269, -0.07772538, -0.02960851, 0.03141637) * inp_2_0_0;
    result0 += M4(0.08957298, -0.17775106, 0.0019770039, 0.026999211, -0.2982512, 0.24944882, -0.16224286, -0.114876196, -0.022675635, -0.119228154, 0.03661826, 0.009271684, 0.013020598, -0.09841264, 0.056775592, 0.009523669) * inp_2_1_0;
    result0 += M4(-0.062285304, 0.17775886, -0.057136443, -0.041910447, -0.04570949, 0.016848853, 0.05859581, -0.025473902, 0.018300401, -0.051566906, 0.012332653, 0.04406292, 0.05069071, -0.12520234, -0.017038576, 0.021425037) * inp_2_2_0;
    result0 += M4(0.02328995, 0.25846982, 0.07143605, 0.059125695, 0.1354577, 0.118226126, -0.095489495, 0.57101303, -0.058346145, 0.020564359, 0.013226712, 0.025981734, 0.018139055, -0.13845779, -0.041907564, 0.044537306) * inp_2_0_1;
    result0 += M4(0.5937331, -0.22748105, 0.20727009, 0.10357084, 0.18826663, -0.3666363, 0.21116807, 0.1961049, -0.10837582, 0.13841644, -0.034926, 0.0116453115, 0.029116403, -0.34916818, 0.0084387185, 0.031027151) * inp_2_1_1;
    result0 += M4(0.56493354, -0.015490107, -0.0252164, 0.04121133, 0.04510193, -0.04989547, -0.02444489, 0.043745417, 0.03725841, 0.19365132, 0.028747708, 0.023443677, 0.2159351, -0.2954197, -0.01967359, -0.026552334) * inp_2_2_1;
    result0 += M4(-0.050153203, 0.20080371, -0.08598508, 0.043633122, 0.14391951, 0.014346183, 0.29086256, 0.13833918, 0.06798827, 0.08944162, 0.053100392, 0.0102397455, 0.055309113, -0.07010783, 0.08253211, 0.0644202) * inp_2_0_2;
    result0 += M4(-0.16948527, -0.10820309, 0.07328452, 0.012416434, -0.14327347, -0.11764425, 0.01776433, -0.022593217, 0.21114609, 0.07075399, 0.014021091, -0.020277176, 0.025162436, -0.1829808, 0.2559603, 0.10820585) * inp_2_1_2;
    result0 += M4(0.36408287, -0.057921484, -0.010301223, 0.008678814, -0.0035061522, 0.0558942, 0.03783609, -0.009906593, -0.052838963, 0.019554986, 0.027449222, 0.002230997, 0.4685951, -0.059011366, 0.043398023, 0.042191055) * inp_2_2_2;
    result1 += M4(0.0041931137, -0.013948535, 0.059632815, -0.08349722, 0.15520456, -0.2588508, -0.039738372, 0.38077772, -0.029824378, 0.049172305, 0.07390497, -0.018603789, 0.033085465, 0.0873554, 0.0041054925, -0.06688238) * inp_2_0_0;
    result1 += M4(-0.2587902, -0.35850343, 0.29351822, 0.11212991, -0.2672959, 0.5197352, 0.038796745, 0.38599348, 0.02434, 0.17072737, 0.056591254, -0.0042357976, -0.04319328, -0.10389104, -0.03510672, 0.032639496) * inp_2_1_0;
    result1 += M4(0.016866017, -0.12660763, 0.02216423, 0.211721, 0.056309912, -0.14169398, -0.005223721, 0.20531163, 0.046648923, 0.26473564, 0.10363344, 0.07368833, -0.012087033, -0.30379575, -0.0052472823, -0.077735946) * inp_2_2_0;
    result1 += M4(0.14712489, -0.17709953, 0.04843945, -0.08653982, 0.12377639, 0.44681153, 0.3113231, -0.13192372, -0.104413494, 0.1074581, 0.08063085, 0.002638533, -0.10463394, 0.060464084, 0.08091643, -0.079610385) * inp_2_0_1;
    result1 += M4(0.32691562, 0.7485648, -0.10893382, -0.4246035, -0.029176835, -0.8931078, 0.15641943, -1.1422986, 0.053705912, -0.017924022, 0.12281914, 0.07195378, -0.007633737, 0.13613558, -0.09277773, -0.16956271) * inp_2_1_1;
    result1 += M4(0.02988711, 0.30023578, -0.014549859, 0.16297084, 0.07286593, 0.087315276, -0.15040597, -0.27807447, -0.08288133, 0.3822479, 0.26395515, 0.13542734, -0.22370836, -0.009036227, -0.0054991953, -0.45004252) * inp_2_2_1;
    result1 += M4(0.10040372, -0.11608217, 0.07352304, -0.0693324, -0.068906866, 0.20310916, 0.14895093, 0.64778566, -0.08095606, 0.15256648, 0.044250973, 0.21999258, -0.14811449, 0.17459819, 0.08192757, -0.09211528) * inp_2_0_2;
    result1 += M4(-0.040525276, 0.08773379, -0.08492931, 0.46697733, 0.178321, 0.36214054, 0.07515776, -0.06751449, -0.050092254, 0.19321118, -0.005071456, 0.025494913, -0.13317256, 0.15320957, 0.14600062, -0.12048427) * inp_2_1_2;
    result1 += M4(-0.09060468, 0.09908053, -0.0105926385, -0.22920974, 0.024319587, 0.041078944, 0.055046156, -0.0014671125, 0.081492655, 0.33618027, 0.08218714, 0.11498417, -0.20517513, 0.09526615, -0.19532932, -0.48876593) * inp_2_2_2;
    result2 += M4(0.17442562, -0.0963602, 0.01255338, 0.12604862, -0.006150802, 0.09532229, 0.15103355, -0.011894776, 0.016668914, 0.08853874, 0.120046, -0.08628421, -0.010621625, -0.00056993135, 0.053484097, 0.076986514) * inp_2_0_0;
    result2 += M4(0.20725574, 0.2585169, 0.07924424, 0.016100867, 0.09277257, 0.033436876, 0.14375952, 0.0045717917, 0.03927023, 0.07744379, 0.28738818, -0.026343808, -0.06598744, 0.018393865, 0.03930577, 0.06107026) * inp_2_1_0;
    result2 += M4(-0.2573193, 0.14656717, 0.068856865, 0.17842112, 0.111442015, 0.106614545, -0.07948323, 0.019036386, -0.107800685, 0.111450866, 0.24271587, -0.061246254, 0.03827761, 0.059935644, 0.0029551985, 0.05702928) * inp_2_2_0;
    result2 += M4(0.06559936, -0.03613316, -0.05538122, -0.05836823, -0.2627217, -0.21304809, 0.28187987, 0.072874665, -0.02014177, 0.064844966, 0.11478036, -0.1720138, -0.14923006, 0.025402782, 0.029585969, 0.08754767) * inp_2_0_1;
    result2 += M4(-0.0709315, 0.22765453, -0.10565575, -0.22712554, -0.042888764, -0.038025048, 0.072148465, -0.17890483, -0.06338757, 0.18163712, 0.12212977, -0.11429017, -0.43267003, 0.1712369, 0.098049626, 0.02440904) * inp_2_1_1;
    result2 += M4(0.039479904, -0.067873396, -0.13276598, -0.037858926, -0.059926655, -0.04285455, -0.049313907, -0.06980218, -0.15684393, 0.105939955, 0.30458432, -0.09416505, -0.24663772, 0.20363344, 0.10376576, -0.022096114) * inp_2_2_1;
    result2 += M4(0.2184924, -0.038108725, 0.08340227, -0.0435892, -0.10961072, 0.07199206, 0.3204052, 0.0034809208, -0.1799822, 0.019122109, 0.09867088, -0.013497321, -0.17572398, 0.12001186, -0.03617697, 0.004268989) * inp_2_0_2;
    result2 += M4(-0.10880711, 0.21021768, 0.27302185, -0.32699263, -0.3117446, 0.09533479, -0.41032022, -0.1673019, -0.019030102, 0.085494675, 0.11637379, -0.09971639, -0.57572, 0.19973287, 0.14825624, 0.12559848) * inp_2_1_2;
    result2 += M4(-0.054895945, -0.0511617, -0.002376835, 0.11398471, 0.020523703, -0.03145672, 0.2228883, 0.11488754, 0.14208582, 0.11371519, -0.13252448, -0.07046759, -0.42314738, 0.10570023, -0.109635636, 0.0759848) * inp_2_2_2;
    result3 += M4(-0.06750038, -0.019075224, 0.08321779, 0.10841817, -0.016063465, -0.04344781, 0.03497436, 0.109985836, 0.0329687, -0.0200363, 0.009288275, -0.0011840924, 0.016233427, -0.024904061, -0.012484701, -0.0537755) * inp_2_0_0;
    result3 += M4(-0.2634603, 0.05507076, -0.005697144, 0.060413644, -0.037549388, 0.120915055, -0.036237426, 0.24163425, 0.059222978, -0.037852418, 0.048460495, -0.085551865, -0.0020440773, 0.018390497, 0.0088683, 0.0028511458) * inp_2_1_0;
    result3 += M4(-0.08027564, -0.032425996, -0.07096279, -0.10595559, 0.073749065, -0.07212279, 0.057819787, -0.03044964, 0.10505021, -0.009616178, 0.029799258, -0.016007414, 0.0069838925, 0.07063047, -0.011520445, -0.018531833) * inp_2_2_0;
    result3 += M4(0.08150241, 0.28027445, 0.05836299, 0.111987144, -0.14538547, 0.04555907, 0.12582608, 0.09086052, -0.040440116, 0.029085921, 0.0091414, 0.010983299, -0.011288097, 0.031503253, 0.0035111734, -0.02727643) * inp_2_0_1;
    result3 += M4(0.35341194, 0.2968328, 0.34375882, 0.068961285, 0.23229203, 0.22729518, 0.13621703, -0.05662694, -0.037484434, -0.0077879885, -0.028932082, -0.079188295, -0.03663713, -0.0725566, 0.028341312, -0.0095974095) * inp_2_1_1;
    result3 += M4(0.1837348, 0.24572416, 0.009312764, -0.07453192, -0.034249872, 0.063134156, 0.0061679175, 0.026258469, 0.071769185, -0.08527729, 0.06828761, 0.074372426, 0.033525106, -0.012514452, -0.051647265, 0.028196698) * inp_2_2_1;
    result3 += M4(0.027932154, 0.020534612, -0.05887163, -0.045128297, -0.096635364, -0.05951713, -0.011706226, 0.029559348, 0.010892455, 0.45577103, 0.020240435, -0.029084705, -0.014633075, -0.06157501, 0.082823716, 0.04779182) * inp_2_0_2;
    result3 += M4(0.027931875, -0.51662344, -0.004708149, 0.055678222, 0.043072272, -0.57721967, -0.0051980726, 0.09941138, 0.037667885, 0.16380924, -0.03376731, -0.10561812, -0.07086459, -0.55407447, 0.29061255, -0.04667605) * inp_2_1_2;
    result3 += M4(0.054304603, -0.385175, 0.08179144, -0.037089854, 0.039597116, 0.01586807, -0.0038379387, 0.01621214, 0.10494609, 0.94510865, 0.0063280715, -0.20057005, -0.10914366, -0.89854985, 0.037330113, -0.124486655) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.068226874, -0.17638962, -0.008512204, 0.02121543, -0.013055653, 0.18104063, -0.13272838, -0.024264986, -0.013172969, -0.018832514, 0.09199735, -0.002310246, 0.11931656, -0.13729334, 0.039798032, 0.016753053) * inp_3_0_0;
    result0 += M4(-0.06846855, -0.18282561, 0.055999752, 0.09757459, 0.3605578, -0.25310975, 0.15689114, -0.05187251, -0.09306172, 0.3260692, 0.010295031, 0.014499669, 0.094692096, -0.051640045, -0.08442744, 0.023053775) * inp_3_1_0;
    result0 += M4(0.0050680297, 0.027626283, 0.0045490623, 0.009070104, -0.2530632, -0.2402083, -0.13056946, -0.058229707, -0.11168812, 0.16525647, -0.006183305, 0.02349103, 0.16205765, -0.014367679, 0.05377004, -0.032857716) * inp_3_2_0;
    result0 += M4(-0.033187043, -0.25483927, 0.20594169, -0.42107725, 0.15960175, 0.14789279, 0.00018035102, -0.04083322, -0.26567695, 0.20503925, -0.015507488, 0.031244908, -0.016221035, -0.1214513, 0.010709266, -0.044823512) * inp_3_0_1;
    result0 += M4(-0.14572485, 0.37901762, 0.023097964, -0.0042271824, -0.046858706, -0.13799606, 0.1815491, -0.028657388, -0.26263237, -0.013529124, 0.07500796, 0.064760216, -0.34370664, 0.0014152093, 0.068033606, 0.54228324) * inp_3_1_1;
    result0 += M4(0.1617219, 0.023755597, -0.013135161, -0.015947755, -0.00947095, -0.017463153, 0.03138021, 0.0028708777, -0.19604151, 0.23752588, 0.066753194, 0.049010936, -0.16470422, 0.20238392, -0.104380675, -0.044608448) * inp_3_2_1;
    result0 += M4(0.08571773, 0.23993911, 0.0048850277, -0.11618625, 0.012584519, 0.2090073, -0.12063031, 0.0132095935, -0.13478324, 0.052432038, 0.0837162, -0.00016787449, -0.1294455, -0.06197904, 0.050105006, 0.045266625) * inp_3_0_2;
    result0 += M4(-0.45174587, 0.21489663, -0.012526022, 0.035365283, 0.081566274, 0.11246507, -0.039246455, -0.051090714, -0.11905888, 0.045626096, 0.031481575, 0.001978529, 0.0519765, 0.13793196, 0.05881276, 0.046830762) * inp_3_1_2;
    result0 += M4(-0.023166643, -0.07547102, -0.027171934, 0.0019096178, 0.05956491, -0.010932881, -0.16086383, -0.042872503, -0.17160875, 0.114953935, 0.016124373, -0.0062078373, 0.24794264, 0.045692403, 0.061775375, 0.0016208154) * inp_3_2_2;
    result1 += M4(0.0023372446, 0.04823438, 0.035640918, 0.09309237, -0.02939584, -0.05588338, 0.049294498, -0.14224936, 0.07575608, 0.18013994, -0.0029285606, 0.07017896, 0.0013637517, 0.054719243, -0.0005015241, -0.008039617) * inp_3_0_0;
    result1 += M4(0.00272059, -0.6356365, -0.018230783, -0.16336428, -0.16987416, 0.48034522, -0.26091206, -0.13027655, 0.044900063, -0.06454119, 0.038191687, 0.07056614, 0.034844335, -0.07184449, -0.10871729, -0.21502337) * inp_3_1_0;
    result1 += M4(0.054118153, -0.038102414, -0.0201477, -0.19981422, -0.09254757, -0.08290133, 0.18740192, 0.2693417, -0.06808849, 0.13938251, 0.019275585, 0.26414534, 0.23803334, -0.6337677, -0.1399383, 0.037678793) * inp_3_2_0;
    result1 += M4(0.026317466, -0.0972568, 0.012373715, 0.3037116, -0.08244701, -0.077866286, -0.014953875, 0.11089382, 0.0025206355, -0.026963439, 0.050151188, 0.054447494, 0.035601515, 0.06694956, -0.022200007, 0.013834124) * inp_3_0_1;
    result1 += M4(0.14038506, -0.379638, 0.58901864, -0.010916385, 0.013754576, -0.14579883, 0.09604769, -0.107130416, 0.053813294, 0.24164525, 0.0042067305, -0.0048032855, -0.22141364, -0.38172585, 0.54766166, 0.030890541) * inp_3_1_1;
    result1 += M4(0.038660012, -0.22736862, -0.004257529, -0.45297432, 0.12848435, -0.17582804, -0.11785391, 0.105734624, 0.1280113, 0.18815489, 0.11365277, 0.2996848, 0.10990269, -0.59155184, -0.1329622, -0.43455386) * inp_3_2_1;
    result1 += M4(0.13942058, -0.14127505, -0.1076203, -0.43536773, 0.055218764, -0.017276198, 0.006155336, 0.110395044, 0.009337904, 0.039667565, 0.08297299, 0.056821898, -0.015155017, -0.041479606, 0.025480168, -0.0968538) * inp_3_0_2;
    result1 += M4(0.040889543, 0.12640208, 0.40899488, -0.33318028, 0.19767344, 0.1627843, 0.023687193, -0.056049436, 0.036869176, 0.22000173, 0.06186709, 0.15272428, 0.018771177, -0.011747547, 0.08763652, -0.3419045) * inp_3_1_2;
    result1 += M4(0.0054222406, -0.014625419, -0.03327963, -0.20636508, 0.097511515, 0.2918574, 0.06623655, 0.07202578, 0.07891792, 0.2048024, 0.13343759, 0.20315573, -0.02589084, -0.3062552, -0.032249875, -0.46154556) * inp_3_2_2;
    result2 += M4(-0.043671343, -0.1452333, 0.118981734, 0.08134387, -0.23197985, -0.06304093, 0.044105444, 0.2944431, 0.07636973, -0.07468258, 0.1267605, -0.10675825, 0.01844664, 0.041333858, -0.035072073, -0.050307374) * inp_3_0_0;
    result2 += M4(-0.09782763, -0.15170932, -0.14238347, 0.039465986, 0.16424882, 0.014242721, -0.06159152, 0.039802376, 0.17165504, -0.11230816, 0.08532404, -0.19448651, 0.059229296, -0.0012748229, -0.3348891, -0.030928362) * inp_3_1_0;
    result2 += M4(-0.02948134, -0.027246738, 0.0989973, 0.01664285, 0.03215755, -0.34869197, 0.11438732, -0.0019525485, 0.072147526, -0.040679276, -0.05192395, -0.079301395, 0.021284081, -0.017834822, 0.018580655, -0.0030700406) * inp_3_2_0;
    result2 += M4(0.16111118, -0.26483092, 0.14377719, 0.14573856, 0.06875453, 0.114505045, -0.24674676, 0.0074912407, 0.06779342, -0.06555893, 0.077680714, -0.3478069, 0.006990683, 0.022071404, 0.025914893, 0.0034112183) * inp_3_0_1;
    result2 += M4(0.13595784, 0.23380384, -0.06244965, 0.16348441, 0.06230482, -0.018633481, -1.5231723, 0.07694418, 0.27617443, -0.2841909, -0.070234425, -0.16669405, 0.085036516, 0.08335742, -0.22655238, 0.12978105) * inp_3_1_1;
    result2 += M4(0.003935662, -0.0009251031, 0.053050715, 0.068724856, -0.22962038, -0.27979228, -0.05468674, 0.041873988, 0.09268853, -0.09353218, 0.054441947, -0.022460546, 0.05806862, -0.40576592, 0.07089935, 0.1735101) * inp_3_2_1;
    result2 += M4(0.26855972, -0.18702547, -0.16514756, 0.11139311, -0.10304293, -0.011024477, 0.18851931, -0.19554551, 0.12710886, -0.06832217, 0.072668865, -0.039023157, 0.05867682, 0.023097215, -0.09986903, 0.06572061) * inp_3_0_2;
    result2 += M4(0.076618575, -0.22715858, 0.31332162, 0.04258728, -0.016425524, 0.0031181267, -0.22038828, -0.021317078, 0.013431071, -0.08656235, 0.6030158, -0.15546626, 0.028352428, 0.06288273, -2.0382175, 0.043251548) * inp_3_1_2;
    result2 += M4(0.029189821, -0.0031994302, -0.1483337, -0.0015754907, -0.08781693, -0.033546094, 0.2475555, 0.071219176, 0.11772937, -0.06314687, 0.1216302, -0.15525466, 0.20909162, -0.09879903, -0.0082061235, -0.043698836) * inp_3_2_2;
    result3 += M4(0.085173294, -0.039830465, 0.02601633, 0.014067164, 0.027472265, 0.008713688, 0.056082405, -0.06126176, 0.07618472, 0.034687765, 0.061527517, 0.038223274, -0.0077527775, 0.09073344, 0.019293502, 0.00964247) * inp_3_0_0;
    result3 += M4(-0.08273463, -0.077771395, 0.03748573, 0.0048222635, 0.22995709, 0.216662, 0.07559198, 0.028241202, 0.088246614, 0.024291014, 0.030398246, 0.0037027546, -0.070300095, 0.014749532, -0.027584055, 0.028933663) * inp_3_1_0;
    result3 += M4(0.09618014, -0.008140009, 0.0036307606, -0.011409132, -0.0057247337, -0.02510535, 0.049620654, 0.13731034, 0.09158541, 0.016695093, 0.02191506, -0.010423582, -0.04625083, -0.002759109, 0.017890347, 0.0072560166) * inp_3_2_0;
    result3 += M4(-0.20616214, -0.1712921, 0.2653729, -0.14025268, -0.07015544, -0.14928396, -0.0913492, 0.024479397, -0.016939508, -0.15062945, 0.0095356945, 0.05522765, 0.0063317763, 0.014986293, 0.047935314, 0.111620486) * inp_3_0_1;
    result3 += M4(0.13206133, 0.06703742, -0.018318139, 0.4403793, -0.06849361, 0.31719524, 0.10921155, -0.2374222, -0.08104301, 0.096491754, -0.042024996, 0.1844635, -0.08554928, -0.19420075, -0.066060245, 0.4210095) * inp_3_1_1;
    result3 += M4(-0.122496575, 0.009513313, 0.020672053, 0.032577917, -0.08592183, -0.214324, -0.00410984, -0.32371947, 0.16701058, 0.04891592, 0.06330638, -0.010658392, -0.45891616, 0.08715482, 0.12734821, -0.27749678) * inp_3_2_1;
    result3 += M4(-0.018537426, 0.15211694, -0.0327512, -0.07603768, 0.019483792, 0.24236032, -0.072450124, -0.09157147, 0.015640505, 0.30926627, 0.0021821847, 0.060170345, -0.012724246, 0.15789214, 0.027575456, 0.08248121) * inp_3_0_2;
    result3 += M4(-0.020898394, 0.83484334, 0.00035002362, 0.21086188, -0.06708736, -0.80449826, -0.12929784, -0.113101, 0.04905045, -0.6721904, 0.033842456, 0.064438246, -0.034935642, -1.9078279, 0.08953413, 0.13301887) * inp_3_1_2;
    result3 += M4(0.024246532, 0.4983255, -0.011385627, -0.0006946983, -0.017308418, 0.3287238, -0.032745242, -0.16354163, 0.010674094, -0.19596514, 0.01064192, 0.050768316, -0.05547711, -2.1265817, 0.07431922, 0.03751926) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.017264806, 0.008630107, 0.020061787, -0.010586897);
    V4 result1 = V4(0.000339185, -0.0020708165, 0.011541462, 0.035454243);
    V4 result2 = V4(0.018938579, -0.014565261, -0.015238968, 0.003679092);
    V4 result3 = V4(-0.018640708, 0.026294725, 0.013130243, 0.005042348);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.09698726, -0.5180998, 0.19037917, 0.1256138, 0.011388841, 0.02041635, 0.00975027, 0.0037664631, 0.07860286, -0.002407349, -0.05217367, 0.01035602, 0.024993965, 0.09440804, 0.030306255, -0.002834072) * inp_0_0_0;
    result0 += M4(-0.31810904, -0.4849401, -0.015575257, -0.2872483, 0.23741004, 0.021841908, -0.04015644, 0.02004718, -0.11633136, 0.053004257, -0.21164358, 0.020525526, 0.0019158594, -0.32376587, 0.051952675, -0.08689302) * inp_0_1_0;
    result0 += M4(-0.19115257, -0.11729395, -0.018510778, 0.06665521, 0.12550399, -0.039196208, 0.112112716, 0.15479831, -0.08074035, 0.030063078, -0.11632726, -0.1336548, -0.038990237, -0.065864354, 0.02887536, -0.025082001) * inp_0_2_0;
    result0 += M4(-0.04629551, 0.06608389, -0.3577125, -0.098892905, 0.019575382, 0.13420124, -0.084299944, 0.1434258, 0.055646405, -0.17333935, 0.04835383, 0.03077821, -0.058045678, -0.06044827, 0.033097792, 0.14983496) * inp_0_0_1;
    result0 += M4(0.0023167597, 0.17116803, -0.29179817, -0.081134774, 0.0146275405, -0.2194653, 0.075279295, -0.0042935777, -0.2247763, -0.024954177, 0.46326357, -0.07837856, 0.09027263, 0.300052, 0.30204967, -0.29660398) * inp_0_1_1;
    result0 += M4(0.036811728, 0.116724946, -0.007412087, -0.06324456, -0.09635093, -0.23014516, 0.12497619, -0.11027078, 0.05230145, -0.14425495, 0.07345564, -0.072876506, -0.004994513, 0.23215191, -0.017809888, 0.26721752) * inp_0_2_1;
    result0 += M4(-0.015412496, 0.028806629, -0.12575729, -0.07176896, 0.13281316, -0.23947568, 0.26973292, 0.08651201, -0.02246406, 0.008300391, 0.10588462, -0.061425973, -0.17535429, 0.00073524873, -0.0888578, 0.07135647) * inp_0_0_2;
    result0 += M4(-0.15344016, -0.031407658, -0.045749065, -0.044468407, 0.037512254, 0.14934897, -0.40596578, -0.092760965, 0.15239781, -0.016134232, 0.12550947, 0.038137414, -0.038116, 0.030685665, -0.39174333, -0.0036087388) * inp_0_1_2;
    result0 += M4(-0.10200927, -0.028760782, -0.10994154, 0.011988085, 0.048023187, 0.2706564, -0.070859164, -0.07978279, 0.020726142, 0.038661733, 0.087127455, 0.06352171, -0.12903494, -0.21572988, -0.09576985, -0.06013926) * inp_0_2_2;
    result1 += M4(0.15160567, -0.045859184, -0.115224846, -0.215229, 0.001253345, -0.06146992, 0.015624954, 0.053308815, -0.032257408, -0.04224572, -0.054569956, -0.13426414, -0.03065188, 0.02222035, 0.0040236968, -0.14841728) * inp_0_0_0;
    result1 += M4(0.28899688, -0.006209191, -0.010421027, 0.22434446, 0.011169164, -0.0028100787, 0.016332353, -0.34041902, 0.08332887, 0.06313433, 0.028424729, -0.003368034, 0.008018927, 0.058397144, -0.019140493, -0.079549104) * inp_0_1_0;
    result1 += M4(-0.11918497, 0.023687081, -0.013311572, -0.07302536, 0.07082876, 0.0067519294, -0.011940374, -0.37042636, -0.049361806, -0.051292405, 0.039421134, -0.05379242, 0.012179192, 0.07525642, -0.0265117, 0.101598576) * inp_0_2_0;
    result1 += M4(-0.3776625, -0.01699677, -0.1868269, -0.05769368, -0.012048936, -0.117709026, -0.035570826, 0.29082823, -0.026977414, 0.12056393, -0.029325902, 0.056249432, 0.011352784, 0.08308651, -0.0049396595, 0.08393487) * inp_0_0_1;
    result1 += M4(-0.40547025, 0.109532945, 0.09280939, -0.2476494, -0.04578518, 0.050143007, -0.05389619, -0.54901654, -0.16323398, 0.36233246, 0.06373567, -0.073067494, 0.1058097, 0.29309317, -0.07518921, -0.14693487) * inp_0_1_1;
    result1 += M4(0.05327724, 0.030523542, -0.0034581674, 0.103546984, -0.023082033, 0.044670638, -0.031030018, 8.109225e-05, -0.07449825, 0.053165164, 0.01606504, 0.08890016, 0.05093971, -0.03275941, -0.029008942, -0.34490493) * inp_0_2_1;
    result1 += M4(-0.09300131, -0.004635753, -0.077646464, 0.13063556, 0.18132341, -0.12858395, 0.027114432, 0.37741917, -0.069572635, 0.049922768, 0.117733076, -0.067844644, -0.033087905, -0.013239417, -0.14487155, -0.17331757) * inp_0_0_2;
    result1 += M4(0.05259077, 0.021893188, -0.03151259, 0.018856157, -0.1559426, -0.0018420443, 0.049063124, -0.13869672, 0.006087329, 0.067439854, 0.0637508, 0.023640767, -0.09719928, 0.032156583, -0.1784273, 0.177915) * inp_0_1_2;
    result1 += M4(-0.020955812, -0.013703351, -0.039019424, 0.057613485, -0.10197365, -0.03889824, -0.014767378, 0.11424293, 0.04297563, -0.04031179, -0.044432078, 0.13022964, -0.09565338, 0.06522995, 0.1169885, -0.29239324) * inp_0_2_2;
    result2 += M4(-0.19732139, 0.22349294, -0.020544492, -0.019760886, -0.054269157, 0.14814751, -0.071868114, -0.030571306, -0.06327661, 0.097843215, -0.08481139, 0.009716571, 0.044619933, -0.016187748, 0.035593223, -0.04742196) * inp_0_0_0;
    result2 += M4(-0.061777893, -0.21553133, 0.032950457, -0.027473457, 0.09527007, -0.049401473, 0.016515765, 0.052592337, 0.097196095, -0.013938809, -0.16336633, -0.00692479, 0.058830746, -0.08299391, 0.10710437, 0.037222818) * inp_0_1_0;
    result2 += M4(-0.027484382, 0.061242964, -0.016539361, 0.0924808, 0.052547865, 0.17879589, 0.018298814, -0.017415984, -0.052335985, 0.08941947, -0.06710331, -0.1505195, 0.0776046, -0.099402726, 0.030498654, -0.044678465) * inp_0_2_0;
    result2 += M4(-0.24241458, 0.4960742, 0.0042909156, 0.025152517, 0.106890835, -0.06879951, -0.1838713, -0.10443684, 0.08531445, -0.0448315, -0.05047517, 0.03756475, 0.09472462, -0.083461404, -0.02615098, -0.08231237) * inp_0_0_1;
    result2 += M4(-0.08804623, -0.2207432, 0.15442199, -0.10522031, 0.02796337, -0.016023263, -0.01188208, -0.1358301, 0.42967254, -0.16379252, -0.118271895, 0.08230474, -0.24731137, -0.16946998, 0.5625473, 0.08249884) * inp_0_1_1;
    result2 += M4(-0.073136546, -0.0010144609, 0.050416257, 0.06712756, -0.18670972, -0.03472991, 0.052712005, -0.18888508, 0.05110644, -0.10378918, 0.07932318, 0.044009797, -0.08391284, 0.17687024, -0.06942704, 0.14384928) * inp_0_2_1;
    result2 += M4(-0.061797157, -0.02984301, 0.029422836, 0.044572964, 0.17236827, -0.199549, -0.06545621, -0.16994871, 0.052811, 0.12833223, -0.0048185405, -0.00091047137, -0.041165896, 0.013676513, -0.012772612, 0.08655458) * inp_0_0_2;
    result2 += M4(-0.023769183, -0.14827232, 0.01706017, 0.026110627, -0.1786663, 0.38436574, -0.045128275, -0.07619562, 0.043857172, -0.14306664, 0.07001096, -0.015929107, -0.1373946, -0.20142742, -0.030262373, -0.24488506) * inp_0_1_2;
    result2 += M4(-0.010848492, 0.026227409, -0.0072425124, 0.10713951, 0.032211334, 0.09663041, 0.046427857, -0.09394988, 0.024254384, 0.05978921, -0.0072150747, 0.08242853, -0.12349705, -0.0048393025, 0.059673786, -0.117292255) * inp_0_2_2;
    result3 += M4(-0.0548287, -0.1344935, -0.0010683119, 0.020168947, 0.04085745, 0.114718534, -0.059990786, -0.006567675, -0.00011190017, -0.038342267, -0.04577957, 0.0028166366, -0.0066723265, 0.078287676, 0.056179892, 0.022990258) * inp_0_0_0;
    result3 += M4(0.078683086, -0.10169192, -0.0054622134, -0.040019017, -0.06163171, 0.26788563, 2.2469356e-05, 0.00067420636, 0.01172506, 0.13043204, 0.058510903, -0.004839505, 0.015888728, 0.00040325423, -0.0009255253, 0.035795134) * inp_0_1_0;
    result3 += M4(-0.016507445, -0.19129212, -0.0064779636, 0.047714844, 0.016142452, 0.17121224, 0.0014749909, -0.23829013, -0.084404774, -0.06627764, 0.05355363, -0.43927753, 0.012375575, -0.11169291, 0.02328753, 0.04404853) * inp_0_2_0;
    result3 += M4(-0.057554692, -0.38201773, -0.06841099, -0.064550295, 0.018269625, 0.17112513, -0.045413636, 0.0024025273, 0.056693256, 0.05558985, 0.11635321, 0.013845716, 0.05097028, -0.10471056, -0.0013836598, -0.034927476) * inp_0_0_1;
    result3 += M4(0.08432361, -0.36205155, 0.09244662, -0.06281131, 0.0024288597, 0.42291152, -0.02814863, -0.023407537, -0.1856348, -0.23821135, 0.13825864, 0.092037, 0.018481657, -0.1927695, -0.2683721, -0.08580474) * inp_0_1_1;
    result3 += M4(-0.05073113, 0.109453216, 0.028228633, -0.0805076, -0.022295091, 0.35195503, -0.008541166, 0.26902235, -0.07548338, 0.041850287, 0.07784202, 0.120952375, 0.15882172, -0.0055661737, -0.076487064, -0.3272322) * inp_0_2_1;
    result3 += M4(-0.0300254, -0.051382724, 0.03648882, 0.0024914301, 0.03392301, 0.16292895, -0.013676581, 0.03326969, -0.0055796565, 0.023431, 0.04398162, 0.00034333894, -0.02546872, -0.15047264, -0.01961932, 0.03689315) * inp_0_0_2;
    result3 += M4(0.008564511, -0.11969479, 0.011912537, 0.0012609911, -0.025255322, 0.45344403, -0.0027770717, 0.004620268, 0.05008618, -0.026247682, 0.065459706, 0.08483628, -0.026592502, -0.07163792, -0.23220424, -0.0620192) * inp_0_1_2;
    result3 += M4(-0.034201458, 0.025362585, 0.0046388144, -0.009172722, 0.11877178, -0.23947673, 0.008492476, 0.06731713, -0.054405652, -0.08898574, -0.00016514273, 0.0053057163, 0.005011664, 0.008097698, 0.050062966, -0.03890097) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.04437781, -0.18825923, 0.061894216, 0.06915039, 0.13009097, -0.070830174, 0.061719686, 0.06755018, 0.018699886, 0.025617445, -0.057619445, -0.05233536, 0.078049235, -0.07950735, 0.05075786, 0.0011024008) * inp_1_0_0;
    result0 += M4(0.009899701, -0.31888577, -0.11343794, 0.049154382, -0.0622899, -0.15729652, 0.06968493, -0.2156437, 0.040174093, 0.26878425, -0.11565026, 0.021783337, -0.0118812015, -0.20293446, 0.074217625, -0.16581717) * inp_1_1_0;
    result0 += M4(0.028369332, -0.22521299, -0.21644898, 0.012597152, -0.031174041, 0.04321453, 0.00046092598, -0.026242688, 0.1267149, 0.1383972, 0.034091093, 0.11940157, -0.1912858, -0.058975294, -0.07676065, -0.2384431) * inp_1_2_0;
    result0 += M4(0.09586672, -0.20642148, -0.10108947, 0.0027074188, -0.16314368, -0.070805795, -0.023397092, -0.049641643, -0.012912286, 0.056867495, -0.01298721, -0.15432169, -0.07342668, 0.35305572, 0.068754815, -0.043323215) * inp_1_0_1;
    result0 += M4(-0.21145225, -0.4045402, -0.0768525, -0.09650682, -0.18875101, -0.07991963, -0.07303919, -0.045013715, 0.48772147, 0.02457444, 0.041023165, 0.13224739, -0.108920656, 0.25799835, -0.15087882, -0.29774997) * inp_1_1_1;
    result0 += M4(0.26123786, -0.40140814, -0.12539878, 0.20306087, -0.1143488, -0.27160808, -0.025512889, -0.1753535, 0.20347348, 0.100446284, 0.054760434, 0.2547581, 0.19282809, 0.07393341, 0.023475086, -0.08659102) * inp_1_2_1;
    result0 += M4(0.098496474, 0.17066158, 0.060764115, -0.03448783, -0.1740511, -0.12353557, -0.24124807, 0.07664593, 0.26299256, 0.035624463, 0.12865843, -0.06981951, -0.0071613737, -0.27123982, -0.072658926, -0.062759854) * inp_1_0_2;
    result0 += M4(0.011056541, 0.09539109, -0.18246101, 0.07922067, -0.2263947, -0.004189886, -0.12798242, -0.18550763, -0.039926182, -0.05718715, 0.3492748, 0.072124295, 0.054468084, -0.083024606, 0.14431214, -0.30739105) * inp_1_1_2;
    result0 += M4(-0.043272454, 0.17069674, 0.024255622, -0.070715606, 0.2148216, 0.031478357, -0.31723332, -0.054793775, -0.024594834, -0.0956631, 0.09891154, 0.14072208, -0.06523199, 0.11891243, -0.0020605912, -0.016858907) * inp_1_2_2;
    result1 += M4(0.08993917, -0.026500784, 0.02492513, 0.21422435, 0.04739945, 0.017313078, -0.053137045, -0.03663313, 0.04275059, 0.0041730646, -0.015634622, 0.1342437, 0.051678807, 0.06792134, -0.008758248, -0.27891925) * inp_1_0_0;
    result1 += M4(0.04516609, 0.010197456, -0.036991775, -0.3101967, 0.034809966, 0.003649661, 0.018741257, 0.24620578, -0.045530748, 0.023920195, -0.0056949393, 0.05501505, -0.018043062, -0.057754923, 0.036261, -0.692398) * inp_1_1_0;
    result1 += M4(0.16464406, -0.0655155, 0.013924135, 0.07532912, 0.032946054, -0.0049773003, 0.011872558, -0.008890553, -0.08986762, 0.005409273, 0.014086192, 0.002116925, -0.21379237, -0.034661885, -0.019991957, -0.20791495) * inp_1_2_0;
    result1 += M4(-0.03130044, 0.058362674, 0.08733267, 0.2787274, -0.051591687, 0.03172202, -0.10989921, -0.3588791, -0.024225224, 0.06063864, 0.09078527, 0.1407751, -0.020433476, -0.06698543, -0.106785014, -0.48142383) * inp_1_0_1;
    result1 += M4(-0.15007265, 0.12646288, -0.03346457, 0.059700005, -0.06339567, 0.024058314, 0.037495486, -0.34750557, -0.19498047, 0.06709962, 0.0395556, 0.31080082, 0.42035446, 0.05874417, 0.045847043, 0.008090746) * inp_1_1_1;
    result1 += M4(-0.12025916, -0.047128845, 0.023719104, 0.12638769, 0.10192644, 0.0074931947, 0.0018622584, 0.13261987, 0.028854491, 0.00050378154, -0.037234746, 0.16801809, 0.219805, -0.043181647, 0.024817646, -1.1329482) * inp_1_2_1;
    result1 += M4(-0.22733015, 0.029247966, 0.049895465, 0.07661448, -0.017893266, 0.006166947, -0.13154772, -0.10876207, 0.15820229, -0.014269825, 0.18053684, 0.04426631, -0.06418743, -0.11677783, -0.10430756, -0.23252386) * inp_1_0_2;
    result1 += M4(-0.22210354, 0.13916758, 0.0053950893, -0.16995904, -0.23429811, 0.059679482, -0.07320307, -0.28786647, 0.4773362, -0.020253856, -0.04329674, 0.08488712, 0.015735386, -0.102309085, 0.028379582, 0.29563364) * inp_1_1_2;
    result1 += M4(-0.120234564, -0.008286756, -0.017680055, 0.031767692, -0.12064672, 0.0066749766, 0.033647332, 0.0604421, 0.11867415, -0.020759458, -0.003047641, 0.24778296, -0.023345713, -0.0473381, 0.019213764, -0.3138361) * inp_1_2_2;
    result2 += M4(0.044561476, 0.014852873, 0.00936371, -0.05080317, 0.050115943, 0.09325448, -0.017289141, -0.02373798, -0.0838072, 0.04778685, -0.0015861201, 0.06982485, 0.098837, -0.1360153, -0.042483304, -0.04417265) * inp_1_0_0;
    result2 += M4(-0.08202978, 0.11149199, 0.002449486, 0.0018797545, -0.022972843, 0.003947361, -0.008943128, -0.058144215, -0.10939615, -0.00812874, -0.046896838, 0.0011306849, -0.18208995, 0.11153382, -0.017989721, -0.2249381) * inp_1_1_0;
    result2 += M4(-0.061635286, -0.0008506358, -0.04088359, -0.14518939, 0.0019070033, 0.105965264, -0.020098947, 0.11629994, -0.01450173, -0.022948414, -0.009704006, -0.03172824, -0.04000139, 0.1427122, 0.022755241, -0.20169881) * inp_1_2_0;
    result2 += M4(0.10929949, 0.008534228, 0.09924429, 0.03048985, -0.15445118, 0.1210279, 0.0012565131, -0.14755866, -0.024268147, -0.15374412, 0.18060675, 0.12314786, 0.024647392, 0.3526896, -0.057074122, -0.09718051) * inp_1_0_1;
    result2 += M4(0.2372707, -0.027504904, 0.017493438, -0.021261076, -0.18720044, 0.23019154, 0.0459819, -0.2149839, 0.3961165, -0.040475167, 0.03332407, 0.45370585, 0.13372527, 0.13398601, 0.051277343, -0.07338639) * inp_1_1_1;
    result2 += M4(-0.016484851, 0.048151612, -0.01587315, 0.1666992, -0.08605212, -0.010047859, 0.0049116584, -0.045984518, 0.060089417, 0.109745726, 0.003752711, 0.08110512, 0.06500178, 0.10548788, 0.034816276, 0.09977732) * inp_1_2_1;
    result2 += M4(-0.11317302, 0.101683296, 0.003950785, 0.015213572, -0.11023794, -0.09128982, 0.031602487, -0.08738701, 0.023289988, -0.05812062, 0.0038112076, -0.103629895, -0.0593998, 0.09232173, -0.05226527, -0.20550662) * inp_1_0_2;
    result2 += M4(0.027684363, 0.014021809, 0.07328867, 0.071709424, -0.11400474, 0.0816374, 0.01945939, -0.20332462, 0.013728032, 0.102932945, -0.0032681979, 0.0414876, 0.052097168, -0.37888852, -0.046426028, -0.14955416) * inp_1_1_2;
    result2 += M4(8.448451e-05, 0.046134457, 0.050962154, -0.103297435, -0.029383011, 0.012425248, -0.007017938, -0.030313531, -0.048319113, 0.07835385, -0.019762153, 0.116232365, -0.030600825, 0.2175453, -0.02309842, 0.114646174) * inp_1_2_2;
    result3 += M4(0.023957845, 0.04915849, -0.015067269, 0.035778437, 0.014722067, 0.123453, 0.008876083, 0.110706925, -0.013753001, 0.0077184187, -0.01998453, 0.007868144, 0.008436016, 0.107919395, 0.04688158, 0.056043774) * inp_1_0_0;
    result3 += M4(0.0012034553, 0.2960993, 0.0073739216, 0.02219105, 0.05887584, 0.033421174, -0.0006305126, 0.087055854, 0.060173795, 0.07451854, 0.030584216, -0.06337188, 0.0759563, -0.03401133, -0.08235621, -0.019723969) * inp_1_1_0;
    result3 += M4(0.05848845, -0.03338881, -0.0071533867, -0.111678, 0.04819873, 0.035175525, -0.018369045, 0.14742552, 0.0049338634, 0.0027233835, -0.009000085, -0.14793368, -0.0762348, 0.14441793, -0.03491942, 0.14399926) * inp_1_2_0;
    result3 += M4(0.018495683, 0.02216756, 0.060114864, -0.02809279, -0.00068512623, -0.20137772, 0.05340099, -0.05240444, 0.029982328, -0.058837306, 0.043320518, 0.07583277, -0.09828173, 0.19919086, 0.0138866175, 0.05449638) * inp_1_0_1;
    result3 += M4(-0.05487773, -0.12117328, 0.040701143, 0.10218638, 0.047774523, -0.36902413, 0.064052135, -0.18897669, 0.029367495, -0.008247357, 0.03681233, 0.11212587, 0.16106032, 0.23837414, 0.054247905, 0.16426912) * inp_1_1_1;
    result3 += M4(0.07523113, 0.15108614, -0.01242088, -0.107451096, 0.058160994, -0.05152536, 0.004028243, 0.12331533, 0.06227501, 0.06024243, 0.012087353, -0.014500335, -0.07984329, 0.18669814, 0.005381529, -0.31993964) * inp_1_2_1;
    result3 += M4(-0.05018469, 0.09996047, -0.023666736, 6.724703e-05, 0.03934901, -0.041484736, 0.048764214, -0.059986793, 0.025749926, 0.22029947, -0.034626544, -0.0033258088, -0.028938826, 0.091770224, -0.013933409, 0.09128969) * inp_1_0_2;
    result3 += M4(0.026307734, 0.16237068, -0.017057028, 0.13867545, -0.0031866767, -0.098788984, 0.049939148, -0.038063258, 0.048364032, 0.15773427, 0.07148832, 0.061774727, 0.0379506, 0.10591354, -0.05546934, 0.029265177) * inp_1_1_2;
    result3 += M4(-0.0811438, -0.028520465, 0.034064353, 0.055614103, 0.08408032, 0.0368023, -0.0025406934, 0.0710569, 0.06140405, 0.016150083, 0.009185664, 0.02673473, -0.07351763, 0.2751806, -0.019871306, -0.030677572) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0944758, -0.22426541, 0.030518087, -0.022087546, -0.056584135, 0.17910145, -0.064111575, 0.07471191, -0.060695466, -0.098425105, -0.06620527, 0.18653326, -0.26438054, -0.24369079, -0.0009665597, 0.1007851) * inp_2_0_0;
    result0 += M4(-0.108100384, -0.26111072, 0.0834094, -0.05295676, -0.07949421, -0.11404702, 0.11271639, -0.040238637, -0.19751722, -0.2630278, -0.08778743, -0.13367252, 0.16478561, -0.23559469, -0.1069485, -0.05796687) * inp_2_1_0;
    result0 += M4(-0.1078313, -0.34181288, 0.033696186, -0.16996807, -0.02233121, -0.035752453, -0.018696103, -0.05162639, -0.13361703, -0.10383236, -0.08228861, -0.14063734, -0.16659969, -0.05245861, -0.05724389, -0.11741635) * inp_2_2_0;
    result0 += M4(-0.017560514, 0.0886359, -0.10385763, -0.061424583, -0.25814596, 0.05981658, 0.02190896, 0.08339866, 0.10709875, -0.012146039, -0.044316605, 0.07303397, -0.0018939999, 0.2573682, -0.14313073, -0.0103864) * inp_2_0_1;
    result0 += M4(-0.11825658, 0.09506875, -0.16915882, 0.09427474, -0.19791691, 0.08526538, -0.14507152, -0.13262324, -0.18045305, -0.016320419, -0.36912188, 0.058797915, -0.02317346, -0.08112507, -0.07564946, -0.012115017) * inp_2_1_1;
    result0 += M4(-0.03722292, -0.17301969, -0.06777469, -0.25424808, -0.022263216, 0.100537494, 0.03675525, -0.16514724, -0.0914781, 0.049697917, -0.066016845, -0.08419588, 0.07527083, -0.12400643, -0.078987025, -0.0038897248) * inp_2_2_1;
    result0 += M4(0.07057495, 0.07764529, -0.0005231307, 0.06273105, 0.11997611, -0.013906102, 0.054514322, 0.09218698, 0.038290255, -0.01483658, 0.06918428, 0.050181687, -0.085275635, 0.08747271, 0.047950797, 0.033438012) * inp_2_0_2;
    result0 += M4(-0.118321486, 0.021878174, -0.15829605, -0.09100126, -0.20468324, 0.1339696, -0.018968575, -0.043259546, -0.050970532, -0.00439251, 0.09042988, 0.07731158, -0.07289862, 0.11833406, 0.006354126, -0.012329843) * inp_2_1_2;
    result0 += M4(-0.016649446, 0.0944818, -0.048728168, -0.10577482, 0.0782715, 0.0013784948, -0.06342929, -0.13407968, 0.008162348, 0.04497809, 0.10049654, -0.039139327, 0.011342949, 0.19234154, -0.2262679, -0.043569643) * inp_2_2_2;
    result1 += M4(-0.015191259, 0.021982178, -0.051769584, -0.44492105, 0.07134978, 0.061218455, 0.0058843107, 0.09877484, 0.06448941, -0.030696893, -0.03824791, -0.34333467, -0.11669266, 0.0543657, 0.023971615, 0.24919118) * inp_2_0_0;
    result1 += M4(-0.029959446, 0.024022583, -0.03568526, 0.008238286, 0.026338598, -0.06273443, -0.0016569656, 0.07062984, -0.11553139, 0.06524912, -0.0019100556, -0.30618763, 0.03797304, 0.034054384, -0.05821783, -0.5274091) * inp_2_1_0;
    result1 += M4(0.14652161, 0.027029932, 0.034993116, 0.04510454, -0.013080015, -0.019495137, 0.00565736, 0.08147366, 0.12688327, 0.033025686, 0.025174053, -0.018408913, 0.070726566, -0.047923956, -0.002518646, 0.5148205) * inp_2_2_0;
    result1 += M4(-0.12636939, 0.06607542, -0.07303173, -0.1220549, -0.012300859, 0.05224341, 0.01192276, 0.01976836, -0.08379989, 0.004042487, -0.21995384, -0.12550916, -0.020901104, 0.04100641, -0.041878507, -0.2045317) * inp_2_0_1;
    result1 += M4(-0.21656987, -0.02020576, -0.113546416, -0.15109438, 0.037451155, -0.14726175, -0.033460777, -0.38270327, -0.14632772, 0.0315849, -0.112987556, -0.29501584, -0.08817133, 0.05881143, -0.013488274, 0.3418125) * inp_2_1_1;
    result1 += M4(-0.23751897, 0.012044694, 0.03789733, -0.21231146, 0.12617584, -0.0045195795, -0.020583123, -0.16635938, -0.07659813, 0.054626394, 0.08203788, 0.07547591, 0.023278005, -0.06071082, -0.033383135, -0.123366326) * inp_2_2_1;
    result1 += M4(-0.0775248, 0.033657975, -0.04331898, -0.20939532, 0.15963088, 0.0041081747, -0.035961464, 0.062250208, 0.004196231, -0.02766165, -0.15349272, 0.14407028, -0.073179826, 0.091347344, -0.0011672186, -0.121864736) * inp_2_0_2;
    result1 += M4(-0.16541386, 0.0019007216, -0.13027495, -0.19877298, -0.044479746, -0.059897296, -0.16627501, -0.048424628, -0.14890184, 0.06174917, 0.073585324, -0.002975011, 0.25887847, -0.105269626, 0.032111097, 0.23215939) * inp_2_1_2;
    result1 += M4(-0.07155708, 0.05562256, -0.007929596, -0.25135186, 0.032053042, 0.0062781963, 0.025070978, -0.13100716, 0.012842036, -0.032480337, 0.037014637, 0.04966284, 0.05089269, 0.14665714, -0.018123047, 0.07485114) * inp_2_2_2;
    result2 += M4(-0.03343364, -0.053957857, 0.062148616, -0.07401754, 0.08249615, -0.00358401, -0.00446229, 0.084135905, -0.1635332, 0.1921847, -0.041920282, -0.0051416517, -0.0017760046, -0.12301305, 0.03948101, 0.102458626) * inp_2_0_0;
    result2 += M4(-0.06207045, -0.0090320455, -0.013629284, -0.11661405, -0.06363894, 0.08988409, -0.07583253, -0.0045447885, -0.16748193, 0.22127262, 0.06132349, -0.10747978, -0.06836415, 0.25082874, 0.05728508, 0.23322596) * inp_2_1_0;
    result2 += M4(0.1149947, -0.1899849, 0.014801727, 0.05979068, -0.008795447, -0.04073544, -0.022939669, -0.008637418, -0.031052513, 0.13630551, 0.027818417, 0.006547026, 0.14440693, -0.104924224, 0.017369105, -0.25768545) * inp_2_2_0;
    result2 += M4(0.037604645, 0.07933506, 0.105350696, 0.101335384, 0.09996193, -0.11981072, 0.017033279, -0.038517077, 0.07955073, 0.22450519, 0.0071314326, 0.14135055, -0.14725289, -0.08732004, 0.028902141, -0.012025842) * inp_2_0_1;
    result2 += M4(-0.2367462, -0.026471458, 0.0057911985, -0.07527169, -0.26778755, -0.07590715, -0.16935606, -0.20577122, -0.07862068, 0.25470948, 0.02938798, -0.012860709, 0.06687603, 0.047391474, 0.032883417, -0.18337163) * inp_2_1_1;
    result2 += M4(-0.10283033, -0.20549121, -0.015370689, -0.15407752, -0.06426044, 0.010543673, -0.024006195, -0.039881747, 0.077516064, 0.06326801, 0.039289795, 0.06656824, -0.18799011, -0.049566347, -0.06199583, -0.065607734) * inp_2_2_1;
    result2 += M4(0.0068173553, -0.099690326, 0.05897002, -0.0738923, 0.019947795, 0.021126661, 0.0133171175, 0.04856277, -0.0089841485, 0.044197984, -0.043440446, 0.030748893, 0.061850626, 0.14397362, 0.0475163, 0.16218589) * inp_2_0_2;
    result2 += M4(-0.037549213, -0.005262067, 0.010210574, 0.024813255, 0.11240661, 0.12193622, -0.06326504, 0.09523958, 0.042850733, 0.15096523, -0.0133785745, 0.119399786, 0.15888996, -0.0242579, 0.051882524, 0.005936198) * inp_2_1_2;
    result2 += M4(0.09719902, -0.14931308, 0.008045309, -0.16754813, -0.016204126, -0.029507203, 0.019031465, -0.010538362, 0.037116356, 0.025534041, -0.033297192, 0.029739724, -0.008638936, 0.09542247, 0.008586862, 0.025611948) * inp_2_2_2;
    result3 += M4(0.027861193, -0.025475739, 0.012764393, 0.01569853, 0.04367011, -0.025001682, 0.009535363, -0.06064239, 0.016583499, 0.29926032, -0.018183181, -0.11392631, 0.03743359, -0.19244829, 0.06832365, 0.013501003) * inp_2_0_0;
    result3 += M4(-0.00441491, -0.1347954, -0.0126858, -0.021850534, -0.037323803, 0.013385522, -0.0013799927, -0.22130902, 0.08933317, -0.06806426, 0.037085246, -0.20833828, 0.017338656, 0.20430785, -0.00019326237, 0.023958223) * inp_2_1_0;
    result3 += M4(0.08265701, -0.15942763, 0.0361821, 0.20598769, 0.022307029, 0.0537433, -0.020617465, 0.08283116, 0.17105302, 0.12711062, 0.013856572, 0.100874536, 0.048209272, -0.04782679, 0.014050142, -0.036015373) * inp_2_2_0;
    result3 += M4(-0.019092884, -0.1259347, 0.060408156, 0.0034705256, -0.011203055, -0.17789517, 0.12651438, 0.06244543, 0.016327493, 0.369086, 0.033972234, 0.0034987922, -0.014106195, 0.076815106, 0.013107297, -0.041571055) * inp_2_0_1;
    result3 += M4(0.040450003, -0.29367828, 0.055293493, -0.25733444, 0.07247139, -0.15131982, -0.035116903, -0.090495475, 0.04888865, 0.46860752, 0.11045181, -0.060455773, 0.010517568, 0.38332748, 0.10938522, -0.11154314) * inp_2_1_1;
    result3 += M4(0.00806596, -0.16408472, -0.0011699776, -0.15567173, 0.10056973, -0.06751066, -0.023145018, -0.07374392, 0.18772827, 0.121489145, 0.068427406, 0.004085673, 0.052281223, -0.01415649, -0.041359376, -0.17219126) * inp_2_2_1;
    result3 += M4(0.009331661, 0.03315414, 0.043592244, -0.0395671, 0.014321703, 0.053788014, -0.004898425, -0.011245887, -0.0038222435, 0.101083614, -0.03555036, 0.03529807, 0.014081363, -0.04485821, 0.07430171, 0.044046063) * inp_2_0_2;
    result3 += M4(-0.014115523, -0.06375724, 0.0052614063, -0.09765093, -0.07610538, -0.08830917, -0.031467263, -0.055893347, 0.03964795, 0.12795432, 0.036111187, 0.009805355, 0.008501981, -0.09614407, -0.0067811776, -0.067690216) * inp_2_1_2;
    result3 += M4(0.0011784803, -0.011790458, 0.025427388, 0.01758651, 0.015712753, 0.0925541, 0.004968418, 0.05442294, 0.026758304, 0.13393246, -0.0311365, 0.077850565, -0.02478698, 0.053641476, 0.041182496, -0.13760485) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.53343534, -0.45745018, 0.029789384, 0.43517765, 0.31956697, -0.16611023, -0.009422899, 0.32754108, -0.022300731, 0.09137833, 0.0013806986, 0.046973374, -0.099315576, -0.3444402, 0.09134589, 0.06506483) * inp_3_0_0;
    result0 += M4(0.11641685, -0.08632045, 0.15179588, -0.09363439, 0.51971984, 0.08346866, 0.20905961, 0.039714783, 0.047779772, 0.11112426, 0.13763036, -0.09936385, -0.1012137, -0.44119948, -0.0006302645, 0.11682656) * inp_3_1_0;
    result0 += M4(0.028647063, -0.19262965, 0.020148631, 0.023280121, 0.11015094, -0.18234439, 0.20889805, -0.724869, 0.10966588, 0.06581161, -0.05861572, -0.009486089, 0.101328045, -0.014692658, 0.04591253, 0.15376498) * inp_3_2_0;
    result0 += M4(-0.60359126, -0.08675603, -0.72113746, 0.047039527, 0.111048184, 0.024378622, 0.20822501, -0.061826844, -0.06257152, 0.01484938, -0.04931565, -0.020766897, 0.20971532, 0.17508674, 0.050188843, -0.11066743) * inp_3_0_1;
    result0 += M4(-0.399899, 0.034767807, 0.026538147, 0.13872427, -0.08959583, -0.097083114, -0.20035791, 0.12376383, 0.09938311, -0.26749438, -0.33990127, 0.08578218, -0.503274, -0.1852222, -0.20407028, 0.2036869) * inp_3_1_1;
    result0 += M4(-0.14033292, 0.18157801, 0.0021245675, -0.12548895, 0.0032111292, 0.11043419, 0.24830697, 0.03343835, -0.12609, 0.04902687, 0.10395081, -0.1181491, 0.009629058, -0.043006126, 0.06614473, -0.04814053) * inp_3_2_1;
    result0 += M4(-0.49674946, 0.22503951, -0.55303794, -0.60560924, -0.0034891225, -0.04057081, 0.10315936, -0.04055094, -0.070707545, 0.04324766, -0.059031855, 0.006385788, -0.0064931368, 0.01178804, -0.1437474, -0.040023662) * inp_3_0_2;
    result0 += M4(0.07716454, -0.021176456, -0.3160638, 0.14899133, 0.054812275, 0.03393485, 0.029171461, 0.05420725, -0.06260501, -0.017417695, -0.11383344, 0.026522502, 0.060419463, -0.09273537, -0.30668768, 0.009324471) * inp_3_1_2;
    result0 += M4(-0.015724452, -0.055862065, -0.11820547, -0.025432916, 0.08803168, -0.07309142, 0.037696622, 0.057602126, 0.032630786, 0.058948897, 0.083996825, -0.053151373, 0.016773438, 0.15393949, -0.043593943, 0.04961043) * inp_3_2_2;
    result1 += M4(-0.4317382, 0.030472547, -0.21238582, -0.8293604, 0.12927406, 0.13495755, -0.07689267, -1.9900502, 0.053777546, -0.019436866, 0.023819998, 0.036389843, 0.004861218, -0.04075336, 0.035487786, 0.18913436) * inp_3_0_0;
    result1 += M4(-0.0643671, 0.021028258, -0.03616489, 0.00084056763, -0.21382566, 0.63037694, -0.48030502, -1.2867224, -0.12156235, 0.025216732, 0.02468926, 0.038511064, 0.038802076, -0.030266471, 0.024016704, -0.12598202) * inp_3_1_0;
    result1 += M4(0.059980657, -0.0026669253, -0.00492474, 0.021094617, -0.20715298, 0.3925126, -0.17743279, -1.0776387, -0.08272508, 0.04216027, -0.0040403693, 0.04175239, 0.053979743, -0.024715688, -0.0019167594, -0.016033657) * inp_3_2_0;
    result1 += M4(-0.07117979, -0.10387478, -0.3231243, -1.186733, -0.0353226, 0.0021837226, 0.34347165, -0.24733959, 0.049806062, -0.123760976, 0.0036348705, -0.11206203, 0.012244709, -0.030042905, 0.017278304, -0.09510997) * inp_3_0_1;
    result1 += M4(0.11233021, 0.03414036, -0.053369712, -0.25264347, 0.07398942, 0.17206526, 0.5842677, 0.33703998, 0.43973616, -0.34989357, 0.070493095, 0.040352818, -0.4327576, 0.04192064, 0.015616958, -0.37433055) * inp_3_1_1;
    result1 += M4(-0.030914236, 0.07093537, -0.0064513106, -0.15170906, -0.041446485, 0.037874077, 0.15875706, 0.09533662, 0.05638233, 0.0077131814, -0.043676265, 0.07060822, -0.04662454, 0.015115637, 0.014867999, 0.13110788) * inp_3_2_1;
    result1 += M4(-1.0306385, -0.19669344, -0.85359424, -0.9169216, 0.10932746, -0.10759082, 0.042717516, 0.20891224, -0.030618425, -0.023404324, -0.115683325, -0.12941025, -0.049228672, -0.05529525, -0.071176805, 0.19363092) * inp_3_0_2;
    result1 += M4(-0.18617107, -0.1406954, 0.03725949, 0.054874945, -0.011205349, 0.043161698, 0.09291796, -0.014160766, -0.18538386, 0.10825069, 0.104489274, 0.0040812274, -0.36906645, -0.07153969, 0.12453245, -0.19094738) * inp_3_1_2;
    result1 += M4(-0.06428031, -0.024068166, 0.030305978, -0.09778689, 0.053199857, -0.0402608, -0.020665139, 0.09406541, 0.14246741, -0.009571728, -0.029477322, -0.01569393, -0.014644838, 0.024567477, -0.007270452, -0.053100716) * inp_3_2_2;
    result2 += M4(-0.29125044, 0.112667665, -0.0188303, -0.47867343, 0.27147073, 0.5525465, 0.062887706, -1.0621383, 0.059609428, -0.05393617, 0.009407488, -0.042449165, 0.0525899, -0.04727118, -0.0734042, 0.016942307) * inp_3_0_0;
    result2 += M4(0.25348854, -0.07263816, -0.03944102, -0.053467795, 0.72628814, -0.17150524, 0.22955926, -0.6614587, -0.038344912, -0.08403187, 0.28900665, -0.10886512, 0.057194155, 0.12485648, -0.04829093, 0.14604686) * inp_3_1_0;
    result2 += M4(0.025128087, -0.017506553, -0.005096725, 0.12120449, 0.49535802, -0.0026038524, -0.0325326, -0.016785825, 0.080189794, -0.026276255, 0.14589588, 0.12685955, 0.023496462, 0.04719977, -0.017236164, 0.1102472) * inp_3_2_0;
    result2 += M4(-0.6810232, 0.64371777, 0.039358687, -0.67969894, 0.021684375, -0.08633, -0.016421212, -0.121324785, -0.051758938, 0.045195527, -0.031427734, -0.034657974, -0.093557246, 0.25374913, -0.028299538, -0.043312486) * inp_3_0_1;
    result2 += M4(-0.20783596, 0.22179192, -0.018883752, -0.13587803, 0.027598603, 0.23558702, 0.10194467, 0.15844491, -0.3076057, -0.2454454, 0.26832673, -0.13619475, -0.1465164, 0.09984439, -0.025886575, -0.39140552) * inp_3_1_1;
    result2 += M4(-0.13915585, 0.00081546523, 0.083358556, -0.049365826, 0.18891226, 0.009663996, -0.098733954, 0.041825194, 0.12965308, 0.031310577, -0.10451169, -0.06373548, -0.041882724, -0.007554543, 0.0065899664, -0.010136777) * inp_3_2_1;
    result2 += M4(-0.69306785, -0.032881957, -0.13158837, -0.58130515, -0.022197114, 0.0143927615, -0.051613204, -0.032400694, -0.058390938, 0.00570663, -0.0025905801, 0.02213283, 0.011225486, -0.14619741, -0.0052871765, -0.059409995) * inp_3_0_2;
    result2 += M4(-0.1919245, -0.025674045, -0.088516146, 0.014309828, 0.0032960088, 0.04231158, -0.017175898, 0.04244957, 0.049157076, 0.04565702, 0.07634382, 0.061853975, -0.13189876, 0.088687, -0.061006743, -0.021430308) * inp_3_1_2;
    result2 += M4(0.07573963, -0.048705183, -0.058316372, -0.122412905, 0.015832424, -0.0034425932, 0.013051105, 0.058518883, 0.041467234, 0.020311093, -0.04006328, -0.043965444, 0.078789905, -0.020359388, 0.009426517, 0.041997828) * inp_3_2_2;
    result3 += M4(0.1506274, -0.1474748, -0.0018282098, 0.11226594, 0.045282762, -1.0427392, 0.039536905, 0.19593339, 0.014273238, 0.04744548, 0.049217876, -0.0010162021, -0.0040833573, -0.011584865, -0.043421477, 0.009821265) * inp_3_0_0;
    result3 += M4(0.14493485, -0.113895364, -0.026822928, 0.17338878, 0.4101301, 0.05953343, 0.11615307, 0.3828409, -0.05347712, -0.082794555, -0.0446284, 0.030721929, -0.015213722, -0.19805709, -0.052058227, 0.117369264) * inp_3_1_0;
    result3 += M4(0.02577696, 0.03250462, -0.014219293, 0.13891436, 0.33508468, -0.050468747, -0.0033451838, 0.31570828, -0.043449868, -0.021636916, 0.05746794, 0.22052495, 0.02612159, 0.07481422, -0.010936388, 0.17878953) * inp_3_2_0;
    result3 += M4(0.10268748, -1.4394716, 0.2353697, -0.5284983, 0.0826018, -0.40343943, 0.25190863, 0.067070246, -0.077867806, 0.009007627, -0.09713802, 0.001979488, -0.03795451, 0.18070555, -0.059233315, -0.078479975) * inp_3_0_1;
    result3 += M4(0.36054152, -0.11401597, 0.014668418, 0.28199142, 0.38065043, -0.6634394, 0.5508277, 0.1000432, 0.25336072, 0.15980528, 0.29776555, -0.015339491, 0.006553162, -0.6013625, 0.049080234, -0.056399155) * inp_3_1_1;
    result3 += M4(0.0012121184, -0.09817138, 0.07308588, -0.12810098, 0.27255383, -0.7538874, 0.019674078, 0.037148066, -0.115834296, -0.09219367, -0.012385698, -0.007772913, -0.016811172, -0.020123046, 0.026410958, -0.061147984) * inp_3_2_1;
    result3 += M4(-0.15863834, -0.727689, 0.01908174, -0.17586982, 0.011011153, -0.014294167, 0.0150937345, 0.03463446, -0.029880386, -0.0819019, -0.020608885, 0.018393125, -0.013822072, 0.016858788, -0.022237804, -0.03946951) * inp_3_0_2;
    result3 += M4(0.14232586, 0.10931812, -0.07831832, -0.019731808, 0.06299322, 0.012221874, -0.010268308, 0.042400714, 0.051016018, -0.059573982, 0.07131057, -0.010739499, -0.103281744, 0.020022746, -0.061442394, -0.042086534) * inp_3_1_2;
    result3 += M4(-0.030736566, 0.09027738, -0.04098363, 0.057093136, -0.057138246, 0.092999, -0.020634035, -0.027624438, -0.063737474, 0.05693552, -0.031408273, -0.00064515986, -0.010807116, -0.012957014, 0.011171549, -0.047805857) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.002977636, -0.01595588, -0.001423665, -0.0010812216);
    V4 result1 = V4(-0.0027777045, -0.0019335352, 0.0010266149, -0.0095608);
    V4 result2 = V4(0.0013028579, -0.08127619, -0.0059609786, 0.009177641);
    V4 result3 = V4(0.0067826104, -0.0040558274, -0.0033470585, -0.0064899204);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.01698978, -0.07049169, -0.028078495, 0.04205663, 0.004765393, 0.028437788, 0.028735608, -0.04342232, -0.020478271, -0.042261954, 0.042696375, -0.10205968, 0.0042064823, 0.094738334, -0.05656176, 0.08765094) * inp_0_0_0;
    result0 += M4(-0.021612357, -0.047526844, -0.044625342, 0.12368602, -0.011738448, 0.02902412, 0.05175866, -0.012090884, -0.00058995973, 0.12467021, 0.109041184, -0.08358599, 0.012414391, -0.09606102, 0.02258136, -0.009202779) * inp_0_1_0;
    result0 += M4(0.0019174046, -0.016870214, 0.01989539, -0.02268718, 0.0032912127, 0.035013575, -0.007136682, -0.015532388, -0.0033075626, -0.019866947, 0.034803662, 0.015680345, 0.00013892828, 0.023581594, -0.045078922, 0.029517112) * inp_0_2_0;
    result0 += M4(0.024648134, -0.038813546, -0.110024944, 0.123901926, 0.024936335, -0.07692882, -0.06073315, 0.03582487, -0.044110786, -0.09040424, 0.018139217, 0.0015340436, 0.006097037, 0.46300367, -0.024984794, -0.00036857292) * inp_0_0_1;
    result0 += M4(0.023987839, -0.005638121, 0.2804246, -0.034116782, -0.10833307, 0.0083454335, -0.20805115, 0.13885707, 0.06487188, -0.05283998, 0.1443697, -0.20447765, 0.045479864, -0.010110766, -0.11333546, 0.032713093) * inp_0_1_1;
    result0 += M4(0.011204932, 0.017783655, -0.075489014, 0.062148593, 0.034306567, 0.015734723, 0.013054434, 0.033041075, -0.033110127, -0.07029802, 0.060572296, -0.018759713, -0.047005404, 0.011264946, 0.013314364, -0.036339097) * inp_0_2_1;
    result0 += M4(-0.03472573, -0.04803516, 0.017518787, -0.0455245, -0.058772348, 0.012376151, -0.010758657, 0.0034500873, 0.010822891, -0.119297646, 0.025686923, 0.014681482, 0.06505488, 0.3224839, 0.07184905, -0.09467726) * inp_0_0_2;
    result0 += M4(0.007140499, 0.033821817, -0.073342614, 0.050870012, 0.112412356, -0.021048522, 0.11075521, -0.0543522, -0.08384572, -0.018737331, -0.0030938594, 0.015622161, -0.112148814, -0.14648038, -0.08471173, 0.10247413) * inp_0_1_2;
    result0 += M4(-0.00066002464, -0.071379006, -0.073376656, 0.04247082, -0.04069851, 0.033380944, -0.027687036, 0.02053439, 0.008738735, -0.00875351, -0.025999878, 0.044215314, 0.043372966, 0.053676452, 0.028883014, -0.023985708) * inp_0_2_2;
    result1 += M4(-0.00029830213, -0.07542796, -0.014463937, -0.05882776, -0.0040261163, 0.031132841, 0.006607172, 0.016414557, -0.08285101, 0.06461535, 0.021346316, 0.018759206, 0.01745633, 0.038726624, 0.0061753136, -0.036237713) * inp_0_0_0;
    result1 += M4(0.041154485, -0.080260046, -0.009418877, -0.103210144, 0.014514497, 0.015505259, -0.015479698, 0.06996541, -0.07336441, 0.06367359, -0.071175575, -0.013650908, -0.00049742096, 0.047275, -0.023888642, 0.17092676) * inp_0_1_0;
    result1 += M4(-0.0037950238, -0.0043251207, 0.0066468227, -0.007786037, -0.014761119, 0.03467402, -0.004803845, 0.057421792, 0.07329685, 0.021233007, 0.011287073, 0.04931626, -0.04307275, 0.013548304, 0.025697753, 0.03665651) * inp_0_2_0;
    result1 += M4(0.08293311, -0.030872665, -0.07145164, 0.010467714, 0.028938128, -0.076651126, -0.012022234, -0.06197181, -0.010180909, 0.078884564, 0.0071920836, 0.03640201, 0.06951104, -0.043091767, 0.016601289, -0.0521082) * inp_0_0_1;
    result1 += M4(0.12812698, 0.11591905, 0.11341097, 0.18814528, -0.2721298, 0.08439931, -0.020396179, -0.27623042, -0.0018977912, 0.27474165, 0.04224433, 0.3612672, 0.1414371, 0.01169703, -0.12893628, -0.22155643) * inp_0_1_1;
    result1 += M4(-0.034132052, 0.0109186955, -0.03168999, 0.103775255, -0.004840052, -0.06923245, -0.04174203, -0.016474927, -0.056538567, 0.03796486, -0.0478189, 0.071489364, -0.028073316, -0.045750014, 0.0597353, -0.0018846405) * inp_0_2_1;
    result1 += M4(0.051256053, 0.016647514, -0.09331964, -0.009054577, -0.07538608, 0.079248, -0.077399224, 0.14277099, -0.0022944335, 0.024439182, -0.070026234, 0.054975513, 0.06697563, -0.055510763, -0.016012562, 0.09971834) * inp_0_0_2;
    result1 += M4(-0.063660376, -0.06657312, 0.16657507, -0.13534027, 0.07320534, 0.20923568, 0.016299594, 0.270669, -0.01361279, -0.283392, -0.073858105, -0.03582336, 0.018475413, -0.06686104, -0.22095002, 0.023811929) * inp_0_1_2;
    result1 += M4(-0.011365953, 0.03539265, -0.087596305, 0.0056723543, -0.03949087, 0.12689097, 0.006220008, 0.33499554, -0.00049516157, -0.038192485, 0.001430444, -0.036666043, -0.017402792, 0.008222351, 0.035359148, -0.085902944) * inp_0_2_2;
    result2 += M4(-0.01730826, -0.01367119, 0.004286549, 0.010636616, -0.011664207, 0.05000921, 0.023668477, -0.026697135, 0.00084410084, 0.059361733, -0.0071060015, 0.025587399, 0.024942428, -0.029858507, 0.043463603, -0.07580084) * inp_0_0_0;
    result2 += M4(0.043239288, -0.07609324, 0.02223774, -0.085852206, -0.009845539, -0.109968156, -0.0470712, -0.010743069, -0.04338221, 0.019155923, 0.070877925, 0.02107526, 0.00010778422, 0.01984376, -0.04695188, -0.0005219233) * inp_0_1_0;
    result2 += M4(-0.029212156, -0.102328606, 0.0039492697, -0.025840532, -0.0016812802, 0.07010853, 0.021185802, 0.0067610038, -0.028181208, -0.020231783, -0.084289655, 0.019607699, 0.01367206, -0.09290424, 0.11493838, -0.022986246) * inp_0_2_0;
    result2 += M4(0.046456464, -0.013528703, -0.01735423, -0.13292958, -0.029129652, 0.03571494, -0.038807355, -0.01840586, -0.014598837, -0.026042998, -0.019342043, -0.02309235, 0.029631501, 0.061738007, -0.1399183, -0.21106116) * inp_0_0_1;
    result2 += M4(-0.081639096, 0.041851655, -0.040264793, -0.056973204, 0.018761292, 0.048528895, 0.10439932, -0.045175407, -0.3722407, -0.043096233, -0.14719641, -0.1756326, 0.0141254235, 0.042543445, 0.19130088, 0.079694845) * inp_0_1_1;
    result2 += M4(-0.0453125, -0.016354166, -0.110659964, -0.012258161, 0.04239126, -0.05069678, -0.23076071, -0.021298984, -0.035810046, -0.020049091, -0.009416523, -0.029159395, -0.027032398, -0.07574914, -0.057700258, 0.0008573615) * inp_0_2_1;
    result2 += M4(-0.118244044, -0.10150308, 0.0037118914, -0.02072922, 0.034883473, -0.10369049, 0.0035228287, -0.017388368, -0.011688413, 0.050160684, -0.027418625, -0.01974492, -0.06528585, -0.017807098, 0.06382764, -0.08154618) * inp_0_0_2;
    result2 += M4(-0.12222257, 0.018189069, -0.00998068, 0.04846883, 0.12844588, -0.07498925, -0.015445513, 0.02543139, -0.025950843, -0.013766151, 0.022474144, -0.030181529, -0.020939179, -0.0568059, -0.033986986, 0.05173466) * inp_0_1_2;
    result2 += M4(-0.07526507, -0.040300705, 0.0012022803, -0.012317596, 0.066113636, 0.071854755, -0.07907538, 0.0013907119, 0.0021916565, 0.011050427, 0.007194401, -0.015271617, -0.016327588, -0.041538592, 0.01298918, -0.0015782795) * inp_0_2_2;
    result3 += M4(0.02439242, -0.06387151, 0.05127016, 0.021564696, 0.0066784075, 0.016279494, -0.0003194677, -0.00096231373, -0.070103586, 0.08930101, -0.11249341, -0.091030926, -0.016496224, 0.09984407, 0.103323445, 0.26029834) * inp_0_0_0;
    result3 += M4(-0.029241897, 0.15621577, -0.0008536456, 0.19526035, -0.010682739, 0.0028911273, -0.02604623, -0.046904344, 0.020797415, -0.08187708, 0.14657778, 0.0357731, -0.0038827804, 0.17152764, 0.1680084, -0.0071575465) * inp_0_1_0;
    result3 += M4(0.008844332, -0.13483794, 0.005456266, 0.011674359, 0.0025314826, 0.061158974, 0.0150413625, -0.005135326, -0.010545871, -0.13245241, -0.027768195, -0.028966766, -0.017478798, 0.081292145, -0.09386358, -0.04529991) * inp_0_2_0;
    result3 += M4(-0.029402692, -0.17892301, 0.11953908, 0.41729182, 0.1374763, -0.02195732, 0.012225686, -0.14806853, 0.111248165, -0.12089427, 0.09984333, 0.124356106, -0.11111814, -0.0012241222, 0.15202071, -0.16471039) * inp_0_0_1;
    result3 += M4(0.032420874, 0.2853102, 0.0751778, 0.053857267, 0.03644385, 0.05427021, -0.039010663, -0.008585108, -0.061532587, -0.02280664, -0.03611637, -0.1927919, 0.05006589, -0.23420377, 0.34207624, 0.17734514) * inp_0_1_1;
    result3 += M4(0.02408537, -0.09689361, 0.1051992, 0.027645461, -0.0049271593, 0.009823845, -0.048841503, -0.037923846, 0.007291822, 0.13954608, 0.0037537874, -0.031699054, 0.002977924, 0.13444133, -0.022695977, -0.020680174) * inp_0_2_1;
    result3 += M4(-0.040932313, -0.16366063, -0.014879543, 0.15571919, -0.038110103, 0.07522716, -0.12389882, -0.018751435, -0.006330651, -0.0275928, 0.019853817, -0.020994019, -0.04665464, 0.13262808, 0.10713007, 0.023310443) * inp_0_0_2;
    result3 += M4(0.064579524, 0.09555135, -0.020410776, 0.15024611, -0.023113746, 0.0029897564, 0.017872019, -0.016334977, 0.007402963, -0.016521726, 0.0014233557, -0.06466208, 0.010667926, 0.09018117, 0.03982245, -0.11364736) * inp_0_1_2;
    result3 += M4(-0.02041656, -0.024044842, 0.001673585, -0.030941164, -0.0013867794, -0.087213576, 0.013585295, -0.00563743, 0.006184469, 0.06764422, -0.023202093, -0.021882635, -0.02108729, 0.066289134, -0.052707568, 0.00521566) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.001436339, -0.11979555, 0.021882772, 0.044264723, 0.007785568, 0.022614475, -0.054635294, 0.05681381, 0.04456831, 0.2975276, -0.08440822, 0.03469008, 0.02270983, 0.16638267, 0.010822731, -0.032773986) * inp_1_0_0;
    result0 += M4(0.08274411, -0.18548033, 0.21384114, -0.09801317, -0.09933828, -0.040053345, -0.087603256, 0.16546391, -0.2334701, 0.20619874, 0.05236814, -0.36201534, 0.001308902, 0.039642274, -0.04598619, 0.053637873) * inp_1_1_0;
    result0 += M4(-0.0502462, 0.05829199, 0.0029938463, 0.062205397, 0.021973208, 0.06574896, -0.020903075, -0.008969297, -0.15450948, -0.021454154, -0.11743752, 0.2184213, 0.021790588, 0.032998763, -0.066237755, -0.0535418) * inp_1_2_0;
    result0 += M4(0.0016339339, -0.1882817, -0.021929001, 0.073438786, 0.00263282, -0.07634337, -0.09037962, 0.097064435, -0.004730283, -0.26261875, -0.031808835, 0.00097245746, -0.026997527, 0.21795039, -0.0068606557, -0.06709703) * inp_1_0_1;
    result0 += M4(-0.011129127, 0.029595045, -0.251805, 0.19603398, -0.017700462, 0.0848678, -0.2596799, 0.26456714, 0.14518651, 0.23640434, -0.08980785, 0.041419253, 0.15722418, -0.14840968, -0.031569414, 0.03609811) * inp_1_1_1;
    result0 += M4(0.037555367, 0.069077305, -0.0061863656, 0.0773867, -0.09398057, 0.007166052, -0.17284395, 0.17552845, 0.15080611, 0.40637368, 0.1335431, -0.092280015, -0.073090814, 0.0014869223, 0.028940622, -0.13469581) * inp_1_2_1;
    result0 += M4(-0.033694647, -0.20094895, 0.012491436, -0.037948776, -0.031456385, -0.20079438, -0.003550168, -0.02928019, 0.011760138, 0.25347325, 0.030566499, 0.00544398, 0.05941861, 0.23897414, -0.040182132, -0.014363189) * inp_1_0_2;
    result0 += M4(0.075310916, 0.24758075, -0.0017279832, 0.020274619, 0.10557425, 0.16736607, -0.051939845, 0.04615792, 0.06975589, 0.047245763, 0.023433378, 0.03172766, -0.0776614, -0.1845509, -0.060486276, 0.005878354) * inp_1_1_2;
    result0 += M4(0.012045982, -0.04127109, 0.042331707, -0.010838995, -0.041145176, -0.053567532, -0.015517692, 0.003049292, -0.021839865, -0.050943792, 0.010811348, 0.018121721, 0.032054633, 0.07801281, -0.012435326, -0.012143374) * inp_1_2_2;
    result1 += M4(0.042661324, -0.02841547, 0.03215106, 0.1392029, 0.039897278, -0.00031747358, -0.015674528, 0.03541783, 0.059737213, 0.024804533, -0.07637417, 0.08609376, -0.028227385, -0.030829482, 0.03585878, 0.10213772) * inp_1_0_0;
    result1 += M4(0.40924683, -0.06794009, 0.014411507, 0.22277622, -0.015321797, -0.09944946, 0.006214858, -0.22230917, -0.21445997, -0.11815738, 0.11013534, -0.25737843, 0.069617674, -0.051494572, 0.043127075, -0.08647114) * inp_1_1_0;
    result1 += M4(-0.02985967, 0.01489167, 0.06045251, 0.15095854, -0.10629457, -0.0146347, 0.022973787, -0.044155046, 0.11174855, -0.0077880975, 0.17411235, -0.41608748, -0.059614632, -0.014886102, -0.04278089, -0.20709716) * inp_1_2_0;
    result1 += M4(0.024838196, -0.001110138, 0.080250695, -0.04792813, -0.012773132, -0.04335207, 0.01610472, -0.006034703, 0.032224372, -0.13614127, -0.053390436, -0.032631658, -0.040745556, 0.0651336, 0.0758624, -0.09364265) * inp_1_0_1;
    result1 += M4(-0.09087998, 0.08957115, 0.034840062, -0.25690696, -0.123593114, -0.1724434, 0.12475699, -0.053108573, -0.11176601, -0.5496722, 0.34209523, -0.35743982, 0.19698316, 0.03683019, -0.035286028, -0.043000657) * inp_1_1_1;
    result1 += M4(0.029729802, 0.09589802, 0.0921817, -0.015833035, -0.014757187, -0.07448604, 0.10739515, 0.025836764, -0.03595563, -0.07802785, 0.030660946, 0.19825622, -0.09530421, -0.11890874, 0.07378365, -0.0047254334) * inp_1_2_1;
    result1 += M4(0.011580033, 0.026983066, 0.0013160435, 0.0064704106, -0.009408461, 0.009634535, -0.02637995, 0.02341904, -0.00038759573, 0.07612361, -0.03495351, 0.0028884478, -0.046800524, -0.07894491, 0.008161218, 0.0025624656) * inp_1_0_2;
    result1 += M4(-0.020027112, 0.27113283, 0.09035969, 0.15975665, 0.020019209, 0.0038780726, 0.16130325, 0.021595072, 0.002990689, 0.194563, 0.09971425, 0.14410628, -0.013007244, -0.17534348, 0.054644946, -0.053301606) * inp_1_1_2;
    result1 += M4(-0.003930079, 0.11067484, -0.016760249, 0.028207563, -0.027715564, 0.06784459, -0.011885458, -0.0013210592, -0.030018035, -0.022936778, -0.015016529, -0.0056372685, -0.020483749, -0.025056534, 0.08199652, -0.012657415) * inp_1_2_2;
    result2 += M4(-0.005782476, -0.1022305, -0.026677031, -0.027513249, -0.015123624, -0.106853135, -0.0028620115, 0.041835032, 0.030810442, 0.023921616, -0.018712088, -0.090787925, -0.014909795, 0.02559829, 0.0043368363, 0.003973042) * inp_1_0_0;
    result2 += M4(0.022948701, -0.026918637, -0.061441723, -0.16967835, 0.040329393, -0.1016285, -0.027145278, -0.14053822, -0.12579413, -0.027063843, 0.05449133, 0.16063793, 0.023245169, -0.00550384, 0.04549198, -0.057571366) * inp_1_1_0;
    result2 += M4(-0.052303214, -0.035150614, 0.3482836, -0.061033156, -0.033493046, -0.046910584, -0.213094, -0.021663893, -0.041174598, 0.06986563, -0.32845917, -0.27144417, -0.006395234, 0.054801926, 0.09718716, 0.012286283) * inp_1_2_0;
    result2 += M4(-0.041269418, -0.0006972139, 0.016094508, 0.046866175, 0.018842516, -0.063742906, 0.014995737, 0.04728277, -0.063705124, -0.08071885, 0.0063124374, -0.012133642, -0.026970595, -0.00827129, 0.011035751, 0.02812619) * inp_1_0_1;
    result2 += M4(0.13357252, -0.084915645, 0.11035556, 0.11721976, 0.34726888, -0.08192149, -0.048560742, 0.19940247, -0.012632193, 0.041348577, -0.046632826, 0.1329383, 0.03564166, -0.055803355, 0.057965636, 0.0057342956) * inp_1_1_1;
    result2 += M4(0.07235562, -0.09048982, -0.04131622, -0.023144197, 0.15084937, -0.10810917, 0.1659479, 0.052423008, -0.014412038, 0.033141185, -0.0016299025, -0.052129235, -0.056501623, 0.006126075, 0.0993615, -0.027881024) * inp_1_2_1;
    result2 += M4(0.012675108, -0.037358034, 0.014167714, 0.0012570001, 0.026248911, -0.08616799, -0.019367944, -0.01219395, 0.0018875058, -0.087469265, -0.023687469, -0.021179834, 0.021588756, 0.053388648, -0.011848568, 0.014572199) * inp_1_0_2;
    result2 += M4(0.03547855, -0.03622091, -0.057516947, 0.020121997, 0.08895213, -0.042581245, 0.041453544, 0.053090017, -0.008662857, -0.04681993, 0.029140987, -0.0047507808, 0.014145164, 0.027451433, 0.00089185435, 0.019184044) * inp_1_1_2;
    result2 += M4(-0.014610619, -0.0999194, 0.008197762, 0.00031240282, 0.06468303, 0.023075007, -0.019833712, 0.029751344, 0.01979049, -0.01738841, -0.04519873, 0.0073331804, 0.027294898, 0.04034827, -0.049950052, -0.019759608) * inp_1_2_2;
    result3 += M4(0.026811792, -0.13145211, -0.030173542, 0.051076647, 0.09710084, -0.049363926, 0.027417148, -0.03821316, 0.00426747, -0.32927185, 0.10212601, 0.39092213, -0.08917179, 0.19983542, -0.09728074, -0.029095933) * inp_1_0_0;
    result3 += M4(-0.024959425, -0.27901262, 0.054889105, 0.012776673, -0.08017929, -0.087908596, -0.076531366, 0.074966885, -0.6730473, 0.94452256, -0.37034398, 0.10849365, 0.0042202743, -0.065826364, 0.13183261, -0.016200487) * inp_1_1_0;
    result3 += M4(-0.015265043, 0.05160995, -0.12178996, 0.035620037, -0.02994365, 0.14822434, -0.16342187, -0.046925712, -0.21764593, 0.88993824, -0.0159031, -0.10547839, 0.033593487, 0.030447165, -0.11024388, -0.036421895) * inp_1_2_0;
    result3 += M4(-0.017736003, 0.032799475, 0.006694514, -0.12625736, -0.027041668, 0.007651563, 0.015951406, 0.060828727, -0.03751314, -0.07243055, 0.12944731, -0.006639995, -0.044629138, 0.07886969, -0.06253375, -0.12464273) * inp_1_0_1;
    result3 += M4(0.10278454, -0.126885, -0.2296693, 0.020900356, 0.078351036, -0.20636885, -0.21446249, -0.05353787, -0.10537914, 0.25927696, 0.080024585, 0.17726482, -0.11468346, -0.08391057, -0.027224869, -0.019996878) * inp_1_1_1;
    result3 += M4(-0.001396422, -0.05412592, 0.057507105, 0.055291753, 0.02969498, 0.01321826, -0.013287642, 0.038443018, -0.037249614, 0.28155208, -0.048127417, -0.043641467, -0.020519417, 0.13085298, -0.089740165, -0.034029387) * inp_1_2_1;
    result3 += M4(0.011313435, 0.035013273, 0.04159699, -0.04484719, 0.007656405, -0.122611105, 0.029140921, -0.024068944, 0.020987364, -0.061068647, 0.10129966, 0.07096957, 0.0049478887, -0.0065862522, -0.010273533, -0.019764967) * inp_1_0_2;
    result3 += M4(0.011896509, -0.01397153, -0.0638424, 0.05728352, 0.02152731, 0.14523618, -0.031933255, 0.09486374, -0.033744745, 0.058511343, 0.00028047414, 0.023077045, 0.016918352, 0.015561814, -0.01790756, -0.040557906) * inp_1_1_2;
    result3 += M4(-0.007452489, -0.13597643, 0.03756993, 0.019934988, 0.009684405, -0.14114565, 0.018902814, 0.028865315, -0.020618996, 0.09765305, 0.048360154, -0.039912604, -0.01226438, 0.15714513, 0.022694625, 0.008333275) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.033408884, 0.25477278, 0.06381306, -0.09135714, 0.0180957, -0.46511135, 0.046377078, -0.05682619, 0.0065703643, 0.015055554, -0.00010574614, -0.027033934, 0.008793751, -0.120560005, -0.017959587, -0.025734667) * inp_2_0_0;
    result0 += M4(0.04499999, -0.06576975, 0.107506014, -0.10077321, -0.08002638, 0.088945165, -0.13685302, -0.027666599, 0.005380665, -0.09486368, -0.010012019, -0.012888551, 0.028097335, -0.075343646, 0.09439055, -0.16208217) * inp_2_1_0;
    result0 += M4(0.010434643, -0.004175385, -0.01637545, 0.020428985, 0.04448921, 0.107447, 0.017003037, -0.050708026, 0.009943943, 0.013532729, 0.032558974, -0.019628115, -0.0053502307, -0.05894396, 0.01371683, -0.055317212) * inp_2_2_0;
    result0 += M4(0.014792916, 0.32449946, 0.09007064, -0.0401521, 0.01722898, -0.1653281, -0.06226983, -0.035262216, -0.07693759, 0.115305685, 0.15545578, -0.1491077, 0.11283802, -0.051775742, -0.046259463, 0.10302385) * inp_2_0_1;
    result0 += M4(-0.10295943, -0.24688515, -0.08844216, 0.35260174, -0.015798768, -0.31803402, -0.10295561, -0.070661366, -0.032363825, 0.018354654, 0.278194, -0.34603667, 0.018069347, 0.026544271, 0.07997651, 0.15355125) * inp_2_1_1;
    result0 += M4(0.024104867, 0.018441213, 0.07858759, -0.08923644, -0.13510424, -0.11075832, -0.071724005, -0.079736486, 0.044372763, -0.034234017, 0.19076717, -0.15469185, 0.0594658, -0.017628055, -0.039104834, 0.047256462) * inp_2_2_1;
    result0 += M4(0.004195492, 0.3330367, -0.012532117, 0.042854656, -0.03665302, -0.6439332, -0.026708769, -0.024346737, 0.07677763, 0.17550838, -0.0013440863, -0.0032949732, -0.0610569, -0.00030738013, 0.029187322, -0.03245959) * inp_2_0_2;
    result0 += M4(-0.05459908, -0.10787027, 0.044980597, -0.08219423, -0.19885561, 0.017694665, 0.0053297793, 0.005955604, -0.21585152, -0.064438276, 0.056569595, -0.040549707, 0.32626113, -0.042898815, 0.08520993, -0.12891492) * inp_2_1_2;
    result0 += M4(0.024990994, 0.120048076, 0.041866533, -0.06631639, -0.08605512, 0.14992632, -0.07874601, 0.09378104, -0.0014580943, -0.005999262, 0.11756994, -0.13282734, 0.035274602, 0.029639993, -0.04428412, 0.0041597793) * inp_2_2_2;
    result1 += M4(-0.07456009, 0.048819963, 0.029390778, 0.059833225, 0.017410684, 0.11057728, 0.0151601955, 0.12255092, -0.035675775, 0.027704425, -0.00034567894, -0.019452618, -0.043755323, 0.01793963, 0.018908236, -0.0029019113) * inp_2_0_0;
    result1 += M4(0.021663804, 0.0502642, 0.004701766, 0.2907879, -0.06521026, -0.10369618, -0.020474447, -0.65643513, 0.04028576, -0.0036547564, 0.026414601, 0.071537234, 0.04214983, 0.0065271165, -0.019857096, 0.13407463) * inp_2_1_0;
    result1 += M4(-0.024178032, -0.03632939, 0.030801166, 0.04608059, 0.059732564, 0.028675752, 0.0021003168, -0.20188639, 0.0017837912, -0.004155809, 0.013214007, -0.02819217, -0.030240452, 0.042954896, 0.03700074, 0.006269321) * inp_2_2_0;
    result1 += M4(-0.07324414, -0.06741562, -0.04608043, -0.1030326, 0.001456635, -0.5500624, 0.032336302, -0.1570302, -0.005333041, -0.005613872, 0.0035896457, -0.040332593, 0.16020702, -0.09629877, 0.0039940453, -0.009729384) * inp_2_0_1;
    result1 += M4(0.40287134, -0.22584149, -0.08037817, -0.019078426, 0.015398398, -0.42423102, -0.13700849, -0.8965271, 0.054465666, 0.0708632, -0.10659178, -0.13034672, -0.12106913, -0.112846114, -0.052114263, 0.08563219) * inp_2_1_1;
    result1 += M4(-0.116488434, -0.02637303, -0.025359517, -0.028490478, 0.017977208, -0.3182749, 0.019765077, -0.5358442, -0.06990332, 0.09158868, 0.10729361, 0.096486546, 0.038621947, -0.06547346, -0.107371695, -0.13228534) * inp_2_2_1;
    result1 += M4(-0.019648721, 0.32512116, 0.11399801, 0.035759207, -0.01651686, 0.014794593, 0.022399304, 0.024403788, 0.008588722, -0.03975149, 0.034902845, -0.020744734, 0.047971457, 0.071390875, -0.15062007, -0.0651546) * inp_2_0_2;
    result1 += M4(0.007136857, 0.42022863, 0.08268831, -0.09410392, -0.039339043, -0.4644897, -0.06801811, -0.14107162, -0.024111278, -0.1737405, -0.12942912, -0.0034864172, -0.023992503, 0.4114573, 0.2466748, 0.05143156) * inp_2_1_2;
    result1 += M4(0.035856243, 0.093970045, 0.09857729, -0.05865929, 0.010983494, -0.2187122, -0.03845727, 0.10024189, -0.010301177, -0.084390305, 0.14410616, -0.13874915, 0.02671922, 0.03135201, -0.04437613, 0.043823108) * inp_2_2_2;
    result2 += M4(0.010038616, -0.100096665, 0.0154122105, -0.042736746, -0.0011450839, -0.109703496, -0.017219892, -0.02111106, -0.004180001, -0.019457038, -0.0028713667, -0.02580807, -0.007968723, -0.013764928, 0.027932335, -0.0131239975) * inp_2_0_0;
    result2 += M4(-0.05362862, -0.041930914, -0.08110446, -0.009346536, 0.009950736, -0.08027981, -0.035159525, -0.069681056, 0.0075724153, -0.08077795, -0.0022544884, 0.07326447, -0.05532613, -0.062112063, 0.0556114, 0.0757271) * inp_2_1_0;
    result2 += M4(-0.0124745155, -0.032213904, -0.011477571, -0.046703123, 0.028872652, -0.08404631, -0.7784916, -0.07495675, 0.033714496, -0.048631314, -0.0025617585, -0.019173123, -0.008932557, 0.062480897, 0.037351444, 0.020787183) * inp_2_2_0;
    result2 += M4(-0.014995487, -0.05266989, -0.04995218, -0.061540272, -0.030538036, -0.10132718, -0.0011500182, -0.03484432, -0.036835145, -0.07127651, -0.007452359, 0.016078847, 0.069056764, -0.06611022, -0.04264765, -0.14197162) * inp_2_0_1;
    result2 += M4(-0.053264204, -0.013365144, 0.06561732, -0.13333021, -0.041546132, 0.06654722, 0.07287425, -0.14675078, -0.09133097, -0.040220827, 0.074958384, 0.1415555, -0.013503015, -0.09903995, 0.100772, -0.115937784) * inp_2_1_1;
    result2 += M4(-0.10440056, 0.055245206, 0.020525077, -0.033090197, -0.027572533, -0.015952861, -0.75341815, -0.06723489, -0.11804633, -0.082501955, -0.38860983, -0.067574106, 0.04377328, -0.05646806, 0.38164854, 0.015179405) * inp_2_2_1;
    result2 += M4(0.019787101, -0.05386956, 0.0396856, -0.0045172707, -0.04491099, -0.10936411, -0.012309427, -0.008898628, 0.016706057, -0.101135865, -0.00796439, -0.033662032, -0.04657147, -0.012946576, 0.0066477736, -0.0134383235) * inp_2_0_2;
    result2 += M4(-0.19270737, -0.11588363, -0.025696537, 0.020288972, -0.11107501, -0.100815035, -0.06365998, -0.018885048, -0.17286582, 0.016488997, 0.030176207, -0.09974379, -0.23782612, 0.010209456, -0.079500884, -0.078642026) * inp_2_1_2;
    result2 += M4(0.028327867, -0.090099394, -0.053392407, -0.010608393, -0.061965987, -0.08527369, -0.04311292, 0.010385132, 0.034801543, -0.0008480569, 0.01461036, 0.027012512, -0.012656977, -0.0056374017, 0.083223715, -0.0065583144) * inp_2_2_2;
    result3 += M4(-0.10480413, 0.1649052, -0.092903726, 0.022589972, 0.006618765, 0.19135904, 0.0031905293, -0.39995632, -0.05195468, 0.10428351, -0.043841194, 0.03929635, -0.038930226, -0.38899568, 0.022060722, 0.10878833) * inp_2_0_0;
    result3 += M4(-0.043838974, -0.09157821, 0.11543635, 0.018759668, 0.011773259, -0.708056, -0.14411627, -0.11690059, 0.012109536, -0.15894945, 0.043815605, -0.057625268, 0.029968305, 0.23620798, 0.15214853, -0.17706396) * inp_2_1_0;
    result3 += M4(-0.015577833, 0.009934091, -0.044672754, -0.02761443, -0.039402943, -0.41297927, -0.13410084, 0.07870779, -0.020885203, 0.035487797, -0.061079007, 0.0017838578, 0.002622811, -0.021855596, 0.09172113, 0.030279638) * inp_2_2_0;
    result3 += M4(-0.24288073, 0.04797715, -0.12372688, -0.080946796, -0.012670731, 0.016706249, -0.007311856, -0.16785055, -0.03595626, 0.1086246, -0.006657574, -0.13431488, 0.016897878, -0.23065434, 0.19611864, 0.08318804) * inp_2_0_1;
    result3 += M4(-0.18584247, 0.032742776, 0.15790409, -0.06659327, -0.057814438, -0.25350475, -0.060196675, -0.48459932, -0.32846603, -0.10791948, -0.00934196, -0.02159883, 0.045321, 0.45407423, 0.023159293, -0.011513491) * inp_2_1_1;
    result3 += M4(-0.05775359, -0.009524715, -0.11723377, -0.017244596, -0.0028768254, -0.5485221, 0.11843327, 0.10456592, -0.05418254, 0.083135046, -0.10160864, -0.012353031, 0.044260837, -0.22961289, 0.059617057, 0.0302639) * inp_2_2_1;
    result3 += M4(0.0021888593, 0.2430083, -0.09065434, 0.12777008, 0.005529786, 0.14115183, 0.0019741158, -0.089095294, -0.007801778, 0.0631809, -0.014646842, -0.003992662, 0.039375078, -0.02906096, -0.008988838, -0.06549422) * inp_2_0_2;
    result3 += M4(-0.036759123, -0.038975324, 0.07352359, -0.080393605, -0.012021626, 0.03351424, -0.0016062506, 0.047332197, -0.05170847, 0.0033586852, 0.016836554, -0.107550696, -0.08090453, 0.009036315, 0.028755512, 0.028034545) * inp_2_1_2;
    result3 += M4(0.0065991627, 0.04058362, -0.018560512, -0.020633055, -0.0015077958, 0.308742, -0.04832534, -0.08386448, -0.0014728958, 0.18081875, 0.009315158, -0.043797024, -0.0042160857, -0.11065938, 0.018581271, -0.00037613526) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.054620445, 0.15743124, 0.06457024, -0.108343095, -0.0060178074, 0.036976367, -0.0339856, -0.026519032, -0.024172666, -0.19255067, 0.0026188751, 0.04022606, -0.015035414, 0.2622706, -0.049871303, -0.01777471) * inp_3_0_0;
    result0 += M4(-0.007231341, 0.19002768, -0.014872054, 0.011094535, 0.0030344117, 0.059086803, -0.0002940882, 0.006423618, -0.011310818, -0.09203047, -0.04040278, 0.090367906, 0.06430885, -0.20612273, -0.048030376, 0.09915916) * inp_3_1_0;
    result0 += M4(0.03627665, -0.037546832, -0.0071612187, -0.039854627, 0.031853523, 0.061272334, 0.008389732, 0.02945691, 0.020277597, 0.03250205, -0.027437218, -0.06319677, -0.053614534, 0.07624843, 0.028070288, 0.013910363) * inp_3_2_0;
    result0 += M4(0.09867535, -0.89135456, 0.06637401, 0.013385781, -0.10591085, -0.123390146, 0.020660358, 0.04076215, 0.00954416, -0.14612105, -0.025911557, 0.02074579, -0.05284194, -0.056159753, 0.07269111, -0.29553473) * inp_3_0_1;
    result0 += M4(0.03127706, 0.04538526, 0.103340365, -0.24902804, -0.09417301, -0.043239944, -0.056086328, -0.13553187, 0.19852324, -0.070897035, -0.084279634, 0.17239973, 0.099247575, -0.024278436, 0.05926903, 0.050182786) * inp_3_1_1;
    result0 += M4(0.035030577, 0.049048644, -0.01749804, 0.05074263, 0.011018073, 0.03750174, -0.08206203, 0.039033547, -0.037574813, -0.11858331, -0.08851934, 0.07733791, 0.0080009345, -0.09841194, 0.017633256, 0.051826317) * inp_3_2_1;
    result0 += M4(0.07330268, -0.33539188, -0.011763141, -0.04132863, 0.122809134, -0.09475012, -0.0061134407, 0.036894687, 0.0025047632, -0.103924915, -0.03054184, 0.014674937, -0.15705723, 0.20533547, -0.07506968, -0.24206688) * inp_3_0_2;
    result0 += M4(0.02851342, 0.14961518, 0.030830545, -0.049978174, -0.20100789, 0.016103057, 0.0054012365, 0.06835691, -0.116429836, -0.01695013, -0.065185435, 0.047308326, -0.25621426, -0.1775839, -0.051771943, 0.1349672) * inp_3_1_2;
    result0 += M4(-0.055535693, -0.032037873, 0.034085512, -0.037892614, -0.019268446, 0.052353766, 0.06002754, -0.023978548, 0.032410357, -0.0037940901, -0.04296477, 0.007388886, 0.032378178, 0.042111877, 0.009517518, -0.076192774) * inp_3_2_2;
    result1 += M4(-0.012290703, 0.15863954, -0.021622388, 0.22110735, -0.038466655, 0.11720817, -0.0077927294, 0.020239199, 0.015228327, -0.09104622, -0.0016349561, -0.11819189, 0.004115131, 0.031302072, -0.06416419, -0.07734878) * inp_3_0_0;
    result1 += M4(0.027129676, 0.07312146, -0.027272856, 0.22788663, 0.06771849, -0.09617158, -0.016957039, -0.18856066, 0.116624616, -0.12445002, -0.015883015, -0.2039043, 0.04463784, -0.098599106, -0.039035212, -0.17449312) * inp_3_1_0;
    result1 += M4(-0.0192033, 0.0006589974, -0.05318603, -0.007510186, -0.013174712, 0.041125648, 0.011056329, 0.24615692, 0.050564595, 0.055884935, -0.045062616, -0.032514803, -0.0538058, -0.06622617, 0.08274627, -0.16862556) * inp_3_2_0;
    result1 += M4(0.009014322, 0.024443801, -0.015113935, 0.050493695, 0.09000203, -0.062110815, -0.07523655, 0.092292905, 0.017973876, 0.054487426, 0.022086125, 0.026711112, 0.0019375201, 0.15722463, 0.08504284, 0.36552408) * inp_3_0_1;
    result1 += M4(-0.3063163, 0.06335346, 0.056331173, -0.10551355, -0.3988615, 0.18269993, 0.09900541, -0.03633957, 0.2466669, 0.108531855, -0.2231397, 0.25765538, 0.12542748, 0.16861752, 0.10017478, 0.40621933) * inp_3_1_1;
    result1 += M4(0.028131234, 0.019874923, -0.023274047, 0.027769383, 0.04785867, -0.035189446, -0.08409769, -0.40452173, 0.067390494, -0.1173474, -0.20397352, -0.050140336, 0.021673732, 0.104751654, 0.054604538, 0.36412445) * inp_3_2_1;
    result1 += M4(-0.037556976, 0.15058146, 0.13994701, -0.0525802, -0.031719945, -0.039809886, 0.031773437, 0.013202588, 0.006012138, -0.14418183, 0.0044242735, -0.03892203, 0.0074990173, -0.58808446, -0.17506015, -0.8431662) * inp_3_0_2;
    result1 += M4(0.011690776, 0.010247665, 0.20568073, 0.008293035, 0.048473734, -0.2697213, -0.16729584, 0.058301736, 0.025849234, -0.20179188, -0.19526291, -0.106168225, 0.07456663, -0.2307946, -0.15497716, -0.39592198) * inp_3_1_2;
    result1 += M4(0.025102139, 0.031295028, -0.00937318, 0.05332268, -0.015119172, 0.14903806, 0.0201441, 0.044377483, 0.0021340945, -0.03454707, -0.15922253, 0.0024778107, -0.08081537, -0.04992404, 0.02837919, -0.23421301) * inp_3_2_2;
    result2 += M4(-0.015393718, -0.0721049, -0.0522911, 0.047723096, -0.008112201, -0.03705068, -0.028249368, 0.04400774, 0.0001485758, -0.018760435, 0.0046966863, 0.034510143, 0.021156698, -0.09712496, -0.01206794, 0.00859977) * inp_3_0_0;
    result2 += M4(0.009914222, -0.07647258, 0.046333775, 0.012126788, 0.011485314, 0.040700383, 0.040509805, 0.032452855, 0.0016353399, 0.0066405605, -0.048618644, 0.05588207, 0.052582573, 0.04324762, -0.02102977, 0.012812286) * inp_3_1_0;
    result2 += M4(0.0024391934, -0.07061346, 0.07278805, 0.042560805, -0.009114852, 0.07030651, -0.13481563, 0.034797918, 0.004005042, -0.016904559, 0.2303223, 0.13343991, -0.008810747, -0.033420313, 0.24890395, -0.012489274) * inp_3_2_0;
    result2 += M4(0.008590338, -0.014618119, 0.028684296, 0.07650646, 0.046684347, -0.1091205, 0.039364185, 0.029938092, 0.040640548, -0.012956358, 0.029327497, 0.009057106, -0.013917363, -0.043999724, -0.0498387, 0.05012906) * inp_3_0_1;
    result2 += M4(-0.1974335, -0.049628735, 0.2777241, -0.03846609, 0.038730383, 0.023843434, -0.05482747, 0.1530448, 0.0903587, 0.052874308, 0.048452158, -0.2624268, 0.109955676, 0.02395524, 0.16837047, 0.113309875) * inp_3_1_1;
    result2 += M4(0.0017512427, -0.0726838, -0.16890801, -0.022969306, 0.058165316, 0.009444948, -0.19147271, 0.043883104, 0.10347944, 0.045096718, -0.09659254, 0.12877494, 0.011275446, 0.057345428, -0.33564228, 0.012879128) * inp_3_2_1;
    result2 += M4(-0.03810711, -0.07975387, 0.007432597, 0.050077796, 0.0073054037, 0.07477966, -0.014308205, 0.021909885, -0.0060872333, 0.019237597, -0.0061561316, 0.034432426, 0.048930492, -0.08350411, 0.041713327, -0.0072095925) * inp_3_0_2;
    result2 += M4(0.08341285, -0.023388535, 0.08209904, -0.028145153, 0.1811923, -0.04058678, 0.041404497, 0.016894806, 0.07457993, 0.019613067, -0.024189262, 0.028601589, 0.01519645, 0.02145231, 0.101950906, 0.0421671) * inp_3_1_2;
    result2 += M4(0.01941344, 0.0026446867, 0.040613912, -0.018073507, 0.040999625, -0.10878448, 0.035008416, 0.0123136835, -0.10639965, 0.00078960136, -0.029373704, -0.028475134, -0.03270961, 0.08032266, 0.0790884, 0.048216216) * inp_3_2_2;
    result3 += M4(-0.055548444, 0.16531338, -0.061069716, -0.04932311, 0.021786273, -0.043773398, -0.016978819, 0.045566622, 0.03865166, -0.019770581, 0.044330172, -0.057344835, 0.035687182, -0.05456501, 0.037091408, -0.26473954) * inp_3_0_0;
    result3 += M4(0.049086526, -0.04189241, -0.10415136, -0.0640129, 0.020166662, 0.05440657, -0.087989934, -0.082117595, 0.16187179, -0.36727858, 0.3238136, -0.058906913, -0.028779095, 0.2512138, 0.18030523, 0.15621299) * inp_3_1_0;
    result3 += M4(0.055410594, 0.007930235, 0.05635639, 0.05358522, 0.018404959, 0.090720676, 0.012031379, -0.0071683335, 0.038483486, -0.12200327, 0.13467422, 0.018097512, -0.018070081, 0.27478957, -0.06862149, -0.030697605) * inp_3_2_0;
    result3 += M4(-0.0735177, 0.19842295, -0.21804634, -0.027703077, 0.004049602, -0.007556315, 0.055756215, -0.12662387, 0.10919151, -0.037192702, -0.05688899, -0.11915072, -0.066570714, 0.23515111, -0.028091066, -0.17988172) * inp_3_0_1;
    result3 += M4(-0.0936367, -0.11095617, -0.50081724, -0.12611453, 0.029914351, -0.54624486, -0.09298842, 0.07054472, 0.21778823, -0.20655315, 0.27403274, 0.08370352, -0.03106589, -0.04802105, 0.20570345, 0.11179417) * inp_3_1_1;
    result3 += M4(-0.024720313, -0.21746357, 0.0024001407, -0.009772372, 0.014074159, 0.07046085, -0.061171733, 0.029511223, 0.09117172, -0.18327993, 0.24614727, 0.07429494, -0.069997095, -0.057021685, 0.014322804, -0.031206898) * inp_3_2_1;
    result3 += M4(-0.0011939283, 0.020945206, -0.0777171, -0.14344478, -0.011129141, 0.085789606, -0.006053109, -0.08707142, -0.015753895, 0.01927023, -0.04451304, -0.0073098387, -0.019581042, -0.18396571, -0.19686516, -0.1968613) * inp_3_0_2;
    result3 += M4(0.012654672, 0.13703695, -0.02005782, 0.033062834, 0.020615233, -0.04649178, 0.060606014, 0.060482156, 0.036387015, -0.16907316, -0.022868417, 0.06693522, -0.007987493, -0.09968098, 0.10196262, -0.07395679) * inp_3_1_2;
    result3 += M4(0.01643773, -0.061117236, -0.0096812155, 0.023784809, 0.014268287, 0.03402514, -0.03210267, 0.034324184, -0.0067428215, -0.091837846, -0.013387421, -0.024569409, 0.009538379, 0.20291288, -0.04167737, -0.01971835) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.0033806139, -0.0021584022, 0.012983637, -0.012334375);
    V4 result1 = V4(0.0064368206, 0.0056167217, -0.004964313, -0.011160816);
    V4 result2 = V4(0.011613765, 0.00661784, 0.008898799, -0.001985791);
    V4 result3 = V4(-0.0053765457, 1.7584267e-05, 0.03305307, -0.02209339);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.21017762, -0.3061241, -0.24904561, 0.080862574, 0.015479426, 0.040646054, 0.061080422, -0.05729239, 0.10483313, -0.019732622, -0.16356114, 0.0979757, -0.14513198, -0.01942128, 0.13872243, -0.09326114) * inp_0_0_0;
    result0 += M4(-0.44693482, -0.95750177, -0.08553537, -0.3379285, 0.05703733, 0.03534527, 0.09241122, -0.09064914, -0.044716466, -0.05251517, 0.023176748, -0.003069953, -0.049894568, 0.03803153, 0.007831847, 0.02755266) * inp_0_1_0;
    result0 += M4(0.59180695, -0.31268042, -0.5462871, -0.34717026, 0.21463846, 0.14067079, 0.1665542, -0.21224661, -0.012677252, -0.08285744, -0.038087856, 0.024587957, 0.041113295, 0.061035633, 0.022344027, 0.0101950085) * inp_0_2_0;
    result0 += M4(-0.012522336, 0.065080404, 0.12444804, 0.089361444, 0.013064364, 0.14619875, 0.11526923, -0.0122256195, -0.06841896, -0.09014812, 0.013216752, -0.073926106, 0.05988936, 0.035694882, -0.08408579, 0.020170951) * inp_0_0_1;
    result0 += M4(0.12229525, 0.12327806, 0.17811221, 0.25297925, 0.10386445, 0.15382712, 0.44823954, 0.17710786, 0.28812817, -0.628475, -0.026367165, -0.13920139, -0.53025484, 0.6196348, -0.13081697, 0.021052904) * inp_0_1_1;
    result0 += M4(0.11603606, -0.06410486, -0.12615213, 0.05234318, -0.2141921, 0.30144414, -0.0668857, 0.009353189, -0.19256228, -0.109920405, 0.021178164, 0.07494981, 0.18423483, 0.17056951, 0.0021807074, -0.10502393) * inp_0_2_1;
    result0 += M4(0.0119748, 0.004814125, 0.0062571075, -0.014778384, -0.012905082, 0.06938173, 0.038159925, -0.061888248, -0.052252788, -0.063527614, 0.103592, 0.01512283, -0.044285048, 0.007019742, -0.114187635, -0.03685422) * inp_0_0_2;
    result0 += M4(0.1358831, -0.11800546, 0.2429821, 0.032059934, 0.13953646, 0.08541189, -0.19583756, -0.04082226, -0.015310112, -0.033523723, 0.054842103, 0.06289519, -0.2765864, 0.0667015, -0.39608204, -0.025118645) * inp_0_1_2;
    result0 += M4(-0.033964407, 0.014382676, -0.092770725, -0.011568741, -0.11343994, 0.13338222, 0.014694748, -0.0019086392, 0.12721954, -0.008019738, -0.034884278, 0.015315297, -0.25593355, 0.03913176, -0.08700472, -0.023673993) * inp_0_2_2;
    result1 += M4(0.45031354, 0.12982744, -0.036414694, 0.38840812, -0.047224507, -0.03790363, -0.00095450296, 0.03251322, 0.051632877, 0.11714785, -0.06563392, 0.06519171, -0.050848648, -0.16774096, 0.111967646, 0.00845249) * inp_0_0_0;
    result1 += M4(-0.28473675, -0.39507142, -0.111420445, 1.6373806, -0.22787778, -0.07765388, -0.12687854, 0.030950041, 0.041828983, 0.0102695655, -0.05861106, -0.026996162, 0.04657258, -0.022041233, 0.029387694, 0.07769041) * inp_0_1_0;
    result1 += M4(-0.7407751, -0.30100027, 0.6044693, 0.44760898, -0.23299313, -0.09667309, -0.37518692, -0.022989977, 0.028445559, -0.01738391, -0.04138547, 0.084261164, -0.03249348, -0.0013460811, -0.012236007, 0.010073619) * inp_0_2_0;
    result1 += M4(0.08951203, -0.0038378944, 0.05543694, 0.055129066, -0.11186184, -0.0055004917, -0.026710413, -0.13693717, 0.06967292, -0.014100677, 0.10220501, 0.039554223, -0.019444684, -0.0639654, -0.17265628, 0.03110495) * inp_0_0_1;
    result1 += M4(0.2227994, 0.0026803017, -0.26304114, -0.07655307, -0.036649827, -0.005956457, 0.083225384, 0.0009600611, 0.4424664, 0.14815892, 0.06187732, -0.08835713, -0.32999548, -0.2040656, -0.054425195, 0.17821777) * inp_0_1_1;
    result1 += M4(0.07017278, -0.2019409, 0.11627691, 0.15546283, -0.44960627, -0.10592334, 0.07132433, -0.2942825, 0.011842228, -0.107867114, -0.2204172, 0.018088516, 0.024352279, 0.042617794, 0.15840754, 0.13168032) * inp_0_2_1;
    result1 += M4(-0.006716196, 0.017035693, -0.011077934, -0.014354619, -0.08069886, -0.017358726, -0.0133790625, -0.09240344, 0.008382718, 0.072448924, 0.16229002, -0.022067644, 0.06921387, -0.13768402, -0.11142018, -0.06193631) * inp_0_0_2;
    result1 += M4(-0.0060405303, 0.05126206, 0.12551175, 0.23221831, -0.14806655, -0.15522803, -0.31961632, -0.20823927, 0.031113718, -0.1944058, -0.05697906, -0.018851636, 0.0429183, 0.008462217, -0.02816468, -0.22427726) * inp_0_1_2;
    result1 += M4(0.046987236, -0.025965476, -0.050077047, -0.04924879, -0.13051887, -0.07563177, 0.10223469, -0.2332971, -0.05869361, 0.006423236, 0.06456183, -0.073150486, 0.14437403, -0.030822229, -0.10175624, -0.1341544) * inp_0_2_2;
    result2 += M4(0.24185699, -0.031522933, -0.35473004, 0.10816294, -0.008038224, 0.027975423, -0.04044042, 0.03431098, 0.018122178, -0.049842585, 0.04421902, -0.030206604, 0.019399773, 0.039835818, -0.1803857, 0.042443912) * inp_0_0_0;
    result2 += M4(-0.42961046, 0.35037377, -1.2938447, -0.4265356, -0.32955396, 0.021843448, 0.12023467, 0.008651532, 0.055798445, 0.010233936, -0.08928367, -0.021665404, -0.041664388, 0.035390873, 0.13420177, 0.06380891) * inp_0_1_0;
    result2 += M4(-0.5674993, 0.03651712, -0.6713581, -0.14846523, -0.3851226, -0.0250781, 0.15972818, 0.0066190744, 0.045309816, 0.005357273, 0.042213723, 0.016301783, -0.0470387, -0.008317021, -0.049489196, -0.0013787184) * inp_0_2_0;
    result2 += M4(0.07229866, -0.046182796, 0.04177321, 0.024620397, -0.11302379, 0.003748945, 0.05570754, -0.011631769, 0.17441516, -0.033231337, 0.04195821, 0.00016525129, -0.15977886, -0.017282622, -0.12911065, 0.016275967) * inp_0_0_1;
    result2 += M4(-0.047078703, -0.0893675, -0.19983259, -0.16748442, -0.356772, -0.14483507, 0.07433085, 0.34360892, 0.43668312, -0.10357459, -0.14636336, -0.16037515, -0.52811396, 0.22341602, -0.0128965825, 0.34168708) * inp_0_1_1;
    result2 += M4(-0.13192053, 0.0029412543, 0.019224035, 0.028448088, -0.24502353, 0.024472876, -0.24219842, -0.04541411, 0.0486325, 0.076272696, 0.06479134, -0.06565655, -0.108970374, -0.108161315, -0.05312363, 0.2079419) * inp_0_2_1;
    result2 += M4(0.01768155, 0.0029984268, 0.008797835, 0.019233102, -0.05459517, -0.018104395, -0.019191165, -0.028784947, 0.008409017, -0.036207438, 0.027947854, 0.1330573, -0.012670626, -0.035253458, -0.07978372, -0.13087161) * inp_0_0_2;
    result2 += M4(0.042628776, 0.10628651, 0.021987684, -0.121015675, -0.1842202, -0.017631177, 0.09966725, -0.147396, 0.11317735, 0.041936003, 0.059899423, 0.028288756, -0.10795264, -0.11235717, -0.21789202, -0.10062456) * inp_0_1_2;
    result2 += M4(-0.0032247296, -0.016456453, -0.06566003, -0.025910717, -0.13267918, -0.0466548, 0.21010345, 0.046059795, -0.08576944, 0.023040129, -0.097789325, -0.084948875, 0.10129562, -0.046921764, 0.054637313, 0.18323798) * inp_0_2_2;
    result3 += M4(-0.020312421, 0.45486027, -0.15121153, -0.20880473, -0.007948151, 0.08314555, -0.0035484605, -0.04784652, 0.03837811, 0.030798862, -0.048155002, 0.047278658, -0.0010772943, -0.07522999, 0.05652872, 0.03424188) * inp_0_0_0;
    result3 += M4(-0.21105921, 0.8609298, 0.1449741, -0.25320035, 0.104546994, 0.18816921, -0.047223877, -0.14130518, 0.16589819, -0.032478064, 0.05765708, -0.020857349, -0.274072, -0.014025492, -0.09606096, 0.06398343) * inp_0_1_0;
    result3 += M4(-0.017476905, 0.42272714, 0.23075357, -0.10251007, -0.19403522, 0.065192066, 0.08916562, -0.1547437, 0.07223097, 0.08155762, -0.013170197, -0.019475438, -0.06411375, 0.016107304, 0.056172937, 0.019678064) * inp_0_2_0;
    result3 += M4(-0.0329308, 0.0023807965, -0.046861824, 0.1025661, -0.000270173, 0.14809616, -0.010521833, -0.046963908, 0.056952655, -0.20892079, -0.020867666, -0.014068331, -0.06269234, 0.18812443, 0.030566964, 0.04183291) * inp_0_0_1;
    result3 += M4(0.14807053, -0.13147232, -0.24044836, -0.034739368, -0.17780541, 0.62380743, -0.033566616, -0.10553199, 0.41193748, 0.123176135, -0.04043037, 0.21594878, -0.53487706, -0.07409791, 0.079360306, -0.109682) * inp_0_1_1;
    result3 += M4(-0.14637372, 0.07461433, -0.0019894454, 0.085053675, 0.23651813, 0.3140239, -0.09108039, -0.23841058, 0.12507185, 0.059832465, -0.09020584, 0.22109208, -0.27142248, -0.15146932, 0.16669327, -0.16280812) * inp_0_2_1;
    result3 += M4(-0.0065100393, 0.05595693, 0.012781478, -0.009133571, 0.009304874, 0.13089901, -0.020318564, -0.06592992, 0.09241905, 0.076272294, 0.011427526, 0.0428018, -0.049895566, -0.06230376, -0.03238717, -0.035548985) * inp_0_0_2;
    result3 += M4(0.0025037716, -0.042613875, -0.039309837, 0.07228094, -0.06901825, 0.21405758, -0.023204777, -0.04198792, 0.2025848, -0.25410604, -0.07587848, 0.10502212, -0.08091874, 0.20258957, 0.10428551, -0.092396095) * inp_0_1_2;
    result3 += M4(-0.06822852, -0.019290779, 0.0034177823, -0.03718391, 0.14558356, 0.23297964, -0.054562487, -0.025611745, -0.016624788, -0.030824995, -0.0023384015, 0.062974915, 0.00014569958, -0.007866796, -0.018040461, -0.07918303) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.020157274, 0.08816227, 0.0286756, -0.03558253, 0.045179177, 0.02232241, -0.07695786, 0.06707362, 0.036293373, -0.10846355, -0.04827942, 0.05175629, 0.05651107, 0.0473078, -0.02784083, -0.018053891) * inp_1_0_0;
    result0 += M4(0.1538781, 0.08275537, -0.13540271, -0.02089483, -0.15696649, 0.3351098, 0.30042472, 0.1615247, -0.1437579, -0.1977565, 0.09400982, 0.053699624, 0.13979553, 0.04923409, -0.24515244, 0.04196855) * inp_1_1_0;
    result0 += M4(0.1265464, 0.13260572, 0.083238386, 0.06616415, 0.113076955, 0.1452447, 0.029221173, -0.07327261, -0.16205433, -0.15994534, -0.16609336, 0.07674555, 0.028502783, -0.025041625, 0.012639672, -0.0011306247) * inp_1_2_0;
    result0 += M4(-0.019628584, 0.04434908, 0.117745094, 0.028418789, -0.0017623707, 0.06126629, -0.00977674, 0.0081127025, 0.016427225, -0.019111106, -0.0792251, -0.038333356, -0.09515473, -0.10762107, -0.029953681, -0.09074524) * inp_1_0_1;
    result0 += M4(0.33522612, 0.22279269, 0.031370446, 0.07014284, 0.34454563, 0.044255447, 0.34272337, 0.021410339, 0.33590743, -0.2844525, 0.3301048, -0.07332902, 0.6218975, -0.44806623, -0.05278164, 0.21436228) * inp_1_1_1;
    result0 += M4(0.030630637, 0.10502861, 0.014665901, -0.08238074, -0.06623276, 0.042072926, 0.07447711, -0.07910861, -0.01562555, -0.030241158, 0.032259412, 0.040937215, -0.07262247, -0.055724718, 0.05558525, -0.022326875) * inp_1_2_1;
    result0 += M4(0.015426318, -0.0043451274, 0.0032708242, -0.043151528, -0.016658124, 0.056514714, -0.006692452, -0.027772065, -0.048126202, 0.010340095, -0.0071736467, 0.0033811836, -0.0072990526, -0.05110655, 0.21877164, 0.0056058513) * inp_1_0_2;
    result0 += M4(0.1523683, 0.004224247, 0.1529738, 0.085925415, 0.20190877, -0.059546266, 0.037551373, 0.047367364, 0.05628726, 0.0774757, 0.11385478, -0.023303425, -0.023483098, -0.20916194, 0.039335202, -0.007261471) * inp_1_1_2;
    result0 += M4(0.048310544, -0.03587613, -0.055001616, -0.013856024, 0.0016895881, 0.020619754, 0.07229941, -0.009562031, -0.061589967, -0.0076199486, -0.041505195, -0.014484469, 0.022337336, 0.028600099, -0.10362454, -0.021186192) * inp_1_2_2;
    result1 += M4(-0.10770173, 0.0039022106, -0.05012568, -0.062420405, 0.19185136, 0.14500485, -0.1997259, 0.02094968, 0.2184837, 0.075574085, -0.06758499, 0.011098984, -0.06974023, 0.08217793, -0.11927983, 0.011195032) * inp_1_0_0;
    result1 += M4(-0.045577977, 0.015091364, 0.05656443, -0.18131006, -0.01251096, -0.08837651, -0.17566238, -0.036124177, 0.19050471, 0.221285, -0.19857498, -0.076526545, -0.07390046, 0.01803735, 0.30087328, -0.09684035) * inp_1_1_0;
    result1 += M4(-0.090251386, -0.0005176527, -0.063330635, -0.17406322, -0.06785647, 0.10940441, 0.17939016, -0.080300435, 0.13602315, 0.08621731, 0.21997863, -0.033120874, 0.02564128, 0.031394303, -0.0028594874, -0.07629212) * inp_1_2_0;
    result1 += M4(-0.17463918, 0.1081456, 0.1367191, 0.07030146, -0.015248162, 0.07192228, 0.040397972, -0.05245029, 0.030530006, 0.047112778, -0.03610676, 0.010483494, -0.06066103, -0.052260716, 0.16161557, -0.026258072) * inp_1_0_1;
    result1 += M4(-0.3297923, -0.08346218, -0.11371176, 0.35338137, 0.0038110781, 0.16198552, -0.19144656, 0.04997925, 0.12987451, 0.36406875, 0.34626356, 0.28788024, -0.12276751, 0.337622, 0.2672162, -0.2524039) * inp_1_1_1;
    result1 += M4(-0.09499476, -0.22222173, -0.094582245, -0.104241334, 0.05942605, 0.018737972, 0.113288894, 0.2942808, 0.0858118, 0.058170564, 0.120051734, 0.20556329, -0.04966312, -0.24262264, -0.24356689, 0.099515624) * inp_1_2_1;
    result1 += M4(-0.100612566, -0.03379754, -0.038064126, -0.021424916, -0.04656013, -0.027453791, 0.0031874003, -0.070601925, -0.028923903, 0.002593306, 0.044829372, -0.015596005, 0.036799517, 0.06591645, 0.10152717, 0.04723719) * inp_1_0_2;
    result1 += M4(-0.030657316, -0.041862283, 0.0039592376, 0.08218667, -0.024073288, 0.16074628, 0.02520815, -0.027678613, 0.06373099, 0.1124356, -0.075758144, -0.13418041, -0.21990286, -0.17268273, 0.09123002, 0.061577406) * inp_1_1_2;
    result1 += M4(-0.07085234, -0.050733253, 0.03622778, -0.0035104211, 0.04671811, 0.016417202, 0.008858441, 0.19825266, 0.057891265, -0.020691155, -0.01949305, 0.027339095, -0.0020092449, -0.033330087, -0.06533344, -0.1956704) * inp_1_2_2;
    result2 += M4(-0.07088176, 0.07282857, 0.1185904, -0.04656711, 0.1924738, 0.011589486, 0.02619667, -0.08014948, 0.12583008, -0.06403717, 0.08015032, 0.042230934, -0.025261296, -0.044387754, 0.039219186, -0.07652648) * inp_1_0_0;
    result2 += M4(0.098414086, -0.11381596, -0.0394758, 0.04876895, -0.2734289, 0.25408816, -0.00869955, -0.09358792, 0.18123907, -0.089386016, -0.020913336, -0.28691784, 0.06507228, -0.08942617, -0.0838762, -0.015508263) * inp_1_1_0;
    result2 += M4(-0.18459795, -0.053263318, 0.048574626, -0.010015835, -0.034277663, -0.010909214, 0.082068205, -0.043881536, 0.19151129, 0.08939485, 0.0072391722, -0.108110294, 0.059205722, 0.008907552, -0.06323627, -0.04138339) * inp_1_2_0;
    result2 += M4(-0.03804868, 0.08505119, 0.058664244, 0.16687077, 0.108918376, -0.01179564, 0.047789846, 0.12383226, 0.10667429, -0.01644085, 0.0040682824, -0.08225094, 0.06425107, -0.037097197, 0.0029231056, 0.015995387) * inp_1_0_1;
    result2 += M4(0.22904238, -0.023689838, 0.14374149, 0.0008547992, -0.12382057, 0.12764034, 0.033965304, -0.12981197, -0.14536592, 0.11095729, -0.13942234, -0.07724213, 0.42494106, -0.11687412, 0.0012460573, -0.2348151) * inp_1_1_1;
    result2 += M4(-0.16118734, -0.08606128, -0.008343262, -0.058887318, 0.066956006, -0.030605987, 0.02583061, 0.013320052, 0.040537093, -0.020711208, 0.02898748, 0.021053994, -0.12374472, -0.015794642, 0.107564464, 0.08365086) * inp_1_2_1;
    result2 += M4(-0.046883997, -0.024371322, 0.09092362, 0.014548068, -0.047137074, -0.0044799307, 0.0012737041, -0.06242377, 0.005021333, 0.0031589, -0.00028422038, 0.014560332, 0.003981431, -0.0051499475, 0.052102424, 0.086031035) * inp_1_0_2;
    result2 += M4(-0.02122011, 0.047606353, 0.064810835, -0.098927565, -0.005453212, 0.045772575, 0.111424886, 0.12872508, -0.045347378, -0.025442643, 0.029443186, 0.043575764, 0.03920846, 0.10856361, 0.15022442, -0.2501464) * inp_1_1_2;
    result2 += M4(-0.031471413, 0.033810504, -0.044560287, -0.03652155, 0.06418761, -0.018181583, -0.07095398, 0.056074433, 0.049055524, -0.008171205, 0.032813087, 0.0623122, -0.023730032, 0.043065052, -0.057963636, -0.09506608) * inp_1_2_2;
    result3 += M4(0.03193115, -0.056016136, 0.027256224, -0.046939425, -0.08449635, 0.042931322, -0.08750641, -0.029883053, -0.15382488, -0.047768287, -0.015337819, 0.07351116, 0.06971998, 0.06383748, 0.032171033, -0.031773407) * inp_1_0_0;
    result3 += M4(0.27095667, 0.007747951, -0.004024049, -0.107146986, -0.519254, 0.16590895, 0.042633887, 0.079342715, -0.31884265, 0.18663946, -0.11854163, 0.08621439, 0.3222229, -0.09649091, 0.0029689637, -0.043976184) * inp_1_1_0;
    result3 += M4(-0.06562502, 0.0015926067, -0.0076620793, -0.0061216406, -0.34657797, -0.1021389, -0.07524726, -0.22154097, -0.15746024, -0.025134295, -0.09930243, 0.16261971, 0.029505845, -0.023805479, 0.0038707133, -0.023150515) * inp_1_2_0;
    result3 += M4(0.16600673, 0.05232562, 0.034710415, -0.024656707, -0.107721806, -0.026829835, -0.025364045, -0.051526792, -0.13191696, -0.24165897, 0.056050334, 0.07214405, 0.09894235, -0.27821484, 0.044321828, -0.033473603) * inp_1_0_1;
    result3 += M4(0.6147195, -0.26357883, -0.05272817, -0.13023701, -0.73664606, 0.12374294, -0.15425277, 0.042731766, -0.40585664, -0.075607985, 0.1950398, 0.19579308, 0.715951, -0.13526648, 0.06954794, -0.024978882) * inp_1_1_1;
    result3 += M4(0.43593684, 0.10773791, 0.065407395, -0.08784526, -0.0034359794, 0.107596725, 0.05078705, -0.22034858, -0.12421097, -0.016452735, 0.010535116, -0.013678508, 0.28757837, 0.15857233, 0.09461231, 0.079381004) * inp_1_2_1;
    result3 += M4(0.019843964, -0.050425556, 0.012215159, -0.013204882, -0.032358974, 0.057098385, -0.02755102, -0.044057786, -0.011241696, 0.028195092, -0.008145369, -0.009842569, 0.11374545, 0.11383536, 0.01288446, -0.018463207) * inp_1_0_2;
    result3 += M4(0.10983538, 0.046290092, -0.008029756, 0.04798828, -0.30069977, -0.10274237, -0.029526541, 0.063700475, -0.16731328, 0.15966964, -0.044496354, -0.09282192, 0.524266, -0.12789115, 0.04846662, 0.110069595) * inp_1_1_2;
    result3 += M4(0.03585378, 0.045657497, 0.0030161391, -0.022844752, 0.012127728, 0.020029843, 0.024927476, -0.013630179, -0.054500762, -0.026328262, -0.006103864, -0.02432602, -0.068699785, -0.052500322, -0.037313584, 0.027666157) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.022459384, -0.061018784, -0.03430126, 0.07429068, 0.009791741, 0.08706097, -0.08657386, -0.036259122, -0.04413909, 0.096863896, 0.18021952, 0.011002344, 0.021946818, 0.055078242, 0.050558306, -0.040655423) * inp_2_0_0;
    result0 += M4(-0.02812594, -0.01797247, 0.052085944, 0.03714877, -0.027353147, -0.00822571, -0.039108142, -0.06105216, -0.17503028, -0.034498125, -0.04288723, 0.15947622, 0.062981024, 0.026877794, -0.092654504, 0.065752715) * inp_2_1_0;
    result0 += M4(-0.052295096, 0.00255383, 0.03381972, 0.03576327, -0.04550813, 0.040199507, 0.05077797, 0.0794135, 0.0048184805, -0.022756252, -0.011315514, -0.028992688, 0.2101434, 0.040177654, -0.05255958, -0.02210183) * inp_2_2_0;
    result0 += M4(-0.0710791, 0.011855613, 0.080215886, -0.009707277, -0.025677938, -0.010688988, -0.016239177, 0.012671077, -0.67043984, 0.15526728, 0.12607272, -0.6177293, 0.10304515, -0.12046072, -0.048513066, -0.05399085) * inp_2_0_1;
    result0 += M4(0.049381237, -0.22657458, 0.10605324, 0.016979698, -0.031906255, -0.0072885724, 0.021159058, 0.010736331, -0.06295447, 0.15481792, -0.108539015, 0.21559149, 0.02782787, 0.29859254, -0.14442658, 0.03166963) * inp_2_1_1;
    result0 += M4(0.0009663401, -0.059971303, 0.037475593, -0.04287129, 0.041763455, 0.020319428, -0.07493366, 0.008335784, -0.039022107, 0.021692704, 0.08193718, 0.027286299, -0.051935546, 0.20357427, 0.19641976, -0.0042210687) * inp_2_2_1;
    result0 += M4(-0.021446267, 0.043156967, -0.03670359, 0.010911144, 0.0030398099, -0.014829956, 0.0768755, 0.07119834, -0.6898009, 0.031921152, -0.7396681, -0.27257016, -0.023077598, 0.009841362, 0.008866418, 0.07325547) * inp_2_0_2;
    result0 += M4(-0.08359174, 0.003859589, -0.038727928, -0.029113604, -0.056366187, 0.040136565, 0.04037767, -0.050617296, 0.15252423, -0.09890932, 0.056948833, 0.14153479, 0.21350606, -0.034902666, 0.18503176, 0.026812984) * inp_2_1_2;
    result0 += M4(-0.057746176, 0.03298564, -0.09311457, -0.0065766308, 0.07471988, 0.02961424, -0.017628789, -0.02613959, 0.03323896, -0.0023043882, -0.063749544, 0.029314905, 0.15716776, -0.012335587, 0.044292193, 0.010888032) * inp_2_2_2;
    result1 += M4(0.07858533, 0.037725244, -0.04628341, 0.0028720885, 0.062538035, 0.0791141, 0.016218098, -0.041334387, 0.0095739765, -0.08866116, 0.02909816, -0.44859567, -0.13886735, -0.09017209, -0.043660928, -0.1837644) * inp_2_0_0;
    result1 += M4(0.039663017, 0.10036946, -0.1893653, -0.05414223, -0.060941756, 0.0062949294, -0.015191743, -0.04086274, 0.073692344, 0.08198452, -0.02909452, 0.2322648, -0.069264896, 0.028581616, 0.2123577, -0.22175317) * inp_2_1_0;
    result1 += M4(0.06776331, 0.036404938, -0.05429327, -0.037270416, 0.0760438, -0.08448592, -0.027195036, 0.081349626, -0.019691626, -0.023460193, 0.015171613, 0.08261586, -0.056654736, 0.007570876, 0.049731173, 0.08287172) * inp_2_2_0;
    result1 += M4(0.06550687, 0.02530551, 0.02791996, -0.010498568, 0.0034149, 0.082011715, 0.004879741, -0.08083805, 0.1072351, -0.3414987, 0.08445643, -0.91776747, 0.06047363, 0.09611691, -0.013052693, 0.38068864) * inp_2_0_1;
    result1 += M4(0.09806601, -0.1938126, 0.07550988, -0.23518072, -0.081238374, -0.05234889, 0.0072413953, -0.028252447, 0.035150785, 0.27810827, -0.2906837, -0.101525426, 0.06298308, 0.31211632, -0.024923127, 0.76321995) * inp_2_1_1;
    result1 += M4(-0.0469429, 0.05878202, -0.0647972, 0.03517594, -0.04571963, -0.09135264, -0.079950325, 0.07629226, 0.057769578, 0.035193343, -0.025665868, 0.08778748, -0.1523644, 0.08446349, -0.18965581, 0.010255467) * inp_2_2_1;
    result1 += M4(-0.06314963, 0.013356355, 0.015488372, -0.04310732, 0.039096177, -0.010540711, -0.09128916, 0.008898016, -0.21225818, -0.4397091, -0.1341371, -1.229153, 0.05264943, -0.10984872, -0.020684503, -0.03476086) * inp_2_0_2;
    result1 += M4(0.16169517, -0.1163791, -0.08669026, -0.21091641, 0.010392534, -0.06722905, 0.044028692, -0.064058855, 0.042721145, 0.100243844, 0.0066079986, -0.018924635, -0.17626081, 0.2924504, 0.13537124, 0.29099786) * inp_2_1_2;
    result1 += M4(-0.024827015, 0.025486639, -0.0061145676, -0.06402634, -0.04491085, -0.0335415, 0.0047166767, -0.039182536, -0.02652686, -0.042507924, 0.051284876, -0.07786056, -0.24575469, -0.004141122, 0.16838716, 0.21167973) * inp_2_2_2;
    result2 += M4(0.028106993, -0.050810885, 0.02812414, 0.065327704, -0.025813498, 0.0021087285, 0.0620251, -0.008260772, 0.03762746, -0.1232513, 0.34776932, 0.04487584, -0.22162612, -0.01661881, 0.13570324, -0.062773705) * inp_2_0_0;
    result2 += M4(0.16035777, 0.043827422, 0.09412523, -0.02478501, -0.088403404, -0.051022515, 0.0701765, 0.06686401, 0.0058086305, 0.059319038, 0.11810518, -0.039068, 0.0884477, 0.019652838, -0.0007662457, -0.11779928) * inp_2_1_0;
    result2 += M4(0.0293101, -0.0115525145, 0.06571928, 0.039472837, -0.025279313, -0.07585453, 0.063082896, 0.086829126, 0.007589694, 0.009618478, -0.106228486, 0.032791648, -0.12115048, -0.053013697, -0.08146006, 0.09262153) * inp_2_2_0;
    result2 += M4(0.094867185, 0.040160146, 0.015998777, 0.021379678, 0.081756406, -0.029920187, -0.04638753, -0.043904714, 0.095975794, -0.3045041, 0.37170312, -0.03493273, -0.04407411, 0.06796691, -0.027452214, 0.07865247) * inp_2_0_1;
    result2 += M4(-0.15235263, -0.032268357, 0.07372816, -0.16406688, 0.053578753, 0.027031776, 0.09445028, 0.08201202, -0.13586779, -0.08733167, -0.3495818, 0.3430504, 0.50784206, 0.120480575, -0.13566379, -0.111455664) * inp_2_1_1;
    result2 += M4(0.06156498, 0.07142658, 0.04573986, 0.053125646, -0.03118578, 0.0800035, -0.087338775, -0.081618056, 0.033668134, -0.00013522284, 0.038764454, -0.014966249, 0.056889605, 0.0135266, 0.1051359, -0.18120489) * inp_2_2_1;
    result2 += M4(0.016949246, 0.023260713, 0.053352445, 0.03626195, 0.02447764, -0.055840712, 0.0026796272, 0.026987812, -0.19761828, -0.32564744, 0.0669725, 0.25704762, -0.025501523, -0.01341014, -0.01441879, 0.055367954) * inp_2_0_2;
    result2 += M4(0.12125904, -0.0037252374, -0.021432655, 0.13997178, -0.056835216, 0.0847671, -0.040584788, 0.042673644, -0.19357367, -0.0011080897, 0.08013083, -0.31258327, -0.01658411, 0.0062649567, 0.13640766, 0.2004799) * inp_2_1_2;
    result2 += M4(-0.01651171, -0.015604911, -0.03395265, 0.037743293, 0.08290894, -0.019051705, 0.040906895, -0.055128288, -0.040541764, -0.005026997, 0.022390071, -0.0004277438, -0.117141, 0.007888066, -0.050339457, -0.16183814) * inp_2_2_2;
    result3 += M4(0.036081858, 0.011528378, 0.036879174, 0.08428723, 0.07747021, -0.07859299, -0.016504535, -0.08252184, -0.24356247, 0.086024985, -0.029394815, 0.31517848, 0.0042880564, 0.04375086, -0.009998508, -0.03502152) * inp_2_0_0;
    result3 += M4(0.061110877, 0.020314418, 0.119681045, -0.01963162, 0.08472974, -0.08284561, -0.058568418, 0.04163657, -0.060105372, 0.0020943377, -0.06101667, 0.14825355, 0.08757754, -0.08840109, 0.13835824, -0.037673455) * inp_2_1_0;
    result3 += M4(0.048790246, -0.067035764, -0.011333427, 0.025364341, -0.023334058, -0.050030652, 0.09673713, 0.048604604, 0.005348276, 0.013382449, 0.052377965, -0.032562718, -0.03982215, -0.0034677263, 0.06787374, -0.06425576) * inp_2_2_0;
    result3 += M4(0.030867124, -0.0077948966, 0.052916013, -0.048398957, -0.077702, -0.005086312, -0.034770947, 0.07235225, -0.76413524, -0.49616987, 0.045313243, 0.32122183, -0.0006682756, 0.06784516, 0.039045997, -0.101777256) * inp_2_0_1;
    result3 += M4(-0.104022436, -0.11595765, -0.001259199, 0.1673159, -0.08095, 0.01714977, 0.047932178, 0.040780194, 0.19471353, -0.08136258, -0.2490293, 0.1839646, 0.17120855, 0.23354606, -0.29364538, 0.14320274) * inp_2_1_1;
    result3 += M4(-0.12303071, 0.0409866, 0.048480205, 0.07084024, 0.091004044, 0.024273138, -0.010317998, 0.03882514, -0.025446033, -0.026487218, -0.037504476, 0.006106506, 0.06048115, 0.09196446, -0.06532694, -0.14096205) * inp_2_2_1;
    result3 += M4(-0.014227635, -0.049542204, -0.014406028, 0.0011938078, 0.022411775, -0.03740613, -0.053964134, -0.016919518, 0.13431168, 0.17081256, -0.09002567, -0.061401553, -0.01412464, -0.024183515, -0.068551995, 0.016264709) * inp_2_0_2;
    result3 += M4(0.020813951, -0.09887993, -0.016877385, -0.04878471, -0.032385193, -0.083952576, -0.073999785, -0.056234345, -0.025892982, -0.1160536, 0.033534408, 0.38301805, -0.16458975, -0.24513245, 0.10077245, 0.035922185) * inp_2_1_2;
    result3 += M4(-0.031100981, -0.051423308, -0.0056149596, -0.018220278, -0.043210957, -0.07480349, -0.06039121, 0.09902273, -0.01213257, 0.036117207, -0.020819452, 0.064077236, 0.11129102, 0.17827956, 0.0779515, 0.0063202577) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.09430139, 0.09000392, -0.12679079, 0.009595277, 0.15046854, -0.00536808, -0.15216848, 0.099583365, -0.020491524, 0.03503602, 0.0025081947, -0.045055285, 0.0028118128, -0.034538377, -0.054439496, 0.050822027) * inp_3_0_0;
    result0 += M4(-0.18248773, 0.0314782, 0.16317773, -0.00018850327, -0.26427767, -0.23257756, 0.22351044, 0.06593355, 0.1338451, 0.18227756, -0.05791628, 0.008003586, -0.13097416, -0.11885178, 0.12517796, 1.6005048e-06) * inp_3_1_0;
    result0 += M4(-0.049716596, 0.08628401, 0.10650131, -0.00097559404, -0.08973721, -0.1634311, -0.09006787, -0.030388763, 0.007023744, 0.11335295, 0.09182233, 0.032585923, 0.053843964, -0.0094860075, -0.059554968, 0.028089346) * inp_3_2_0;
    result0 += M4(-0.017407792, 0.1502454, 0.3119686, -0.021549257, 0.16248274, -0.22922628, 0.15332218, -0.06400313, -0.1713977, 0.21543364, -0.17790264, 6.985187e-05, -0.08109657, -0.009608723, 0.0569132, 0.037742797) * inp_3_0_1;
    result0 += M4(0.26439634, -0.5728996, 0.15573838, -0.00355747, -0.34434178, -0.6418376, -0.4643691, -0.25606167, 0.3638337, 0.51218873, 0.25551644, 0.19133452, -0.35607028, -0.11286311, -0.163198, 0.18891743) * inp_3_1_1;
    result0 += M4(-0.121897906, -0.1178714, -0.2582621, 0.056417048, -0.15685505, -0.054192215, 0.002218449, 0.0787053, 0.115461886, 0.045459453, -0.030956175, -0.056452263, -0.23077844, -0.68061626, -0.03557403, -0.237164) * inp_3_2_1;
    result0 += M4(-0.039258733, -0.029673107, -0.034956466, -0.09095565, -0.18312775, -0.21228577, 0.20017971, 0.088199176, 0.12500735, 0.08341174, -0.24013852, -0.044406287, -0.0124737695, -0.0066403705, -0.068182476, 0.004285432) * inp_3_0_2;
    result0 += M4(0.16004159, -0.05854666, 0.09648036, -0.016077014, -0.09627478, -0.14005043, -0.2249963, -0.006529891, 0.15348741, 0.0685008, 0.15980591, -0.023036866, -0.07724309, 0.029486615, 0.09371208, 0.019247856) * inp_3_1_2;
    result0 += M4(0.001999029, -0.026787525, 0.10857448, -0.0025562178, 0.1961066, -0.061671313, 0.16070794, 0.06707046, -0.07133063, 0.02588249, 0.049934287, -0.0075781723, 0.002017935, 0.10453931, -0.22265474, -0.033332113) * inp_3_2_2;
    result1 += M4(0.061784547, 0.14384928, -0.090223424, 0.04758869, 0.037833728, 0.054108966, -0.014273283, 0.17184079, -0.024924343, -0.0045357132, 0.009043368, -0.00027504755, 0.023113087, -0.04621169, 0.061950557, -0.059744753) * inp_3_0_0;
    result1 += M4(0.04751821, -0.12642248, -0.20488499, 0.013601878, 0.1763023, -0.029758438, -0.28005597, 0.117931895, 0.02905873, 0.087188184, 0.14137396, -0.0038195793, 0.16801313, -0.048558854, 0.2332702, 0.13906248) * inp_3_1_0;
    result1 += M4(-0.03539247, -0.032066714, -0.06391781, -0.1507236, 0.0955935, -0.072304696, -0.023121718, 0.14072606, 0.026873082, 0.11510704, -0.034299314, -0.08077306, 0.14836937, 0.17302248, 0.085748225, 0.117662035) * inp_3_2_0;
    result1 += M4(0.004713763, 0.03284668, 0.006764247, -0.29753006, 0.35623488, -0.007623508, -0.10522137, 0.02968516, -0.22166051, -0.046904966, 0.18378018, -0.05743749, 0.09546917, -0.020126358, 0.05595292, 0.04715415) * inp_3_0_1;
    result1 += M4(-0.16106877, -0.1812326, 0.0562371, -0.6102843, 0.7457648, 0.1773956, 0.23756993, 0.21898474, -0.65217555, -0.14154677, 0.08725296, -0.48362455, 0.48191682, -0.0009738881, -0.05092734, -0.86804456) * inp_3_1_1;
    result1 += M4(0.1211789, -0.061822273, 0.05682967, -0.31066972, -0.027935822, 0.062493812, -0.061056938, -0.08056086, -0.13624069, -0.059223622, 0.036557693, -0.038285196, 0.46262896, -0.30060014, -0.012283083, -0.091219805) * inp_3_2_1;
    result1 += M4(-0.15964517, 0.1349509, 0.0953573, -0.111864865, 0.25902528, 0.0010005124, 0.22324458, -0.08471934, -0.17788732, -0.062009126, -0.15568313, 0.22739881, 0.011564156, 0.02151239, -0.008576041, 0.0649959) * inp_3_0_2;
    result1 += M4(0.07454175, -0.036188807, 0.003249223, -0.054031596, 0.1061747, -0.08241582, -0.21290772, -0.016294897, -0.06502943, 0.14149313, 0.047143485, 0.33172992, 0.20569581, 0.117974624, 0.11741162, -0.031422835) * inp_3_1_2;
    result1 += M4(0.2347337, 0.15042996, -0.028202109, -0.022614894, -0.07405183, 0.026318688, 0.07569752, 0.15693213, 0.077008635, 0.0948411, -0.039619926, 0.07998351, -0.069138095, -0.27722177, -0.08954222, -0.01523595) * inp_3_2_2;
    result2 += M4(0.09620373, 0.021907404, 0.15234204, 0.012822026, 0.07156825, -0.022380197, -0.053193994, 0.08616916, 0.010344447, 0.030568724, -0.037438266, -0.008669321, -0.003982494, -0.03238097, 0.018369948, 0.02405272) * inp_3_0_0;
    result2 += M4(-0.01980492, 0.015289529, -0.17342079, 0.06538547, 0.00032329216, 0.055045094, -0.07149989, -0.03435944, 0.13024461, -0.041707292, 0.09118996, 0.09990506, 0.043530002, 0.029882258, -0.16080427, 0.18662696) * inp_3_1_0;
    result2 += M4(-0.04032224, -0.0037487524, 0.2003632, -0.020186568, 0.13809937, 0.03867128, -0.08303071, 0.0587403, -0.016362501, -0.008654911, 0.12760426, -0.050592467, 0.12488524, -0.023190008, -0.10159836, 0.0046575367) * inp_3_2_0;
    result2 += M4(-0.0042308494, -0.12710997, 0.18545452, -0.07069459, -0.07089228, -0.1196283, 0.13608527, -0.08151522, 0.15012844, 0.05496292, -0.07024931, -0.022754926, 0.07425864, 0.040245138, -0.15114579, -0.08781712) * inp_3_0_1;
    result2 += M4(-0.3451364, -0.0666696, 0.31044757, -0.36124018, 0.44494674, 0.14513369, 0.676827, 0.04408823, -0.36953577, -0.12034602, -0.3721546, -0.28559095, -0.3947035, 0.09640467, -0.08625179, -0.29576176) * inp_3_1_1;
    result2 += M4(-0.007823298, -0.0130075505, -0.06333318, -5.509355e-05, 0.1192258, 0.10326423, 0.22548473, -0.27990976, -0.05419991, -0.03949722, -0.20795551, 0.11220152, 0.22175144, 0.021198556, 0.118226804, 0.2772555) * inp_3_2_1;
    result2 += M4(-0.06308468, 0.00825391, 0.053251825, -0.017995814, -0.055655025, -0.06611089, -0.16431488, 0.17378944, 0.08889641, 0.06924971, 0.077959836, -0.115309976, 0.13840045, 0.008980955, 0.024686584, 0.05351296) * inp_3_0_2;
    result2 += M4(0.06592406, 0.05085449, 0.070210285, -0.08441218, 0.1308489, -0.028531922, -0.18528517, 0.0816895, -0.008432744, 0.011183335, 0.0059336694, -0.032936674, 0.30010635, 0.07318132, -0.08080898, 0.26205906) * inp_3_1_2;
    result2 += M4(0.08425472, -0.01205737, -0.011974594, 0.18894099, -0.06421255, 0.029951135, 0.043390937, -0.17619634, 0.08340416, -0.02107056, -0.006893944, 0.11659221, -0.007544579, 0.052008692, -0.103985354, -0.046960633) * inp_3_2_2;
    result3 += M4(0.021022188, -0.026626946, -0.087909065, 0.010425164, 0.015987277, 0.11751432, 0.014285943, 0.09915974, 0.05808254, 0.013870901, 0.03289762, -0.0660183, 0.009982389, -0.05609071, -0.029971149, 0.044095468) * inp_3_0_0;
    result3 += M4(0.3210107, -0.013605844, 0.005817935, 0.0005098189, -0.037535544, -0.09738354, 0.076916866, 0.087590314, -0.06702085, 0.07161003, -0.057759583, -0.046259515, -0.32017225, -0.07524671, -0.056153767, 0.100393824) * inp_3_1_0;
    result3 += M4(-0.092704184, 0.023053579, -0.031714555, 0.0029060405, 0.090048626, 0.053814903, 0.06272965, 0.022399869, -0.12150775, -0.067158714, -0.117217526, -0.046668276, -0.21555084, -0.09843371, -0.009743611, -0.05701792) * inp_3_2_0;
    result3 += M4(-0.2768229, 0.004776421, -0.029365074, -0.12526453, -0.16934913, 0.16803694, -0.10169722, -0.11979011, 0.22852689, -0.073661804, -0.055793274, 0.022468874, 0.046398915, -0.035364263, -0.037339758, 0.12764981) * inp_3_0_1;
    result3 += M4(-0.09391745, -0.17813365, 0.10657735, -0.09864116, -0.49923757, 0.767278, -0.29400676, 0.17849971, 0.31529155, -0.49902406, 0.26508397, -0.105322264, 0.10938557, -0.16279878, 0.096460976, 0.012125552) * inp_3_1_1;
    result3 += M4(0.14796935, 0.020158863, -0.06260432, 0.120497376, -0.10387097, 0.0763441, -0.21161331, 0.08455196, 0.14766298, 0.056006722, 0.104338415, -0.11754839, 0.19124863, -0.12384579, 0.12496062, 0.07954517) * inp_3_2_1;
    result3 += M4(0.043300387, 0.033319708, 0.042718537, -0.06803641, 0.13368632, 0.24022327, -0.06542432, 0.012839977, -0.09707262, -0.41620457, 0.07804298, 0.044102397, -0.013812909, -0.19964246, 0.05766143, 0.0809943) * inp_3_0_2;
    result3 += M4(-0.11858428, 0.043079894, -0.08560768, 0.061799165, -0.08252493, 0.0023936802, 0.028454633, 0.11178445, 0.022295382, -0.06813133, 0.08930373, -0.013806366, 0.023922527, -0.07229859, 0.009417355, -0.1435393) * inp_3_1_2;
    result3 += M4(-0.17234452, -0.1992516, -0.038375005, 0.050692417, -0.0032154345, 0.059164483, 0.0040870826, 0.14308588, -0.061005175, -0.10753093, 0.012040366, -0.057635896, -0.024329014, -0.011552751, -0.057059567, -0.14311059) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.07618095, 0.07708176, 0.08196069, 0.0769039);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10750767, -0.069048084, -0.02387533, -0.018794544, -0.0014442827, -0.003614843, -0.020066114, -0.025718922, 0.0055271685, 0.020761894, -0.0019936038, 0.011383355, 0.14778998, 0.10231105, 0.070223644, 0.079155155) * inp_0_0_0;
    result0 += M4(-0.17850365, -0.23747967, 0.0003814631, 0.014176035, 0.0064560794, 0.01248353, -0.076929025, -0.0033076862, -0.037215266, -0.14620422, 0.08014031, 0.03224288, 0.02145538, 0.13281389, 0.05738677, 0.01425222) * inp_0_1_0;
    result0 += M4(0.0035009617, -0.04180731, -0.0021921133, -0.011709186, -0.056242295, -0.050325904, -0.03403648, -0.06797087, -0.051226545, 0.029811671, -0.014995226, 0.05146858, 0.08788084, 0.04429127, 0.060455687, 0.04250677) * inp_0_2_0;
    result0 += M4(0.18211633, -0.03315433, 0.0066101043, 0.0019818316, 0.059501946, -0.08240528, 0.15371121, -0.048433248, 0.0023484146, 0.042092644, 0.048718616, 0.02050743, 0.17281543, 0.11131608, 0.16525964, 0.11277494) * inp_0_0_1;
    result0 += M4(0.0695077, 0.21441056, -0.10365135, -0.12914129, -0.23462039, 0.14683627, -0.12139185, 0.31090307, -0.12646517, -0.020191569, -0.14215949, -0.10432352, 0.19495235, 0.19066104, 0.1475357, 0.22409876) * inp_0_1_1;
    result0 += M4(0.0047733034, 0.09006428, 0.07104867, 0.03504387, 0.02119549, -0.120212674, 0.030049607, -0.12719911, 0.009412437, -0.035152555, -0.04672913, 0.07719443, 0.1505747, 0.17923012, 0.14555186, 0.21756877) * inp_0_2_1;
    result0 += M4(-0.008661861, 0.016879234, 0.018843913, -0.0086571695, -0.015858853, -0.002910884, -0.035878904, -0.022153867, 0.050615117, 0.019125935, 0.054528035, 0.033370122, 0.10322156, 0.027953839, 0.18489254, 0.008621706) * inp_0_0_2;
    result0 += M4(-0.006632066, -0.034350265, 0.12869105, 0.08251752, 0.083880536, 0.03193237, 0.08712806, -0.030731702, 0.027588041, 0.031473257, -0.10255004, 0.060417444, 0.04072626, 0.06706708, 0.06621962, 0.17384696) * inp_0_1_2;
    result0 += M4(-0.007898107, -0.006675786, -0.01879892, 0.05612584, 0.059109557, 0.064223886, 0.063426316, 0.026144689, 0.015370966, 0.023421941, 0.004886477, -0.076361425, 0.05976633, 0.11874129, 0.071899466, 0.10897123) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.09690237, -0.036808144, -0.06657486, -0.06594115, -6.0804803e-05, -0.04674485, 0.004094033, -0.015429391, -0.06655024, 0.0124892155, 0.0053231455, -0.0033085467, 0.028538207, 0.059582602, 0.007521355, 0.0019113672) * inp_1_0_0;
    result0 += M4(0.017477151, -0.15073857, -0.14678681, -0.029705966, 0.12354716, 0.10765002, 0.11593639, 0.005760378, 0.07274115, -0.035563864, 0.010578286, 0.019728625, 0.039132886, -0.04568174, 0.03335328, 0.023592817) * inp_1_1_0;
    result0 += M4(-0.07304938, 0.057490017, -0.012095195, -0.02739187, -0.01152076, 0.11371249, -0.007970173, 0.10198351, -0.04707168, 0.07247058, -0.011644203, 0.031818576, 0.0143244555, -0.030115953, 0.0071849194, -0.018680105) * inp_1_2_0;
    result0 += M4(-0.018063655, -0.108884245, 0.04619555, -0.05219128, -0.13304879, -0.04416511, -0.15468591, -0.1384541, 0.13566437, -0.0065030456, -0.028424192, 0.012190558, -0.022121578, 0.00770823, 0.08652469, 0.04011392) * inp_1_0_1;
    result0 += M4(0.18971114, 0.06368518, 0.22356015, 0.05337343, 0.08862588, 0.11499277, -0.12284015, -0.03315526, -0.023967879, 0.047575407, -0.0144391395, -0.049582142, 0.10088539, -0.0026721878, -0.004639431, 0.10644914) * inp_1_1_1;
    result0 += M4(0.03865407, 0.10670007, -0.0015131459, 0.0750216, -0.01542953, -0.009132734, -0.036799207, -0.12162705, 0.020697782, -0.074278966, -0.015221456, 0.037178632, 0.010353782, 0.026715338, 0.0133674545, -0.02501358) * inp_1_2_1;
    result0 += M4(-0.04222932, -0.009322923, -0.06300462, -0.005329318, -0.046028607, -0.03681015, -0.04750483, 0.0036142003, -0.002338666, -0.00678929, 0.00019720753, -0.03217802, -0.031392295, -0.014044843, -0.06579035, -0.028481483) * inp_1_0_2;
    result0 += M4(0.027172526, 0.06783646, 0.08463119, -0.018169738, 0.0021620991, -0.037987493, 0.122240335, 0.04966563, -0.013826421, 0.013409872, 0.02325839, -0.063093536, -0.057138044, -0.032320537, -0.05865586, -0.120778285) * inp_1_1_2;
    result0 += M4(0.029570688, -0.007241832, 0.013793475, 0.048794713, -0.013925988, -0.01675573, 0.00426113, 0.08437782, 0.036399983, -0.0012656065, 0.032363493, -0.083268404, -0.013137059, -0.030256456, -0.006109333, -0.001724638) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.032780595, 0.040063642, 0.022086952, 0.039983273, -0.10808355, -0.07513225, -0.026816828, -0.03641535, 0.027955102, 0.06566672, 0.0032818546, -0.0009629916, 0.112022415, -0.028886348, 0.010985717, 0.00078388327) * inp_2_0_0;
    result0 += M4(-0.13340095, -0.04247468, 0.02484851, 0.0067659714, -0.14744744, -0.05476447, 0.02983869, 0.0204876, 0.021731129, -0.062648274, 0.032268047, 0.005103538, -0.116220474, 0.09328013, 0.02272294, -0.03457705) * inp_2_1_0;
    result0 += M4(0.00054714154, -0.11658938, -0.015999565, -0.036944762, 0.056659553, 0.115956575, 0.03362796, 0.06665144, 0.03651499, 0.029520668, 0.018647326, 0.022650648, -0.0020726144, 0.07222559, -0.002586524, 0.076051764) * inp_2_2_0;
    result0 += M4(0.03460269, 0.080249466, 0.013576558, 0.0817117, -0.20528884, -0.018439254, -0.2567051, -0.038417414, -0.02256883, 0.014744384, 0.040652733, 0.09285561, 0.017039033, -0.023681646, 0.0638022, -0.07253106) * inp_2_0_1;
    result0 += M4(-0.07643447, -0.22256304, -0.29282355, -0.26386616, -0.4330041, -0.37288478, -0.23435834, -0.22118638, -0.011325035, -0.1828129, -0.16822214, -0.18540145, -0.03750084, -0.094664365, -0.027230797, 0.06689155) * inp_2_1_1;
    result0 += M4(-0.12510663, -0.048518654, -0.057383377, -0.06061238, 0.40136665, 0.063705735, 0.422166, 0.0856853, 0.011756967, 0.008117022, 0.043635778, -0.00070417573, 0.016038895, 0.016570952, 0.067832515, 0.087366775) * inp_2_2_1;
    result0 += M4(0.03443972, 0.006720545, 0.09572738, 0.020656921, -0.05990777, -0.011402126, -0.11105686, 0.03027179, -0.017498415, -0.004992205, 0.0020540548, 0.0069669797, -0.019901356, 0.0036377027, -0.06606869, -0.021143371) * inp_2_0_2;
    result0 += M4(0.016695516, -0.036312025, 0.14192939, 0.0052429987, 0.08162404, 0.03796432, -0.11358241, -0.101749875, 0.009139447, 0.057742335, 0.04142805, -0.123949826, -0.010907669, -0.04093913, -0.07081795, -0.060433857) * inp_2_1_2;
    result0 += M4(-0.0025984314, 0.040590852, -0.00750124, -0.00016605083, 0.117795855, 0.13944775, 0.1396736, 0.119359285, 0.0061433497, 0.0010167991, 0.014593346, 0.046956778, 0.0035106062, 0.021707235, -0.0029465486, 0.015521443) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.032622334, 0.0019716336, -0.041277148, -0.020354137, -0.010810498, 0.028768854, 0.0075867465, 0.0068800272, 0.01173895, 0.01451602, 0.016351638, -0.0010345754, -0.09966682, -0.06072997, -0.030797668, -0.045042265) * inp_3_0_0;
    result0 += M4(-0.015181593, -0.05494346, 0.03381848, 0.015822537, 0.057966687, 0.01817063, -0.027358033, -0.014511392, -0.04062742, -0.07149024, -0.068763874, -0.043003064, -0.066077165, -0.09185756, 0.02094039, 0.027005253) * inp_3_1_0;
    result0 += M4(0.004750762, 0.06352804, 0.0038929756, 0.035614002, -0.1127846, 0.03333836, -0.038535148, 0.015839962, 0.029364228, 0.05566524, 0.027471364, 0.030214963, -0.06900937, -0.09309669, -0.046117786, -0.034428548) * inp_3_2_0;
    result0 += M4(-0.021581104, -0.055911366, 0.056465432, 0.0010072981, -0.03558092, 0.021584969, -0.05237135, 0.064809665, 0.02433842, -0.041749425, 0.02342668, 0.021249903, -0.043386694, 0.0064149154, -0.07603991, 0.030785726) * inp_3_0_1;
    result0 += M4(0.16392636, 0.25628302, -0.2021051, -0.04888335, 0.09782671, -0.201409, 0.13693617, -0.15154687, -0.48377928, -0.38885674, -0.40733016, -0.3652574, 0.336291, 0.33063027, 0.3528874, 0.2517097) * inp_3_1_1;
    result0 += M4(0.022535035, -0.0068529514, 0.041175693, -0.05051784, -0.049866162, 0.10422048, -0.09900608, 0.053784974, 0.026560547, -0.030233499, -0.0070996843, -0.013136615, -0.118058845, -0.12940335, -0.103242286, -0.14895596) * inp_3_2_1;
    result0 += M4(-0.047936305, -0.01766501, -0.053615306, -0.011929976, 0.0016728283, 0.010891242, 0.017055523, 0.0030129603, 0.12582813, 0.06355308, 0.16218294, 0.012095181, -0.015683837, 0.014947439, -0.045330826, 0.015921315) * inp_3_0_2;
    result0 += M4(-0.00988426, -0.051495764, 0.089806, 0.025354026, 0.041912165, 0.0063718897, 0.031297196, -0.0850036, 0.19086498, 0.19501719, -0.028335974, 0.10184728, 0.13736086, 0.056964815, 0.08483742, -0.023264417) * inp_3_1_2;
    result0 += M4(-0.023767505, -0.019126777, -0.029020663, 0.012504315, 0.008570567, 0.01765027, 0.016474048, 0.08461438, 0.11234707, 0.17834541, 0.1018342, 0.15005049, -0.025599377, -0.003519007, -0.047286473, -0.03779865) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DN (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
