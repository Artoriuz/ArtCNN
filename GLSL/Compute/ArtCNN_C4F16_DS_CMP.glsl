// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DS (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(-0.00543777, -0.013651063, -0.00955905, -0.07501949);
    V4 result1 = V4(-0.025698224, -0.0042065624, 0.0012903687, 0.00094997213);
    V4 result2 = V4(0.030544596, -0.0049029626, -0.003528083, 0.00025129158);
    V4 result3 = V4(-0.0028329445, -0.0019714895, 0.009833965, -0.057222996);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.031198526, -0.18285954, 0.025106775, 0.002530358) * inp_0_0_0;
    result0 += V4(0.0242994, 0.19281392, 0.15596776, 0.1338634) * inp_0_1_0;
    result0 += V4(0.00980346, 0.08167495, -0.14333592, 0.04739915) * inp_0_2_0;
    result0 += V4(0.025619844, 0.110544816, 0.042199813, 0.17632337) * inp_0_0_1;
    result0 += V4(-0.02643818, -0.07473187, -0.39089385, 0.33573887) * inp_0_1_1;
    result0 += V4(-0.24077079, -0.14730632, 0.16073732, 0.11200558) * inp_0_2_1;
    result0 += V4(-0.0012466881, 0.1756137, -0.047307793, 0.09447497) * inp_0_0_2;
    result0 += V4(0.053162124, -0.15683092, 0.26624745, -0.054599166) * inp_0_1_2;
    result0 += V4(0.20364863, 0.018023204, -0.047443148, 0.09619247) * inp_0_2_2;
    result1 += V4(0.10178304, -0.111393504, -0.09068564, 0.044296242) * inp_0_0_0;
    result1 += V4(-0.09245422, -0.013645317, 0.018339505, -0.23200753) * inp_0_1_0;
    result1 += V4(0.08588824, 0.13827077, 0.069251336, 0.19015156) * inp_0_2_0;
    result1 += V4(-0.07728263, 0.1098742, 0.069909275, -0.043377884) * inp_0_0_1;
    result1 += V4(0.1073577, -0.20798174, 0.11105452, 0.2093584) * inp_0_1_1;
    result1 += V4(-0.13384163, 0.29005826, -0.18000403, -0.16334537) * inp_0_2_1;
    result1 += V4(0.065615475, 0.006050378, 0.026723264, -0.002500005) * inp_0_0_2;
    result1 += V4(0.08744562, -0.27369374, -0.1364218, 0.017565064) * inp_0_1_2;
    result1 += V4(-0.08596976, 0.0748131, 0.1106885, -0.03017162) * inp_0_2_2;
    result2 += V4(-0.07097196, 0.1192416, -0.1891446, -0.057861038) * inp_0_0_0;
    result2 += V4(0.13244872, -0.024546105, 0.18386775, 0.02204047) * inp_0_1_0;
    result2 += V4(0.08184669, -0.01382354, 0.0036058452, 0.034415808) * inp_0_2_0;
    result2 += V4(-0.20489766, 0.35178512, 0.39652792, 0.13428125) * inp_0_0_1;
    result2 += V4(-0.34712124, -0.84556806, -0.34618667, -0.09541765) * inp_0_1_1;
    result2 += V4(0.20445225, 0.19014719, -0.05439093, -0.014401595) * inp_0_2_1;
    result2 += V4(0.065409236, 0.112657696, -0.18005393, -0.076294035) * inp_0_0_2;
    result2 += V4(0.29125455, 0.13173865, 0.16189076, 0.12651314) * inp_0_1_2;
    result2 += V4(-0.20501302, -0.019611796, 0.031393185, -0.06617831) * inp_0_2_2;
    result3 += V4(0.089764945, -0.14470807, 0.24455844, -0.12437345) * inp_0_0_0;
    result3 += V4(-0.19908908, 0.22728504, 0.42959115, 0.2309992) * inp_0_1_0;
    result3 += V4(0.0148781, -0.068623126, 0.052565727, 0.040953457) * inp_0_2_0;
    result3 += V4(0.046613965, 0.012594472, 0.05298552, -0.25798044) * inp_0_0_1;
    result3 += V4(0.015062203, -0.14261563, -0.50568247, -0.035944477) * inp_0_1_1;
    result3 += V4(0.039268836, 0.15879568, -0.17478426, 0.24466364) * inp_0_2_1;
    result3 += V4(-0.08979676, 0.13875645, -0.052165262, -0.10917367) * inp_0_0_2;
    result3 += V4(0.12584285, -0.06571236, -0.16281334, -0.0055585024) * inp_0_1_2;
    result3 += V4(-0.03305584, -0.09739885, 0.032837316, 0.15441659) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DS (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.01663755, 0.009860121, 0.16266853, 0.005793663);
    V4 result1 = V4(0.04106452, -0.010646642, -0.0097728595, 0.011011004);
    V4 result2 = V4(0.007991082, 0.038749028, -0.0013844019, 0.026597772);
    V4 result3 = V4(0.0148305865, -0.019741213, -0.0016602009, -0.0373862);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.03812109, 0.36905795, -0.0012806163, 0.09641272, 0.15308928, 0.037514217, 0.061599165, -0.06334658, -0.43324775, 0.27475166, -0.044881947, -0.10084476, 0.053687204, -0.08171791, -0.1854659, 0.020884976) * inp_0_0_0;
    result0 += M4(-0.36851132, -0.04162514, 0.031942904, 0.08338488, 0.7841, 0.19617487, 0.005401773, 0.015572174, -0.74010944, -0.7830869, -0.09338776, -0.050964236, -0.4556982, 0.1485317, 0.0470093, 0.12660721) * inp_0_1_0;
    result0 += M4(0.51985717, -0.070781104, 0.160961, 0.021960914, 0.17030896, -0.20227891, 0.16249065, -0.085629694, -0.3781278, -0.066179544, -0.05371137, 0.11244726, -0.103859894, -0.01238547, -0.12488446, -0.1018687) * inp_0_2_0;
    result0 += M4(-0.20723258, -0.04906878, -0.023290554, -0.18416008, -0.2428662, 0.04962371, 0.29176655, -0.20489694, 0.3686508, 0.24664524, 0.02777424, 0.07890958, 0.038791966, 0.112974666, -0.02623673, 0.024568891) * inp_0_0_1;
    result0 += M4(-0.16936839, -0.15413845, -0.016591018, -0.099452704, -0.6425199, 0.46771654, 0.057640247, -0.08771834, -0.52063674, 0.94523144, -0.012896916, -0.46744046, 0.045202974, 0.047504164, 0.14608411, 0.15778993) * inp_0_1_1;
    result0 += M4(-0.51429766, 0.051416025, -0.023121104, -0.077358365, -0.49053195, -0.09724382, -0.110026814, 0.004799273, 0.20929636, 0.24211524, 0.1296137, -0.14280327, -0.07975185, 0.09297277, 0.07459524, 0.040702168) * inp_0_2_1;
    result0 += M4(0.15893002, 0.051411636, -0.00021963239, 0.32006267, -0.1453484, -0.26231036, -0.035989434, 0.3896616, 0.45871574, -0.30549827, 0.04776705, -0.19206719, -0.06717659, -0.09653802, -0.15427436, -0.034865122) * inp_0_0_2;
    result0 += M4(0.06997746, 0.0370979, 0.0064097736, 0.10093316, 0.11302902, 0.037811972, -0.06538635, 0.4552259, 0.42731303, -0.25181276, -0.24752899, 1.0903089, -6.323996e-05, -0.07018389, -0.07485011, 0.024406936) * inp_0_1_2;
    result0 += M4(-0.22305284, -0.013878586, -0.05449121, -0.04912179, 0.20975316, -0.3119288, -0.19842479, -0.12455138, 0.14187439, -0.15624069, 0.10302334, -0.15296873, 0.053844623, -0.10854544, 0.0654345, -0.11197797) * inp_0_2_2;
    result1 += M4(-0.17745888, -0.09089589, -0.07225865, 0.25314832, -0.09323565, -0.094605476, -0.01753869, 0.06205545, 0.08422827, -0.04088852, -0.033449225, 0.010761257, 0.07937701, -0.07307347, -0.0779035, -0.17474097) * inp_0_0_0;
    result1 += M4(0.083778925, -0.070583925, 0.11122336, -0.0785607, -0.2627528, 0.24498159, 0.26111037, 0.08556268, -0.061130658, -0.08498093, -0.07834262, 0.0083907265, 0.16734692, -0.06595902, -0.14390545, -0.05281978) * inp_0_1_0;
    result1 += M4(0.058194518, 0.1088161, 0.02681169, -0.121371455, -0.076822475, 0.33684352, -0.050141122, 0.00709019, -0.04625906, 0.16776685, -0.12445999, 0.16474563, -0.14981373, -0.04839767, -0.07989556, 0.20891112) * inp_0_2_0;
    result1 += M4(-0.02550431, 0.17512242, -0.079512395, 0.561036, -0.060133837, -0.054015078, 0.23577608, 0.2643676, -0.06123936, 0.29371947, -0.065331854, 0.068320714, 0.06856037, -0.06682999, -0.04370562, -0.15506713) * inp_0_0_1;
    result1 += M4(0.16963714, -0.21285869, 0.24944857, -0.088093944, 0.17082343, -0.322901, -0.049945883, -0.014373658, -0.18676707, 0.29918373, 1.1242635, -0.12064518, 0.22540273, 0.10631779, -0.13890201, -0.106821865) * inp_0_1_1;
    result1 += M4(0.25679368, -0.1665967, -0.07647088, -0.1689499, -0.044471044, -0.19754001, 0.31935233, -0.038568735, 0.5351001, -0.17101803, 0.1222055, 0.053253815, -0.24325936, 0.1300616, -0.03805354, 0.03632148) * inp_0_2_1;
    result1 += M4(0.1000318, -0.03332478, -0.047008038, -0.25949425, 0.21368933, -0.5532594, -0.20046201, -0.07721691, 0.17098694, -0.004104222, -0.07157041, 0.28101167, -0.05181119, -0.07027286, 0.17185327, -0.063519105) * inp_0_0_2;
    result1 += M4(0.026402986, -0.057702336, -0.09977296, -0.07183682, 0.053635545, 0.012153768, -0.5442104, -0.30307204, 0.033808943, -0.53143054, -0.8034698, -0.2438702, 0.09755345, 0.08157864, 0.12334939, 0.09967573) * inp_0_1_2;
    result1 += M4(0.106865026, -0.011945891, -0.01502628, -0.030851956, -0.029347062, 0.07076039, -0.041869033, -0.029617907, 0.015337623, -0.09553869, -0.085717835, -0.09632587, -0.12601219, -0.14761862, 0.093504034, 0.13412257) * inp_0_2_2;
    result2 += M4(-0.25012788, -0.15981878, -0.63304853, -0.6834974, 0.07152765, -0.09567944, -0.041906733, -0.44578, -0.29014188, -0.33374628, 0.3493851, -0.3068338, 0.01225196, -0.123024784, 0.04726354, 0.052930053) * inp_0_0_0;
    result2 += M4(0.14890176, 0.04846883, 0.22757438, 0.21519578, 0.019794261, -0.03703844, 0.041118383, -0.1638305, 0.18240274, 0.23563758, 0.07164802, -0.6070963, 0.074890144, 0.1515462, -0.07500006, -0.13036749) * inp_0_1_0;
    result2 += M4(0.1499584, 0.39113685, -0.08845293, -0.07192617, -0.007518687, 0.14707927, 0.101459384, -0.42079994, 0.0066653937, 0.24462132, -0.35117525, -0.21213445, -0.07734614, -0.21405336, -0.1468606, -0.029161653) * inp_0_2_0;
    result2 += M4(-0.075672805, -0.13276708, 0.6422319, -0.19455516, 0.06628351, -0.26076987, 0.43790415, -0.22462451, -0.06872252, -0.13569546, -0.64235026, 0.5365302, 0.092902325, 0.11141894, -0.042861346, 0.12051606) * inp_0_0_1;
    result2 += M4(-0.13665168, 0.05869619, 0.15431488, 0.14987373, -0.17612612, 0.11501889, 0.23032086, 0.10630582, -0.50593805, -0.05402569, 0.13829492, 0.16333725, 0.31001842, 0.11674257, 0.17311113, 0.10446421) * inp_0_1_1;
    result2 += M4(-0.2245665, -0.010445632, 0.29217148, -0.0392973, -0.11570212, 0.41774252, -0.02997051, 0.15875557, -0.07835493, 0.343256, -0.118016794, 0.2028625, 0.13103355, -0.040099964, 0.123960145, 0.20226872) * inp_0_2_1;
    result2 += M4(-0.18330568, 0.027978392, -0.47105026, 0.21625848, 0.10607207, -0.07966795, -0.6139143, 0.53779495, -0.027920173, 0.03650387, 0.6614334, 0.020940086, -0.09364517, -0.036150906, -0.0026002403, -0.11989226) * inp_0_0_2;
    result2 += M4(0.13229623, -0.08942682, 0.047255114, 0.1267966, 0.4965386, 0.092460886, -0.11092638, 0.21738295, 0.59507525, 0.048813656, 0.013989372, 0.024332177, -0.2634572, 0.15334317, -0.03148372, -0.1865215) * inp_0_1_2;
    result2 += M4(0.026812742, 0.15042637, -0.15338527, -0.13972215, -0.067958884, 0.0858616, -0.2074274, 0.0263194, -0.008243937, -0.14706787, -0.19397633, -0.1157759, -0.09113002, -0.10937939, -0.048693467, -0.080878) * inp_0_2_2;
    result3 += M4(0.14481404, 0.224011, 0.2890805, -0.21938273, 0.09867769, 0.013252688, 0.2447788, 0.046827003, 0.044947766, -0.08770232, -0.12615903, 0.003425113, -0.040179748, -0.04849076, 0.014951443, 0.21196513) * inp_0_0_0;
    result3 += M4(-0.16654935, -0.030591905, -0.12991746, -0.04412808, -0.026323903, 0.058836926, 0.27138677, 0.050038893, 0.12395702, -0.10754927, -0.4666984, 0.04235363, -0.013903046, 0.07289128, 0.021891495, -0.069631256) * inp_0_1_0;
    result3 += M4(-0.26547816, 0.13294834, 0.06064192, 0.13511269, -0.105634235, -0.15101212, 0.18765754, 0.030826686, -0.24627098, -0.3714793, 0.17351694, 0.12808388, 0.0036762897, 0.074657686, 0.010779684, -0.14071387) * inp_0_2_0;
    result3 += M4(0.32996672, 0.09148913, -0.42328104, 0.12345098, 0.3375814, -0.09778248, 0.1822557, 0.17709638, 0.15184669, -0.15150777, 0.103826374, -0.6146539, -0.19237062, -0.16794695, 0.05399274, 0.13251716) * inp_0_0_1;
    result3 += M4(-0.07979307, 0.07552474, -0.04720721, -0.073564164, -0.39889508, 0.06415305, -0.21062225, 0.17846829, 0.5364521, 0.15628234, 0.5357025, 0.29836383, -0.031994324, 0.13473131, -0.05549876, 0.023157857) * inp_0_1_1;
    result3 += M4(-0.026368761, 0.21660241, -0.054380696, 0.07702467, -0.4088475, -0.20522773, -0.32075438, 0.018520383, -0.41520643, -0.38579822, 0.12207387, 0.017432116, 0.18613441, -0.15866132, -0.11007028, -0.05164116) * inp_0_2_1;
    result3 += M4(0.10242781, 0.17602111, 0.06596169, -0.042151466, 0.13160257, 0.4862755, 0.47582412, 0.075337075, -0.13825676, 0.0029854823, 0.13646057, -0.054579668, -0.09767786, -0.0549046, -0.03707866, 0.061495885) * inp_0_0_2;
    result3 += M4(-0.062940694, -0.35968542, 0.03670817, -0.073556125, 0.020106083, -0.07715201, -0.80651826, -0.120848075, -0.06316136, 1.0164663, -0.36378092, 0.1269466, 0.018470462, 0.15681976, 0.022310134, -0.010527022) * inp_0_1_2;
    result3 += M4(-0.13905688, 0.23985851, -0.27281296, 0.13544816, 0.122905925, 0.05976595, 0.20926625, -0.12908803, -0.069820635, 0.20754504, -0.4740384, 0.03742189, 0.05515705, 0.0054139765, 0.0045917565, -0.017574318) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(1.1262805, -0.06950591, 0.01621406, 0.04371641, -0.39168352, 0.038777847, 0.24153793, 0.005267144, -0.9952521, 0.523021, -0.07986291, 0.017483514, -0.39992395, 0.5227069, -0.077998444, 0.026623845) * inp_1_0_0;
    result0 += M4(-0.4265783, 0.20685342, 0.14716294, -0.059245903, 0.7210834, -0.43757927, -0.011996458, -0.32570198, 0.9805168, -0.20566542, 0.002912524, -0.11422108, -0.3760321, -0.03359359, -0.19201216, -0.013010092) * inp_1_1_0;
    result0 += M4(0.42296565, 0.28748217, -0.0033629322, 0.08900453, 0.11633161, 0.058704924, 0.04622199, 0.01228576, -0.61542517, -0.11710078, 0.11282109, 0.22757803, -0.20849124, 0.024149206, -0.24441583, -0.046881173) * inp_1_2_0;
    result0 += M4(-0.45823374, -0.15038373, 0.11209001, -0.07572337, -0.17873038, 0.07721371, -0.19130427, 0.02379735, -0.020700708, -0.29668257, -0.064401254, 0.18739732, -0.46984038, 0.44653162, -0.0011543346, 0.2741836) * inp_1_0_1;
    result0 += M4(0.19492477, -0.41484416, 0.1802917, 0.09846809, -0.13564748, 0.38481438, 0.0035542736, 0.092850626, -0.11860566, 0.19966549, 0.2923423, -0.23786227, 1.0582407, -0.98275626, -0.13228035, 0.3335244) * inp_1_1_1;
    result0 += M4(-0.25945973, 0.16083308, -0.11733182, -0.13598998, -0.37387773, -0.10218071, -0.23332442, 0.11556389, 0.005977331, 0.03456888, -0.101364635, -0.30823752, 0.54183984, 0.52147436, -0.032866094, 0.14137104) * inp_1_2_1;
    result0 += M4(0.07379904, 0.15586117, 0.03273608, 0.17848518, 0.151812, -0.20768699, -0.017720064, 0.05126846, 0.39021206, -0.007154039, -0.3368534, -0.022519156, -0.0293316, 0.10457217, -0.15532331, 0.40206409) * inp_1_0_2;
    result0 += M4(0.11866288, -0.041244075, 0.21357888, -0.2899345, 0.0516236, 0.04560436, -0.0753674, 0.2514894, -0.01730351, 0.102847226, 0.10639783, 0.3077671, -0.110101424, 0.14666726, 0.43346488, -0.9835729) * inp_1_1_2;
    result0 += M4(-0.18006179, 0.17649949, -0.24970259, 0.07430943, 0.17407954, 0.011164041, -0.058048356, -0.21997848, 0.28369263, -0.36671758, 0.06160814, -0.029592074, -0.09156845, -0.35620528, 0.24489963, -0.15270545) * inp_1_2_2;
    result1 += M4(-0.3279027, -0.20694098, 0.060200658, 0.0116229635, 0.41715574, 0.5311213, 0.12562543, 0.08736288, 0.1953589, -0.009432359, 0.044641756, -0.23561676, 0.0975903, -0.0439191, -0.3160013, -0.19332951) * inp_1_0_0;
    result1 += M4(0.0964325, 0.09179319, -0.043400932, -0.028892593, -0.2570833, 0.19731902, 0.25378126, -0.1171637, 0.01200551, 0.115905814, 0.30042714, 0.31301713, 0.08492011, -0.21027215, 0.0066775056, -0.0008523531) * inp_1_1_0;
    result1 += M4(0.012551585, 0.06761678, 0.16715078, -0.09917557, 0.008589356, -0.067156054, 0.15827137, 0.03855399, -0.08401287, 0.42112458, -0.33993042, 0.06469056, 0.11011872, -0.071588375, -0.06891119, 0.025746757) * inp_1_2_0;
    result1 += M4(0.087700665, -0.7396866, 0.060324498, -0.38665447, 0.14442946, 0.5377735, 0.055685084, 0.4108751, -0.040582497, -0.19903228, -0.057238683, 0.17362359, -0.28771317, -0.5717887, 0.003214695, -0.447714) * inp_1_0_1;
    result1 += M4(0.37350786, 0.09709702, -0.18623067, 0.2241817, -0.3116807, 0.024236063, -0.18030539, -0.37783426, 0.087003775, -0.2674211, -0.35476753, -0.3105458, 0.17831834, 0.00062994193, -0.211378, 0.12189312) * inp_1_1_1;
    result1 += M4(0.22688383, 0.074758515, 0.19363876, -0.02274303, -0.1307482, 0.05774968, 0.035185877, -0.17347652, -0.015531111, -0.25258526, 0.2431659, 0.20549431, 0.17526269, 0.09852937, -0.18499331, -0.06662601) * inp_1_2_1;
    result1 += M4(-0.11054894, -0.46727958, -0.060653068, -0.30243048, 0.41510907, 0.44752023, -0.18619524, 1.0471021, -0.2459479, -0.11608929, -0.12828034, 0.010805219, 0.29862177, 0.16879894, -0.13438822, 0.45199662) * inp_1_0_2;
    result1 += M4(0.08288306, 0.082646415, 0.20868143, 0.29900768, -0.116116405, -0.098444276, -0.46669424, -0.14014828, 0.17307852, 0.21681546, 0.11578331, -0.32938242, 0.03304877, 0.64784795, 0.79431236, 0.18817873) * inp_1_1_2;
    result1 += M4(0.2769221, -0.023367355, -0.24422452, -0.21073104, -0.2459007, 0.10955036, -0.039733626, 0.05740906, -0.120095104, 0.091447964, 0.11792618, 0.031951, -0.4921883, -0.07793078, 0.2647881, 0.024453314) * inp_1_2_2;
    result2 += M4(-0.07936138, 0.046888594, 0.7746707, -0.5897731, 0.2648345, 0.21112658, -0.33995926, 0.67429864, -0.14689805, -0.03280045, -1.0827521, -0.16619869, 0.051533878, -0.113881275, 0.47013783, -0.92576796) * inp_1_0_0;
    result2 += M4(-0.04488382, 0.101415925, 0.15124398, -0.037286572, -0.13074677, -0.2668004, 0.06446087, -0.25818184, -0.2528574, 0.16982162, 0.46774042, 0.20754237, -0.047844864, -0.055705067, -0.12055572, 0.0049443487) * inp_1_1_0;
    result2 += M4(0.019177787, -0.069301, 0.382618, -0.13309535, -0.023693223, 0.09212446, 0.15523972, -0.017738568, 0.13702552, -0.09473956, -0.21830842, 0.25539497, 0.007279749, 0.04213271, -0.16199368, 0.4475409) * inp_1_2_0;
    result2 += M4(-0.3746367, -0.066568054, -0.4307086, -0.43121764, 0.24133341, 0.09654825, 0.060367823, 0.5756555, 0.22570503, -0.16281429, 1.4169825, -0.14396237, -0.548997, -0.12290018, 0.7206843, 0.30732423) * inp_1_0_1;
    result2 += M4(-0.033177473, 0.24172781, -0.4942416, -0.23935509, -0.087250695, -0.24667385, 0.020263553, 0.07212714, 0.3229244, -0.12537336, 0.4042004, 0.019479593, 0.23788194, -0.036236644, -0.31196874, -0.48897967) * inp_1_1_1;
    result2 += M4(-0.02359422, -0.22033954, -0.27718884, -0.043673377, 0.09010573, 0.30276892, 0.12389804, -0.123961076, -0.007851035, 0.22914466, 0.27863395, 0.13261698, -0.1099729, 0.041668277, 0.060543217, 0.49412334) * inp_1_2_1;
    result2 += M4(-0.15219043, -0.21149334, 0.14785245, -0.1086156, 0.30474034, -0.08023106, -0.0477699, 0.5389091, -0.060434952, -0.028151961, -1.6886878, -0.07285534, 0.8880441, -0.36640325, -0.8379141, -0.563892) * inp_1_0_2;
    result2 += M4(0.30842224, 0.006660605, 0.080955826, 0.34929758, 0.20358977, -0.2174687, -0.19342482, 0.20990202, -0.08732154, -0.035620958, 0.2119393, -0.044996887, -0.2711067, 0.34798107, 0.4063122, -0.031647157) * inp_1_1_2;
    result2 += M4(-0.06821012, 0.06551344, -0.07860885, 0.25050095, -0.10391172, -0.12579761, -0.08764392, 0.003950479, -0.11311583, 0.09895089, 0.10767109, -0.051654644, -0.19681251, 0.14526273, -0.13309555, 0.5033975) * inp_1_2_2;
    result3 += M4(0.06096949, 0.22405401, 0.21444462, 0.13571087, -0.014451762, -0.09368846, -0.19081381, -0.21588953, -0.2440594, 0.26931423, 0.12155984, -0.086104915, 0.0557978, -0.12437289, -0.56380075, 0.16261932) * inp_1_0_0;
    result3 += M4(0.109119415, 0.17386897, -0.100593045, 0.055841748, 0.12263801, -0.143103, -0.04575053, 0.15568732, 0.29275656, 0.047956795, 0.6723372, -0.15404333, 0.19076565, 0.14259242, 0.026908498, -0.08309617) * inp_1_1_0;
    result3 += M4(-0.20666511, 0.017231615, -0.18004502, 0.06505578, -0.22512315, -0.06944184, 0.0103290565, 0.016935054, 0.28142226, -0.21880406, -0.12055925, 0.064120054, -0.08774624, -0.29358968, 0.15481749, 0.0438223) * inp_1_2_0;
    result3 += M4(0.17323074, 0.5814275, -0.040387295, 0.31765926, 0.038767498, -0.32334328, 0.3681252, -0.8241449, 0.29742253, -0.17079785, -0.6737746, 0.54423416, -0.027523533, -0.024515277, -0.8416912, 0.6231503) * inp_1_0_1;
    result3 += M4(-0.44591635, -0.006789605, -0.358838, -0.07247571, 0.67725784, 0.13277623, 0.1635437, 0.3496913, -0.4651971, -0.002736484, -0.23184384, -0.17986491, -0.7007009, -0.09370384, -0.5521423, -0.7185336) * inp_1_1_1;
    result3 += M4(0.12893037, 0.12422103, 0.19461131, 0.077967964, -0.18433645, -0.14205457, -0.032543834, 0.057815813, -0.05698628, -0.15570217, -0.0194757, 0.0428891, 0.32982057, -0.26352054, 0.3734127, -0.21593878) * inp_1_2_1;
    result3 += M4(0.10327358, 0.10611271, -0.18948756, -0.1522151, -0.20881492, -0.30055916, 0.08375902, 0.042889506, -0.15342999, 0.12267436, 0.452887, -0.25276718, -0.06044331, 0.21878706, 0.00081851275, 0.03652885) * inp_1_0_2;
    result3 += M4(-0.049824387, -0.4071909, 0.0027610708, -0.1579767, 0.20835201, 0.13079283, -0.30236298, 0.10530687, -0.082964726, -0.028421171, -0.27638274, -0.058094606, 0.32319605, 0.026886957, 0.8743047, 0.11135434) * inp_1_1_2;
    result3 += M4(0.004755552, -0.16168475, 0.2680542, 0.16983296, 0.007188436, -0.037244976, 0.047807716, -0.019748108, 0.12698789, 0.21941599, 0.10666178, 0.06972953, -0.20869833, 0.48770836, 0.57015586, 0.030214898) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.09107546, -0.19928448, -0.0886355, 0.034447726, -0.23513031, 0.24720217, 0.04706142, -0.110616356, 0.47421154, 0.13951902, 0.10734201, -0.0019443178, 1.1621047, -0.020354519, 0.065775834, -0.026318299) * inp_2_0_0;
    result0 += M4(-0.6520657, -0.34468785, -0.10781079, 0.15682906, -0.060652502, -0.622113, 0.034144767, -0.022362992, 0.06387553, -0.5569604, 0.015676579, 0.1062239, -1.2734729, -0.07597597, 0.026253227, 0.14503248) * inp_2_1_0;
    result0 += M4(-0.34740943, 0.07086517, 0.0850838, 0.020385327, -0.35275468, 0.19546232, 0.07859741, -0.01882612, -1.1504909, -0.16178519, -0.107722856, -0.10623608, 0.38817513, 0.21024077, 0.12448073, -0.07785398) * inp_2_2_0;
    result0 += M4(0.15898173, 0.30795264, -0.07472994, -0.055054575, 0.25035372, 0.081253804, -0.16354203, 0.011135196, 0.16493984, -0.13743852, 0.15109682, -0.13988538, -0.31564614, 0.062331818, 0.13370726, -0.038192306) * inp_2_0_1;
    result0 += M4(-0.06074121, 0.648198, 0.1280955, -0.40555283, -0.061800167, 0.30444586, 0.31866255, -0.74890745, -0.20544747, 0.98569584, 0.1553317, -0.46226355, 0.2958928, 0.21004118, -0.2575713, -0.24155764) * inp_2_1_1;
    result0 += M4(-0.12602589, 0.31456688, 0.13964397, -0.029573744, 0.1555045, -0.12761696, -0.09955082, -0.12282614, 0.12774737, -0.39103955, -0.11850793, 0.19464251, -0.00073680223, -0.07672851, -0.13869105, -0.089112) * inp_2_2_1;
    result0 += M4(0.280629, -0.00018989723, -0.2928238, 0.14232765, 0.048799276, -0.025812635, 0.06233531, 0.0069657885, -0.05322666, -0.12991722, -0.037125777, 0.113805525, -0.2199433, 0.06025417, -0.14481695, 0.27263308) * inp_2_0_2;
    result0 += M4(-0.38443017, 0.027284116, -0.19571915, 0.9286496, -0.31217614, 0.22606392, 0.10486593, 0.50436574, 0.088095464, -0.048457652, -0.20958094, 0.539173, 0.21835615, -0.3335858, 0.20759027, -0.073924206) * inp_2_1_2;
    result0 += M4(0.17834896, -0.22841908, 0.056387484, -0.09844009, -0.12219695, 0.10322984, 0.055085223, 0.23982297, 0.2708299, 0.06827611, -0.014993289, -0.12564723, -0.09583683, -0.057563134, -0.082521446, 0.094838515) * inp_2_2_2;
    result1 += M4(-0.15174636, -0.15139648, -0.24708396, -0.18357655, 0.2898101, 0.46514848, 0.08955368, 0.13146655, -0.097835295, 0.15480955, 0.12225372, 0.103485934, -0.25202784, 0.05392901, -0.11334665, 0.2501841) * inp_2_0_0;
    result1 += M4(-0.10419628, 0.12910487, 0.003232625, 0.037613515, 0.15618262, 0.25834703, 0.27570462, -0.15488407, 0.08388689, -0.19398741, -0.209668, -0.09075667, 0.08821364, 0.09415116, -0.21987665, -0.16923945) * inp_2_1_0;
    result1 += M4(-0.036122225, 0.04487856, -0.17177576, 0.027469536, -0.097635284, 0.18412384, -0.11551139, -0.007521405, -0.18383875, -0.34690717, 0.33047158, 0.10797332, -0.057633836, -0.32289004, 0.3027204, -0.13823242) * inp_2_2_0;
    result1 += M4(0.07535082, 0.23283365, -0.017426485, -0.28281268, 0.2622035, 0.32030147, -0.10111509, -0.24488354, -0.11397541, 0.25494272, 0.027884608, 0.44578484, 0.1137387, 0.32426906, 0.07805722, -0.39249077) * inp_2_0_1;
    result1 += M4(-0.13672316, 0.5571638, 1.0413371, -0.104514614, -0.10204818, -0.00088148855, 1.1585417, -0.11766105, 0.13570403, 0.32001233, 0.3131636, -0.48981065, 0.076304324, 0.0903377, 0.4647207, 0.42218658) * inp_2_1_1;
    result1 += M4(0.4366649, -0.019046642, -0.006440471, 0.1181376, -0.3360403, -0.09894862, 0.18686707, -0.08834684, -0.40598843, 0.40723786, 0.34212196, 0.33791718, -0.107840255, -0.11794593, -0.21245913, 0.05561651) * inp_2_2_1;
    result1 += M4(0.22658464, -0.12988992, -0.16737509, 0.6663595, 0.13096695, 0.5990535, -0.21064913, 0.8722585, -0.15312307, -0.11112656, -0.20460355, 0.08250318, 0.12531148, -0.49129713, -0.09366288, 0.07926963) * inp_2_0_2;
    result1 += M4(-0.1379684, -0.366857, -0.61285645, -0.08372347, 0.22304869, -0.12933002, -0.7007719, -0.20569733, 0.65562403, 0.020386811, -0.5413573, -0.75544006, 0.07147864, 0.40205166, -0.28280222, -0.4803403) * inp_2_1_2;
    result1 += M4(0.18251614, -0.3020058, 0.069343396, 0.11752, -0.2701663, -0.13986632, -0.1609143, 0.10643077, -0.18430012, -0.485367, -0.19614, 0.07114609, 0.027948072, 0.025223956, 0.09112333, 0.22396113) * inp_2_2_2;
    result2 += M4(-0.15128373, -0.07306135, 0.41648093, -0.16654204, -0.019115008, 0.1424795, 0.2603815, -0.28232694, 0.12024903, 0.030997744, 0.46417317, -0.0589152, -0.049669232, 0.02853664, 1.0473357, -0.81893075) * inp_2_0_0;
    result2 += M4(0.27529177, -0.09943297, 0.3705698, -1.1130996, 0.18523069, -0.0025465132, 0.06664599, -0.27841893, 0.13711217, -0.18822806, -0.5771647, 0.74074364, 0.09872137, 0.054547857, -0.5626556, 0.4607015) * inp_2_1_0;
    result2 += M4(0.11022505, -0.08495543, -0.23453324, 0.026533144, -0.085753776, -0.018947668, -0.13085435, 0.07920339, -0.02681126, 0.0720229, -0.39182186, -0.905351, -0.02582835, -0.19220337, -0.047322657, -0.23394023) * inp_2_2_0;
    result2 += M4(0.004691035, -0.078757994, -0.29418093, 0.7508334, -0.19739765, 0.098615155, -0.2113558, 0.72691125, -0.17203338, 0.08383471, 0.4558534, 0.16657436, -0.08965694, -0.010939557, -0.28417066, -0.16880766) * inp_2_0_1;
    result2 += M4(-0.35384148, -0.17984475, 0.039881263, 0.006258795, -0.55991566, -0.62682265, -0.20332147, -0.11512905, -0.26236784, -0.7128984, 0.20240216, -0.0834093, -0.04798626, -0.044568706, 0.4120791, -0.273259) * inp_2_1_1;
    result2 += M4(-0.21067993, -0.0777057, 0.02326634, -0.042943798, 0.009233967, 0.86435336, 0.27056745, 0.04585931, 0.05017742, 1.4593849, 0.58862436, -0.06922363, 0.082586184, 0.12372867, -0.1282398, 0.1839682) * inp_2_2_1;
    result2 += M4(0.28448698, -0.10360418, 0.53420275, 0.14550021, 0.28063866, 0.059277292, 0.27541316, 0.42056137, 0.032923006, -0.22146839, -0.027405726, 0.499004, 0.24372669, -0.0437938, -0.30726326, 0.8499405) * inp_2_0_2;
    result2 += M4(0.3221093, 0.038530957, -0.20724559, -0.05711143, 0.31717235, -0.26273507, -0.0792497, 0.19826467, 0.5061492, 0.118503205, -0.8047829, 0.004973957, -0.020520145, -0.22660084, -0.08928789, 0.093419425) * inp_2_1_2;
    result2 += M4(0.0021840706, -0.15145889, -0.19992809, -0.22537279, -0.03626062, -0.03181548, -0.1515462, 0.08060485, -0.15520139, -0.1797147, -0.19871987, -0.21582223, -0.25637147, 0.28593448, -0.21978833, 0.16438001) * inp_2_2_2;
    result3 += M4(0.051362075, -0.19305135, -0.7189307, -0.04603142, -0.0068990844, -0.09900804, -0.42885077, -0.36020318, 0.14270039, 0.025676446, -0.08607428, -0.02088297, 0.25684395, -0.19353478, -0.027190331, -0.07191831) * inp_2_0_0;
    result3 += M4(0.20063059, -0.05245035, -0.2921173, 0.059570003, 0.32312274, 0.009263098, -0.26616213, 0.19406685, 0.111634284, -0.1271895, 0.36358145, -0.28893468, 0.075303875, 0.062191144, -0.2733928, -0.118752934) * inp_2_1_0;
    result3 += M4(0.01488537, 0.21278761, 0.26574448, 0.088394865, -0.14587568, -0.055718027, 0.053943075, 0.10983887, -0.25892758, 0.03570602, -0.4692585, -0.03811538, -0.18460189, -0.12753259, -0.053444497, 0.09742671) * inp_2_2_0;
    result3 += M4(-0.062419195, -0.10778681, -0.013609759, -1.1043128, 0.08304866, -0.059371427, -0.15148443, -0.6192949, -0.037899714, -0.11542413, 0.32818058, -0.43595928, -0.13134912, 0.36133432, -0.12557594, 0.19940615) * inp_2_0_1;
    result3 += M4(0.5115914, 0.07433559, 0.21470845, 0.19686666, 0.5613912, -0.4760282, 0.52898663, 0.9366776, 0.553081, 0.21332717, 0.7161617, 1.2966757, -0.29446808, -0.06501182, -0.055524077, 0.1117539) * inp_2_1_1;
    result3 += M4(-0.11207591, -0.114534415, -0.21727103, 0.20021844, -0.9236727, 0.13031843, -0.16091804, -0.150479, -1.0907792, 0.2701511, 0.14998938, -0.100120954, -0.32525143, 0.33183447, 0.3148248, -0.1761008) * inp_2_2_1;
    result3 += M4(-0.06992186, -0.2045825, 0.16298164, -0.2871042, 0.050903797, -0.3242492, 0.13184606, -0.22820987, 0.05935878, -0.08947304, 0.03269872, -0.022408968, 0.2430344, -0.16739768, 0.21861775, -0.14698394) * inp_2_0_2;
    result3 += M4(0.16507073, 0.6530872, -0.012911756, 0.22170655, 0.27818665, 0.52320534, -0.32001084, 0.30461007, -0.03380859, 0.5476392, -0.9597499, -0.3501659, 0.3616019, 0.22749618, -0.22652, -0.1619332) * inp_2_1_2;
    result3 += M4(0.02009148, 0.22143266, -0.21693161, -0.08586033, -0.23997836, -0.1473588, -0.09150978, 0.110112555, 0.50390965, -0.32055634, -0.5219164, 0.016341602, 0.068528645, -0.4289915, 0.34399432, 0.24606523) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.47390556, -0.042936835, 0.18178232, -0.028961752, 0.6652882, -0.4242976, 0.1541635, -0.064165585, 0.124386095, -0.012954467, 0.088503875, 0.007020998, 0.036475502, 0.20279367, -0.008068287, 0.0009316953) * inp_3_0_0;
    result0 += M4(-0.38667738, -0.013958013, -0.014098911, 0.12806492, -0.43512627, 0.29051125, 0.088167734, -0.0016704106, 0.27442664, -0.1774538, -0.061977755, -0.04316271, 0.06862872, -0.1687212, 0.010066939, -0.045076214) * inp_3_1_0;
    result0 += M4(0.23646492, 0.12221961, 0.08792804, -0.11165574, 0.58862966, -0.29182553, 0.154044, -0.11469537, -0.10801218, 0.04355897, 0.003489611, 0.019103685, 0.44119468, -0.072586566, 0.09481495, -0.008427616) * inp_3_2_0;
    result0 += M4(-0.17821169, -0.07828111, 0.02136548, 0.04524539, 0.3586892, 0.0052724457, -0.016201537, -0.06554779, -0.28164774, 0.19573233, 0.021954358, -0.051506773, 0.038611237, -0.07886755, 0.001235163, -0.10061747) * inp_3_0_1;
    result0 += M4(0.19469437, -0.22871219, 0.10570473, 0.070096724, -0.5053033, 0.5037201, -0.010861296, 0.064432085, -0.5705244, 0.7074666, 0.08570293, 0.0066878735, -0.2474292, 0.12228734, 0.07876732, 0.08228548) * inp_3_1_1;
    result0 += M4(0.052865103, -0.135386, -0.17840305, 0.07375738, -0.52527547, -0.09600031, -0.2769337, -0.11767188, 0.010607303, 0.26875997, 0.044240538, 0.17185462, -0.2141148, 0.16704185, 0.10278378, 0.019069215) * inp_3_2_1;
    result0 += M4(-0.12206405, 0.09364742, -0.02090122, 0.07911478, -0.25621665, 0.18240629, 0.16461442, -0.110864796, -0.10534175, -0.24364832, -0.0983192, 0.35623276, -0.07754378, 0.0735466, 0.03908676, 0.13590974) * inp_3_0_2;
    result0 += M4(0.042330258, 0.12941854, 0.066910826, -0.6101357, 0.11077158, -0.22403188, -0.042876244, 0.35546535, 0.4536791, -0.046454683, -0.18498902, 1.921074, -0.011940973, 0.09208784, -0.034466036, 0.4764789) * inp_3_1_2;
    result0 += M4(-0.088313736, 0.084419064, -0.05408502, -0.14869875, 0.063842006, -0.0858642, -0.17670572, 0.102335714, -0.27520984, -0.05593598, 0.058648348, 0.26707348, -0.09245233, 0.005327834, -0.10028931, 0.24308197) * inp_3_2_2;
    result1 += M4(0.07275083, 0.051978312, 0.13320754, 0.052508052, -0.22667085, -0.040920626, 0.2000262, 0.15627812, -0.115996495, 0.2280341, 0.16935171, 0.12974705, 0.07244811, 0.06731131, 0.06922365, -0.069889314) * inp_3_0_0;
    result1 += M4(-0.13358778, -0.048514493, -0.252944, -0.038059417, 0.12852393, 0.16185267, 0.06688297, 0.22358474, 0.070791386, -0.24829464, -0.085984305, -0.062058013, -0.31819364, -0.15967116, 0.011055381, 0.11558539) * inp_3_1_0;
    result1 += M4(-0.26128665, -0.107635885, 0.16838697, -0.009065508, -0.14053339, 0.028977204, 0.010679354, -0.16720323, 0.07929696, -0.110461764, 0.010754434, -0.01901896, 0.2204538, 0.032959778, -0.057156987, -0.1346777) * inp_3_2_0;
    result1 += M4(-0.014162192, 0.10769761, -0.09027503, -0.078676015, 0.32543942, 0.07002523, 0.12465922, -0.4424531, -0.38920033, 0.21915156, 0.013123455, 0.4055458, 0.24414726, 0.5459755, -0.0020475294, 0.5379787) * inp_3_0_1;
    result1 += M4(0.030635662, 0.11752426, -0.008386641, 0.052777033, -0.06416668, -0.11105759, 0.020185485, 0.36244687, -0.02575017, 0.0007025632, -0.1642097, -0.2600468, -0.38149124, -0.046423342, -0.01826225, 0.07769857) * inp_3_1_1;
    result1 += M4(0.06473626, -0.09179956, -0.0016248071, -0.091086954, -0.08738516, -0.3485293, 0.053522382, -0.04240563, -0.06743648, -0.06357201, 0.068770975, -0.078283854, 0.53515375, 0.001911782, 0.08200643, -0.06631656) * inp_3_2_1;
    result1 += M4(0.39626437, 0.24433684, 0.0229351, 0.0719843, -0.18587705, 0.33827612, -0.09972768, 0.3133535, -0.0055761975, -0.97270155, -0.29256856, 0.35455066, 0.24266425, 0.15931381, -0.15242837, 0.48540077) * inp_3_0_2;
    result1 += M4(0.082974225, 0.26744667, 0.39540932, 0.083408244, -0.17268912, -0.1883257, -0.28752398, -0.3600974, 0.69832534, -0.707039, -1.3303056, -0.3127223, -0.32259887, -0.1932427, -0.13930427, -0.04276086) * inp_3_1_2;
    result1 += M4(-0.2394472, -0.027748674, 0.17205685, 0.038405344, 0.01778288, 0.030607872, -0.08229092, 0.05621025, 0.13070576, -0.32699585, -0.2935271, -0.09586586, 0.29683906, -0.17885156, -0.116707146, -0.09452113) * inp_3_2_2;
    result2 += M4(0.11466293, 0.1320264, 0.51896584, 0.13038322, 0.13415861, 0.044304904, 0.6130903, 0.35761315, 0.07930369, 0.024022114, -0.22278199, 0.34517473, -0.036542453, 0.050229106, -0.059924103, 0.4905263) * inp_3_0_0;
    result2 += M4(0.30265692, -0.11619391, 0.051180538, -0.09355221, -0.24896824, 0.022067633, -0.039420273, -0.6852385, -0.13580568, -0.095919035, 0.09615243, 0.10748037, -0.034989357, -0.10794724, -0.03240889, 0.0041804966) * inp_3_1_0;
    result2 += M4(0.19161788, 0.37226424, 0.26199207, -0.00966047, -0.09311628, -0.123531334, 0.35205078, -0.026784386, 0.075141765, 0.16193606, -0.049284942, -0.06381972, 0.12807924, 0.18381247, 0.07272302, -0.15676169) * inp_3_2_0;
    result2 += M4(-0.043866467, 0.06203189, -0.39319578, -0.02553887, 0.03207668, 0.30482563, -0.80989635, 0.03667427, 0.10579708, -0.17582077, 0.06357788, -0.016298423, -0.014802774, 0.1435562, -0.0029521505, -0.09370385) * inp_3_0_1;
    result2 += M4(0.047536258, -0.1414256, -0.35086772, -0.4224538, 0.22655317, -0.30908108, 0.09954645, 0.07051316, -0.21859206, 0.117453486, -0.025747687, 0.05607388, 0.09177305, -0.34615248, 0.016890615, 0.12690961) * inp_3_1_1;
    result2 += M4(-0.08314472, 0.07736484, 0.044940785, -0.10703769, -0.13277064, 0.082065396, -0.47311255, 0.16587558, 0.13916788, 0.26960036, 0.19018613, -0.29801637, -0.19106476, -0.22700366, -0.15080671, 0.07366832) * inp_3_2_1;
    result2 += M4(0.001407707, 0.019798618, 0.122219525, 0.3534361, -0.028481051, -0.024961304, 0.5975486, 0.4813666, 0.12400087, -0.064900726, 0.21552472, 0.023609752, 0.12883408, -0.019823229, 0.16792274, 0.1333746) * inp_3_0_2;
    result2 += M4(-0.41369435, -0.18394558, -0.03960954, 0.23889355, 0.19613002, -0.07613462, -0.6558519, -0.12631392, 0.78811455, 0.23489305, 0.0051918887, 0.16727266, 0.23137984, -0.13029449, 0.21914786, 0.016574869) * inp_3_1_2;
    result2 += M4(-0.62607414, -0.0022482167, 0.14768359, 0.22817448, 0.13197914, 0.0048574093, 0.262214, -0.087652974, 0.2675506, -0.16502745, -0.1853077, -0.07699572, 0.20116484, 0.17241962, -0.04169512, 0.026122387) * inp_3_2_2;
    result3 += M4(0.03496412, -0.08157761, -0.24111687, 0.10356388, -0.08233209, -0.23320775, 0.31773973, 0.096320584, 0.015713211, -0.05422051, 0.06413361, -0.13377298, -0.03585753, 0.009467615, -0.03682424, -0.11271174) * inp_3_0_0;
    result3 += M4(0.10700509, -0.07976084, -0.1706298, -0.00075756805, -0.148012, -0.078161314, -0.24625698, 0.13739848, -0.071832806, 0.13850465, 0.22685482, 0.10862865, 0.22856979, -0.053089302, -0.12304055, 0.023659445) * inp_3_1_0;
    result3 += M4(-0.1187224, 0.063101836, -0.2098877, -0.011280016, -0.24163601, 0.1526849, 0.059459854, 0.04443207, -0.05840259, -0.061959334, -0.12963349, -0.020902699, 0.07774395, 0.006559914, -0.17211609, 0.04464852) * inp_3_2_0;
    result3 += M4(-0.077475265, 0.3488719, 0.123814434, -0.00728778, -0.07460657, 0.3840279, 0.60401005, -0.39829183, 0.195162, -0.13675204, 0.0039018127, -0.27625877, 0.15285434, 0.10690827, 0.094827734, -0.4427871) * inp_3_0_1;
    result3 += M4(0.1861074, -0.009991724, -0.12243396, 0.18921372, 0.6269301, -0.039612163, -0.017026523, -0.07752855, 0.15242158, 0.18018858, 0.364971, 0.30366787, 0.13995485, 0.06247014, 0.021532245, -0.7914095) * inp_3_1_1;
    result3 += M4(-0.111167006, 0.16639523, 0.3321353, 0.0042683664, -0.1164887, 0.1394445, 0.11105546, 0.02493298, -0.39644614, -0.04193579, -0.41059917, 0.24879394, 0.1766051, 0.17062962, 0.3108197, 0.032690935) * inp_3_2_1;
    result3 += M4(-0.001962409, -0.27633554, -0.4295362, -0.13979378, 0.09654376, -0.4192799, 0.19176672, -0.16228424, 0.006823885, 0.3348683, -0.20428148, -0.113122374, 0.14910796, -0.2890379, -0.2518822, -0.17316103) * inp_3_0_2;
    result3 += M4(0.105454445, -0.6611628, 0.41942677, -0.25815234, -0.11122521, -0.04151997, -0.7879003, 0.11603967, 0.18188366, 0.6495514, -0.5512421, 0.14711231, 0.10529127, -0.021905715, 0.033601012, -0.0040558064) * inp_3_1_2;
    result3 += M4(-0.22283702, -0.32654893, 0.13767588, 0.02772986, 0.06863771, 0.052546766, 0.36543941, 0.22437488, -0.2795344, 0.020695407, -0.32223746, -0.04923505, -0.03761671, 0.09252581, -0.1696686, 0.12158296) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.0033513857, 0.021314263, -0.016744953, 0.04263744);
    V4 result1 = V4(-0.017971015, 0.07959556, 0.02841963, 0.04117082);
    V4 result2 = V4(0.05907365, 0.060527653, -0.088798806, 0.03872713);
    V4 result3 = V4(-0.02133247, 0.020802008, 0.022473387, 0.007759642);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.044673864, 0.16890006, 0.018326763, 0.04631848, 0.0076797856, -0.02678101, -0.060004953, -0.024182783, -0.23081113, 0.21878536, -0.075637735, -0.015361155, 0.12137844, -0.050741736, 0.060127188, -0.029729337) * inp_0_0_0;
    result0 += M4(-0.079724334, -0.08632866, 0.09553065, 0.043866307, -0.041460924, -0.112113416, -0.040573433, -0.05313356, 0.20855492, 0.041933622, -0.09319897, -0.05282562, -0.13866031, 0.5739282, 0.25638816, 0.25295284) * inp_0_1_0;
    result0 += M4(0.11878229, 0.013823504, -0.0063650087, -0.025065916, -0.0326192, -0.023197485, -0.009059511, 0.00034045364, 0.22591653, 0.12641042, 0.1062529, -0.0016276927, -0.048718095, 0.09112502, 0.029692972, 0.0079476405) * inp_0_2_0;
    result0 += M4(-0.17213218, -0.18514206, 0.027545936, 0.01120519, -0.10117889, -0.04299038, -0.16694295, -0.073224954, 0.020092444, 0.1355113, 0.19169585, 0.07308997, 0.11973815, 0.04105748, -0.019994691, -0.03675066) * inp_0_0_1;
    result0 += M4(-0.1034592, 0.5554557, -0.22972167, -0.0036990605, 0.106621765, -0.045825634, -0.1909396, -0.030583609, 0.107825644, 0.109384365, -0.0026623523, 0.06017391, -0.8576778, 0.10273001, -0.2971661, 0.06265158) * inp_0_1_1;
    result0 += M4(0.05755589, -0.21272102, 0.19379857, 0.07321834, -0.041195635, 0.36369085, -0.13152073, -0.00553204, -0.16674238, -0.46402103, -0.05375615, -0.011723811, -0.9720666, 0.11518719, 0.13126604, 0.12771793) * inp_0_2_1;
    result0 += M4(0.036194388, 0.4726716, -0.14702277, 0.104583286, 0.23942237, -0.057744395, 0.15332553, -0.052182484, 0.05533167, 0.0402938, -0.07490929, -0.08131688, 0.1047316, -0.17136274, 0.05406912, -0.047235418) * inp_0_0_2;
    result0 += M4(1.0959367, 0.57501316, 0.8667703, 0.39985713, 0.36133832, 0.16896342, 0.13077787, -0.039671525, -0.31970793, -0.49557936, -0.029002663, -0.16366598, 0.25113294, -0.010740831, -0.01992223, -0.008000359) * inp_0_1_2;
    result0 += M4(-0.40230313, 0.13483329, -0.4065813, -0.24882607, 0.30594093, -0.15725382, -0.051072672, -0.12097287, 0.1217703, 0.1501293, 0.06299853, 0.12984066, -0.35402662, 0.11072536, 0.063223585, 0.01678752) * inp_0_2_2;
    result1 += M4(0.051089026, -0.12062617, -0.03413756, 0.12696481, -0.0074382094, 0.024979487, 0.09779802, 0.15215613, -0.28431368, 0.05082632, 0.019086761, -0.0041837334, -0.3503974, -0.412584, 0.038446914, 0.50533533) * inp_0_0_0;
    result1 += M4(-0.117987536, 0.016614618, -0.06651107, -0.14845401, -0.10419081, -0.044409085, -0.051293623, 0.07034349, 0.46298757, -0.030316675, 0.27731785, -0.20789942, -1.3197119, -1.1909479, 0.055143856, -0.21978727) * inp_0_1_0;
    result1 += M4(0.16038105, 0.080256425, -0.0070713237, 0.13532488, 0.10238756, -0.22330995, 0.04158884, 0.18008813, -0.012894478, 0.27301264, -0.19111773, 0.058673292, -0.16004169, -0.72292066, -0.37820035, 0.10849866) * inp_0_2_0;
    result1 += M4(0.05453611, 0.027274031, -0.11150574, 0.115197234, 0.060089845, 0.38600674, 0.3074956, -0.08024482, 0.002565783, -0.42571875, 0.15333717, -0.18605061, -0.31330466, -0.016821343, -0.036331248, 0.13932236) * inp_0_0_1;
    result1 += M4(0.085682265, 0.013691459, 0.5207562, 0.03603595, -0.81455874, 0.038688164, 0.3732168, 0.24781804, 0.14305726, -0.09115886, -0.8776059, -0.57320946, -0.011364174, -0.38412103, 0.19659932, 0.58396757) * inp_0_1_1;
    result1 += M4(-0.349179, -0.024101244, -0.30395657, -0.0065707006, 0.12903668, 0.07516986, 0.31914717, 0.20568056, -0.16285294, 0.25128457, 0.2723734, 0.57036215, -0.008042642, -0.20833243, -0.0679534, 0.21104929) * inp_0_2_1;
    result1 += M4(-0.04427289, -0.23314194, 0.28289363, -0.017680638, -0.058233213, 0.11203092, 0.14880058, 0.26840058, 0.087915875, -0.1872391, -0.08067982, -0.08510574, -0.0716453, -0.05855173, 0.033532634, 0.14066811) * inp_0_0_2;
    result1 += M4(-0.1309615, -0.975574, -1.6319715, -1.380319, -0.07973041, 0.07793303, 0.28577238, -0.04843633, 0.15430984, -0.29543325, -0.07266022, -0.25985017, -0.16263846, 0.027201314, 0.04455361, -0.3875898) * inp_0_1_2;
    result1 += M4(-0.39700344, 0.96286255, 0.36119983, 0.89733183, 0.0476976, -0.15608595, 0.23556794, -0.2746193, 0.048953366, 0.032980092, 0.10564239, 0.22562088, 0.06196758, -0.1068183, 0.002913665, 0.28542125) * inp_0_2_2;
    result2 += M4(0.11099702, -0.028446555, -0.12189412, -0.08569532, 0.021722117, -0.03328646, -0.006245211, 0.07849236, 0.05176919, 0.18240747, -0.07578802, -0.10577307, 0.3050549, 0.08414472, -0.21160609, -0.37095398) * inp_0_0_0;
    result2 += M4(0.060599323, -0.039040744, -0.06971363, 0.024802728, -0.06036769, -0.06903029, 0.12916355, 0.016146604, 0.1050243, -0.06210324, -0.08980287, -0.09001153, 0.096666165, -0.10478241, -0.5291221, -0.12947364) * inp_0_1_0;
    result2 += M4(0.057449497, -0.09477059, -0.02439641, -0.0032323594, 0.08109539, -0.018620078, 0.01602029, 0.025379213, -0.08981556, 0.12172759, -0.12198553, 0.12548576, 0.07471386, -0.20869881, -0.20409815, -0.151036) * inp_0_2_0;
    result2 += M4(0.20121928, 0.21081418, -0.009534083, -0.29586866, -0.18087819, 0.0012293147, 0.22917232, 0.32919687, -0.41563678, -0.272324, -0.32639357, 0.021214217, 0.19435503, 0.14504018, -0.31445268, -0.32366908) * inp_0_0_1;
    result2 += M4(-0.016828405, -0.3702779, 0.12147141, -0.17744677, -0.10052433, 0.35939345, 0.29037997, 0.15967217, -0.09250241, -0.039123666, -0.95104223, -0.2613717, 0.31766245, -0.57923275, -3.4186964, -0.8240737) * inp_0_1_1;
    result2 += M4(-0.117065676, 0.09719185, -0.051313434, -0.058328137, -0.15629162, 0.1547711, 0.31020525, -0.019659722, 0.055811238, -0.07039228, -0.2951249, 0.015115525, 0.12149816, -0.07618874, 0.33686876, -0.35816664) * inp_0_2_1;
    result2 += M4(0.259623, 0.10338791, -0.8147584, -0.5734586, -0.036660623, -0.020906525, -0.05147583, 0.52682877, 0.30057988, 0.16042182, 0.13260694, 0.20865867, -0.18485755, 0.03416496, 0.002006606, -0.10856754) * inp_0_0_2;
    result2 += M4(0.6472585, 1.6961696, -1.1073024, -1.2067138, -0.114089675, 0.14082988, 0.108142406, 0.9363273, -0.18946348, -0.45692286, 2.0627747, -0.21224757, 0.25190654, -0.329635, -0.52814245, -0.3518014) * inp_0_1_2;
    result2 += M4(0.239372, -0.46185195, -0.8680062, -0.30663237, 0.0077150017, -0.040635172, 0.14153612, 0.438212, 0.06145478, 0.14366063, 0.13650711, 0.05564665, 0.14417438, 0.017600019, -0.0644692, 0.01770911) * inp_0_2_2;
    result3 += M4(0.05037154, -0.14103788, 0.062630355, -0.050099015, 0.007889198, 0.023577677, -0.032993052, -0.075025715, 0.05488625, -0.051396005, -0.055835146, 0.16954395, -0.057296112, 0.0054648626, 0.028443484, -0.06074936) * inp_0_0_0;
    result3 += M4(-0.011085146, -0.08240259, 0.02325466, -0.04899688, 0.02090442, 0.033744223, 0.03630814, 0.002116726, 0.07896711, -0.022206387, -0.08532703, 0.037845697, -0.048341572, -0.11814094, 0.0014676335, -0.2737829) * inp_0_1_0;
    result3 += M4(0.044156794, -0.12114715, -0.026455851, -0.04417599, 0.046033956, 0.0034786405, 0.024824232, 0.020849653, -0.25992772, -0.06921191, 0.054388467, -0.19003151, 0.26671046, 0.10295036, 0.041813876, 0.015025645) * inp_0_2_0;
    result3 += M4(0.13996005, 0.20861396, -0.03211407, 0.17955974, -0.00078614743, -0.014462031, -0.052445617, 0.26304024, 0.035270713, 0.0998955, -0.027763814, -0.30870575, -0.08691114, 0.11255756, -0.061502755, 0.015853291) * inp_0_0_1;
    result3 += M4(0.35781562, -0.13692802, -0.037352853, -0.058511887, 0.009531656, -0.105690494, -0.061734807, 0.50434446, 0.09833821, 0.0073722387, 0.13889079, 0.1178004, -0.15017244, 0.3954352, 0.3866385, -0.32902074) * inp_0_1_1;
    result3 += M4(-0.5895811, 0.23956959, 0.03616362, -0.1635466, 0.03012574, 0.10574119, -0.033091124, 0.25947407, 0.15818898, 0.00439965, -0.05668306, 0.28817344, -0.22478087, 0.3013607, 0.15607718, -0.14155771) * inp_0_2_1;
    result3 += M4(-0.043797154, -1.2375337, -0.18950173, -0.4467793, -0.047764618, -0.400699, 0.018738447, -0.022172803, -7.631355e-05, -3.6984134, -0.050038673, -0.015153733, 0.014893263, 0.31245223, 0.042830467, 0.14315972) * inp_0_0_2;
    result3 += M4(0.31947255, -0.8350615, 0.46217152, 0.939194, -0.22919264, -0.8006636, 0.23705927, 0.21314012, -0.023457605, -3.7949934, -0.04612899, -0.15557404, -0.0010337757, 0.18836121, -0.088148125, -0.0045568733) * inp_0_1_2;
    result3 += M4(0.11955906, 0.15404421, -0.2105798, 0.37344608, -0.023226136, -0.21270287, -0.06156345, 0.23038526, 0.011528937, -3.1911368, 0.078260966, -0.11289682, -0.0828423, 0.35930562, -0.06016009, 0.07793888) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.15495646, -0.10804713, -0.024168516, -0.036115766, -0.066093646, 0.019401697, 0.06580417, 0.048397724, 0.011171976, -0.21269564, -0.02817386, -0.008150221, -0.049417857, -0.005288634, 0.05930759, 0.018705383) * inp_1_0_0;
    result0 += M4(0.08582895, 0.121385224, -0.12717314, -0.0015015607, -0.0043711225, 0.60600007, 0.11117643, 0.07843128, -0.14754799, -1.083654, -0.24208131, -0.058899213, -0.106535375, 0.30075708, -0.1267336, -0.006191295) * inp_1_1_0;
    result0 += M4(0.31287655, 0.04961326, 0.021577902, -0.112495944, -0.1347913, 0.15263468, 0.023333186, 0.032133456, 0.28277403, -0.21559909, 0.007888119, -0.019823156, 0.03720585, 0.2237706, 0.17566626, 0.030286454) * inp_1_2_0;
    result0 += M4(-0.07914094, -0.020087566, 0.18452495, 0.020942397, -0.17917693, 0.1090242, 0.055254377, 0.05749087, -0.0318873, -0.37502027, -0.023557438, 0.037067074, 0.14687283, -0.042548504, -0.0009991935, -0.029481266) * inp_1_0_1;
    result0 += M4(0.17900579, 0.088451795, 0.081680715, -0.052065063, -0.115503676, 0.26574436, -0.05580038, 0.05796507, 0.42441902, -0.013999547, 0.79068696, 0.25592518, 0.13595763, -0.43827632, 0.14080253, 0.061841357) * inp_1_1_1;
    result0 += M4(-0.560139, -0.10232771, -0.094681695, -0.009229027, -0.91034955, 0.029396873, 0.142834, 0.05569364, 0.58008593, -0.0298404, -0.08174403, 0.008883288, 0.42140213, -0.27269515, -0.081413195, -0.022826163) * inp_1_2_1;
    result0 += M4(-0.15802751, -0.079494946, 0.10047942, 0.097209714, -0.03369475, 0.0055255033, -0.0022948459, 0.002069094, -0.04105729, -0.0233668, 0.05055935, 0.045610532, -0.038655262, -0.10543759, 0.028940024, 0.026598401) * inp_1_0_2;
    result0 += M4(-0.052033417, -0.06504147, 0.033015776, 0.13196935, -0.038548175, 0.09012373, 0.005943037, -0.019432638, 0.25743845, 0.12238969, -0.041552793, 0.02387882, -0.08250252, 0.012114821, 0.057736162, 0.04618938) * inp_1_1_2;
    result0 += M4(0.38889426, -0.06495011, -0.008427412, 0.016034484, -0.12704532, 0.039281655, -0.05422329, 0.0014815612, 0.024205655, -0.14644662, 0.0058989716, -0.014003595, 0.11688525, 0.014232278, 0.030306108, 0.0019146006) * inp_1_2_2;
    result1 += M4(0.3797265, 0.20380276, -0.33490378, -0.2654443, 0.026835466, 0.030357668, -0.038454723, 0.11200241, -0.00019151109, 0.023255982, -0.108948976, -0.2920383, 0.14769582, -0.012493653, -0.056369685, -0.014682753) * inp_1_0_0;
    result1 += M4(-0.106434904, 0.21621494, 0.14913623, -0.2423152, 0.28655836, 0.2782576, 0.039635476, 0.05578744, -0.29534334, -1.3754592, 0.26313227, 0.31761917, 0.04977985, -0.10480859, 0.04413185, -0.39550748) * inp_1_1_0;
    result1 += M4(0.043996237, -0.09811558, 0.08345622, -0.1373554, 0.21039754, 1.2992612, -0.25581762, 0.21560468, -0.11404186, -1.3310826, 0.1711699, -0.49596325, -0.17420349, -1.9056858, -0.06286259, 0.08352872) * inp_1_2_0;
    result1 += M4(0.19742405, 0.24831145, -0.35492787, 0.012878329, -0.012019463, -0.068162985, -0.011851894, 0.12155626, -0.13964196, 0.10754246, -0.054178536, 0.12413524, 0.08013937, -0.038447693, -0.06320532, -0.1115306) * inp_1_0_1;
    result1 += M4(0.34091097, -0.4434671, -0.10981476, -0.48140296, 0.271467, -0.15658349, -0.26086164, 0.038414206, -0.74802035, -0.30637532, 0.5981217, -0.053370792, 0.073516995, 0.036269765, -0.15495782, 0.2660357) * inp_1_1_1;
    result1 += M4(-0.18445587, 0.026558155, -0.12726279, 0.48743874, 0.17737609, 0.58866596, -0.09537882, 0.96043456, -0.046152364, -0.18824308, -0.14465323, -0.9716262, -0.023583151, -0.4951357, -0.52583504, -0.6189463) * inp_1_2_1;
    result1 += M4(0.12023859, -0.13659139, -0.091291, 0.12434727, 0.13387829, 0.12191437, -0.013666088, 0.036451053, -0.012075335, 0.06615956, 0.040493384, -0.08889995, 0.013932148, -0.0001133208, -0.005779216, -0.07147335) * inp_1_0_2;
    result1 += M4(-0.0828506, -0.2964586, 0.16788884, 0.2561992, 0.0145449685, -0.16297618, 0.0063349293, 0.53127104, -0.019337583, -0.008843904, 0.006002868, -0.39070562, 0.08172825, 0.11665438, 0.021996846, -0.08040355) * inp_1_1_2;
    result1 += M4(-0.08052946, 0.16849108, 0.09706058, -0.29257527, 0.038235713, -0.25240612, -0.010888454, 0.6345345, -0.11442188, 0.06277207, -0.062139127, -0.37682852, -0.046153396, -0.13346355, -0.008307233, -0.36315665) * inp_1_2_2;
    result2 += M4(-0.17535494, -0.28443527, 0.2654198, -0.30044106, 0.1520372, 0.016419254, 0.035053536, -0.124987714, -0.20301598, 0.013973632, 0.011863765, 0.07264557, -0.0020523847, -0.1501582, -0.017136276, 0.0275003) * inp_1_0_0;
    result2 += M4(-0.14071058, -0.009712991, -0.02992899, -0.14803785, 0.19181858, -0.072465375, -0.012548935, 0.01470698, -0.5101435, -0.23873146, 0.07010966, 0.047110636, -0.1498863, -0.27671576, -0.15453248, -0.10468211) * inp_1_1_0;
    result2 += M4(-0.016354809, -0.18077779, 0.054593533, 0.06784527, 0.15819867, 0.08359258, 0.058168974, -0.088079005, 0.023377778, -0.015743777, -0.025041815, 0.16643366, -0.38912514, -0.17917925, -0.25158244, 0.00867508) * inp_1_2_0;
    result2 += M4(-0.13741855, -0.26074278, 0.2796268, 0.15115197, 0.2112264, 0.026974741, -0.06624405, -0.24674438, -0.4753579, -0.02452204, 0.30782545, -0.433881, -0.06721917, -0.10340243, 0.0074797645, 0.092957616) * inp_1_0_1;
    result2 += M4(0.27202737, -0.16632822, -0.45262638, 0.58303225, 0.7475321, -0.18695456, -0.47458118, -0.9236184, -0.10694524, 0.5476785, 0.34033617, 0.16323096, -0.40647948, 0.06978568, 0.4796495, 0.2740901) * inp_1_1_1;
    result2 += M4(0.060808882, 0.024442233, -0.24578929, 0.030074973, 0.195091, 0.029070087, 0.41261613, -0.42132866, -0.27195644, 0.13164307, -0.30178982, 0.040147714, 0.32301542, 0.31131795, -6.093663, 0.25715822) * inp_1_2_1;
    result2 += M4(0.13904971, -0.2204757, 0.05229903, -0.26501128, 0.008466502, 0.007555191, -0.011770337, -0.12861915, -0.13252814, -0.041667573, -0.20071952, -0.170738, -0.01052454, 0.03467372, 0.03531402, -0.095739454) * inp_1_0_2;
    result2 += M4(-0.021940675, 0.40120995, 0.58670545, -0.26327273, 0.09095061, 0.07861282, 0.33306527, -0.31539488, -0.071383424, 0.14974345, -2.057769, 0.08410795, -0.16240968, -0.13291758, -0.27962252, 0.28252706) * inp_1_1_2;
    result2 += M4(-0.05742026, 0.10293432, 0.024287123, -0.14813185, 0.17613874, 0.012942997, -2.163109, -0.36037356, -0.1377413, -0.012207131, 0.22754914, 0.02822635, -0.15872414, -0.124920234, 0.17018758, 0.3652626) * inp_1_2_2;
    result3 += M4(-0.060130853, 0.039016563, -0.13307123, -0.15040807, 0.04709021, 0.038042866, 0.03141172, -0.006302517, -0.035927344, -0.0482277, -0.021762304, -0.10726251, -0.09786406, -0.029013336, -0.03481138, 0.031694867) * inp_1_0_0;
    result3 += M4(0.20232183, 0.069588274, 0.02103325, 0.090130925, 0.09587332, 0.056178845, 0.05861521, -0.11703365, -0.1629992, 0.07938826, -0.0125469295, 0.0020810268, -0.1978058, 0.016051073, 0.07881257, -0.027658854) * inp_1_1_0;
    result3 += M4(-0.80592066, 0.10938212, 0.024330722, -0.12681547, 0.12805188, -0.009431995, 0.06512958, -0.033874057, -0.6820629, -0.07959976, -0.009296449, -0.2932766, -0.633326, -0.2620959, 0.041138284, -0.03148749) * inp_1_2_0;
    result3 += M4(0.10890733, -0.62748593, 0.12718411, -0.004719628, 0.0069432943, 0.15802808, 0.020520294, 0.02655814, 0.037322782, -0.94750583, 0.046912137, -0.054447744, 0.054016206, 0.09867567, 0.04195936, -0.12567462) * inp_1_0_1;
    result3 += M4(0.5791147, 0.3951236, 0.06194227, -0.43499565, 0.038725942, -0.34335527, -0.019214904, 0.033334304, -0.13423909, -0.9225464, -0.1851136, 0.09548033, 0.25166073, 0.2844517, -0.008835416, 0.027187295) * inp_1_1_1;
    result3 += M4(-0.052356258, -0.08528227, -0.0928056, 0.077426754, 0.29064673, 0.142142, 0.036412306, 0.035029247, -0.18163598, -1.1805701, -0.03839805, -0.22774367, -0.13362108, -0.8322899, 0.027281394, -0.18933631) * inp_1_2_1;
    result3 += M4(-0.08593682, 0.96887493, 0.028601864, 0.034678992, 0.011220053, -0.9027832, -0.008191161, 0.0212731, 0.013741204, 0.64436823, 0.028752005, -0.012647949, 0.01557998, 0.0072230534, 0.020842247, 0.053889785) * inp_1_0_2;
    result3 += M4(0.25338948, -1.6516463, -0.04311938, 0.2154014, -0.10150426, -1.0041674, 0.064544454, 0.025485389, 0.071012214, 0.8231193, 0.0029379085, -0.061614014, -0.0037490223, -1.977664, -0.0020715704, 0.062070485) * inp_1_1_2;
    result3 += M4(0.027797159, -0.18316622, 0.041439038, -0.019519888, 0.019188324, 0.5777785, -0.04357657, -0.059860744, 0.005628978, -2.451902, 0.06728507, -0.030306907, -0.020051602, -1.5293913, 0.0024144286, 0.1462641) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.071359955, 0.037747454, 0.03249018, 0.06545943, -0.33649492, 0.011216963, 0.26368216, -0.05723034, -0.07142748, -0.06798854, 0.025582422, 0.015624595, 0.033554073, -0.11416714, -0.024223028, 0.03266489) * inp_2_0_0;
    result0 += M4(0.029031813, -0.41961873, 0.0014570045, -0.017602695, -0.2784135, 0.302773, -0.2122127, -0.041531898, -0.028986348, -0.08404821, -0.039863266, -0.004403132, 0.05360581, -0.025277527, 0.03939184, 0.023689708) * inp_2_1_0;
    result0 += M4(0.0021476063, -0.011368926, 0.04805172, 0.00897189, -0.10683475, 0.07084604, 0.072723225, -0.020105869, -0.027566407, 0.024889056, 0.031351786, 0.055770725, 0.07971574, -0.13591187, 0.03564887, 0.011682592) * inp_2_2_0;
    result0 += M4(-0.17737445, 0.29799953, -0.0008075732, 0.052831456, 0.15125856, 0.19665214, -0.09252323, 0.6818728, -0.040032815, 0.050490104, -0.013165652, 0.013312706, 0.057252586, -0.08755846, -0.026830977, -0.003997063) * inp_2_0_1;
    result0 += M4(0.8571112, -0.4995549, 0.23688413, 0.033488765, 0.40088835, -0.31984803, 0.3408928, 0.104522705, -0.03570481, 0.11647955, -0.058201116, -0.106572315, 0.12732105, -0.47090045, 0.01025045, -0.036254644) * inp_2_1_1;
    result0 += M4(0.89624095, -0.09870056, -0.03769457, -0.07134894, -0.0063118753, -0.0258296, -0.038251176, 0.1144319, -0.019543022, -0.05503577, -0.05753029, -0.011474277, 0.30580893, -0.40308297, -0.06011598, -0.021008257) * inp_2_2_1;
    result0 += M4(-0.09278083, 0.1393709, -0.066069275, 0.026472151, 0.103554845, 0.3789588, 0.2552762, 0.03541203, 0.032332372, 0.04940441, 0.053167447, 0.031304304, 0.17194013, -0.14484964, 0.06773594, 0.07377339) * inp_2_0_2;
    result0 += M4(-0.3879939, -0.14780092, 0.1033368, 0.020541685, -0.2779338, -0.081238866, -0.10721334, -0.12779744, 0.20977576, -0.023949396, 0.058001053, -0.017725637, -0.008521532, -0.41207087, 0.1741671, 0.13816641) * inp_2_1_2;
    result0 += M4(0.40378734, 0.035369914, -0.050005004, 0.032424163, 0.0026610363, 0.046972226, 0.056235485, 0.0029351837, -0.14510688, -0.0031865821, -0.0047758906, -0.01472944, 0.6802009, -0.053942185, 0.16672444, -0.0016505786) * inp_2_2_2;
    result1 += M4(-0.0711167, 0.08833712, -0.10193424, -0.15012838, 0.40491807, 0.09581819, -0.11795844, 0.92554903, -0.16271012, 0.1890564, 0.05837416, 0.0008505702, -0.016151322, 0.0647085, 0.015756758, -0.15232562) * inp_2_0_0;
    result1 += M4(-0.10669341, -0.39849746, 0.12050473, -0.17858388, -0.40994203, 0.3191187, 0.05054658, 1.0126011, -0.21194863, 0.19700575, 0.098852076, -0.10855167, -0.009813528, -0.16108099, -0.004005827, -0.17268181) * inp_2_1_0;
    result1 += M4(0.1391036, -0.06729737, 0.080406845, 0.17608932, 0.23511633, -0.019999633, -0.06992726, 0.34073475, -0.22967923, 0.25259438, 0.18111297, 0.045560103, 0.05631558, 0.2474228, -0.009766386, -0.26966166) * inp_2_2_0;
    result1 += M4(0.18530743, -0.23821281, 0.06423126, -0.22455984, 0.20634502, 0.6514902, 0.32918686, -0.56779146, -0.1676311, 0.17835219, 0.13331856, 0.14712137, -0.19618337, 0.04363562, 0.118212245, -0.12834005) * inp_2_0_1;
    result1 += M4(0.24519058, 0.9162373, -0.3144784, -0.8365364, 0.029943727, -0.55828774, 0.1665371, -1.7075925, -0.0053562066, 0.1263192, 0.10026936, 0.28405923, 0.031643208, 0.36496323, -0.01653172, -0.20985033) * inp_2_1_1;
    result1 += M4(-0.10288054, 0.025504515, 0.13877878, 0.34308356, 0.05378419, 0.14047144, -0.03846809, -0.21442215, -0.092462614, 0.20752949, 0.2417616, 0.19504093, -0.2538584, 0.23744695, -0.019299433, -0.75049263) * inp_2_2_1;
    result1 += M4(0.08419088, -0.053258672, -0.0414625, -0.25268805, -0.15842968, -0.017932212, 0.16758944, 0.74226284, -0.00864368, 0.194237, 0.05312297, 0.25609493, -0.054062143, 0.10963456, 0.04288408, -0.15811455) * inp_2_0_2;
    result1 += M4(0.058185004, 0.092674755, -0.08196869, 0.7407409, 0.27481413, 0.709304, 0.14304966, 0.5664406, -0.015433402, 0.14122602, 0.013702066, -0.0074535185, 0.10412712, 0.11950212, 0.1523535, -0.35522103) * inp_2_1_2;
    result1 += M4(-0.0037741498, 0.07353068, 0.052070975, -0.4932145, 0.006057257, -0.08186301, 0.04522179, -0.13454762, 0.03251641, 0.32784948, 0.073237196, 0.17111145, -0.025053695, 0.2043033, -0.0715439, -0.77052987) * inp_2_2_2;
    result2 += M4(0.31415638, 0.00033448884, 0.06623705, 0.049529325, -0.13693534, -0.044269904, 0.19430417, 0.0958715, 0.08457852, 0.15057945, 0.16749266, -0.043878015, -0.13753657, 0.08130108, 0.010563482, 0.121145554) * inp_2_0_0;
    result2 += M4(-0.05963404, 0.42383888, 0.3828379, 0.015616062, 0.27379057, 0.087925784, 0.25920212, 0.12364706, -0.123951204, 0.22204502, 0.17717713, -0.08369146, -0.054130703, 0.09513941, 0.0072397445, 0.09847487) * inp_2_1_0;
    result2 += M4(-0.18458515, 0.3446539, 0.17061125, 0.09721875, 0.036723506, 0.055364072, -0.025115341, 0.007470675, -0.003566137, 0.30142623, 0.15064631, -0.08787026, -0.04986085, 0.078615785, 0.007679673, 0.048825152) * inp_2_2_0;
    result2 += M4(0.12641902, -0.005269145, -0.13944545, -0.05463742, -0.16133249, -0.17864233, 0.1322681, 0.26945373, 0.01304449, 0.09403233, 0.12702657, -0.23866744, -0.2918219, 0.07567789, 0.010126235, 0.053805947) * inp_2_0_1;
    result2 += M4(-0.44884062, 0.34564424, 0.41654253, -0.30808926, 0.014736876, -0.46095622, 0.23395029, -0.11696759, -0.03267464, 0.16774622, 0.13841827, -0.37194768, -0.56745553, 0.19933994, 0.06437447, 0.05093283) * inp_2_1_1;
    result2 += M4(-0.030062914, 0.039793923, -0.2948382, 0.0049361684, 0.05815596, 0.0011732817, -0.09250124, -0.12631407, -0.15649714, 0.121519625, 0.3495581, -0.19704966, -0.15623768, 0.20404154, 0.0057652467, -0.13799357) * inp_2_2_1;
    result2 += M4(0.18762459, 0.08817672, 0.14068216, 0.1768474, -0.12970112, 0.11087485, 0.6505474, 0.34593588, -0.08080281, 0.050724518, 0.15323326, -0.01103874, -0.15713786, 0.08344407, -0.003932147, 0.12273208) * inp_2_0_2;
    result2 += M4(-0.27930865, 0.31365535, 0.54510653, -0.15317103, -0.40499175, 0.12208553, -0.51946276, -0.18971841, -0.038156565, 0.0861986, 0.116049714, -0.4067343, -0.6444445, 0.23566, 0.3102016, 0.26706237) * inp_2_1_2;
    result2 += M4(-0.055333443, -0.07080428, -0.041747555, -0.005789255, -0.04346027, 0.0023332415, 0.2825555, 0.13824074, 0.16403559, 0.17517768, -0.09834761, -0.27129644, -0.44040182, 0.08193737, -0.040723957, 0.2268654) * inp_2_2_2;
    result3 += M4(-0.007973518, -0.040235367, -0.0017672925, 0.020523457, -0.09034361, -0.024603773, 0.07424104, 0.15570304, 0.037109654, -0.0065427353, 0.031829085, 0.0022720366, 0.025660204, -0.0051308163, -0.0129442895, -0.056885224) * inp_2_0_0;
    result3 += M4(-0.11952997, 0.120705016, 0.0035248252, -0.18396486, 0.11395861, 0.17318945, -0.09651385, 0.13633415, 0.08913605, 0.008990694, -0.0033365185, -0.09052485, 0.006327975, -0.025364323, 0.0167077, -0.004909081) * inp_2_1_0;
    result3 += M4(0.0038234496, -0.028658148, -0.033758026, -0.20495333, 0.057183042, -0.061806694, 0.038788006, -0.08857912, 0.06298442, -0.031092396, 0.025188927, 0.06489817, -0.011536913, 0.008836902, 0.013018598, -0.019263681) * inp_2_2_0;
    result3 += M4(0.0077311355, 0.2464322, 0.03493542, 0.028123185, 0.14388457, 0.09322022, 0.17861106, 0.46821308, -0.017697591, 0.07489137, -0.00030233795, 0.07320096, -0.0364401, -0.014487112, -0.036056604, -0.008237767) * inp_2_0_1;
    result3 += M4(0.29427928, 0.25754744, 0.3579973, 0.30006218, 0.26359007, 0.18000004, 0.21510316, -0.055797666, -0.078068614, 0.0066195037, -0.10113508, -0.07431918, 0.07745767, -0.026598573, 0.00869883, -0.11502831) * inp_2_1_1;
    result3 += M4(0.19509542, 0.22791234, 0.0021476347, -0.009063622, 0.069520794, 0.042631537, 0.0030561136, 0.14365011, -0.00877239, -0.10399224, 0.028032748, 0.06479798, -0.011506996, 0.028481629, -0.0427225, 0.1222704) * inp_2_2_1;
    result3 += M4(0.0020324576, 0.078968935, -0.06733977, -0.09617746, -0.28275827, -0.5649425, -0.030475395, 0.16899586, 0.003535306, 0.017717479, 0.028920768, -0.035464812, -0.049194284, 0.055419944, 0.008682724, -0.022747843) * inp_2_0_2;
    result3 += M4(-0.02561446, -0.6941639, 0.08786903, 0.01345367, 0.13953294, -0.83658236, -0.0052272286, 0.10440495, 0.02087019, 0.29684705, 0.011994233, -0.087360114, 0.073396966, -0.3475947, 0.2170834, -0.106295265) * inp_2_1_2;
    result3 += M4(0.095249355, -0.5397404, 0.051437445, -0.07210943, 0.04426595, -1.2481848, 0.038630374, -0.027920898, 0.07487897, -0.061287895, -0.023828408, -0.19886123, 0.05151639, -0.7796636, 0.05607125, -0.06744673) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.115728304, -0.24879254, -0.027095178, 0.03339582, -0.029482834, 0.4172587, -0.09025703, 0.05327019, -0.045495417, 0.119820856, 0.085955694, 0.01329155, 0.14747119, -0.076843366, 0.06865409, 0.016014963) * inp_3_0_0;
    result0 += M4(0.076267, -0.29711425, 0.097975664, 0.09781635, 0.4117053, -0.5818732, -0.09531314, -0.196646, -0.12542306, 0.32909635, 0.052604273, 0.014153559, 0.16006474, -0.114914805, -0.10264178, 0.008865437) * inp_3_1_0;
    result0 += M4(0.01596302, -0.031333756, 0.009449403, 0.02140212, -0.3307044, -0.32371047, -0.18473038, -0.07558579, -0.23780578, 0.21907265, 0.01440756, 0.050870832, 0.09571871, -0.101390004, 0.035460018, -0.03018307) * inp_3_2_0;
    result0 += M4(0.069367126, -0.80646574, 0.22376466, -0.5133135, 0.14798065, 0.15626907, 0.01116747, 0.014579676, -0.33874914, 0.15214635, -0.030081145, -0.0062290225, -0.03084338, -0.107267, 0.009701525, -0.07043715) * inp_3_0_1;
    result0 += M4(-0.07852216, 0.5152039, 0.08563158, 0.07687529, 0.0004036352, -0.25236985, 0.25343376, 0.08496656, -0.30039248, 0.010678015, 0.09826138, 0.11434652, -0.38297573, -0.07611222, 0.11826709, 0.53873605) * inp_3_1_1;
    result0 += M4(0.21335572, 0.12665482, -0.029123692, -0.042541742, 0.0668992, -0.0023855628, -0.0016942915, 0.028694564, -0.31731495, 0.18199454, 0.05229605, 0.037137624, -0.18161026, -0.010331158, 0.007022904, -0.051723387) * inp_3_2_1;
    result0 += M4(0.007288926, 0.33452958, -0.012296387, -0.073991984, 0.069448024, 0.35714388, -0.1261928, -0.08076503, -0.18002649, -0.03581136, 0.014999141, 0.030869633, -0.067399465, 0.020724913, 0.009147966, 0.0284403) * inp_3_0_2;
    result0 += M4(-0.54876506, 0.30302525, -0.03141442, 0.015605806, 0.012516863, 0.10371746, -0.079019025, -0.07691136, -0.21989453, 0.011647494, 0.1018453, 0.017987985, 0.1762595, 0.029725878, 0.008505845, 0.021889003) * inp_3_1_2;
    result0 += M4(-0.12932253, -0.05188559, -0.012056677, 0.02243037, -0.009858408, -0.04261575, -0.06810049, -0.04729479, -0.23525886, 0.19856928, -0.005220761, 0.039209586, 0.3121889, 0.13256449, 0.06774136, 0.086090304) * inp_3_2_2;
    result1 += M4(-0.08831994, 0.16904014, 0.14101908, -0.03483747, -0.09160576, 0.28638104, 0.24252175, -0.17628926, -0.060490325, 0.2894117, -0.056417514, 0.1128898, 0.12926787, 0.054768365, -0.014016034, -0.030161755) * inp_3_0_0;
    result1 += M4(-0.11543151, -0.88771653, -0.060626503, -0.3778228, -0.010210205, 0.3812983, -0.44060832, -0.3062732, -0.0011698509, -0.0060252124, -0.050249103, -0.071212694, -0.025043061, -0.0066570262, -0.21822001, -0.49967068) * inp_3_1_0;
    result1 += M4(0.024170386, -0.008318239, 0.076223634, -0.2500016, 0.1330433, -0.10634287, 0.29255757, 0.13896763, -0.03202657, 0.16804211, 0.08323444, 0.32526687, 0.45359802, -0.950768, -0.16735059, -0.26269653) * inp_3_2_0;
    result1 += M4(0.07960904, -0.056541648, -0.044872783, 0.47557822, 0.0914221, -0.035126086, 0.03195837, -0.061265975, 0.07205626, 0.007936733, -0.037569012, 0.030004695, 0.048527535, 0.029527465, -0.044595897, -0.060393274) * inp_3_0_1;
    result1 += M4(0.20169163, -1.8292468, 0.6060842, 0.42704317, 0.030875163, 0.024936225, 0.016337555, -0.22445303, 0.21314067, 0.2915168, -0.11826456, -0.06977022, -0.46938825, -0.56833005, 0.7019819, 0.21114255) * inp_3_1_1;
    result1 += M4(0.07454832, -0.34544027, -0.055146284, -0.44722944, 0.018538967, 0.53931755, 0.012601, 0.14486374, 0.12468451, 0.12776668, 0.13957676, 0.66486275, 0.06027669, -2.0820153, -0.14779657, -1.6048099) * inp_3_2_1;
    result1 += M4(-0.23050998, -0.2927174, -0.047835417, -0.58411986, -9.767099e-05, 0.11193869, 0.025770454, 0.02143049, 0.024318477, 0.11824881, 0.08005884, -0.012256233, -0.11902347, -0.020559404, 0.032752726, 0.07199709) * inp_3_0_2;
    result1 += M4(-0.12815553, 0.27420524, 0.51864237, -0.005966362, 0.14141901, 0.17179908, -0.030919125, -0.13918741, 0.1340524, 0.21875677, -0.01483057, 0.08551386, 0.12168148, 0.20023283, 0.11935957, -0.51850384) * inp_3_1_2;
    result1 += M4(-0.0067226994, -0.02701832, -0.028181145, -0.16481979, 0.08861971, 0.41038775, 0.082389794, 0.05379896, 0.13510261, 0.24586895, 0.032723404, 0.22217059, -0.029140078, -0.28266263, -0.07244518, -0.83208364) * inp_3_2_2;
    result2 += M4(-0.064346835, -0.3604065, 0.03242604, 0.121403076, -0.12469742, -0.036648784, 0.09798007, 0.21300209, 0.15831372, -0.03357435, 0.1412043, -0.048172425, -0.107229605, -0.028389325, -0.04683288, -0.09476107) * inp_3_0_0;
    result2 += M4(-0.013746153, -0.14606515, -0.159372, 0.14362279, 0.31673327, 0.05099197, 0.09294321, -0.15983702, 0.15866111, -0.1089615, 0.092460506, -0.10268052, 0.018329443, 0.078727864, -0.27656063, -0.16738625) * inp_3_1_0;
    result2 += M4(0.041121606, -0.026772289, 0.04347949, 0.011590556, 0.06673569, -0.33938494, 0.086264305, 0.06100953, 0.11545165, -0.04770128, 0.059887752, -0.005216523, -0.20542529, -0.16358751, -0.07060862, -0.20124464) * inp_3_2_0;
    result2 += M4(0.30280316, -0.08467736, 0.022694105, 0.03583149, -0.0049172114, 0.100131676, 0.0217528, 0.067938775, 0.070876375, -0.12791172, 0.11264705, -0.5031013, 0.1014981, 0.053039674, -0.010954128, 0.08980786) * inp_3_0_1;
    result2 += M4(0.13184594, 0.2554158, 0.031295463, 0.16706797, -0.15121298, 0.047826983, 0.6279539, 0.057418343, 0.5635081, -0.4547826, 0.007190264, -0.16105664, 0.04972807, -0.047607645, -0.042920187, 0.18289411) * inp_3_1_1;
    result2 += M4(-0.13010323, -0.008452253, 0.13644989, 0.09848332, -0.101040766, -0.1892079, -0.12801701, 0.24220258, 0.22810365, -0.0695426, 0.09426739, -0.051308032, 0.00012453276, 0.008095516, 0.039929673, 0.2762903) * inp_3_2_1;
    result2 += M4(0.45422912, -0.35675278, -0.34460464, 0.05600137, 0.04520545, 0.058566235, 0.13646457, -0.025768287, 0.08494921, -0.07674803, 0.107119784, 0.09861858, 0.052874703, 0.036246013, -0.0500099, 0.048614617) * inp_3_0_2;
    result2 += M4(0.10730558, -0.3961704, 0.49124098, 0.11648739, 0.030923078, 0.05203076, 0.14435013, -0.094555415, -0.041499514, 0.010465119, 0.5391656, -0.20318404, 0.16175069, 0.07563313, -3.8426273, -0.0072179097) * inp_3_1_2;
    result2 += M4(0.07541625, 0.028218005, -0.09403886, -0.06512914, -0.060466573, -0.08158985, 0.25346854, -0.026634887, 0.1496171, -0.12940659, 0.09163961, -0.077818625, 0.2947245, -0.19970737, 0.19160858, -0.08479343) * inp_3_2_2;
    result3 += M4(0.010334821, -0.029667241, 0.018067002, 0.0713002, -0.0076944153, 0.07682656, -0.039547905, -0.11715569, 0.037740033, 0.055880032, 0.049457066, 0.022943879, -0.018212957, 0.010134897, 0.04334886, 0.007778756) * inp_3_0_0;
    result3 += M4(-0.095962375, 0.027019667, -0.015107902, 0.03147573, 0.13012637, 0.18649614, 0.11521434, 0.13531713, 0.026157299, -0.036757324, 0.045023736, 0.09824086, 0.012103297, 0.018369239, -0.015192229, -0.03443937) * inp_3_1_0;
    result3 += M4(0.08464381, -0.018724687, 0.0023193615, 0.022001488, 0.048938714, -0.09562813, -0.08612462, 0.36802265, 0.10872498, -0.00058440305, 0.020486273, 0.011269688, -0.008454661, 0.025877157, 0.032798316, 0.015510765) * inp_3_2_0;
    result3 += M4(-0.27445784, -0.12288467, 0.30340832, 0.014437314, -0.042934787, -0.23561354, -0.061077937, -0.08735383, 0.026195657, -0.025865445, 0.020066839, 0.09059537, 0.076574214, -0.023443036, 0.06408172, 0.043942936) * inp_3_0_1;
    result3 += M4(0.09984198, 0.11217358, -0.12240969, 0.50142807, -0.05227567, 0.33867452, 0.079497665, -0.43491006, 0.04659948, 0.058505677, 0.0058461367, 0.13330364, -0.14734647, -0.24783531, -0.094096385, 0.24756634) * inp_3_1_1;
    result3 += M4(-0.08811462, -0.0007457607, 0.06801681, -0.095068, -0.22164823, -0.11952145, -0.050398827, -0.19089781, 0.0698405, -0.019875795, 0.061299235, 0.013246009, -0.71135604, 0.09140068, 0.11689444, -0.42041767) * inp_3_2_1;
    result3 += M4(-0.08057232, 0.024092078, -0.002475941, -0.03316317, -0.01798668, 0.37752017, -0.0714033, -0.12935671, 0.03821106, 0.32417417, 0.03967679, 0.04025012, -0.050112452, 0.26760635, -0.010782526, 0.119253665) * inp_3_0_2;
    result3 += M4(0.011358224, 1.1638333, -0.035750654, 0.13954961, -0.080753416, -1.384453, -0.12600583, -0.14608614, 0.03248931, 0.038535513, 0.008347713, 0.16725779, 0.011538655, -1.3715132, 0.06988754, 0.1340847) * inp_3_1_2;
    result3 += M4(0.095369935, 0.028097771, 0.025004609, -0.013197952, 0.053083934, 0.4322879, -0.005403784, -0.11886505, -0.015636425, -0.5081469, 0.041732807, 0.16744028, -0.06812574, -1.9203638, 0.07999206, -0.0074219196) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0018429747, -0.050130818, -0.024923693, -0.018062638);
    V4 result1 = V4(-0.039507516, 0.007045823, 0.0037178975, 0.03604522);
    V4 result2 = V4(-0.004173924, 0.0060206875, -0.04603345, 0.014721914);
    V4 result3 = V4(-0.021584164, -0.008321982, 0.02219973, 0.0061751264);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06371248, -0.29935277, 0.35782427, 0.042743534, 0.15470205, 0.034423325, 0.13016587, -0.044541612, 0.05334181, -0.14004043, -0.12518068, -0.021612838, 0.09254327, 0.13477238, 0.06544408, -0.051361922) * inp_0_0_0;
    result0 += M4(-0.456816, -0.5187996, 0.12531096, -0.15375623, -0.07066332, -0.17828979, -0.1537547, -0.07866346, -0.10175287, 0.12610479, -0.4963429, 0.18678634, -0.20110764, -0.39323738, 0.13347402, -0.30033734) * inp_0_1_0;
    result0 += M4(-0.4002355, -0.1267034, 0.00031432437, 0.040159494, -0.02847996, 0.03370127, -0.04377953, -0.007659847, -0.22872552, -0.071437776, -0.12930469, -0.110334456, 0.035022244, -0.0888692, -0.04425918, 0.0034720956) * inp_0_2_0;
    result0 += M4(-0.2056093, 0.15362734, -0.221486, -0.033578232, 0.028524412, 0.06099886, -0.3057939, 0.27343935, 0.019576598, -0.1425807, -0.054896638, -0.06393566, -0.058788635, -0.12563474, 0.005279281, 0.2593252) * inp_0_0_1;
    result0 += M4(-0.075627066, 0.24127273, -0.4181681, -0.10100728, 0.07495806, 0.10958374, 0.2923174, -0.032255195, -0.15212205, 0.010730848, 0.4700093, -0.18386652, 0.038851783, 0.32352772, 0.39035732, -0.36663935) * inp_0_1_1;
    result0 += M4(0.093793586, 0.09751213, -0.13147396, -0.011058533, -0.14175895, -0.14216687, 0.15979522, -0.05434266, -0.16765285, -0.15910253, 0.0022047737, -0.0477986, 0.077368215, 0.07657999, -0.06996021, 0.28515717) * inp_0_2_1;
    result0 += M4(-0.047814965, -0.028562881, -0.28796118, 0.01621495, -0.016965635, -0.16598573, 0.3224607, 0.08815731, -0.05664641, -0.07250882, 0.050500765, -0.07664391, -0.17552692, 0.11988297, -0.07987129, 0.06983704) * inp_0_0_2;
    result0 += M4(-0.0594883, -0.04952096, -0.20471723, -0.028206823, 0.12805825, 0.070337825, -0.12740436, -0.070151925, 0.13484718, -0.00041714543, 0.0676035, 0.055344556, -0.04802836, 0.071319975, -0.43177515, 0.017182145) * inp_0_1_2;
    result0 += M4(-0.12686352, -0.046966285, -0.12548815, -0.050329145, 0.17090586, 0.13234909, 0.03088043, -0.016787626, 0.11104906, 0.038378965, -0.030959332, -0.0024110626, -0.2329248, -0.21554808, -0.2150884, -0.06742616) * inp_0_2_2;
    result1 += M4(0.37821996, 0.021279408, -0.052619357, -0.2439464, -0.036721975, 0.03879228, -0.01614616, -0.020318447, 0.046888288, -0.022911813, 0.024822734, -0.06777411, 0.037552208, -0.0005405628, -0.030159784, -0.15222363) * inp_0_0_0;
    result1 += M4(0.14701235, -0.028645419, -0.032684267, 0.1362297, 0.20944878, -0.010358225, 0.0040884614, -0.05505513, -0.08428736, 0.023835361, -0.014929086, -0.104789, -0.048661307, 0.026111547, 0.031891, 0.014873176) * inp_0_1_0;
    result1 += M4(-0.038815096, -0.036633886, -0.019468013, -0.044243068, 0.09455687, 0.009742823, -0.0102218, -0.25041187, -0.024790207, 0.031015163, -0.022828046, -0.18310827, 0.042567518, -0.015969492, -0.0031312944, 0.2522395) * inp_0_2_0;
    result1 += M4(-0.31965563, -0.031783387, -0.15763098, 0.0022533396, 0.056760628, 0.04874211, 0.11667757, 0.43511713, -0.056974262, 0.10952906, 0.087846056, -0.07656477, 0.071341, 0.014945943, -0.03737185, -0.035367616) * inp_0_0_1;
    result1 += M4(-0.34729472, 0.09767321, 0.052389752, -0.056931913, -0.02644541, -0.07907309, -0.047067747, 0.276759, -0.047332674, 0.34123948, 8.3536215e-05, -0.05539477, 0.027957274, 0.40260017, -0.1001636, -0.22508025) * inp_0_1_1;
    result1 += M4(-0.017386664, 0.010822106, 0.039761588, -0.021126095, 0.019519348, 0.009570426, -0.008682744, 0.074221395, -0.15088461, 0.0025989497, -0.050794642, 0.27541474, 0.2593924, 0.045452625, 0.021921398, -0.4738088) * inp_0_2_1;
    result1 += M4(-0.07366778, -0.09595843, -0.08226127, 0.22923304, 0.029684678, 0.028085386, 0.16841616, -0.48598266, -0.10241798, 0.05199112, 0.07092049, 0.021994594, 0.050399426, -0.062347837, -0.09733391, -0.2932224) * inp_0_0_2;
    result1 += M4(-0.11772306, 0.014294269, -0.024342401, -0.031811606, 0.20251349, 0.081995115, 0.029555526, 0.15643369, 0.055578522, 0.021504464, 0.050232843, 0.10692442, -0.16781361, 0.014056596, -0.12960973, 0.3706257) * inp_0_1_2;
    result1 += M4(-0.102105014, -0.011599963, 0.019262781, 0.045158226, -0.008445664, 0.07085224, -0.035994574, 0.20078868, -0.04751908, -0.019780153, -0.09478711, 0.026022682, -0.18687597, 0.03885845, 0.08105034, -0.2638811) * inp_0_2_2;
    result2 += M4(-0.14276956, -0.055178646, 0.038925134, -0.0008120168, 0.007730005, 0.161154, 0.015640989, 0.073925935, -0.025602724, 0.13601215, -0.07276437, 0.03944625, 0.0005382963, -0.02490796, 0.011044868, -0.09744754) * inp_0_0_0;
    result2 += M4(-0.15290265, -0.3553111, 0.043494653, -0.06586898, 0.077839404, 0.022903591, 0.014672141, 0.10046326, 0.015928343, 0.086988404, -0.110881284, 0.10852496, 0.16777039, -0.09258041, 0.17665826, -0.07770125) * inp_0_1_0;
    result2 += M4(-0.1142207, 0.07080611, -0.045507733, 0.15192187, 0.048857454, 0.08534909, -0.032565746, 0.032528605, -0.11262091, -0.006726526, 0.013577731, -0.11717843, 0.007825953, -0.09478694, 0.022247246, -0.014892261) * inp_0_2_0;
    result2 += M4(-0.27076918, 0.5757929, -0.13822137, 0.039688405, 0.24018218, -0.20887314, 0.037384674, -0.14806129, 0.032079764, -0.30352134, -0.07627922, -0.05481779, 0.1293962, -0.09768712, 0.041077543, -0.09556771) * inp_0_0_1;
    result2 += M4(-0.15311363, -0.05906398, 0.13177633, -0.096222535, -0.17181148, 0.41078892, -0.013657382, -0.21474433, 0.52835387, -0.34686497, -0.047723573, -0.010853757, -0.27973974, -0.31914806, 0.6776729, 0.09699307) * inp_0_1_1;
    result2 += M4(-0.03697793, 0.058028698, 0.015357852, 0.09690301, 0.025503498, -0.17981625, 0.054668266, 0.015833078, -0.015437971, -0.12761548, 0.036020614, 0.00239175, -0.14119726, 0.2318481, -0.14183182, 0.2653362) * inp_0_2_1;
    result2 += M4(-0.14751785, -0.061491128, -0.06571838, -0.02499789, 0.22214475, -0.13647264, 0.13767469, -0.09417703, -0.05518965, 0.07708167, -0.0016157195, 0.020468172, -0.03060562, 0.032906458, -0.06974728, 0.1468689) * inp_0_0_2;
    result2 += M4(-0.061284475, -0.1297391, 0.0136547275, -0.07625529, 0.047652297, 0.2564148, -0.0362413, -0.17461549, 0.1094152, -0.028816761, -0.0070476905, 0.03404475, -0.13995013, -0.089472204, -0.03872312, -0.35876486) * inp_0_1_2;
    result2 += M4(0.016671691, -0.0048834155, -0.010375244, 0.008067091, -0.009715119, 0.03596243, 0.12230493, -0.04468389, -0.01918745, 0.049066957, -0.06480353, 0.033433624, -0.15415071, -0.005443545, 0.10949382, -0.11288354) * inp_0_2_2;
    result3 += M4(-0.08747606, -0.15070297, 0.020628197, 0.06811362, 0.01821497, -0.04897932, 0.0036812876, -0.09295594, -0.010565826, -0.0716896, -0.037582543, 0.030143885, 0.03367712, 0.026631417, 0.030302562, 0.009766202) * inp_0_0_0;
    result3 += M4(0.12941366, -0.1172148, 0.0076807565, 0.026254078, -0.08469637, 0.12753315, 0.008166424, -0.018982483, 0.06154367, -0.018048855, 0.094245315, -0.06925049, -0.057314593, -0.04610409, -0.053963907, 0.08528091) * inp_0_1_0;
    result3 += M4(0.0041665393, -0.45318276, -0.018754013, 0.1484647, 0.055699397, 0.02184329, -0.015436297, -0.5614946, -0.06726677, -0.09909142, 0.025578987, -0.65494394, 0.011151433, -0.25216582, 0.023211379, 0.018943911) * inp_0_2_0;
    result3 += M4(-0.027906468, -0.4403697, -0.052322507, -0.056019247, 0.09441619, 0.43765697, 0.046780054, -0.07319487, 0.003988731, 0.00081179716, 0.1903839, 0.049430937, 0.046449192, -0.061286926, 0.0103777805, -0.04429786) * inp_0_0_1;
    result3 += M4(0.11023627, -0.28867686, 0.060262743, 0.05362334, -0.014477521, -0.15528026, -0.049105298, 0.004606784, -0.20249555, -0.22033866, 0.050389964, 0.041730255, 0.0213086, -0.33606336, -0.14135246, -0.057944153) * inp_0_1_1;
    result3 += M4(0.008745113, -0.13286845, -0.012338049, -0.046431262, -0.04909136, 0.06906068, -0.006792362, 0.09294884, -0.069276206, -0.112104125, 0.076048, 0.11161323, 0.21093345, 0.20777376, -0.024419904, -0.2555191) * inp_0_2_1;
    result3 += M4(-0.005803447, -0.20269908, -0.00040122992, -0.066465594, 0.061676137, 0.1386891, 0.06956405, 0.06114005, 0.0024458882, -0.04756683, 0.075249426, 0.043334674, -0.017201787, -0.22497736, 0.023069995, -0.033342697) * inp_0_0_2;
    result3 += M4(0.03677926, -0.25803575, -0.0022874337, -0.047159288, 0.016492719, 0.3272926, -0.013357815, 0.09659973, 0.009957353, 0.10404774, 0.08549246, 0.096128106, 0.0644616, -0.05818931, -0.2460763, -0.023392143) * inp_0_1_2;
    result3 += M4(-0.0048050503, -0.1658212, -0.012637505, -0.06085027, 0.0071477005, 0.042242017, 0.06320465, 0.049600955, -0.07019862, -0.19282995, -0.029046448, -0.02222294, -0.01944847, -0.14157115, 0.05211706, -0.07591135) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.021550594, 0.043660853, 0.017325863, 0.042101458, 0.118253656, -0.021135686, 0.11468932, 0.05766781, -0.1540989, 0.00032592396, -0.12202097, -0.0522449, -0.13247381, 0.27308235, 0.056771804, -0.04618268) * inp_1_0_0;
    result0 += M4(0.034767304, -0.06480737, 0.27748057, -0.015034497, -0.008451281, -0.2799591, 0.1675749, -0.11281361, 0.053244397, 0.36421984, -0.25722057, 0.107011296, 0.007504369, 0.28676224, 0.5345894, -0.21031941) * inp_1_1_0;
    result0 += M4(0.023160633, 0.008893138, 0.048848152, -0.00015916256, -0.009062229, -0.038916696, -0.010828766, 0.0024942535, 0.20258228, 0.20092419, 0.008047505, 0.105340846, 0.0409655, -0.15806861, 0.016978437, -0.048629217) * inp_1_2_0;
    result0 += M4(0.15278256, 0.025958357, 0.14947845, -0.062229086, -0.18911229, -0.100566, -0.09514621, -0.026404003, 0.037954655, 0.05104226, 0.036383953, -0.20557405, 0.042326108, 0.3855862, -0.13867036, -0.12014744) * inp_1_0_1;
    result0 += M4(-0.24986422, -0.48762596, -0.5634451, -0.11059465, -0.17926648, 0.055647578, -0.14611594, 0.11136227, 0.64181167, -0.15935905, -0.08385283, 0.013097637, -0.37216938, 0.53196204, -0.047189537, -0.15814127) * inp_1_1_1;
    result0 += M4(0.22479048, -0.3719041, -0.20980133, 0.2244875, -0.11455141, -0.12462929, 0.08395923, -0.31226772, 0.12455665, 0.14214344, 0.07522577, 0.2422952, 0.31386194, 0.16517933, 0.17641252, 0.12713894) * inp_1_2_1;
    result0 += M4(0.14946173, 0.0985316, -0.06195984, 0.052372042, -0.3058289, 0.015721688, -0.15850532, 0.033312883, 0.23528178, -0.06492852, 0.1330243, -0.031023052, 0.11427266, -0.17019647, 0.19989362, 0.09764726) * inp_1_0_2;
    result0 += M4(-0.1581263, 0.5022136, -0.050925367, 0.057436187, -0.4921423, -0.030100806, -0.057956092, -0.037415624, -0.07659755, 0.028932406, 0.51136005, 0.0018807629, 0.18509533, -0.33784974, -0.12228876, -0.07604011) * inp_1_1_2;
    result0 += M4(0.06877388, 0.16899769, 0.09586751, -0.0778657, 0.17377369, 0.088865474, -0.27642065, -0.16460064, -0.047157876, -0.09379341, 0.25728557, 0.10396151, -0.23084687, 0.078151606, 0.019618249, 0.009713622) * inp_1_2_2;
    result1 += M4(0.0061955117, 0.022649584, 0.009032349, 0.254068, 0.11890278, -0.01889274, 0.0018908681, -0.20218849, -0.15712522, 0.061470095, 0.030538296, 0.25955734, 0.08721614, -0.058954667, -0.08912224, -0.14037158) * inp_1_0_0;
    result1 += M4(-0.04803861, 0.011287062, -0.051103715, -0.34852204, 0.064413555, 0.023650236, 0.010833374, 0.19210134, -0.27903306, 0.038615137, -0.012434601, 0.12393677, -0.17577407, 0.05918931, 0.040050317, -0.41353595) * inp_1_1_0;
    result1 += M4(0.031403866, -0.0037042755, -0.0025852763, 0.099656366, 0.059729405, -0.04529048, 0.03340432, -0.005631101, -0.061396386, 0.02480925, -0.00056173245, -0.11355663, -0.15968373, 0.022234535, 0.01773108, -1.2206607) * inp_1_2_0;
    result1 += M4(0.10002389, 0.031989668, 0.020236362, 0.2803517, -0.015550881, 0.014964534, -0.06568652, -0.0402185, -0.073578745, 0.04707832, 0.08231337, 0.21928515, 0.2052089, 0.011482796, -0.31528845, -0.5391982) * inp_1_0_1;
    result1 += M4(-0.08911736, 0.16331069, -0.011735729, 0.17997804, 0.05214238, 0.03233371, 0.0022028636, -0.45566338, -0.04465997, -0.036450125, 0.042493142, 0.025189484, 0.60471094, 0.02838126, 0.06265912, 0.15261555) * inp_1_1_1;
    result1 += M4(0.05820841, -0.00978801, 0.0085657425, 0.21295145, 0.08963082, -0.0013702828, 0.026260054, 0.1362803, 0.010685066, 0.0046092393, -0.047839377, 0.091983505, 0.09187399, 0.05642787, 0.037042968, -1.9592905) * inp_1_2_1;
    result1 += M4(-0.124146156, 0.06236316, -0.03951915, 0.27654967, -0.05965901, -0.028378459, 0.0248275, -0.2395521, 0.090625346, 0.008982786, 0.088557184, 0.13047421, 0.17386642, 0.038599797, 0.06423757, -0.35061485) * inp_1_0_2;
    result1 += M4(0.03292107, -0.075665995, 0.016423408, -0.38156205, -0.08975884, 0.0056082187, -0.08030327, -0.3027598, 0.5058747, -0.019787654, -0.033623412, 0.0065381927, 0.028418854, -0.06965007, -0.19096306, 0.0287191) * inp_1_1_2;
    result1 += M4(-0.011217019, 0.04667869, 0.019087868, 0.06618199, -0.077874534, -0.002630301, 0.018499715, 0.17699577, 0.17667182, -0.02081401, -0.05956239, 0.3546631, 0.13487445, 0.016147628, 0.11672213, 0.015595154) * inp_1_2_2;
    result2 += M4(0.04714913, -0.01202334, 0.033786908, -0.020684535, 0.13440149, 0.045215704, -0.03409996, -0.11903668, -0.07164594, -0.04407957, 0.04597281, -0.012971836, 0.10831894, -0.09504476, -0.07226135, -0.06507709) * inp_1_0_0;
    result2 += M4(-0.05218723, -0.005684887, 0.02598959, -0.11822198, -0.001307799, 0.0408157, 0.006150229, -0.040910013, -0.1304289, 0.03787366, -0.034800403, 0.06263105, -0.054730583, 0.06596522, 0.0085442355, -0.2134482) * inp_1_1_0;
    result2 += M4(-0.092324115, -0.048344705, -0.01965894, -0.028156163, 0.060186576, 0.048870206, -0.04751581, 0.07658429, 0.02610613, 0.025744502, -0.009529157, -0.03755002, 0.02109841, 0.12853219, 0.059209187, -0.06902861) * inp_1_2_0;
    result2 += M4(0.019837039, -0.004548878, 0.061016787, 0.11316206, -0.27938938, 0.2382248, 0.040833667, -0.15665185, -0.098792836, -0.0894844, 0.08273401, 0.08046588, -0.0051898686, 0.6122177, 0.087549254, -0.26313734) * inp_1_0_1;
    result2 += M4(0.23871413, 0.039351974, 0.15792945, -0.023137253, -0.20429334, 0.30047378, -0.014381299, -0.34592888, 0.47766936, 0.03720446, -0.119894795, 0.39436316, 0.4022062, -0.019695066, -0.0034436604, -0.16141956) * inp_1_1_1;
    result2 += M4(-0.0010370754, -0.0039851763, -0.01065926, 0.16088201, -0.051441506, -0.037977338, 0.029353606, -0.0022747044, 0.09629422, 0.099714406, -0.059809703, -0.03730926, 0.013286016, 0.11921746, -0.0010335364, 0.13074893) * inp_1_2_1;
    result2 += M4(-0.041000087, 0.023706932, 0.030841965, -0.08799917, -0.14365865, 0.14882472, -0.015030045, -0.039047692, 0.018440325, -0.06865624, 0.029025642, -0.17895971, 0.12934202, -0.267755, -0.009108025, -0.13645618) * inp_1_0_2;
    result2 += M4(0.10064781, -0.04955708, -0.04371674, 0.119937904, -0.17104346, 0.07688845, 0.00831592, -0.09424817, 0.02395348, 0.05057926, 0.09968088, 0.13206473, -0.10045959, -0.049480222, -0.005335291, -0.34621856) * inp_1_1_2;
    result2 += M4(-0.017953774, -0.0051710284, 0.016515965, -0.056537446, 0.08238105, 0.0007703919, -0.006355609, -0.018578479, -0.061869033, 0.04586961, -0.009183659, 0.18204492, 0.06886463, 0.11463408, 0.013505805, -0.14617378) * inp_1_2_2;
    result3 += M4(-0.011199821, -0.07772708, 0.0044944724, 0.060568273, 0.010339044, 0.13567449, -0.0056495904, 0.10355604, 0.0078875935, -0.07654231, 0.010009696, 0.044099823, 0.014547887, 0.29591316, 0.08128151, 0.04312216) * inp_1_0_0;
    result3 += M4(0.009450077, 0.21760088, 0.010555185, 0.04616682, 0.03477599, 0.07146981, -0.016139565, 0.10376477, 0.06911376, -0.024959287, 0.023805114, -0.016485663, 0.06355803, -0.03433893, -0.08305615, -0.057435617) * inp_1_1_0;
    result3 += M4(0.017997898, 0.08405103, 0.002722596, 0.020816702, 0.06854982, 0.0045076013, -0.03307604, 0.12945592, -0.009735962, 0.1128929, -0.028067991, -0.26576465, -0.035898354, 0.1849717, 0.04205572, 0.12898842) * inp_1_2_0;
    result3 += M4(-0.0057355147, 0.024382297, 0.06738762, 0.008943631, -0.0533961, 0.023488637, 0.0061489027, -0.014305677, 0.04444128, -0.14328597, 0.042950854, 0.06324907, -0.06435519, 0.16381806, -0.11515167, 0.10935059) * inp_1_0_1;
    result3 += M4(-0.008195627, -0.040357023, 0.04809009, -0.06526053, 0.04559342, -0.350946, 0.09281452, -0.2485042, -0.026849125, -0.029620696, 0.036530554, 0.016566467, 0.10742637, 0.31293118, 0.18907216, 0.08378941) * inp_1_1_1;
    result3 += M4(0.09465114, -0.0082692625, 0.0076851286, -0.23092152, 0.058207158, -0.25000107, -0.032370474, 0.13942449, 0.084292844, 0.1312503, -0.03861972, -0.13769229, -0.007421341, 0.31125385, -0.0003664113, 0.00078290544) * inp_1_2_1;
    result3 += M4(-0.011365638, 0.19429494, -0.020858742, 0.019818759, -0.0063888757, -0.8963067, -0.024653383, -0.029403321, 0.025740817, 0.23971441, -0.061226226, 0.05420482, 0.07503905, 0.068592496, 0.04801331, 0.062368844) * inp_1_0_2;
    result3 += M4(0.05855918, -0.055159736, 0.03163207, 0.045073695, -0.025290594, 0.32843864, 0.042547565, 0.09402148, 0.009118049, 0.26238242, 0.015707072, 0.021933954, -0.0022427484, 0.45171407, -0.16666742, 0.004285903) * inp_1_1_2;
    result3 += M4(-0.091484025, 0.13186133, 0.015648326, 0.011028772, 0.048063353, 0.048132885, -0.024807049, 0.059011307, 0.017856617, -0.010589645, -0.013754549, 0.09988745, -0.03914675, 0.044210155, 0.026337603, -0.05411248) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.008381443, -0.11773472, -0.01197617, 0.008534716, 0.021273084, 0.26573932, -0.07778555, 0.12572855, 0.054108113, 0.22830634, 0.17177328, 0.06959123, -0.084271505, -0.099874794, 0.120015256, 0.2566453) * inp_2_0_0;
    result0 += M4(0.14161062, -0.08166497, 0.18031621, -0.039360102, 0.055857148, -0.11223478, 0.10449654, -0.02927182, -0.469969, -0.6604829, -2.692373, -0.0469317, 0.10123357, -0.17560199, 0.12922625, -0.40219977) * inp_2_1_0;
    result0 += M4(-0.07489777, -0.3976153, 0.15768936, -0.06350613, -0.099508084, 0.021494538, 0.072690666, -0.1326803, -0.29412186, -0.0046778442, -0.12828125, -0.36645758, -0.14378162, -0.11441444, 0.0919602, -0.11069208) * inp_2_2_0;
    result0 += M4(-0.045293614, 0.060317393, -0.02378158, -0.07096752, -0.22131714, -0.0006004034, -0.052270837, 0.23507951, 0.21197513, 0.025062367, -0.14419392, -0.090812616, 0.02027177, 0.2188339, -0.05752408, 0.0042371987) * inp_2_0_1;
    result0 += M4(0.015360415, 0.016111404, -0.21151216, 0.20823705, -0.4619275, 0.040200178, -0.0054264506, 0.0024945457, -0.39953813, 0.21280997, -0.2288046, 0.14385664, -0.097649835, -0.0806993, -0.2515284, 0.06950241) * inp_2_1_1;
    result0 += M4(0.024365027, -0.0188476, -0.25504124, -0.25789672, 0.15468876, 0.15564366, 0.031733636, -0.19478942, 0.12005898, 0.09811362, -0.029613657, 0.09877221, 0.17166942, -0.24066585, -0.3551707, 0.011007998) * inp_2_2_1;
    result0 += M4(0.12249728, 0.09584177, -0.063786134, 0.03444847, 0.026500149, 0.055758238, 0.20727792, 0.0412749, 0.1468483, -0.044126406, 0.1554284, 0.06485644, -0.046122573, 0.09163648, 0.04485451, 0.010936463) * inp_2_0_2;
    result0 += M4(-0.02327888, -0.028408242, -0.08954338, -0.031546522, -0.024400465, 0.1765699, -0.051307082, -0.13732581, 0.24924117, -0.07557421, 0.002046584, 0.03755903, -0.04882389, 0.22815853, 0.008955528, 0.07146797) * inp_2_1_2;
    result0 += M4(-0.08328493, 0.07567171, -0.035175744, -0.07915521, 0.042166278, 0.017874423, -0.02716037, -0.06523575, 0.07652503, -0.051744968, 0.077499725, 0.0018143324, -0.0382831, 0.24510433, -0.14460045, -0.040940236) * inp_2_2_2;
    result1 += M4(-0.10424979, 0.016546976, -0.029735481, -0.36606577, 0.11461488, 0.021319108, -0.005638145, 0.018320533, 0.22365434, -0.1310308, -0.22911364, -0.7374534, -0.0005904274, 0.039108813, 0.079075456, 0.2899659) * inp_2_0_0;
    result1 += M4(0.14020403, -0.035260115, -0.031574372, -0.5488907, 0.16152795, -0.033876013, 0.0008401388, -0.2023666, 0.33815485, 0.16032352, 0.09312926, -0.49491528, -0.19353026, -0.08949963, -0.03892718, -0.54193974) * inp_2_1_0;
    result1 += M4(0.1545529, -0.010379156, 0.057849735, -0.14587624, -0.02823541, 0.022766527, 0.0130056115, 0.21849549, 0.2513213, 0.0010356192, 0.052325685, 0.06289841, -0.06611632, -0.04275996, -0.04031564, 0.802066) * inp_2_2_0;
    result1 += M4(-0.0598074, 0.018650688, -0.058058213, -0.097944915, -0.046106353, 0.04080552, 0.013877569, -0.14363326, -0.1580783, -0.06705218, -0.1774774, 0.16536675, -0.039148517, -0.057342935, -0.023786984, -0.39659137) * inp_2_0_1;
    result1 += M4(-0.32984152, -0.015999883, -0.13796018, -1.0512304, -0.10872937, -0.12516569, -0.06112409, -0.31222776, -0.5920706, -0.011788936, 0.07504175, -0.39398947, -0.22574179, 0.04920233, -0.07438803, 0.5583268) * inp_2_1_1;
    result1 += M4(-0.38457426, -0.0027009444, 0.06956616, -0.5380248, 0.15269823, 0.012599593, 0.056201484, -0.33385035, -0.040192425, -0.057588063, 0.038589902, 0.2800469, -0.039964307, 0.11788748, -0.014083036, -0.25986284) * inp_2_2_1;
    result1 += M4(-0.030815013, -0.04590514, -0.06124439, -0.44111145, 0.1681813, 0.025010487, 0.0020893556, -0.15467212, 0.15959507, -0.051903736, -0.08281568, 0.16517253, -0.037940037, -0.02853405, 0.010163303, 0.028044438) * inp_2_0_2;
    result1 += M4(-0.19130768, -0.033447865, -0.030804908, -0.6708907, -0.08882192, -0.0067765894, -0.17702031, -0.0882451, 0.08180528, -0.07278926, -0.005083943, 0.22686723, -0.046901785, -0.0072487257, 0.028981568, 0.24829766) * inp_2_1_2;
    result1 += M4(-0.062059592, -0.040512916, 0.056422908, -0.20862833, 0.046600435, -0.06127395, 0.12392494, -0.3425906, 0.1002954, -0.043788046, 0.0798281, 0.040681697, -0.04354317, -0.09120083, 0.050186526, -0.20718478) * inp_2_2_2;
    result2 += M4(0.00046607235, -0.101554915, 0.038550254, -0.07369651, 0.09605386, -0.01952221, -0.02318544, 0.05159066, -0.23192458, 0.3202314, -0.21330506, 0.078934975, 0.03785578, -0.11576275, 0.0079740025, 0.07409727) * inp_2_0_0;
    result2 += M4(-0.033230636, -0.054666493, -0.07630765, -0.22262074, -0.053638693, 0.12661053, -0.047925774, 0.11642081, -0.5670016, 0.36633983, 0.16361691, -0.3633079, -0.0535739, 0.25081202, -0.060174074, 0.15709946) * inp_2_1_0;
    result2 += M4(0.008475587, -0.057540722, -0.0054056933, 0.027261173, 0.07079992, -0.008475688, 0.007865145, -0.0769344, 0.02384441, 0.14146835, 0.018783744, -0.1139973, 0.10721002, -0.09989283, 0.008678464, -0.30570623) * inp_2_2_0;
    result2 += M4(-0.011766618, 0.06704363, 0.03883842, 0.15746428, 0.22623992, -0.08363064, 0.18367828, 0.097450666, 0.13951994, 0.25583744, -0.045846038, 0.08728271, -0.07941184, 0.060104918, -0.025952004, 0.10621462) * inp_2_0_1;
    result2 += M4(-0.2570444, 0.20565708, -0.14074522, 0.04067066, -0.28539634, 0.20074843, -0.21364857, -0.13132904, 0.0223676, 0.3807911, -0.1740706, 0.18916577, -0.016123317, -0.030560387, -0.045211863, -0.12596725) * inp_2_1_1;
    result2 += M4(-0.10214553, -0.03955446, 0.05606274, -0.23644829, 0.025903396, -0.013350083, 0.01235671, 0.05777262, 0.07279561, 0.23178591, -0.08847755, 0.12824312, -0.21555632, 0.025445713, 0.06765485, 0.0061208336) * inp_2_2_1;
    result2 += M4(-0.044251017, -0.018936437, -0.037457507, -0.09929993, 0.0994457, -0.021346739, -0.013147446, 0.06878403, -0.011413976, 0.045663994, -0.057683736, -0.007106705, 0.08077189, 0.0994229, -0.042186815, -0.0014444604) * inp_2_0_2;
    result2 += M4(-0.11035837, -0.054634463, 0.014964703, -0.04945312, 0.045062818, -0.08555373, -0.0076785833, 0.047571894, -0.04869286, 0.080365166, 0.0072170575, 0.03146694, 0.16300409, -0.03485312, 0.077977784, 0.09553546) * inp_2_1_2;
    result2 += M4(0.11423352, -0.09063496, -0.07416584, -0.0728456, -0.057159875, -0.027023776, -0.020238077, 0.04269193, 0.022867456, 0.014083436, -0.011902797, 0.031197883, 0.15172127, 0.09059063, -0.12619068, -0.044197787) * inp_2_2_2;
    result3 += M4(-0.027827714, 0.021206524, -0.017501598, 0.0026345826, 0.03330353, 0.044391915, 0.01371651, -0.101080574, -0.11399564, 0.32039988, -0.06057659, 0.005464638, 0.07641327, 0.026560321, 0.015267121, -0.048057415) * inp_2_0_0;
    result3 += M4(-0.014302159, 0.13651486, -0.012766418, 0.023319649, -0.0835149, -0.1558893, -0.011499647, -0.21938612, 0.11936769, -0.31631187, 0.053663183, -0.447896, -0.05280443, -0.040958066, -0.027341373, 0.04275708) * inp_2_1_0;
    result3 += M4(0.0649498, 0.16683792, -0.008586574, 0.22475742, 0.02728751, -0.099584766, 0.0046571493, 0.23806594, 0.18864302, -0.055049423, -0.004131788, 0.39852795, 0.022126885, -0.008749327, 0.011337337, -0.12886494) * inp_2_2_0;
    result3 += M4(-0.018604066, -0.06409945, 0.0036516653, 0.005787978, -0.0077612493, -0.08645491, 0.051465005, 0.0040710936, -0.00017934087, 0.41521573, -0.020469895, -0.0036718957, -0.010338208, 0.014054333, -0.0028760966, -0.036763415) * inp_2_0_1;
    result3 += M4(0.017644137, 0.0962096, 0.032514483, -0.16733164, -0.006581519, 0.052323174, -0.06808168, -0.045045607, 0.12884203, -0.2774187, 0.10049025, 0.037170026, 0.017644485, 0.34741977, 0.025826372, -0.059724383) * inp_2_1_1;
    result3 += M4(0.0102679, -0.30192712, -0.029840792, -0.012794356, 0.055468347, -0.05827876, -0.008428482, -0.067987174, 0.15475567, -0.115165465, -0.06117517, 0.058409225, -0.004200349, -0.11104791, -0.028961588, -0.1567939) * inp_2_2_1;
    result3 += M4(-0.010650646, 0.103786655, -0.03877312, -0.021611713, -0.0184529, -0.15875222, 0.0090269735, 0.00033812106, -0.0038676674, 0.12997007, -0.081654124, -0.027032338, 0.03591412, 0.13119414, -0.015711993, 0.04894228) * inp_2_0_2;
    result3 += M4(0.0031188715, -0.08059157, 0.033774298, -0.061296467, -0.058569442, 0.07864573, -0.019514142, -0.09402757, 0.01278827, 0.32920307, -0.011709992, -0.028594222, 0.016218498, -0.13865799, -0.011720392, 0.0056729144) * inp_2_1_2;
    result3 += M4(0.007769867, 0.099588946, -0.024011238, 0.04802554, 0.039129365, 0.07922529, 0.0032258357, 0.03867451, 0.072813824, 0.31069136, -0.051426657, 0.11510237, -0.005807, -0.056180235, -0.0407712, -0.19988999) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.09203765, -1.0098052, 0.2557612, 0.12960058, -0.4512297, -1.376508, 0.3866824, -0.94580114, 0.09964805, 0.15238515, 0.07125237, 0.007378155, -0.10413547, -0.2689827, 0.025233554, 0.07516861) * inp_3_0_0;
    result0 += M4(0.07198939, -0.07261807, 0.033909064, -0.05829371, 0.71907336, -0.2072539, -0.66888994, -0.11348282, 0.07432096, 0.20459189, 0.28471014, -0.09320774, 0.14617866, -0.3102061, 0.037994474, 0.19579248) * inp_3_1_0;
    result0 += M4(0.11933344, -0.28403622, 0.1297699, 0.044638466, 1.0996413, -0.459095, 0.09120731, -0.279807, 0.15899615, 0.077203475, 0.0033818542, -0.059011515, 0.16054374, -0.17423546, 0.020811576, 0.1497003) * inp_3_2_0;
    result0 += M4(-0.5530483, 0.25635967, -0.06233398, -0.36042893, 0.03771763, 0.09840019, 0.13424012, -0.056811005, 0.019709894, 0.004653112, -0.16828208, 0.11989024, 0.05693507, 0.20347416, 0.19986758, -0.17364855) * inp_3_0_1;
    result0 += M4(-0.27502596, 0.16954221, 0.2891233, 0.26881185, -0.048249744, -0.15698062, -0.11719984, 0.1314471, 0.049614567, -0.21723673, -0.20711733, 0.1995889, -0.5397603, -0.025562909, -0.080157675, 0.18447612) * inp_3_1_1;
    result0 += M4(-0.27113545, 0.1641976, 0.025290295, -0.15312797, -0.06282185, 0.062359687, 0.3669704, -0.10383397, -0.03987665, 0.118290946, 0.051762752, -0.21872127, 0.21648106, -0.011065538, 0.13495393, 0.112926014) * inp_3_2_1;
    result0 += M4(0.28293625, -0.54776156, -1.4208206, 0.5560579, 0.076995134, 0.0010590971, 0.10806798, -0.0068658683, -0.02657241, 0.06548273, 0.07136693, 0.056692995, 0.13583213, -0.097990155, -0.21431941, -0.068787426) * inp_3_0_2;
    result0 += M4(0.019974753, -0.18434058, -0.37842962, 0.17255802, -0.07121003, -0.049374897, -0.12999615, -0.0090842405, -0.10053318, 0.015331568, -0.046389934, -0.022159638, 0.13439721, -0.24877207, -0.3352139, 0.1004312) * inp_3_1_2;
    result0 += M4(0.06730276, 0.015253186, -0.28660378, 0.0048973705, 0.17246762, 0.0041550174, 0.049213853, 0.028642844, -0.022888267, 7.072589e-05, 0.083312966, 0.01890408, -0.03537235, 0.098328166, -0.0634778, 0.0374298) * inp_3_2_2;
    result1 += M4(-0.070906475, -0.0070750876, -0.114864096, -0.059684664, 0.2083789, 0.114211984, 0.035833206, -4.102501, -0.029890815, 0.026565662, -0.008773691, -0.21276316, 0.101958215, -0.050211105, 0.057366952, 0.2794371) * inp_3_0_0;
    result1 += M4(0.18132748, 0.03760628, 0.021870209, -0.14828776, -0.022485202, 0.6742842, -0.3927639, -2.0889556, -0.2696027, 0.0926858, -0.0108394455, 0.1831624, 0.3145332, -0.051611606, 0.04122282, -0.12629919) * inp_3_1_0;
    result1 += M4(0.13223527, -0.021068456, -0.012821363, 0.10347041, 0.55502397, 0.32927307, -0.03657173, -2.0287352, -0.019513013, -0.027364517, -0.00081882975, 0.09599787, 0.08883929, -0.07198514, 0.013847944, -0.18047008) * inp_3_2_0;
    result1 += M4(-0.67282766, 0.22675301, -0.34037632, -0.56292534, 0.04830609, 0.023726987, 0.31117463, -0.14838216, 0.085198745, -0.13617606, -0.051578328, -0.019525157, -0.096113026, -0.037567556, 0.009032242, -0.13026237) * inp_3_0_1;
    result1 += M4(0.28533587, 0.09233762, -0.093274616, -0.22726229, -0.23645622, 0.11535228, 0.58203703, -0.13988991, 0.50990874, -0.2608305, 0.08497369, 0.007313432, -0.16007242, 0.07330446, 0.036860522, -0.25880858) * inp_3_1_1;
    result1 += M4(0.04704729, 0.09367592, -0.0006807427, -0.17311558, -0.042768598, 0.08999907, 0.14802949, 0.5103895, 0.012497867, 0.021165539, -0.04733951, -0.030784864, -0.012791975, -0.0333562, 0.032472268, 0.14630286) * inp_3_2_1;
    result1 += M4(-1.7388836, -0.0817505, -0.459564, -0.0674749, -0.022201829, -0.042659026, 0.02446042, 0.16783817, 0.06712893, -0.032787915, -0.06254057, -0.08011582, -0.15877955, 0.0022639157, -0.01886507, 0.2604053) * inp_3_0_2;
    result1 += M4(-0.5462716, -0.09708592, 0.001165947, 0.32521707, 0.06386579, -0.06427373, -0.015858108, -0.06681951, -0.20955409, 0.14485215, 0.11215542, -0.0062580314, -0.41045582, -0.024685074, 0.03513464, -0.33524778) * inp_3_1_2;
    result1 += M4(-0.22752975, -0.058046963, 0.046372116, -0.0011249224, 0.12904581, 0.016531572, -0.013715643, 0.12074816, 0.103000455, 0.0015269481, -0.020453617, -0.13671118, -0.018505698, 0.03374599, 0.07334319, -0.014906996) * inp_3_2_2;
    result2 += M4(-0.22808774, -0.036460996, -0.004932286, 0.1869026, 0.22355357, 1.6362259, 0.012154954, 0.37422872, -0.01943583, -0.053181816, 0.08391673, -0.027856212, 0.057357676, 0.046675947, -0.076788045, 0.14937657) * inp_3_0_0;
    result2 += M4(0.40402347, -0.20164996, 0.038372163, 0.021167232, 0.86352295, 0.5796726, 0.11188209, 0.8301494, 0.022610307, -0.085014015, 0.28135806, -0.2326382, 0.06629937, 0.11777861, -0.09094008, 0.27667022) * inp_3_1_0;
    result2 += M4(0.018174242, -0.00501526, 0.014858267, 0.14130671, -0.029150218, 1.4281311, 0.52767336, 0.3481801, 0.09818053, 0.0023040348, 0.05627539, 0.04293487, 0.11471729, 0.108018495, -0.08628417, 0.03017544) * inp_3_2_0;
    result2 += M4(-0.7745939, 0.963469, 0.26512697, -1.1350445, 0.03429198, -0.13181238, -0.026954573, -0.080621816, -0.030213317, 0.08651033, 0.056316514, -0.010110087, -0.09692552, 0.19602329, -0.054861747, -0.02228433) * inp_3_0_1;
    result2 += M4(-0.3319918, 0.29419026, 0.053676337, -0.077384815, 0.03587122, 0.103715785, 0.11708649, 0.23234351, -0.29402384, -0.29268828, 0.33168823, 0.033886354, -0.1150622, -0.19436063, 0.117389865, -0.32146257) * inp_3_1_1;
    result2 += M4(-0.13647152, 0.047407802, 0.08263032, -0.023802796, 0.09327918, -0.010437178, -0.07792395, -0.1651351, 0.16356306, 0.050160427, -0.07230722, -0.1714929, -0.10017288, 0.023963267, 0.025288286, 0.21431358) * inp_3_2_1;
    result2 += M4(-0.5420616, 0.5366024, -0.02881015, -0.083878785, -0.049830467, -0.05193077, 0.018512063, 0.0018140887, 0.017039197, 0.012361132, 0.049819257, 0.042949848, 0.062236503, -0.015374895, 0.020946035, -0.039567694) * inp_3_0_2;
    result2 += M4(-0.17871666, -0.098436564, -0.07291653, -0.07408185, -0.070254765, 0.12290546, -0.040618014, -0.045159787, 0.08352706, 0.009660545, 0.011089766, 0.029298991, -0.16628538, 0.12121396, 0.014377148, 0.09889763) * inp_3_1_2;
    result2 += M4(0.061659507, -0.068619505, -0.060875446, -0.11666349, 0.004671999, 0.02900725, 0.005570089, 0.060526457, 0.061706454, -0.025272675, -0.010960213, 0.00021545759, 0.07338975, 0.06756802, -0.029957866, 0.006482276) * inp_3_2_2;
    result3 += M4(-0.04938021, 0.5474717, 0.023381783, -0.0106522245, 0.33267355, 0.15648852, -0.10048313, 0.6687301, 0.018676173, 0.13105226, 0.054288793, -0.018690843, -0.024810972, -0.041413262, -0.0388463, 0.02937856) * inp_3_0_0;
    result3 += M4(0.18479057, -0.119651355, -0.07527527, 0.12188626, 0.48570555, -0.301984, 0.2795581, 0.18143548, -0.016058099, -0.22553037, -0.02968993, 0.064633235, 0.015328551, -0.048695903, -0.0807373, 0.04541802) * inp_3_1_0;
    result3 += M4(-0.024128491, -0.00068471854, 0.006518613, 0.1974382, 0.0018519046, 0.027511043, 0.18089043, 0.14592193, -0.108140185, 0.03375463, 0.030044856, 0.3055488, -0.05208252, 0.014467132, -0.039495416, 0.067138724) * inp_3_2_0;
    result3 += M4(-0.03581409, -0.28925154, 0.34567133, -0.8700632, 0.083105534, -0.06357693, 0.24809794, 0.019559698, -0.00824402, 0.028371392, -0.07666804, -0.007936903, -0.062283877, 0.08022931, -0.05598411, -0.03774174) * inp_3_0_1;
    result3 += M4(0.3627288, -0.2919567, 0.011365036, 0.37778756, 0.40211913, -0.3568216, 0.46673, 0.034116652, 0.27280816, 0.3247658, 0.44224465, 0.019933745, 0.005685167, -0.5438988, 0.060108252, 0.00010538967) * inp_3_1_1;
    result3 += M4(-0.0048435335, -0.2933172, 0.04477129, -0.16703057, 0.28078175, -0.3222616, -0.06086525, 0.04333574, -0.16169213, -0.22723368, -0.06471788, 0.013276334, -0.062244948, 0.27807295, -0.015584799, -0.5442352) * inp_3_2_1;
    result3 += M4(-0.11051908, -0.8420118, 0.046543047, -0.78696585, -0.0010801334, -0.08958294, -0.0039746584, 0.054807737, 0.0018608916, -0.06054701, -0.055017576, -0.014231483, -0.021862056, 0.2547808, -0.013028271, -0.025949892) * inp_3_0_2;
    result3 += M4(0.19557638, 0.3653083, -0.039630555, -0.10490628, 0.059493482, 0.13710238, -0.01979809, -0.030529857, 0.02288956, -0.059713885, 0.15789104, 0.024300657, -0.076778464, -0.081312254, 0.015212751, -0.09717356) * inp_3_1_2;
    result3 += M4(0.015954623, 0.2506733, -0.028468968, 0.039669212, -0.037350517, 0.13690482, -0.0032022637, 0.018279016, -0.02017102, 0.094020076, -0.031140417, -0.002405052, 0.010076697, 0.030028984, 0.009091767, -0.050597623) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0067392224, -0.00579354, 0.013816379, -0.016668268);
    V4 result1 = V4(-0.00220901, 0.0032403837, -0.00017705126, 0.00041002515);
    V4 result2 = V4(-0.0087038735, -0.11823104, -0.0027180929, -0.0012102264);
    V4 result3 = V4(-0.0025541596, 0.018113432, 0.0018146152, -0.0077390997);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.004757162, 0.04460574, -0.02059023, 0.007618058, -0.0018946314, 0.054341223, 0.018126812, -0.013539179, -0.00990026, 0.08089081, 0.030022236, -0.044100985, 0.009154926, 0.14467844, 0.011686052, 0.009871907) * inp_0_0_0;
    result0 += M4(-0.028212246, 0.011454477, -0.021037271, 0.058873307, -0.0017493321, 0.028710753, 0.018051678, -0.031170849, 0.0028359098, 0.0034762637, -0.041001905, 0.08754657, 0.011281196, -0.08924224, -0.01284245, 0.04945127) * inp_0_1_0;
    result0 += M4(0.013811291, -0.01725359, -0.035766993, 0.031208342, -0.004951377, 0.010401775, -0.00035109368, -0.0046794093, -0.004983267, 0.010507731, -0.03088881, 0.023162613, -0.00040377755, 0.026259795, 0.040516585, -0.029052539) * inp_0_2_0;
    result0 += M4(0.005368633, -0.019971747, -0.060732827, 0.064184435, -0.0066478155, -0.06015365, -0.053015992, 0.053543624, -0.026035875, -0.27517995, -0.031239921, 0.049038522, -0.0008786021, 0.7018503, 0.011812446, -0.0056006955) * inp_0_0_1;
    result0 += M4(0.007075796, 0.08108697, 0.19753157, -0.041836925, -0.032541625, 0.062633015, -0.050863143, 0.041479677, 0.061505444, 0.002508411, 0.11039142, -0.14849755, 0.049105458, -0.050338794, -0.21617623, 0.12433906) * inp_0_1_1;
    result0 += M4(0.0069013145, -0.04180846, -0.061082948, 0.06516397, 0.024993237, 0.0020226152, -0.00048447153, -0.0074565583, -0.028050879, 0.0013079181, -0.024599109, 0.018121261, -0.028824737, 0.071910255, 0.07178187, -0.03900283) * inp_0_2_1;
    result0 += M4(-0.019719416, -0.11124845, -0.026775576, 0.015305918, -0.04384906, 0.024543438, 0.040499307, -0.05190668, 0.021538455, -0.033267234, -0.015856624, 0.028685788, 0.07127534, 0.45184112, 0.05444366, -0.02874112) * inp_0_0_2;
    result0 += M4(0.028756779, 0.029304458, -0.044516094, 0.06514671, 0.12421494, -0.03215295, 0.025174523, -0.007929804, -0.05640638, -0.00093596865, -0.059572387, 0.04400609, -0.12276608, -0.15381569, -0.04766472, 0.06799246) * inp_0_1_2;
    result0 += M4(0.024002684, -0.04744378, -0.01508691, -0.010342153, -0.068892725, 0.09035156, 0.009312205, 0.0011137676, 0.017244523, -0.00085695443, -0.0139007205, 0.017046135, 0.06237268, 0.08151339, 0.018980522, -0.026427766) * inp_0_2_2;
    result1 += M4(-0.003726085, -0.07512463, -0.01717948, -0.060251445, 0.0020593342, 0.012185615, 0.0018061732, 0.049766377, -0.018402997, 0.07974019, -0.0020302758, 0.0029322803, -0.0046219965, 0.030734485, 0.014191918, 0.009736395) * inp_0_0_0;
    result1 += M4(-0.05545335, -0.058087546, -0.008570577, -0.17657906, 0.038116403, 0.032775342, 0.006710178, 0.09789805, 0.0010065475, 0.037062503, -0.02924253, 0.077721976, 0.011976799, 0.0981366, -0.011250894, 0.028614959) * inp_0_1_0;
    result1 += M4(0.008194814, -0.02093765, -0.018406989, -0.012351825, 0.015771048, 0.026479336, -0.004447521, 0.012536626, 0.03564627, -0.03091144, 0.0033508914, -0.08476242, -0.04280828, 0.052819744, -0.010343455, 0.08272775) * inp_0_2_0;
    result1 += M4(0.03676991, 0.034173384, -0.013344153, 0.027708666, 0.045937207, -0.054765854, -0.018075667, -0.073475495, 0.01898919, 0.07927369, 0.003689704, 0.11889978, -0.06757298, -0.008012036, 0.03705638, -0.14691675) * inp_0_0_1;
    result1 += M4(0.056819588, 0.0697125, 0.051951207, 0.20988707, -0.12852223, 0.05399208, -0.035802294, -0.25918022, 0.047050435, 0.20302269, -0.001217148, 0.32151836, 0.267734, 0.02625207, -0.003349854, 0.0031352239) * inp_0_1_1;
    result1 += M4(0.03337699, 0.0016564804, -0.02875424, 0.022323176, 0.013269529, -0.04930651, -0.016939713, -0.009952163, -0.0025113449, 0.073370226, -0.021751203, 0.110648915, -0.045074027, 0.0700767, 0.045293078, 0.035619035) * inp_0_2_1;
    result1 += M4(-0.016408296, 0.03258868, -0.058271993, -0.09170796, -0.017396951, 0.13345619, -0.0036086885, 0.1738579, -0.016351514, -0.038076673, -0.026411304, -0.00857787, 0.08014512, -0.017333854, 0.035027295, 0.08339326) * inp_0_0_2;
    result1 += M4(-0.024153534, -0.1594308, 0.08109171, -0.10346954, 0.09442258, 0.24401028, 0.07839474, 0.3516657, -0.023696052, -0.27278042, -0.110762365, 0.055866532, -0.021749575, -0.3755823, -0.20818436, -0.061711386) * inp_0_1_2;
    result1 += M4(-0.01722786, -0.043418165, -0.032174136, 0.0065392274, 0.014015421, 0.1256675, 0.0014906797, 0.19030653, -0.021422084, 0.032220077, -0.018529518, -0.055808976, -0.021974243, -0.083925195, 0.087664, -0.07966699) * inp_0_2_2;
    result2 += M4(-0.007572363, -0.020268906, 0.011926788, 0.016819356, 0.013834324, 0.07284838, 0.008084289, 0.017605541, 0.0155607965, 0.08815748, -0.011335974, 0.009459703, 0.10280223, -0.04425638, -0.034763, 0.015312306) * inp_0_0_0;
    result2 += M4(-0.029750597, -0.10886876, 0.016067294, 0.0081406785, 0.0025266604, -0.16374761, -0.036703046, 0.014393379, -0.014115387, 0.027435742, 0.06276886, -0.0061756526, 0.051256526, 0.028447868, -0.038741603, 0.012599742) * inp_0_1_0;
    result2 += M4(0.0062933406, -0.14877701, -0.081335574, 0.058086805, 0.030444963, 0.100357175, 0.015503646, -0.032995638, 0.024135863, -0.029196676, -0.08767101, 0.01662502, -0.056853548, -0.13683182, 0.024343215, 0.036500633) * inp_0_2_0;
    result2 += M4(-0.020894548, -0.01988894, 0.018285718, 0.0045597847, 0.055644557, 0.051169597, -0.007484983, -0.0808514, 0.014975857, -0.037808713, -0.007091062, 0.0633066, 0.24323085, 0.090533756, -0.052187245, 0.09404903) * inp_0_0_1;
    result2 += M4(-0.016661746, 0.061575055, -0.024762189, 0.09889755, 0.059594683, 0.070874624, 0.06689742, -0.03080258, 0.1264018, -0.064376526, -0.067022644, -0.009788078, -0.098970406, 0.06327095, 0.14257388, -0.15995978) * inp_0_1_1;
    result2 += M4(-0.014877297, -0.02362674, -0.035380322, 0.03520428, -0.0026432537, -0.07376514, -0.19591998, 0.035040513, 0.09614561, -0.028773818, -0.05406163, -0.042260326, -0.0011171543, -0.10831591, -0.13967235, -0.04794093) * inp_0_2_1;
    result2 += M4(0.014378688, -0.1476763, -0.015471479, 0.026094414, 0.009402176, -0.15059285, -0.018120788, 0.062264644, 0.028683241, 0.07305034, -0.020145183, 0.019338684, 0.08904872, -0.025509242, 0.020477729, -0.056061193) * inp_0_0_2;
    result2 += M4(-0.010766763, 0.025999593, 0.020246278, 0.032852028, -0.00050664594, -0.10721278, -0.023455873, -0.080174275, 0.053723816, -0.020522142, -0.0012554135, 0.018520653, -0.015287826, -0.08549418, -0.043334506, 0.00441426) * inp_0_1_2;
    result2 += M4(-0.017460983, -0.058155194, 0.028245991, 0.013098157, 0.048921924, 0.10293717, 0.044518586, -0.014309501, 0.012253624, 0.016624713, 0.039498158, 0.01411461, -0.005912486, -0.06110546, 0.10187301, 0.04713301) * inp_0_2_2;
    result3 += M4(0.011435745, -0.0242083, 0.035283573, 0.014238913, -0.015974496, 0.013935132, 0.011598893, -0.01285928, -0.0010447678, -0.023810916, -0.076720476, -0.10788823, -0.0014651124, 0.2035931, -0.027574748, 0.09732483) * inp_0_0_0;
    result3 += M4(0.0063989996, 0.15768827, -0.025611667, 0.0016565273, -0.0064186594, 0.026748173, -0.007284709, -0.0074881893, 0.08437868, 0.0134769315, 0.02109794, 0.016259274, 0.08233716, 0.1275936, 0.119009644, 0.02096244) * inp_0_1_0;
    result3 += M4(0.05901207, -0.0698565, 0.03292236, -0.01254252, 0.0033246018, 0.045673613, 0.024911154, 0.008315119, 0.012477976, 0.033887144, -0.044618074, 0.009874876, -0.09849781, 0.07428508, -0.022894815, 0.012041062) * inp_0_2_0;
    result3 += M4(-0.026506225, -0.13094604, 0.1279818, 0.16833974, 0.07498592, -0.19969991, -0.016713442, 0.0478893, -0.013201029, -0.16481283, 0.022130659, 0.022445114, 0.030015305, 0.13461635, 0.1595796, 0.02208052) * inp_0_0_1;
    result3 += M4(0.23789576, 0.18319815, 0.057600033, 0.051540643, -0.14927995, 0.04063175, -0.013377907, -0.036618616, 0.22101334, -0.02521276, -0.09237336, -0.062168647, -0.13787912, -0.17407466, 0.3779503, -0.15319212) * inp_0_1_1;
    result3 += M4(-0.010872807, -0.0034272603, 0.018605743, -0.0077064866, 0.003055583, 0.05786458, -0.05285845, 0.010210879, -0.052298956, 0.056534395, 0.040487666, -0.007187298, 0.13645089, 0.15045324, -0.065698296, 0.020672968) * inp_0_2_1;
    result3 += M4(0.04050774, -0.04227062, 0.030873463, 0.023747861, 0.0050289165, 0.047141027, -0.1260419, -0.01366004, 0.0052406224, 0.017350506, 0.003685448, -0.02048128, 0.038476773, 0.29321182, -0.033800077, 0.15717207) * inp_0_0_2;
    result3 += M4(-0.062245145, 0.12614734, -0.01435692, -0.004345791, 0.03240856, -0.1937626, 0.029676853, 0.0011508696, -0.039831195, -0.08629771, -0.020391906, -0.011066124, -0.0057896734, 0.04423377, 0.052418508, 0.038959283) * inp_0_1_2;
    result3 += M4(0.030176228, 0.03592207, -0.012681503, -0.0100417705, 0.011129106, 0.091298476, -0.007614096, 0.0067129945, 0.009459071, 0.029092945, 0.005829825, 0.008119063, -0.018748177, 0.03259275, -0.047090974, -0.0020952749) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.016987246, 0.03473451, 0.0059354356, 0.031146148, 0.011026116, 0.07224186, 0.018813115, -0.0041852435, -0.026877439, 0.54664296, -0.18432893, 0.17436376, -0.0029771521, 0.17188756, 0.030036649, -0.04769561) * inp_1_0_0;
    result0 += M4(-0.0028080363, -0.07135356, 0.102842756, -0.04827217, -0.08946066, -0.09045589, -0.1832512, 0.19429833, -0.049651742, -0.061884206, 0.33127418, -0.31220004, -0.014930345, -0.018029232, 0.015247617, 0.014609646) * inp_1_1_0;
    result0 += M4(-0.0051331217, 0.075059876, 0.057599, -0.011143617, 0.04300836, 0.07556922, -0.04127582, 0.078150585, -0.05001171, 0.06855338, -0.05596512, 0.18358968, 0.004631555, -0.025877887, -0.044574425, -0.0036082356) * inp_1_2_0;
    result0 += M4(0.035518486, -0.20260397, -0.032637008, 0.039304253, -0.02135787, 0.06482355, -0.11811741, 0.11531346, 0.03047438, -0.021385845, -0.06444012, -0.018341035, -0.03772752, 0.11597503, 0.016386997, -0.045606576) * inp_1_0_1;
    result0 += M4(-0.071906134, 0.06591852, -0.1993698, 0.059722193, -0.074340224, -0.11036871, -0.24670073, 0.21898513, 0.113414824, 0.13154851, 0.00135476, -0.011057866, 0.109330736, -0.1562467, -0.0646769, 0.08622109) * inp_1_1_1;
    result0 += M4(0.04432702, 0.024481641, -0.021728728, 0.024910627, 0.025160199, -0.055422947, -0.069767535, 0.07430205, 0.07019221, 0.33359304, 0.0871901, -0.024388386, -0.04266643, 0.03530757, 0.02774339, -0.0501942) * inp_1_2_1;
    result0 += M4(-0.025169747, -0.05724996, 0.024544451, -0.047295302, -0.047389507, -0.18787593, -0.03388537, -0.018295154, 0.021206722, 0.51408833, 0.00045976613, -0.010336354, 0.031152073, 0.16944252, -0.0065277535, -0.026041444) * inp_1_0_2;
    result0 += M4(0.06758956, 0.1418641, 0.027367713, -0.029424997, 0.10532623, 0.08982717, 0.07693106, -0.024586774, 0.07435542, 0.023247447, 0.06879798, -0.071009696, -0.11073209, -0.16492508, -0.04515464, -0.01069227) * inp_1_1_2;
    result0 += M4(-0.06742776, 0.012408455, 0.008132201, -0.012668852, -0.1312777, -0.07833286, -0.007236981, 0.0032948575, 0.045443594, 0.0102, 0.0067497427, 0.008032131, 0.03468417, 0.19423603, 0.024463994, -0.0148588605) * inp_1_2_2;
    result1 += M4(0.030537425, -0.028134651, -0.009023016, 0.179358, -0.057481725, 0.042714603, 0.019169198, 0.07257976, 0.11560167, 0.3091442, -0.046502873, 0.047325112, -0.037181046, -0.037929583, 0.0098228585, 0.068120666) * inp_1_0_0;
    result1 += M4(0.16246039, -0.057705935, 0.014567718, 0.14371392, -0.23197606, 0.04081401, -0.027807044, -0.1928103, -0.25186458, 0.030110866, 0.03601435, 0.20505974, 0.0011266255, -0.045638748, 0.015003985, -0.13016148) * inp_1_1_0;
    result1 += M4(0.014686614, 0.062396854, -0.0014517006, 0.1703793, -0.037143644, -0.054845024, -0.017240502, -0.040276796, 0.123812266, 0.008521931, 0.06194549, -0.16067433, 0.010551907, 0.07251975, -0.018264264, 0.10454819) * inp_1_2_0;
    result1 += M4(-0.0010126467, 0.052860886, -0.016136233, -0.0066950074, -0.010272363, 0.02350452, 0.11484084, -0.017758645, 0.044708103, 0.034331277, -0.08610863, 0.022122264, -0.05680557, -0.027225459, 0.044523563, -0.01197131) * inp_1_0_1;
    result1 += M4(-0.18526886, 0.07205791, 0.024071215, -0.43767357, -0.2891498, -0.1328601, 0.23920387, -0.041299973, -0.23847027, -0.5700935, 0.111674905, -0.5391724, 0.09938053, -0.015391897, 0.055386085, -0.068691395) * inp_1_1_1;
    result1 += M4(-0.007951037, 0.14553995, 0.02484111, 0.030889777, -0.062261228, -0.05222604, 0.013722785, 0.07288527, 0.030920139, 0.27380875, -0.07164884, 0.33147046, -0.072108924, -0.054429434, -0.039454192, -0.136953) * inp_1_2_1;
    result1 += M4(0.0060726916, 0.093522035, 0.0061035864, -0.005291513, -0.016633444, -0.050814413, 0.033111434, -0.10206591, -0.025281144, 0.055562835, -0.10252989, 0.07953052, -0.0053600525, -0.086475834, 0.024078831, -0.03974447) * inp_1_0_2;
    result1 += M4(0.012284386, 0.23059045, 0.058976226, 0.015492662, 0.031369362, -0.043071628, 0.25418073, -0.017554583, 0.0187833, 0.3606575, 0.14776796, 0.21554455, -0.0011435659, -0.28921887, -0.07018932, -0.10575278) * inp_1_1_2;
    result1 += M4(0.012941269, 0.08122357, 0.043155584, 0.049910795, 0.011219266, -0.03261985, 0.034370698, 0.054646887, 0.017942026, 0.038815085, 0.055457417, 0.07898063, 0.018201787, -0.0603324, 0.04014503, 0.013502583) * inp_1_2_2;
    result2 += M4(0.082906395, -0.14864619, -0.024477826, 0.008730024, -0.029656613, -0.15544088, 0.003286149, 0.044258755, -0.037991107, 0.035051852, 0.009078064, -0.15890278, -0.022092693, 0.03721577, -0.009450078, -0.011360248) * inp_1_0_0;
    result2 += M4(0.10620504, -0.039374694, -0.039058503, 0.09663284, -0.08806752, -0.14783463, 0.010416948, -0.20020449, -0.25969642, -0.039795045, -0.02396945, 0.28850448, 0.065838695, -0.008220531, -0.021258608, -0.034090046) * inp_1_1_0;
    result2 += M4(0.10492294, -0.050287496, 0.15390132, 0.012479475, -0.025733571, -0.06897056, -0.33341128, 0.09772931, 0.16377524, 0.09999282, -0.28906524, 0.14261928, -0.03581873, 0.08138807, 0.05730314, 0.03641983) * inp_1_2_0;
    result2 += M4(0.021222252, -0.0010368003, 0.006988095, -0.017736226, 0.052848782, -0.092538655, -0.002777808, -0.104310274, -0.031485748, -0.116662726, -0.0045454437, 0.06663064, 0.06460574, -0.011985372, 0.0035739902, 0.051123362) * inp_1_0_1;
    result2 += M4(0.06764371, -0.12619941, 0.0017383698, 0.018335886, 0.20507753, -0.120266154, -0.050924186, 0.16443472, 0.22251657, 0.060821764, -0.03231317, -0.08599889, 0.01737813, -0.084058546, 0.06491428, -0.11875211) * inp_1_1_1;
    result2 += M4(-0.048266806, -0.13395688, 0.09303447, 0.0096453875, -0.015788488, -0.15879032, 0.11230646, 0.022879692, -0.025617644, 0.048025526, 0.064424805, -0.08366895, 0.02151139, 0.008939279, -0.03706177, -0.059107833) * inp_1_2_1;
    result2 += M4(-0.024632037, -0.053401504, -3.8594168e-05, 0.005919027, -0.015049806, -0.1287041, 0.0077555813, -0.011152251, 0.0016008929, -0.1307943, -0.017305542, 0.08360009, 0.00539609, 0.07761932, -0.008523257, -0.057211336) * inp_1_0_2;
    result2 += M4(-0.023771191, -0.051695816, 0.021888804, -0.033836447, -0.047002263, -0.06332366, -0.0039477134, 0.016660357, -0.042360693, -0.06890632, 0.0065168757, -0.07317894, 0.027115177, 0.040828623, -0.03261908, -0.08120644) * inp_1_1_2;
    result2 += M4(0.0005645993, -0.14556473, -0.055087898, -0.0011215123, 0.01663106, 0.03416127, -0.048927557, -0.00056489377, 0.048879467, -0.02488121, -0.005946786, -0.037328817, 0.02352326, 0.058297895, -0.04720615, -0.032281145) * inp_1_2_2;
    result3 += M4(0.019006971, 0.15741411, 0.04636912, -0.034216102, 0.09806008, -0.10402952, 0.018676529, -0.08735622, 0.07729629, -0.45828885, 0.36772862, -0.07271834, -0.08798469, 0.19315, -0.116762556, 0.039710928) * inp_1_0_0;
    result3 += M4(0.051282093, -0.18320459, -0.08752018, 0.003494803, 0.028318567, -0.18887785, -0.18276186, 0.07542324, -0.008357958, 1.1063329, -0.3346749, 0.2777225, -0.10293801, -0.1050732, 0.17077467, 0.0213651) * inp_1_1_0;
    result3 += M4(0.04368426, -0.009240652, 0.03722005, 0.027186237, 0.0247347, 0.006077038, 0.0035891603, -0.056652237, 0.09379246, 0.7982413, 0.3862193, -0.069276564, -0.016963236, -0.012571381, -0.05755398, 0.002290767) * inp_1_2_0;
    result3 += M4(0.038205612, 0.12545459, -0.035839003, -0.2078332, 0.079732716, 0.0031280161, 0.095361836, 0.14376299, -0.06191109, -0.1653712, 0.10768245, -0.14467166, -0.015838455, 0.095923625, -0.0013534408, -0.11172566) * inp_1_0_1;
    result3 += M4(-0.088943906, -0.3221328, -0.06629835, 0.051052675, -0.24745797, -0.19388126, -0.1358898, -0.18343225, -0.0058642467, 0.15262964, 0.26127586, 0.16319636, -0.0494768, -0.015536689, 0.022158315, -0.030299334) * inp_1_1_1;
    result3 += M4(-0.021552738, -0.039348137, 0.016814841, 0.010040323, 0.016546052, 0.01666747, -0.010575898, 0.051712763, 0.15394488, 0.23253863, 0.02357722, 0.025372429, 0.004393674, 0.10839646, -0.140699, 0.0329782) * inp_1_2_1;
    result3 += M4(-0.029282274, 0.020211404, 0.0010206209, -0.0038512012, -0.080568105, -0.1367789, -0.010236495, -0.015389209, -0.0011900443, -0.06849852, 0.028733999, 0.13301273, 0.022793775, 0.05246901, 0.059003603, -0.12553078) * inp_1_0_2;
    result3 += M4(0.01118619, 0.023096723, 0.02060146, 0.022579404, 0.05426894, 0.17807531, 0.018692834, 0.0008320689, 0.066859625, -0.04885414, -0.013178259, 0.099759385, -0.078835756, -0.053435355, 0.050158497, 0.07267191) * inp_1_1_2;
    result3 += M4(0.0024116796, 0.035729256, 0.02159848, 0.030625354, 0.016775243, -0.09195227, 0.006450238, -0.0117353285, -0.06193577, 0.23511502, 0.012723188, 0.046779063, -0.0072192643, 0.16806412, 0.018297425, -0.039188102) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.017489692, 0.22984104, 0.04332648, -0.104673244, 0.004369042, -0.36186147, 0.014772876, -0.0041336864, 0.0025833054, 0.035950124, 0.003056812, -0.010560872, 0.0076206475, -0.058852334, 0.0087363655, -0.033965066) * inp_2_0_0;
    result0 += M4(0.028779661, -0.1083074, 0.053640433, -0.076411135, -0.010553448, 0.036041256, -0.06455311, -0.05945924, 0.025404928, -0.10561602, 0.044396345, -0.05272952, -0.0070134974, -0.057124898, 0.050184954, -0.072713) * inp_2_1_0;
    result0 += M4(-0.021552939, -5.848359e-05, 0.03811504, -0.050024852, 0.014936691, 0.11751998, -0.015806444, -0.03098893, 0.001902079, 0.008567463, 0.093621045, -0.099732816, -0.013686342, -0.018525327, 0.0040801493, -0.009744767) * inp_2_2_0;
    result0 += M4(0.017928595, 0.3193536, 0.03298457, -0.014765465, -0.01391733, -0.83771724, 0.003005564, -0.004047698, -0.042787872, 0.07564614, 0.08349606, -0.06545626, 0.0469817, -0.03152331, -0.11695097, 0.07483993) * inp_2_0_1;
    result0 += M4(-0.025656277, -0.103141956, 0.024610342, 0.26283163, 0.039071146, -0.19860235, -0.05395357, -0.16360368, 0.06565954, 0.12143652, 0.25764754, -0.31984207, 0.04419189, 0.022741262, 0.04687841, 0.063725136) * inp_2_1_1;
    result0 += M4(-0.0011919627, 0.0096403565, 0.07607945, -0.091860116, -0.0758898, -0.109186, -0.061913546, -0.05468732, -0.04384829, 0.08510206, 0.24555972, -0.23055309, 0.018297292, -0.013347442, -0.059978332, 0.015605366) * inp_2_2_1;
    result0 += M4(-0.0046389983, 0.24916387, 0.013621656, -0.027560141, 0.03912579, -0.70258707, -0.012968619, -0.002175261, 0.04714899, 0.29514796, 0.05159861, -0.039160363, -0.03216368, 0.144403, -0.02423359, -0.013561987) * inp_2_0_2;
    result0 += M4(-0.042354405, -0.058405638, 0.038067903, -0.032202058, -0.23510057, 0.06611924, -0.014552192, 0.021298267, -0.23178747, -0.16070081, 0.10241536, -0.047998358, 0.2979492, -0.04702345, 0.045522396, -0.08565766) * inp_2_1_2;
    result0 += M4(0.037302144, 0.06392554, -0.0014097624, -0.0025399935, -0.104643665, 0.0941055, -0.0081835035, 0.020226305, 0.023829639, 0.015008845, 0.039108112, -0.03012675, 0.0027866028, -0.0359061, -0.028794674, 0.017812207) * inp_2_2_2;
    result1 += M4(-0.036119293, 0.06784029, 0.03956834, 0.09584637, -0.030660922, 0.04349009, 0.0008549385, 0.086918876, 0.0067518237, -0.025794081, -0.016934264, 0.016344536, 0.026524821, 0.019689662, -0.0035648146, 0.061960015) * inp_2_0_0;
    result1 += M4(0.042794462, -0.032721166, 0.022559602, 0.24403387, -0.059277657, 0.016172089, 0.0023176123, -0.5158825, 0.0969781, 0.08545966, 0.02649008, 0.11207257, 0.08792942, 0.016986564, 0.019894285, 0.06903622) * inp_2_1_0;
    result1 += M4(-0.013842133, -0.047413576, 0.01884147, 0.0350823, 0.004204905, 0.025253115, 0.0127807595, -0.06495728, -0.07913155, 0.007150567, 0.02709308, 0.013513013, 0.0010961943, -0.018298073, 0.00057920796, -0.026669584) * inp_2_2_0;
    result1 += M4(-0.0427843, -0.1559768, -0.030023552, 0.084489375, 0.0047740443, -0.07983577, -0.0013346968, -0.1680482, 0.003595639, -0.016080774, -0.016545461, -0.07976602, 0.06582135, -0.06420388, -0.04118852, -0.05982634) * inp_2_0_1;
    result1 += M4(0.14307451, -0.14455914, -0.133294, 0.048181713, -0.07007476, -0.34925377, -0.03387813, -0.3492157, 0.09766612, 0.056021094, -0.047320556, -0.16476347, -0.08195492, -0.10696966, -0.07245949, -0.06536461) * inp_2_1_1;
    result1 += M4(-0.08082735, -0.009067757, -0.023302041, 0.0064007924, -0.037091028, -0.35824358, -0.021259062, -0.28352118, -0.076922745, 0.15408197, 0.08759536, 0.015296957, 0.04478154, -0.01028526, -0.0197033, -0.009406942) * inp_2_2_1;
    result1 += M4(-0.02354535, 0.2556493, 0.06252795, -0.029214641, -0.010944236, 0.052058563, 0.010513623, 0.053090584, -0.0016668426, 0.040922884, -0.033941012, 0.14225791, -0.008586976, 0.106197536, -0.08026574, 0.022036958) * inp_2_0_2;
    result1 += M4(0.023896536, 0.31118506, 0.13454793, -0.15405805, -0.02210591, -0.58130974, -0.12613975, -0.048188854, 0.011970096, -0.33176306, -0.1701465, 0.036075704, 0.016451009, 0.3435819, 0.19139902, 0.210135) * inp_2_1_2;
    result1 += M4(0.016285548, 0.08429853, 0.033444297, -0.0621421, -0.011629586, -0.4296974, -0.06080073, 0.024043797, -0.0056249755, -0.15271215, 0.08882426, -0.16900566, -0.0018544368, 0.07359154, -0.053940542, 0.01262133) * inp_2_2_2;
    result2 += M4(-0.025257193, -0.14580108, 0.012288253, 0.02539885, -0.014136048, -0.16304184, 0.0016981361, 0.04576797, -0.021651017, -0.027867783, -0.016431201, 0.0052174646, 0.047600616, -0.020518875, -0.013246567, -0.008669319) * inp_2_0_0;
    result2 += M4(-0.032469872, -0.06169394, -0.043948084, -0.05694632, -0.082986884, -0.11532819, -0.03699007, -0.1930852, 0.08603048, -0.116837315, -0.028289115, 0.024304643, 0.048697166, -0.09090781, 0.057940792, 0.025910562) * inp_2_1_0;
    result2 += M4(-0.019135581, -0.046621267, 0.10096569, 0.016190255, -0.05549939, -0.12365858, -0.2316718, -0.069845706, -0.078377225, -0.07098698, 0.20301796, -0.010921768, 0.011108672, 0.09129272, 0.059311964, -0.059716083) * inp_2_2_0;
    result2 += M4(0.08685781, -0.07639595, -0.030959167, -0.0201226, -0.00013070197, -0.14744177, -0.009134848, -0.006094295, -0.027002437, -0.10210914, -0.008408559, 0.044410042, 0.08750467, -0.09579284, -0.01299492, -0.05197773) * inp_2_0_1;
    result2 += M4(0.0134654585, -0.019452782, 0.04419108, 0.18312982, -0.2211358, 0.09642946, 0.09794599, -0.35349545, 0.070393525, -0.05791557, 0.04034363, -0.07489182, 0.13074812, -0.14439213, 0.03237362, -0.0742147) * inp_2_1_1;
    result2 += M4(0.010741667, 0.08263498, 0.03869823, -0.07307951, -0.029262152, -0.023151798, -0.7967978, -0.32113206, -0.025574103, -0.12131869, -0.31424287, -0.067278296, 0.044533312, -0.08504614, 0.22957633, -0.009612517) * inp_2_2_1;
    result2 += M4(-0.021478694, -0.07890176, 0.021528902, 0.009140492, 0.02373469, -0.16213681, 0.0055595194, -0.032549955, 0.02069734, -0.14718668, -0.012031875, -0.004738823, -0.06183982, -0.018804459, 0.0058382577, 0.021584118) * inp_2_0_2;
    result2 += M4(-0.052079562, -0.17347513, -0.0024151, -0.09805896, 0.029944964, -0.14675891, -0.05706455, 0.028045405, 0.01444321, 0.02391281, 0.007488067, -0.0448036, 0.075232916, 0.014996557, -0.009582416, -0.04446128) * inp_2_1_2;
    result2 += M4(-0.0060857153, -0.13356803, -0.04778547, 0.021281758, -0.0042583444, -0.1269155, -0.02659939, 0.004131536, 0.010732525, -0.0011603562, 0.025207462, -0.023060227, 0.043441404, -0.008354093, 0.087030925, -0.023878349) * inp_2_2_2;
    result3 += M4(-0.08765908, 0.2675475, -0.10787922, -0.073802486, 0.041984253, 0.10977845, 0.102249555, 0.0833559, -0.043386154, 0.12170793, -0.013750714, 0.062359363, -0.039083395, -0.21573852, 0.017435577, -0.009150477) * inp_2_0_0;
    result3 += M4(-0.037647624, 0.03373668, 0.3052476, 0.06648705, -0.06264843, -0.53297275, -0.27089104, -0.056989834, 0.05173142, -0.18192545, 0.06371062, -0.051147956, 0.013312855, 0.08502625, 0.104505345, -0.01835004) * inp_2_1_0;
    result3 += M4(-0.01912594, 0.02365435, -0.072435044, 0.0121888975, -0.086159214, -0.24516006, -0.107611015, 1.8775936e-05, -0.13047743, 0.072799556, -0.082139395, 0.039016698, 0.0072937612, 0.024453457, -0.046885576, 0.011091607) * inp_2_2_0;
    result3 += M4(0.022812663, 0.110044956, -0.093444094, -0.060053505, -0.024277657, -0.0055092135, 0.010238736, -0.2615126, -0.02169598, 0.05312891, -0.107486285, -0.18498103, 0.020039886, -0.31852233, 0.090365164, 0.114699334) * inp_2_0_1;
    result3 += M4(0.007300875, 0.007294328, 0.07011634, -0.04878698, -0.19718808, -0.57156974, -0.20623653, -0.18057925, -0.21170582, -0.16397603, -0.055282835, -0.09529485, 0.009676183, 0.34182435, 0.008999584, 0.07680077) * inp_2_1_1;
    result3 += M4(0.032157525, -0.05224927, -0.11723105, 0.030188885, 0.058185957, -0.3010538, -0.054993663, -0.061664894, 0.10275109, 0.07457767, -0.031508077, -0.00058807427, -0.073745914, -0.10338752, 0.030872323, 0.007015072) * inp_2_2_1;
    result3 += M4(0.037935395, 0.1627691, -0.03399987, 0.013528157, 0.016501328, 0.06226748, -0.0012884398, 0.042305548, 0.004189772, 0.04853862, -0.0063442066, 0.0035623163, -0.07318088, -0.1240939, 0.0013285198, 0.0015774352) * inp_2_0_2;
    result3 += M4(0.025077114, 0.11595894, 0.048543055, 0.032332994, -0.03446068, -0.09316074, 0.011007221, -0.018983275, 0.08654072, -0.03957573, 0.040118665, 0.08125814, 0.015292609, 0.076589026, -0.01698591, 0.0036204634) * inp_2_1_2;
    result3 += M4(-0.06268183, -0.0076443115, 0.0060353098, -0.0022268996, 0.014126829, 0.070941515, -0.028129425, 0.030445166, -0.030715292, 0.14236224, 0.006532199, 0.0024693066, -0.03499545, -0.113843456, 0.01963017, -0.02781946) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.007720444, 0.13134582, 0.004353496, -0.09687717, -0.012063029, -0.09860038, -0.08853795, 0.010335404, 0.0026791575, -0.2610803, 0.06609634, -0.009967732, 0.029013166, 0.10990233, -0.07380628, 0.02051512) * inp_3_0_0;
    result0 += M4(0.027934015, 0.103631265, -0.021749731, 0.011446985, 0.0080758175, -0.005092143, 0.05522733, 0.014718956, -0.048893295, -0.17305557, -0.08897156, 0.104640126, -0.063949704, -0.13508306, -0.06577328, 0.045763638) * inp_3_1_0;
    result0 += M4(-0.013627261, -0.06531525, -0.030256337, -0.006030681, 0.00454358, 0.03285368, -0.0013971969, 0.004706624, 0.025805742, 0.0024342036, -0.11869766, 0.1020358, 0.031263813, 0.1497146, -0.020007988, -0.0006261672) * inp_3_2_0;
    result0 += M4(0.07062903, -1.2014478, 0.11281655, 0.0416018, -0.04868798, -0.12917654, -0.026356263, 0.050821465, -0.008339529, -0.21671274, 0.021963911, -0.032674886, -0.12860696, 0.16268058, 0.07325797, -0.13375477) * inp_3_0_1;
    result0 += M4(0.046098344, 0.2061063, 0.12044515, -0.20911434, -0.071180426, -0.15212281, -0.10319895, 0.0068348167, 0.22502284, -0.043241948, -0.18204515, 0.20077689, 0.18189839, -0.35109848, 0.07818863, 0.056750216) * inp_3_1_1;
    result0 += M4(0.020558063, -0.10008559, -0.047059312, 0.035922907, 0.012649401, 0.02910326, -0.0060448945, -0.030122468, 0.005886952, -0.0966503, -0.16711377, 0.15063335, -0.08393372, 0.08668859, 0.00949634, 0.018523594) * inp_3_2_1;
    result0 += M4(0.059613768, -0.6888629, -0.031995237, 0.028502738, 0.08303106, 0.08401476, 0.018527746, -0.01404034, -0.0067065773, -0.18136545, -0.012006162, 0.02012429, -0.77516156, 0.15292944, 0.008220047, -0.17218609) * inp_3_0_2;
    result0 += M4(0.019448996, 0.16160111, 0.020301562, -0.013367196, -0.08530084, -0.00961381, -0.0063085253, -0.011049865, -0.17245571, 0.13900788, -0.107791506, 0.06410388, -0.27356607, -0.080226205, -0.03697525, 0.09800962) * inp_3_1_2;
    result0 += M4(-0.04413382, -0.08946152, -0.0062351027, 0.035688203, -0.09125498, 0.05449813, 0.024634326, -0.023038384, 0.00023291218, -0.016879251, -0.016632173, -0.0113641005, 0.09274907, 0.07812834, -0.0035316683, -0.012373782) * inp_3_2_2;
    result1 += M4(-0.046815623, 0.03842244, -0.0075540063, 0.05858227, -0.036199242, 0.03977339, 0.00032160923, -0.21812506, -0.0037305779, -0.16407615, -0.014451981, -0.06572739, -0.044073947, -0.121683225, -0.029783174, -0.24226998) * inp_3_0_0;
    result1 += M4(0.042029686, 0.06461998, -0.0026412352, 0.19796363, -0.11558832, -0.09098528, -0.009986543, -0.1518906, 0.29694718, -0.23140612, -0.066830434, -0.36092412, 0.045334928, -0.008570876, -0.019104583, -0.41906896) * inp_3_1_0;
    result1 += M4(0.0014127558, -0.09001035, -0.0038971626, -0.071045205, 0.022368548, -0.027728511, -0.011127185, 0.12951188, 0.13439265, -0.038966935, -0.014908178, -0.19197679, -0.04943229, -0.014715078, -0.0035940586, -0.13147536) * inp_3_2_0;
    result1 += M4(0.020353155, -0.31092545, -0.021058738, 0.04633633, 0.045601144, -0.066884995, -0.030377569, -0.13304745, -0.05971867, 0.16955769, 0.010587145, 0.05726123, 0.037796564, 0.25849107, 0.06645108, 0.19292225) * inp_3_0_1;
    result1 += M4(-0.28458714, -0.06969921, -0.042446878, -0.25064006, -0.07898879, -0.010892042, 0.10283812, -0.22153766, 0.23387787, 0.41585332, -0.22934759, 0.40090293, 0.082903, 0.15772171, 0.031052528, 0.41074237) * inp_3_1_1;
    result1 += M4(0.09214213, 0.063500695, -0.0049553732, 0.006391401, -0.026330208, 0.007793549, -0.05640655, -0.224255, 0.23474737, -0.19335078, -0.17206912, -0.034601722, 0.0704421, 0.10112636, -0.015706407, 0.23819643) * inp_3_2_1;
    result1 += M4(-0.022346357, 0.03354855, 0.094131865, -0.28661028, -0.048892066, -0.19946164, -0.045282662, 0.010234431, 0.0043677813, -0.08086095, 0.046870336, -0.0072035505, -0.016854754, -1.4243023, -0.028141957, -0.15891473) * inp_3_0_2;
    result1 += M4(0.029280767, 0.06042023, 0.13419521, 0.14577813, -0.0104396045, -0.075121194, -0.10562796, 0.15976056, -0.03184112, -0.33865485, -0.15907131, -0.23891841, 0.027586877, -0.0937775, 0.005614126, -0.20229492) * inp_3_1_2;
    result1 += M4(-0.029771252, -0.04706273, -0.058601502, 0.07484974, 0.0028387294, 0.0777818, 0.0041358583, -0.0316014, 0.026231857, -0.028336007, -0.17809938, -0.11867686, -0.0069992705, 0.044521812, -0.007915438, -0.0927623) * inp_3_2_2;
    result2 += M4(-0.05800594, -0.10301885, 0.023791678, 0.018283024, -0.013858601, -0.052940473, -0.01363648, -0.18502432, -0.033398535, -0.02682288, 0.0069147646, 0.03962706, 0.03778035, -0.1418388, 0.011129477, -0.061560057) * inp_3_0_0;
    result2 += M4(-0.014335799, -0.10943298, 0.012371143, 0.065794565, -0.09892713, 0.05935424, 0.018645264, 0.11833115, 0.18560047, 0.009637558, -0.032134373, -0.083042316, 0.14456731, 0.06466664, -0.043032438, -0.14909609) * inp_3_1_0;
    result2 += M4(0.058952395, -0.10111457, 0.17431317, -0.031266306, -0.01883558, 0.10065414, -0.07792533, -0.0031037165, 0.05297158, -0.024339216, 0.120450124, -0.01993967, -0.045843255, -0.048350345, 0.043530002, 0.05066404) * inp_3_2_0;
    result2 += M4(0.11650773, -0.021817056, -0.026774842, 0.076692045, 0.008104452, -0.1614872, 0.030491075, 0.10524153, -0.015613295, -0.018817501, 0.015431568, 0.022476867, 0.013854949, -0.065733254, -0.051562633, -0.07754121) * inp_3_0_1;
    result2 += M4(-0.19193316, -0.07234108, 0.2779237, 0.018995166, -0.050256286, 0.03497367, 0.0038509527, -0.15517317, -0.18513112, 0.07667454, 0.05109887, -0.077079594, -0.09135413, 0.035085477, 0.20582145, -0.15835248) * inp_3_1_1;
    result2 += M4(-0.033197153, -0.1037546, -0.29611233, 0.037453372, -0.07897423, 0.013520411, -0.33331245, 0.020418085, 0.06504025, 0.06690228, -0.02120672, 0.044578437, 0.0119609535, 0.08614118, -0.1429853, 0.06423626) * inp_3_2_1;
    result2 += M4(-0.058620494, -0.11435971, 0.028857362, -0.052174784, 0.018926982, 0.10689839, -0.020067165, 0.013251087, 0.016614389, 0.027538622, -0.0065682884, -0.02667471, -0.2052634, -0.122851305, 0.0044739707, -0.2735864) * inp_3_0_2;
    result2 += M4(0.2214103, -0.034424588, 0.039354615, 0.053345993, -0.018597156, -0.059013426, 0.034349076, 0.04561047, -0.08058309, 0.028121697, -0.014631917, 0.065717295, -0.0718829, 0.03199665, 0.043184925, 0.19385765) * inp_3_1_2;
    result2 += M4(-0.0084761465, 0.003916018, 0.09251731, 0.009258585, 0.001568276, -0.16059116, -0.02171923, -0.03239261, -0.10987985, 0.0011874851, -0.1178052, 0.00069457915, 0.06501995, 0.11547414, 0.07789396, -0.15992878) * inp_3_2_2;
    result3 += M4(-0.0065900753, 0.13990243, 0.03186025, -0.02993128, 0.072135136, -0.21683607, 0.027434383, 0.048541263, -0.015964879, 0.10763723, -0.20134857, -0.015735602, 0.049043022, -0.08981133, 0.048815116, -0.08532815) * inp_3_0_0;
    result3 += M4(0.010444157, -0.009574432, 0.031257894, -0.006748656, 0.035274636, -0.16132468, -0.060484175, 0.029609468, -0.0611206, -0.46183965, 0.24345365, 0.102231555, -0.011154693, 0.25710535, 0.16013293, -0.022513814) * inp_3_1_0;
    result3 += M4(0.06336823, -0.101672314, 0.061605636, 0.006694794, -0.007713632, -0.011965599, -0.03967685, -0.042064764, 0.09949966, -0.15889478, -0.093869105, -0.07518069, -0.033384442, 0.2878187, -0.10631785, -0.045240354) * inp_3_2_0;
    result3 += M4(-0.03318821, 0.3825135, -0.09812381, -0.15100391, 0.03307996, -0.18660048, 0.04875889, -0.027128117, -0.013393264, -0.03961323, -0.03506002, -0.13176258, -0.19930713, 0.252293, -0.329843, -0.27433118) * inp_3_0_1;
    result3 += M4(0.088991135, -0.060490523, -0.62412757, 0.0898388, -0.022178138, -0.22649647, 0.010584312, 0.027841471, 0.17691483, -0.18130675, 0.115376696, 0.22664855, 0.09583061, -0.4183251, 0.26864105, 0.15942533) * inp_3_1_1;
    result3 += M4(-0.13211542, -0.29144776, 0.14717036, 0.014860214, -0.031285938, 0.05257495, -0.06177336, -0.008664357, -0.16203125, -0.09060211, 0.07115043, -0.045900557, 0.05503197, 0.2153821, -0.2440394, 0.009279762) * inp_3_2_1;
    result3 += M4(-0.031838816, -0.04789277, -0.0011362929, -0.28924337, 0.015970115, 0.07238365, -0.041961987, -0.05313904, 0.060992107, 0.061779823, -0.0068222587, -0.033676554, -0.21416073, -0.36421233, -0.18798998, -0.2080317) * inp_3_0_2;
    result3 += M4(-0.04462102, 0.16756174, -0.03409, -0.06511524, 0.034838267, -0.21044624, 0.035237804, 0.011115414, -0.09951512, -0.19012403, -0.04318567, 0.053654384, -0.16278042, 0.017241772, 0.13956924, -0.08069122) * inp_3_1_2;
    result3 += M4(0.086073555, -0.13020197, 0.08010397, 0.015553222, -0.0055465195, 0.0069746138, -0.0007734084, 0.0085747065, 0.024869662, -0.049404405, -0.04233567, -0.035015445, -0.039911386, 0.25671118, -0.04082125, -0.058595244) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.00554416, 0.0035606448, 0.0024543013, -0.023734203);
    V4 result1 = V4(0.00062180136, 0.004260422, -0.0051327283, -0.0005512529);
    V4 result2 = V4(0.004915711, 0.007990032, 0.00035122415, -0.0037967458);
    V4 result3 = V4(-0.0035264983, 0.0019553255, 0.046902955, -0.02424596);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.23568384, -0.25745997, -0.31080297, 0.078431025, -0.004085768, 0.11970755, 0.09061544, -0.07534731, 0.027687328, -0.03648268, -0.1366946, 0.04225238, -0.14486629, -0.047818553, 0.120061375, -0.033010587) * inp_0_0_0;
    result0 += M4(-0.50859183, -1.1753845, -0.19836338, -0.32945865, 0.23468037, 0.17350559, -0.04044477, -0.0135725895, 0.019352218, -0.09856295, -0.086262025, -0.018931378, -0.09508162, 0.065201096, 0.11483925, 0.042049013) * inp_0_1_0;
    result0 += M4(0.80895334, -0.37015238, -0.80859417, -0.30490285, 0.2603974, 0.13375418, -0.13986056, -0.071677566, -0.06951812, -0.10306969, -0.054747205, 0.018273467, 0.06598172, 0.074750155, 0.017710218, 0.0044053216) * inp_0_2_0;
    result0 += M4(0.00939575, 0.10162565, 0.123819046, 0.13076222, 0.011570089, 0.15718567, 0.05345286, -0.02604726, -0.14235294, -0.11347059, -0.06349232, -0.06227275, 0.015153504, 0.08606397, -0.12860084, 0.07869103) * inp_0_0_1;
    result0 += M4(0.14841354, 0.14726108, 0.24598888, 0.3140439, 0.0947048, 0.13613334, 0.8369555, 0.1637225, 0.35189342, -0.79674894, -0.073736265, -0.17458005, -0.5943276, 0.8327994, -0.14323492, 0.061543718) * inp_0_1_1;
    result0 += M4(0.17420803, -0.023987966, -0.09621974, 0.06794942, 0.047967594, 0.38480264, -0.087149516, 0.027821975, -0.22325125, -0.14478266, 0.07114427, 0.14813627, 0.2678469, 0.21591051, 0.003051403, -0.13555568) * inp_0_2_1;
    result0 += M4(-0.025764586, -0.007994824, 0.003930452, -0.02762235, 0.018102406, 0.1198959, 0.07964342, -0.00481464, 0.0034801154, -0.0571695, 0.19966388, 5.1823947e-05, -0.066924654, 0.010402742, -0.24971674, -0.007603414) * inp_0_0_2;
    result0 += M4(0.1394207, -0.15772721, 0.16894613, 0.05867364, 0.22295995, 0.032187454, -0.20308745, -0.0035856252, -0.04602867, -0.08847241, -0.013864097, 0.03259476, -0.39351258, 0.1738276, -0.47870588, -0.0120419385) * inp_0_1_2;
    result0 += M4(-0.083558016, 0.012144598, -0.090559654, -0.028651271, -0.045143742, 0.083131075, 0.09055, 0.0069655953, 0.141685, 0.024184052, -0.08834646, 0.021967374, -0.27601287, 0.07197082, 0.0035113592, -0.021796618) * inp_0_2_2;
    result1 += M4(0.39713445, 0.12264699, -0.02039464, 0.49646863, -0.1265409, 0.009013231, -0.071090505, -0.020039052, 0.058569543, 0.09317454, -0.0566627, 0.1147779, -0.0028859335, -0.16860749, 0.18617424, -0.14090998) * inp_0_0_0;
    result1 += M4(-0.011312116, -0.36176878, -0.18521847, 2.1784804, -0.21865691, -0.041069895, -0.22494808, -0.06387538, 0.026571833, 0.013336947, -0.13009565, 0.06148887, 0.0366417, 0.05304642, 0.21029119, 0.05339357) * inp_0_1_0;
    result1 += M4(-0.94986653, -0.5104654, 0.90605026, 0.834583, -0.22192582, -0.14633287, -0.3114065, 0.26574454, 0.094614, -0.01302786, 0.008978686, 0.032283537, -0.06142154, 0.010320921, -0.0041884515, -0.040707026) * inp_0_2_0;
    result1 += M4(0.11551614, 0.02380754, 0.11047118, 0.024349125, -0.23225203, 0.01813116, -0.12455873, -0.12304308, 0.09346374, -0.11320707, 0.18711965, 0.0047280667, -0.09767089, 0.020410813, -0.12490784, 0.06067824) * inp_0_0_1;
    result1 += M4(0.21387787, 0.02089622, -0.30645573, -0.14048138, -0.3757969, 0.06633993, 0.040218543, 0.17389709, 0.5176066, 0.18779807, 0.053794656, -0.21169764, -0.39012828, -0.23854403, -0.07314743, 0.13396983) * inp_0_1_1;
    result1 += M4(0.10799241, -0.320406, 0.16100731, 0.2083776, -0.5586169, 0.014653243, 0.019894894, -0.043313827, 0.008446024, -0.0871503, -0.23196666, 0.05729368, -0.018204171, 0.095173806, 0.3568842, 0.18488286) * inp_0_2_1;
    result1 += M4(-0.057006087, 0.04264354, 0.009528718, -0.00091833086, -0.07665351, -0.027628241, 0.029982138, -0.07552145, 0.03606467, 0.12043923, 0.11786917, 0.008097257, 0.0020616788, -0.14378858, -0.115767196, -0.08486199) * inp_0_0_2;
    result1 += M4(0.09010373, -0.021972934, 0.12043411, 0.11805092, -0.2251289, -0.091949284, -0.25009188, -0.091088615, 0.036653955, -0.22686262, 0.03298, -0.09442859, -0.019420965, 0.0113673145, -0.094072685, -0.32422397) * inp_0_1_2;
    result1 += M4(0.0026928207, -0.010932805, 0.011499178, -0.11633121, -0.12028351, 0.074955374, 0.045689993, -0.13910976, -0.07281077, -0.035132397, -0.0009169483, -0.093588, 0.09045673, -0.008124796, -0.0929676, -0.11545255) * inp_0_2_2;
    result2 += M4(0.13731048, -0.11043177, -0.588455, -0.0073023606, -0.00419943, 0.029473761, 0.0189034, -0.06855382, 0.00015079444, -0.03502631, 0.09467583, 0.011934296, 0.038574163, 0.009181123, -0.1785723, 0.029115254) * inp_0_0_0;
    result2 += M4(-0.75766563, 0.3852031, -2.040841, -0.7724536, -0.09047806, 0.015441546, 0.16725484, 0.074764416, -0.0037026566, -0.05971257, -0.13714659, -0.05169738, 0.026682435, 0.094506666, 0.2833037, 0.059710156) * inp_0_1_0;
    result2 += M4(-0.93687737, -0.11838567, -0.8053436, -0.22057055, -0.19590709, 0.02244662, 0.37626514, 0.2076148, 0.10084934, 0.021323929, -0.06981331, 0.0017624809, -0.06705991, -0.0064805965, 0.06658507, -0.0031225774) * inp_0_2_0;
    result2 += M4(0.11538841, -0.0032100256, 0.030325048, 0.06221632, -0.07006769, -0.0043034344, 0.21300936, 0.17054325, 0.11718658, -0.054634802, -0.038931936, 0.072093286, -0.17296864, 0.011775039, -0.12847364, -0.07151323) * inp_0_0_1;
    result2 += M4(0.0143150035, 0.016563332, -0.05484398, -0.23899247, -0.22960304, -0.024496816, 0.17744496, 0.2897066, 0.4713515, -0.17541175, -0.28712872, -0.013268326, -0.7260271, 0.20666836, 0.037443932, 0.40460774) * inp_0_1_1;
    result2 += M4(-0.17821868, -0.0064351237, 0.029263625, 0.109908625, -0.22882156, -0.020243287, -0.4038763, -0.039645854, 0.070703976, 0.09260907, 0.043769643, -0.056932747, -0.14509198, -0.10721357, -0.08877908, 0.12539448) * inp_0_2_1;
    result2 += M4(-0.02550074, -0.010629121, 0.057185855, -0.0037789673, -0.039269537, 0.0022323672, -0.02926257, -0.030861575, 0.039226927, 0.015872473, 0.076931275, 0.08339041, -0.09196026, -0.08054622, -0.07964301, -0.09152116) * inp_0_0_2;
    result2 += M4(0.10309627, 0.14987691, -0.0015581524, -0.07692821, -0.20268367, -0.029000072, 0.070904404, -0.29826537, 0.1270356, 0.083003424, 0.12694895, 0.06643948, -0.18605055, -0.17585239, -0.22154929, -0.18086526) * inp_0_1_2;
    result2 += M4(-0.02291737, -0.04795173, -0.036447514, 0.07126037, -0.10504879, -0.0088231405, 0.15438001, -0.026133511, -0.14936921, -0.026850255, -0.0019207399, -0.009938815, 0.122746944, -0.032737236, 0.052002, 0.10759351) * inp_0_2_2;
    result3 += M4(0.0106864385, 0.8040776, -0.29173207, -0.103286505, -0.0420884, 0.039082237, 0.0054186294, -0.054753806, 0.057558857, -0.0372407, -0.041886467, 0.032544363, -0.016341347, -0.041027185, 0.028449107, 0.06327179) * inp_0_0_0;
    result3 += M4(-0.14357302, 1.078116, -0.19572757, -0.22878449, 0.20221293, 0.18759386, 0.036793366, -0.07944229, 0.20622961, -0.0706312, -0.028517576, -0.007917142, -0.45997715, 0.011712113, -0.025623748, 0.058857646) * inp_0_1_0;
    result3 += M4(-0.06150905, 0.955212, 0.28467566, -0.17484728, -0.0621827, 0.28910545, 0.025325052, -0.13947348, 0.12644492, 0.02261855, -0.06527057, 0.012878039, -0.08968364, 0.009283554, 0.019780446, -0.009314835) * inp_0_2_0;
    result3 += M4(-0.08621657, 0.014773559, -0.061577365, 0.087403774, 0.07285193, 0.2628587, -0.0054213633, -0.04962397, 0.06922197, -0.25807148, -0.004040452, 0.031926736, -0.060928863, 0.15363665, 0.02896822, 0.09470019) * inp_0_0_1;
    result3 += M4(0.13197418, -0.08392504, -0.30492353, -0.14186163, -0.1094755, 0.6948002, 0.023324624, -0.025829459, 0.58909553, 0.09496653, -0.058447473, 0.19339447, -0.71015424, -0.07416899, 0.16869073, -0.13473356) * inp_0_1_1;
    result3 += M4(-0.14804855, 0.058770962, 0.032699764, 0.03916292, 0.16677499, 0.4955231, 0.023601077, -0.095564745, 0.1699758, 0.17785405, -0.08229326, 0.23149021, -0.37082264, -0.186013, 0.14388426, -0.1842036) * inp_0_2_1;
    result3 += M4(-0.00053440174, -0.0013150078, 0.023524178, 0.01455883, -0.008388915, 0.15895888, 0.009044806, -0.035039898, 0.027215911, 0.09278013, 0.020581087, 0.022571577, 0.005805414, -0.00978286, -0.015875628, -0.027481966) * inp_0_0_2;
    result3 += M4(0.038205527, -0.11583063, -0.036434013, 0.04492914, -0.13280123, 0.24733451, 0.060026366, 0.057453603, 0.31096172, -0.23888731, -0.08658153, 0.047620997, -0.09848511, 0.18986239, 0.06566477, -0.12320857) * inp_0_1_2;
    result3 += M4(-0.016957533, 0.022951372, 0.012076184, -0.08173167, 0.099314705, 0.14026849, 0.020083964, 0.004958666, 0.05334624, -0.06607325, 0.044024173, 0.03920669, -0.00026086404, 0.01117343, -0.064204484, -0.124735355) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.028017268, 0.08383048, 0.04674392, -0.063258834, -0.046269387, 0.07715855, -0.117320254, 0.062397365, -0.046697747, -0.11296823, -0.13550243, 0.007876106, 0.084268294, 0.055667344, -0.058113515, 0.00049702387) * inp_1_0_0;
    result0 += M4(0.17784359, 0.10983983, -0.23281115, -0.036888663, -0.17433651, 0.4119682, 0.63604635, 0.08345683, -0.17338464, -0.21041968, 0.3268057, 0.010023987, 0.12605697, -0.019576585, -0.27528515, -0.008011022) * inp_1_1_0;
    result0 += M4(0.05850933, 0.10322015, 0.10185427, 0.05173039, 0.25880796, 0.17400241, -0.0041909544, -0.07167941, -0.23685063, -0.16959897, -0.09384355, 0.057839047, -0.058988668, -0.067305215, -0.013786735, -0.00047486878) * inp_1_2_0;
    result0 += M4(-0.0056041772, 0.060718752, 0.18593358, 0.0079045715, -0.008476391, 0.07819441, -0.1675456, 0.0010456427, 0.0042915903, -0.01771784, -0.122387215, -0.010252148, -0.07442361, -0.062487666, 0.06399482, -0.11060909) * inp_1_0_1;
    result0 += M4(0.50194734, 0.30671525, 0.15825279, 0.079907686, 0.38843098, 0.18301237, 0.453728, 0.055803027, 0.53791606, -0.22331883, 0.5029558, -0.09295866, 0.72391784, -0.3219544, -0.03605471, 0.2529682) * inp_1_1_1;
    result0 += M4(0.015293627, 0.03742628, -0.06318264, -0.054226875, -0.09618092, -0.0023337046, 0.05389776, -0.13291256, 0.042470682, 0.054714434, 0.086114764, 0.029938016, -0.09086658, -0.14743185, -0.021351784, 0.0036823594) * inp_1_2_1;
    result0 += M4(0.035231415, 0.050758336, 0.02644307, -0.04962551, 0.019898184, 0.084135264, 0.014165971, 0.0011652537, 0.01817163, 0.03354476, 0.019208603, 0.017286472, 0.06836031, -0.100743175, 0.2904644, -0.052584637) * inp_1_0_2;
    result0 += M4(0.20755163, -0.037813284, 0.25909835, 0.08659381, 0.24087618, 0.0093964, 0.16962624, 0.057989135, 0.1024219, 0.16199051, 0.21219464, -0.0159563, -0.10286861, -0.35566133, -0.05444073, -0.05206694) * inp_1_1_2;
    result0 += M4(0.05851141, -0.0031619302, -0.043593198, -0.032881916, 0.036358982, -0.0195149, 0.100028954, -0.008665256, -0.07089627, -0.021292768, -0.013166583, 0.010711994, 0.039055124, 0.011984975, -0.09306435, -0.04665883) * inp_1_2_2;
    result1 += M4(-0.08673397, 0.030171411, -0.090023026, -0.07456965, 0.23490548, 0.19444881, 0.042296793, -0.016953187, 0.24983199, 0.06691501, -0.017314285, -0.0062437044, -0.08743316, 0.052730523, -0.21250744, 0.079423256) * inp_1_0_0;
    result1 += M4(-0.080335155, -0.019328322, 0.06021867, -0.26986602, -0.06292759, -0.11962022, -0.29234338, 0.045149215, 0.16894396, 0.29367468, -0.2809569, -0.09734407, -0.024388082, -0.00955114, 0.10079916, -0.0042724633) * inp_1_1_0;
    result1 += M4(-0.15722431, -0.05033601, -0.105129436, -0.17620319, -0.048317287, 0.18087602, 0.29440713, -0.10219544, 0.18492393, 0.15385547, 0.18350391, -0.044540755, 0.049505416, 0.0006425388, 0.12478467, 0.015350504) * inp_1_2_0;
    result1 += M4(-0.25262094, 0.08500081, 0.17520471, 0.14337118, 0.07694529, 0.045996565, -0.019626629, -0.034619126, 0.13459614, -0.018061705, 0.04312522, 0.05819496, -0.09837077, -0.17471693, 0.13845733, 0.0033363444) * inp_1_0_1;
    result1 += M4(-0.46382892, -0.1805441, -0.056283683, 0.21944122, 0.060857743, 0.17529555, -0.30767977, 0.15105404, 0.12393276, 0.38789162, 0.5018043, 0.5156992, 0.0052674697, 0.32664448, 0.29153103, -0.27436453) * inp_1_1_1;
    result1 += M4(-0.16332398, -0.31237116, -0.14179622, -0.052042514, 0.035878383, 0.061521318, 0.25608295, 0.21674109, -0.021818124, 0.14523563, 0.1338936, 0.15224092, -0.18633899, -0.31766886, -0.38182718, 0.11714808) * inp_1_2_1;
    result1 += M4(-0.122643866, -0.012858987, -0.05037714, 0.014456284, -0.04581385, 0.0154236145, -0.014934541, -0.07175605, 0.04786378, 0.007272757, -0.012146364, -0.008719289, 0.01650364, 0.1363651, 0.098586, 0.17648397) * inp_1_0_2;
    result1 += M4(-0.11808696, -0.013809398, -0.036482524, 0.18908095, 0.07314196, 0.12419771, 0.030163353, -0.05747017, 0.011371956, 0.05319746, -0.080527864, -0.08109352, -0.22859335, -0.33593008, 0.13647972, 0.16234325) * inp_1_1_2;
    result1 += M4(-0.06810117, -0.06474335, 0.04511623, 0.18598978, 0.03198816, 0.018797923, 0.07006615, 0.20469858, 0.011753994, 0.02780508, -0.0067422222, -0.061402004, -0.03469361, -0.01756872, -0.099388085, -0.29656467) * inp_1_2_2;
    result2 += M4(-0.010101927, 0.012142022, 0.13753872, -0.07592164, 0.24621278, 0.022502985, 0.059648458, 0.01597272, 0.1696327, -0.102047145, 0.04517398, 0.05305025, -0.08825794, -0.014463063, 0.1251373, -0.052420545) * inp_1_0_0;
    result2 += M4(0.07512745, -0.10475823, 0.11044769, 0.09249531, -0.14207208, 0.25834373, -0.20369688, 0.041936856, 0.11155157, -0.084077, -0.08402205, -0.469564, 0.035707384, -0.1171335, -0.26028937, -0.0104493825) * inp_1_1_0;
    result2 += M4(-0.16025715, -0.024103189, 0.044518754, -0.060086533, -0.04770105, -0.021979045, -0.006935346, -0.09828985, 0.23731568, 0.11304956, 0.10266401, -0.08788133, 0.028223475, -0.03462541, -0.16051012, -0.023211282) * inp_1_2_0;
    result2 += M4(-0.04119911, 0.07231812, 0.11539732, 0.24512613, 0.15969118, -0.0034061177, 0.064275585, 0.10789273, 0.07397625, 0.020999841, 0.010693397, -0.040412422, 0.005349942, 0.011429834, 0.058798775, 0.10518352) * inp_1_0_1;
    result2 += M4(0.1491683, -0.011587817, 0.09936694, -0.07799353, -0.086593926, 0.18102789, 0.05918857, -0.23745605, -0.16242729, 0.13943286, -0.17034331, 0.022833342, 0.3482531, -0.14977047, -0.18768963, -0.44348362) * inp_1_1_1;
    result2 += M4(-0.18639128, -0.07660164, -0.019461492, -0.025218323, 0.059837624, -0.019939028, -0.040155083, -0.09068219, 0.0113997, 0.006975259, -0.010539993, 0.06957274, -0.14248815, -0.013834225, 0.04348272, 0.07377153) * inp_1_2_1;
    result2 += M4(-0.05419043, -0.031471003, 0.08130957, -0.04922958, -0.03593198, 0.00430098, 0.006999081, -0.045792412, 0.033670865, 0.034493398, -0.03636291, -0.0036208157, 0.06645422, 0.03490993, 0.08517883, 0.07874068) * inp_1_0_2;
    result2 += M4(0.0015489013, 0.12229372, 0.10686541, -0.1609689, 0.027287612, 0.058239523, 0.084876984, 0.10918408, -0.0076355203, -0.05049021, 0.005372464, 0.016801992, 0.066119485, 0.1780938, 0.06880514, -0.32612947) * inp_1_1_2;
    result2 += M4(-0.04647056, -0.021017686, -0.122595824, 0.028675733, 0.045659572, 0.009543886, -0.07282885, 0.047430508, 0.024589382, 0.009203567, 0.062269118, -0.029804459, -0.035128817, -0.008775228, 0.053784184, -0.015671814) * inp_1_2_2;
    result3 += M4(-0.025878146, -0.11016244, 0.016787384, -0.038859665, -0.08765908, -0.0058227535, -0.07766093, 0.0044821524, -0.04420939, -0.1031573, -0.0283375, 0.10192489, 0.044452522, 0.02373082, 0.027546527, -0.020747148) * inp_1_0_0;
    result3 += M4(0.2773894, -0.04560918, 0.020622073, -0.031250425, -0.5765868, 0.34590217, 0.090889536, 0.048839968, -0.48670706, 0.20682888, -0.06863659, 0.1571827, 0.4350732, -0.07181384, 0.001672603, -0.037565824) * inp_1_1_0;
    result3 += M4(0.01700833, 0.018191617, 0.038552396, 0.049859423, -0.4178993, -0.20770876, 0.073903516, -0.07436712, -0.16782999, -0.061623234, -0.088205345, 0.10144726, 0.075666286, -0.09098816, -0.0104761785, 0.008953075) * inp_1_2_0;
    result3 += M4(0.22746375, 0.09713804, 0.043710828, 0.017052276, -0.12061406, -0.08940302, -0.037620623, 0.0068556634, -0.15119897, -0.3130102, -0.006604222, 0.027988972, 0.16304152, -0.32320914, 0.027071944, -0.046965923) * inp_1_0_1;
    result3 += M4(0.85751814, -0.44757524, -0.10402087, -0.109984435, -0.86930525, 0.09171682, -0.118928425, -0.091346964, -0.4051011, -0.13463101, 0.20412493, 0.21991086, 0.8314565, -0.26847413, 0.11724367, 0.094213836) * inp_1_1_1;
    result3 += M4(0.49291834, 0.26668006, 0.064105414, -0.0885372, -0.019859714, 0.11738886, 0.032498293, -0.1410144, -0.20730413, -0.0075371293, -0.026638927, 0.02389111, 0.44397846, 0.3547482, 0.1135303, 0.051618017) * inp_1_2_1;
    result3 += M4(0.0029735337, 0.021756724, 0.025841326, 0.0075664264, -0.09186342, 0.038337357, 0.008690179, -0.010587771, -0.073133186, -0.011476515, -0.021393392, -0.037372187, 0.057055302, 0.025391582, 0.048040297, -0.0002708186) * inp_1_0_2;
    result3 += M4(0.16912203, 0.03620407, 0.0019473506, 0.07396527, -0.35145465, 0.031308413, -0.05373632, -0.012317707, -0.24969688, 0.24080488, -0.011758374, -0.07358698, 0.76640725, -0.074375466, 0.06498368, 0.09692298) * inp_1_1_2;
    result3 += M4(0.043346215, 0.081599906, 0.020752229, -0.042798102, -0.07415141, 0.073492214, -0.0039835703, -0.012778415, -0.052987967, -0.02092449, -0.019178648, 0.010152292, 0.049570896, -0.19230321, 0.0415816, -0.034444164) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.05775822, -0.014978901, -0.062595546, 0.03285094, 0.014017727, 0.1301914, -0.12945725, -0.051727213, -0.040376395, 0.08733451, 0.39729974, -0.0034650592, 0.058354963, -0.004721623, 0.0030375326, -0.012459664) * inp_2_0_0;
    result0 += M4(0.03360356, -0.027845997, -0.016312093, -0.0029565878, -0.040569883, -0.0119209485, -0.056025207, -0.089806594, -0.27681765, 0.011165705, -0.03770187, 0.22629434, 0.08505158, -0.019201137, -0.12341774, 0.09109499) * inp_2_1_0;
    result0 += M4(-0.028485028, 0.00469115, 0.026421247, 0.05897592, -0.06724166, 0.0578516, 0.07387339, 0.113849156, 0.0048072995, -0.06205267, -0.10857633, -0.027259229, 0.18180452, 0.026822979, -0.13720988, -0.04934065) * inp_2_2_0;
    result0 += M4(-0.10528333, -0.06401315, 0.03798404, -0.044913743, -0.037323296, -0.01594701, -0.023516236, 0.018440692, -0.6278133, 0.22716969, 0.14058124, -0.5801889, 0.20067573, -0.30287805, 0.09425832, -0.08955724) * inp_2_0_1;
    result0 += M4(-0.00028927586, -0.15463531, 0.033683125, -0.030455822, -0.046297394, -0.010880954, 0.031343132, 0.016045924, -0.048962, 0.13005552, -0.12939669, 0.25606737, 0.038582157, 0.24861354, -0.14133927, 0.043712497) * inp_2_1_1;
    result0 += M4(0.09525144, -0.01131875, -0.061549075, -0.032968197, 0.06144275, 0.029584829, -0.107129395, 0.012068292, -0.065849036, 0.002045851, 0.054539256, 0.015952252, 0.13133407, 0.25259754, 0.23925184, -0.0458391) * inp_2_2_1;
    result0 += M4(-0.09935866, 0.04322034, -0.12429055, 0.013845525, 0.0044415835, -0.022030799, 0.11004166, 0.10202297, -0.85159534, 0.06091296, -0.5514517, -0.17526008, 0.008112576, -0.060983106, -0.085835174, 0.07976114) * inp_2_0_2;
    result0 += M4(-0.1638853, 0.003273959, -0.2929721, -0.00478951, -0.08490906, 0.057665437, 0.05838138, -0.07362229, 0.13909763, -0.07464916, 0.019745296, 0.20950836, 0.27729267, 0.12359076, 0.17160267, 0.030633679) * inp_2_1_2;
    result0 += M4(-0.14051662, 0.10795877, -0.18245727, 0.0018442271, 0.10680873, 0.044012114, -0.025241777, -0.037937503, 0.08714763, -0.019346746, -0.04349522, 0.04103289, 0.41885787, -0.08778151, 0.090167984, 0.0056012874) * inp_2_2_2;
    result1 += M4(0.08412394, 0.07417661, 0.06398457, 0.030008836, 0.091343224, 0.1134062, 0.023481604, -0.06078993, -0.14507805, -0.24934362, -0.15872793, -0.7659852, -0.24598922, -0.09630293, -0.23479846, -0.06802933) * inp_2_0_0;
    result1 += M4(0.0741246, 0.04148297, -0.13207845, 0.059602812, -0.08974251, 0.00916036, -0.022386277, -0.05983945, 0.047743063, 0.14300163, -0.015753563, 0.1546475, 0.04279252, -0.032638784, 0.23450485, -0.23022059) * inp_2_1_0;
    result1 += M4(0.012042935, 0.040678017, -0.059888873, -0.12043897, 0.1087946, -0.12480226, -0.040144898, 0.11855503, 0.009433938, -0.034990437, 0.071785256, 0.1575803, -0.0748493, -0.035095695, 0.09168077, 0.12084336) * inp_2_2_0;
    result1 += M4(0.04415186, -0.021027677, 0.044979684, -0.038140763, 0.005070833, 0.120541945, 0.0069857836, -0.11702457, 0.20510589, -0.5532211, -0.10321253, -1.2342771, 0.062407475, -0.1415924, -0.017643629, 0.641241) * inp_2_0_1;
    result1 += M4(0.013395713, -0.048559505, 0.019550437, -0.18523078, -0.118224345, -0.075966015, 0.010840534, -0.042547837, 0.015864337, 0.3515199, -0.16864178, -0.25042695, 0.17930342, 0.26010278, -0.3459027, 1.2133294) * inp_2_1_1;
    result1 += M4(0.118194155, -0.018893197, 0.07614361, 0.19769332, -0.06745316, -0.1348197, -0.11465439, 0.1091673, 0.0013718846, 0.032020185, -0.08305777, 0.0010291669, -0.066469066, 0.14496705, -0.19944896, -0.05626531) * inp_2_2_1;
    result1 += M4(-0.0050484636, 0.009182363, 0.06547973, -0.10592938, 0.056018025, -0.015536455, -0.13475202, 0.012752248, -0.12395057, -0.2830095, -0.20913354, -1.5100067, 0.07172926, -0.07571002, 0.0035181239, 0.08356411) * inp_2_0_2;
    result1 += M4(0.18428446, -0.011715503, -0.21205644, -0.11232862, 0.015280416, -0.09708902, 0.06576303, -0.09285571, -0.04114866, 0.16742074, 0.14037673, -0.061556667, -0.07989732, 0.16107057, -0.0683675, 0.60082597) * inp_2_1_2;
    result1 += M4(0.0022448117, -0.052939832, -0.03940688, -0.13775356, -0.06664438, -0.048471533, 0.0067455713, -0.05613826, -0.029740795, 0.02421519, 0.053146437, -0.13170436, -0.35616145, -0.10721809, 0.18329681, 0.36382845) * inp_2_2_2;
    result2 += M4(0.068950444, 0.004228427, 0.05005074, -0.01437664, -0.037513696, 0.003060178, 0.09082299, -0.011960983, 0.052547447, -0.07330394, 0.58467644, 0.20825575, -0.2700018, -0.011488413, 0.042236764, -0.121473) * inp_2_0_0;
    result2 += M4(0.03645422, -0.053291027, -0.027421894, 0.025394209, -0.131874, -0.07422409, 0.10046078, 0.09672243, 0.07098867, 0.10937933, 0.26774347, -0.17486118, -0.0061379336, -0.037949268, -0.38805893, -0.15912387) * inp_2_1_0;
    result2 += M4(0.02857215, 0.02738674, 0.085788235, -0.050321907, -0.036790468, -0.1085107, 0.091878645, 0.1298341, -0.011356959, -0.0036104026, -0.0722737, 0.043619256, -0.14795832, -0.05875531, -0.13712917, 0.04600283) * inp_2_2_0;
    result2 += M4(0.030725675, -0.07554962, 0.059670918, 0.13172391, 0.11977989, -0.044289723, -0.06832598, -0.065645315, 0.0635005, -0.41550714, 0.5146792, -0.06736157, -0.035127573, -0.056319658, -0.11749019, 0.15477891) * inp_2_0_1;
    result2 += M4(-0.09153027, 0.18307114, 0.08349158, -0.0976591, 0.07812391, 0.03968702, 0.13889085, 0.1205452, -0.122974664, -0.08700509, -0.37137592, 0.50201213, 0.80392164, 0.21142486, -0.10866661, 0.12425588) * inp_2_1_1;
    result2 += M4(-0.07147025, -0.004253226, 0.020732695, 0.24965748, -0.045583654, 0.11473415, -0.13059857, -0.11936033, 0.06952111, 0.028138787, -0.051866554, 0.053642772, 0.06333896, 0.0094818985, -0.039217096, 0.014266873) * inp_2_2_1;
    result2 += M4(-0.008727032, -0.05355465, -0.080412924, -0.04179721, 0.03571873, -0.08415403, 0.004001231, 0.039587397, -0.20480268, -0.37934443, 0.30251455, 0.26009285, -0.027750505, -0.013463831, -0.13920331, 0.042823818) * inp_2_0_2;
    result2 += M4(-0.004709855, -0.08144162, -0.03870486, 0.18946053, -0.08553779, 0.12583938, -0.05901125, 0.06353403, -0.20595407, -0.036705106, 0.12143323, -0.42846647, -0.019476237, 0.004705586, 0.018122578, 0.109901614) * inp_2_1_2;
    result2 += M4(-0.019192642, -0.043753024, -0.017688753, 0.011398919, 0.12195856, -0.027259784, 0.05997377, -0.082258366, -0.04321992, 0.0049938355, 0.08545774, -0.08618113, -0.21414728, 0.04842085, -0.084254146, -0.3214946) * inp_2_2_2;
    result3 += M4(-0.012620612, -0.1635341, -0.024378916, 0.04627554, 0.11094243, -0.11261427, -0.023947066, -0.12136779, -0.21117754, 0.033777576, 0.046398256, 0.33033276, 0.18528128, 0.012936705, 0.053570792, -0.048201136) * inp_2_0_0;
    result3 += M4(0.03870154, 0.051551927, -0.089354575, 0.010220865, 0.12570222, -0.121863656, -0.08737668, 0.061264936, -0.020304987, 0.052509457, -0.086800136, 0.18913883, 0.33720246, -0.2198648, -0.009290949, -0.10697695) * inp_2_1_0;
    result3 += M4(-0.00922193, 0.0011144935, -0.027350632, 0.05929015, -0.034351952, -0.07287697, 0.1413217, 0.07097557, 0.04544613, 0.04732037, 0.0054948106, -0.015656121, 0.010647762, -0.00089097675, 0.10664674, -0.045190636) * inp_2_2_0;
    result3 += M4(-0.07723399, 0.01711755, 0.008794938, 0.066904366, -0.11128668, -0.0073982226, -0.04974411, 0.10327612, -0.8054111, -0.7308745, 0.18316391, 0.45250455, 0.079969555, 0.04729037, -0.032178797, -0.024790442) * inp_2_0_1;
    result3 += M4(-0.21665059, -0.020536715, 0.039259203, 0.0010332059, -0.117348835, 0.02460415, 0.070192456, 0.05959427, 0.15463667, -0.0105163595, -0.27818167, 0.1727243, 0.36313358, 0.56591046, -0.31303242, -0.08964173) * inp_2_1_1;
    result3 += M4(-0.17843041, -0.06934756, 0.11412918, 0.026887836, 0.1344711, 0.0354489, -0.015176389, 0.05560216, -0.017452156, 0.0044211927, -0.03231603, 0.02267454, 0.04044748, -3.2065927e-05, -0.15732174, -0.14531441) * inp_2_2_1;
    result3 += M4(0.013824313, 0.051146988, -0.0054402417, 0.059832443, 0.033284035, -0.053465836, -0.07917008, -0.024371361, 0.12167992, 0.38531107, -0.05637591, -0.183046, 0.08327619, 0.0636477, -0.032350026, 0.030765848) * inp_2_0_2;
    result3 += M4(0.023493385, -0.14528833, -0.044434663, -0.012550662, -0.04689379, -0.12352749, -0.10574546, -0.08472175, -0.08518625, -0.0970778, 0.059737504, 0.38812634, -0.2393465, -0.266548, 0.037684735, 0.11280855) * inp_2_1_2;
    result3 += M4(-0.01078281, 0.04781211, -0.0314142, -0.018217666, -0.06460597, -0.10693413, -0.08918696, 0.14436917, -0.05700902, -0.034494236, 0.005219925, 0.05610295, 0.12885563, 0.47299123, 0.14114419, 0.1413599) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.14792295, 0.0827621, -0.1400453, 0.02237631, 0.019783493, -0.121589735, -0.20778576, 0.11392666, 0.053860694, 0.13803902, -0.027801225, -0.03165437, 0.018437196, -0.04277983, -0.12467206, 0.062495004) * inp_3_0_0;
    result0 += M4(-0.26486814, 0.15800516, 0.24775761, -0.034640156, -0.2002938, -0.2122048, 0.28888112, 0.051416416, 0.17588387, 0.25386304, -0.00657887, -0.043001868, -0.24337976, -0.14378072, 0.14420317, -0.03432489) * inp_3_1_0;
    result0 += M4(0.058873154, 0.17443796, 0.16472074, -0.031394448, -0.067148335, -0.19527991, -0.13348474, -0.06187585, -0.0022000896, 0.13510898, 0.1180732, 0.024064088, -0.16158594, -0.20410147, 0.18891028, 0.007802237) * inp_3_2_0;
    result0 += M4(-0.1383519, 0.23389557, 0.2331109, -0.012182078, 0.27151456, -0.28306243, 0.08019076, -0.038086288, -0.22525062, 0.26294836, -0.05635361, -0.0033492458, -0.005068995, -0.12380863, 0.10101528, 0.06054015) * inp_3_0_1;
    result0 += M4(0.48013526, -0.85690033, 0.184739, -0.025396572, -0.28345117, -0.7271676, -0.46492755, -0.36425966, 0.535437, 0.65110207, 0.409256, 0.27114975, -0.23688981, -0.33772144, -0.5332236, 0.19972359) * inp_3_1_1;
    result0 += M4(-0.36256742, -0.072608955, -0.24360546, 0.07883347, -0.08697756, -0.055183217, 0.15490706, 0.092196904, 0.19725615, 0.11503395, -0.03270314, -0.053988542, -0.19828324, -0.7398818, -0.3357437, -0.24595676) * inp_3_2_1;
    result0 += M4(-0.108851545, -0.008799661, 0.14091022, -0.06273395, -0.0714433, -0.3198212, 0.2690324, 0.12491057, 0.15642333, 0.1667491, -0.2317083, -0.07427763, -0.034908403, -0.105428316, -0.034202445, 0.020545054) * inp_3_0_2;
    result0 += M4(0.10004467, -0.2611036, 0.18333842, 0.017847382, -0.39047945, -0.13389803, -0.33552065, -0.012163606, 0.24380931, 0.12609507, 0.34841907, -0.047346268, -0.022562115, -0.014880485, 0.23591654, 0.013977047) * inp_3_1_2;
    result0 += M4(-0.1175853, 0.04850311, 0.09834225, 0.0014305938, 0.35465258, -0.06458322, 0.09235948, 0.082913354, -0.14107274, 0.0808971, 0.1458754, -0.025030224, -0.095885046, -0.12216354, -0.21905616, -0.09004103) * inp_3_2_2;
    result1 += M4(0.15334566, 0.33006936, 0.0002042301, 0.16777067, 0.11870289, -0.0034144183, 0.20318496, 0.15584238, -0.08773587, 0.06357453, -0.15653782, 0.003146749, 0.075952, 0.03775971, 0.055804383, 0.04162827) * inp_3_0_0;
    result1 += M4(-0.0024829486, -0.12354944, -0.34871924, -0.2008267, 0.16680907, 0.053889614, -0.4018872, 0.09355942, 0.044912733, 0.10332045, 0.0024975555, 0.0059372745, 0.30730835, -0.06463791, 0.28588936, 0.08235508) * inp_3_1_0;
    result1 += M4(-0.028899811, 0.033319846, -0.12756829, -0.15816526, 0.15091448, -0.07814982, 0.03556066, 0.14834686, 0.0108668655, 0.11323641, -0.031809106, -0.07434798, 0.22787622, 0.12836239, 0.17477359, -0.1374613) * inp_3_2_0;
    result1 += M4(0.031461746, 0.09047074, 0.0651876, -0.39187795, 0.47180197, -0.007871359, -0.4421949, -0.10696745, -0.33479077, -0.0552739, 0.37463024, -0.105905026, 0.23264876, 0.116254374, 0.19968472, 0.16712487) * inp_3_0_1;
    result1 += M4(-0.17258303, -0.19261038, 0.22635125, -1.0112026, 0.73682, 0.2817226, 0.18924057, -0.04077362, -0.81976664, -0.20372045, -0.05040239, -0.6519759, 0.57869756, 0.14687608, -0.091383785, -0.64425147) * inp_3_1_1;
    result1 += M4(0.07596047, -0.028348904, -0.0817571, -0.21478182, 0.031951066, 0.116806775, -0.18488656, -0.14137784, -0.19996391, -0.03608148, 0.06823286, 0.049732804, 0.6296059, -0.45510864, 0.13862397, 0.14210942) * inp_3_2_1;
    result1 += M4(-0.068121396, 0.1662898, 0.15000615, -0.146978, 0.34018955, -0.009185021, 0.16755217, -0.056192778, -0.22051853, 0.0026974825, -0.19384022, 0.2766169, 0.03344951, 0.04620947, 0.057419006, 0.059048526) * inp_3_0_2;
    result1 += M4(0.08531847, -0.10004344, -0.07014224, -0.1416212, 0.22620094, -0.04589003, 0.043544494, -0.09302102, -0.1351743, 0.168471, 0.11174661, 0.49588948, 0.27363586, 0.06880573, 0.1010241, 0.17874463) * inp_3_1_2;
    result1 += M4(0.16195785, 0.22292697, -0.009205682, -0.14231183, -0.14431801, -0.008700203, 0.09501061, 0.08500331, 0.10950608, 0.094481, -0.09538434, 0.056019824, 0.21705051, -0.27162915, -0.062833324, 0.028949795) * inp_3_2_2;
    result2 += M4(0.18818043, 0.008966046, 0.28815493, 0.060014732, 0.0017112748, -0.034764048, -0.14627688, 0.13146012, -0.0047498774, 0.017455684, 0.09297184, -0.07234513, 0.0065700654, -0.020094536, 0.061090313, 0.06984195) * inp_3_0_0;
    result2 += M4(0.07396448, 0.150782, -0.02286146, 0.06094267, -0.035147093, 0.057775315, -0.067617655, -0.13783972, 0.17585199, -0.051626686, 0.06102006, 0.19610864, 0.10585517, 0.07678051, -0.18560818, 0.122542664) * inp_3_1_0;
    result2 += M4(0.026368711, -0.009979083, 0.19851021, 0.0029247291, 0.13724828, 0.020598482, -0.18004729, 0.10906196, 0.050673563, 0.03572717, 0.18648992, -0.027763704, 0.16050147, -0.011738099, -0.28403747, -0.18599844) * inp_3_2_0;
    result2 += M4(0.09454785, -0.025551816, 0.23120831, -0.15137033, 0.026770348, -0.15631412, 0.05853968, -0.3067013, 0.04512325, 0.101302534, -0.13697682, 0.004917591, 0.08683657, -0.028007835, -0.20010413, -0.12898906) * inp_3_0_1;
    result2 += M4(-0.44279015, -0.17225501, 0.39062285, -0.4886639, 0.45454645, 0.20260625, 0.794327, 0.23485848, -0.5337592, -0.21471688, -0.46721798, -0.39956748, -0.10338175, 0.10738217, 0.13239694, -0.38072824) * inp_3_1_1;
    result2 += M4(0.12434747, 0.0073816637, 0.09239229, -0.13000372, 0.20886086, 0.1420461, 0.24537693, -0.25108293, -0.16194321, -0.09735155, -0.23851387, 0.05599894, 0.049357627, -0.051661275, 0.19775845, 0.060386706) * inp_3_2_1;
    result2 += M4(0.007779978, 0.008058117, 0.12223314, 0.09184634, 0.08704923, 0.0011726158, -0.15282977, 0.25098097, 0.021505594, 0.075073935, 0.1792464, -0.13124835, 0.036969177, 0.024892867, 0.04630576, 0.09508186) * inp_3_0_2;
    result2 += M4(0.18747309, 0.13202505, 0.21027412, -0.043700844, 0.044833805, -0.16133901, -0.18764845, 0.27698937, 0.0024429744, 0.07237958, -0.06897237, -0.13700482, 0.24767384, 0.14635019, -0.18494628, 0.070106) * inp_3_1_2;
    result2 += M4(0.10948364, -0.00702185, 0.056779895, 0.17071614, -0.14100587, 0.05282032, 0.061973024, -0.2036165, 0.11264301, -0.006963772, 0.031012882, 0.11484578, 0.1840565, 0.01463264, -0.20917197, 0.15142317) * inp_3_2_2;
    result3 += M4(-0.13294937, 0.0048769037, -0.12978737, -0.068073116, 0.12476224, 0.046975408, -0.010522004, 0.092309736, -0.0039534275, 0.014199157, -0.00050575833, -0.0705705, 0.01249511, -0.060239196, -0.017113075, 0.04928007) * inp_3_0_0;
    result3 += M4(0.24326085, -0.093477145, 0.01861141, 0.031604838, -0.04087312, -0.1819089, 0.019430878, 0.017993376, -0.091980636, 0.11017894, -0.03468213, -0.02884547, -0.34908313, -0.15702437, -0.1285329, -0.021946) * inp_3_1_0;
    result3 += M4(-0.17918128, -0.10551786, 0.034699645, -0.054443758, 0.15471578, 0.049007617, 0.0020149292, -0.02027764, -0.15325755, -0.058887165, -0.077335045, -0.030846562, -0.22329357, -0.19966777, 0.036531817, 0.09291545) * inp_3_2_0;
    result3 += M4(-0.31163606, -0.03167534, 0.037194468, -0.0070907557, -0.42436317, 0.124665715, -0.11761282, -0.07302859, 0.3754708, -0.14594874, 0.026016656, -0.010916762, -0.064932436, -0.0425016, -0.0030653388, 0.09156668) * inp_3_0_1;
    result3 += M4(0.076203875, -0.4146588, 0.057642598, 0.07680058, -0.55073094, 0.8964221, -0.22523326, 0.16699767, 0.46078324, -0.666588, 0.27572727, -0.09650008, 0.25539565, -0.18209967, 0.070919454, 0.02657348) * inp_3_1_1;
    result3 += M4(0.22383732, 0.021822263, 0.06956177, 0.102916606, -0.15205485, 0.035155986, -0.2191965, 0.11182463, 0.16409212, 0.099025846, 0.103598595, -0.08351486, 0.026202757, -0.26719347, 0.14525795, -0.18016015) * inp_3_2_1;
    result3 += M4(0.024882793, 0.12596843, 0.03535976, -0.031569168, 0.086753234, 0.2808037, -0.097935475, 0.012299863, -0.050767932, -0.56319726, 0.048639435, 9.657273e-05, 0.08824912, -0.066517666, 0.00013503381, 0.02313944) * inp_3_0_2;
    result3 += M4(0.06159305, -0.018309806, -0.1030615, 0.067958795, 0.01372363, -0.04042506, 0.0030946874, 0.0033860249, 0.087779194, -0.007038553, 0.04758376, 0.011761641, 0.0076929918, -0.087171674, -0.077735126, -0.12962082) * inp_3_1_2;
    result3 += M4(-0.13531868, -0.31056505, -0.055378575, 0.021540742, -0.012508833, 0.15625699, 0.046194, 0.16056857, -0.0769052, -0.19402674, -0.031682692, -0.070119984, -0.010475897, -0.06264621, -0.06714308, -0.18805766) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DS (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.10837488, 0.10365358, 0.107178584, 0.10163537);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0797551, -0.022331955, -0.031350065, -0.02807706, -0.056252144, -0.019163482, -0.04629196, -0.030959852, 0.012760538, 0.02110816, -0.0030846498, 0.0076709194, 0.17502771, 0.10536483, 0.062894545, 0.09290506) * inp_0_0_0;
    result0 += M4(-0.08243882, -0.11352447, 0.019246133, 0.040163092, 0.06212735, -0.029122703, -0.05874165, 0.00947198, 0.0051919683, -0.112896144, 0.065622285, 0.017947702, -0.005781507, 0.15494357, 0.04174896, -0.0247371) * inp_0_1_0;
    result0 += M4(0.0075591337, -0.034949586, -0.00630329, -0.0028342877, -0.04321531, -0.010793963, -0.031751253, -0.047767904, -0.018852314, 0.0049634324, 0.0011616795, 0.02976232, 0.09995376, 0.029449722, 0.06025614, 0.011695732) * inp_0_2_0;
    result0 += M4(0.13175452, -0.014256955, -0.0061112624, 0.039485525, 0.003500267, -0.08686637, 0.12369334, -0.058470935, -0.013086337, -0.0006297898, 0.06493438, -0.02144411, 0.19743346, 0.113378674, 0.1878269, 0.13078372) * inp_0_0_1;
    result0 += M4(0.10301606, 0.19293915, -0.0833717, -0.114191554, -0.1487544, 0.18157998, -0.0877308, 0.27390873, -0.01545665, 0.07681507, 0.0029453507, -0.07471489, 0.23672852, 0.22930817, 0.16791491, 0.29062313) * inp_0_1_1;
    result0 += M4(-0.012844404, 0.059638306, 0.024411604, 0.006355853, 0.042896487, -0.058982015, 0.024036461, -0.082050614, -0.013772506, 0.010016451, -0.023451662, 0.055453297, 0.17354436, 0.22178328, 0.17349988, 0.26662105) * inp_0_2_1;
    result0 += M4(-0.018733667, -0.0072104214, 0.0071911616, 0.008933745, -0.035336778, -0.00048277288, -0.0720284, 0.004334582, 0.02968678, 0.0021018288, 0.018995034, -0.0049735145, 0.112582736, -0.001119237, 0.23011184, -0.027846806) * inp_0_0_2;
    result0 += M4(-0.033115122, -0.04646854, 0.06228542, 0.05160165, 0.086146176, 0.029908491, 0.06566196, -0.07741976, -0.008560613, 0.016153775, -0.09117724, 0.045467693, 0.01327599, 0.058363225, 0.056035463, 0.2091204) * inp_0_1_2;
    result0 += M4(-0.0061834985, -0.010351, -0.0016718382, 0.028893204, 0.037287623, 0.01078888, 0.06359744, 0.020010136, -0.0034269888, -0.014643214, -0.018760359, -0.06428456, 0.050590925, 0.15232326, 0.07344584, 0.117645755) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.11768182, -0.03798986, -0.05852693, -0.065759934, -0.025947537, -0.06189322, 0.024665462, -0.003917992, -0.013018345, 0.020535616, 0.00039346257, -0.0051484248, 0.034223724, 0.03414284, 0.00046158888, 0.011007866) * inp_1_0_0;
    result0 += M4(0.06369654, -0.11752114, -0.1534835, 0.011609509, 0.046449155, 0.06639396, 0.118512884, 0.0015487974, 0.021168068, -0.047377575, 0.013562745, 0.024285909, -0.006569938, -0.06605868, 0.025042878, 0.012343052) * inp_1_1_0;
    result0 += M4(-0.060761724, 0.023427777, -0.011071539, -0.012076728, -0.035504177, 0.06010822, 0.003269075, 0.075319126, -0.039760437, 0.02539215, -0.0020004455, 0.020616526, 0.025195144, -0.023090065, 0.008390093, -0.008006381) * inp_1_2_0;
    result0 += M4(-0.0738488, -0.11376003, 0.027473517, -0.08026321, -0.07552788, -0.050873667, -0.10058832, -0.11513494, 0.0977093, 0.01642934, -0.022008577, 0.037990827, -0.03853833, 0.00063031056, 0.049188785, 0.018858083) * inp_1_0_1;
    result0 += M4(0.17220154, 0.08883276, 0.258736, 0.10510404, 0.09766914, -0.010506335, -0.07153785, 0.050417554, -0.04481047, 0.043772075, -0.02686139, -0.013679617, 0.047863435, -0.011047408, -0.07831206, 0.07610647) * inp_1_1_1;
    result0 += M4(0.04709059, 0.08957044, 0.030313713, 0.0419835, 0.0018831847, 0.016237542, -0.037631277, -0.07032412, -0.021622967, -0.057778966, -0.00323394, 0.018192815, 0.00586411, 0.012501392, 0.02035886, -0.00736273) * inp_1_2_1;
    result0 += M4(-0.051259484, -0.004104901, -0.106301464, 0.025119696, -0.02160266, -0.014881351, -0.041815646, -0.023349574, -0.0018685133, -0.021833505, 0.010612467, -0.002747821, -0.0042742346, 0.00094732846, -0.017364249, -0.010053447) * inp_1_0_2;
    result0 += M4(0.029355241, 0.091280356, 0.036650278, -0.075033836, -0.040939037, -0.069482416, 0.100712776, 0.019372175, -0.0060834973, -0.00033441675, 0.016390894, -0.049367066, -0.018315759, 0.0021509628, -0.0031031182, -0.07330522) * inp_1_1_2;
    result0 += M4(0.021831779, -0.055636592, 0.020119723, 0.016763106, 0.0009976447, -0.006807042, 0.0061175697, 0.07658527, 0.01908609, -0.024339842, 0.026051566, -0.05821366, -0.006671666, -0.0026210563, -0.004843381, 0.013410908) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.09078654, 0.07301173, 0.02770057, 0.0525324, -0.12559128, -0.0934023, -0.054774147, -0.07211536, 0.016248794, 0.04607785, -0.0037364524, -0.0007588485, 0.031657584, -0.040895794, -0.0025097574, 0.010770983) * inp_2_0_0;
    result0 += M4(-0.09813047, 0.032397144, 0.043362685, 0.00043844542, -0.1004705, -0.029927462, 0.048411705, 0.022627614, 0.03479606, -0.057552982, 0.004351543, 0.018008584, -0.07618156, 0.059695426, 0.01837958, -0.0535197) * inp_2_1_0;
    result0 += M4(0.045482155, -0.057172872, -0.009373469, -0.03414135, 0.016005268, 0.042762276, 0.034124788, 0.029243631, -0.0032919473, 0.013315842, 0.0148163, 0.019795105, -0.022857137, 0.013227917, -0.0074765887, 0.03025509) * inp_2_2_0;
    result0 += M4(0.07440604, 0.13153172, 0.06946063, 0.13970318, -0.21256794, 0.011838852, -0.22345293, -0.01266089, 0.001523902, 0.017144615, 0.009300706, 0.07553014, 0.044181485, -0.02769426, 0.00368888, -0.06949372) * inp_2_0_1;
    result0 += M4(-0.03966409, -0.2576191, -0.37386078, -0.3170272, -0.18860212, -0.20686087, -0.12283518, -0.08027372, 0.04942169, 0.0087054605, -0.010520039, -0.03716362, 0.016508032, -0.02312922, 0.008853185, 0.060113862) * inp_2_1_1;
    result0 += M4(-0.11544063, 0.017957564, -0.055210374, -0.026702497, 0.40143862, 0.059677336, 0.3530183, 0.10429246, -0.04536243, -0.07068377, -0.029040135, -0.017762361, -0.03071814, -0.023548419, -0.014699696, 0.022911245) * inp_2_2_1;
    result0 += M4(0.04776366, 0.011826093, 0.15043058, 0.0074518216, -0.07941201, 0.023580626, -0.1672967, 0.03587285, -0.023104932, -0.01297704, -0.013234666, 0.008208409, -0.011411505, 0.017738095, -0.017383292, -0.0025405216) * inp_2_0_2;
    result0 += M4(0.026050488, -0.028546505, 0.14613016, 0.057814054, 0.12366749, 0.03457729, -0.08836196, -0.15499207, -0.0020037584, 0.06579347, 0.045776844, -0.08684461, 0.056879655, -0.013839234, -0.02466398, -0.013224118) * inp_2_1_2;
    result0 += M4(0.0013611196, 0.07321494, 0.01502973, 0.04280773, 0.075717315, 0.070902154, 0.14014077, 0.07883416, 0.0014348746, -0.011939321, 0.0055429083, 0.009829945, -0.0022473647, 0.037787337, 0.01396591, 0.025768826) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03818834, 0.006238217, -0.040962018, -0.024566708, -0.0069842837, 0.010257136, 0.004052298, -0.0063839937, 0.017316878, 0.019208299, 0.03232348, 0.015887316, -0.14539735, -0.08659457, -0.03564998, -0.07108067) * inp_3_0_0;
    result0 += M4(0.006638669, -0.0886849, 0.028554928, 0.0072405054, 0.027804941, 0.016950287, -0.02278396, 0.002642013, -0.029915538, -0.07183717, -0.06979087, -0.04404622, -0.045231204, -0.10009462, 0.015606321, 0.043528806) * inp_3_1_0;
    result0 += M4(-0.02695625, 0.032193474, 0.007433886, 0.034789424, -0.05603328, 0.022291511, -0.02367376, 0.00574508, 0.026645776, 0.055967513, 0.03982616, 0.03544071, -0.06954253, -0.08700072, -0.07211893, -0.038869143) * inp_3_2_0;
    result0 += M4(-0.048151784, -0.06243437, 0.05039677, -0.017664388, -0.01726757, 0.01824963, -0.016002318, 0.05340319, 0.06678165, 0.008191409, 0.06811208, 0.07721762, -0.09482279, 0.0014336074, -0.105190456, 0.02415911) * inp_3_0_1;
    result0 += M4(0.16883218, 0.2421937, -0.16653006, -0.045981225, 0.10626127, -0.14818254, 0.09104596, -0.06019702, -0.61634696, -0.4777775, -0.45292962, -0.4162868, 0.47331786, 0.3912154, 0.45252126, 0.32447305) * inp_3_1_1;
    result0 += M4(0.00589797, -0.028220963, 0.027931444, -0.028130371, -0.03633269, 0.08265127, -0.06184743, 0.025809586, 0.101803444, 0.023763172, 0.050243817, 0.06373316, -0.17185958, -0.20526797, -0.15980169, -0.24246313) * inp_3_2_1;
    result0 += M4(-0.018226774, -0.007775481, -0.045675036, -0.004355683, -0.028213836, 0.006884326, -0.023644572, 0.0069035157, 0.09408105, 0.04853384, 0.19860734, 0.03589697, -0.06149684, 0.029272042, -0.10340886, 0.035885032) * inp_3_0_2;
    result0 += M4(-0.010551989, -0.024991274, 0.071913876, 0.018037109, 0.01786596, -0.011747748, 0.044712204, -0.08698883, 0.19897121, 0.19798355, 0.014561576, 0.14199865, 0.16344927, 0.04709738, 0.07525845, -0.053171944) * inp_3_1_2;
    result0 += M4(0.0018922243, -0.020593636, 0.009684857, 0.004012254, 0.0024584213, -0.005029396, 0.0056056487, 0.03836883, 0.07943521, 0.16335416, 0.10415853, 0.12605079, -0.03191937, -0.027404167, -0.044385597, -0.06155199) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DS (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
