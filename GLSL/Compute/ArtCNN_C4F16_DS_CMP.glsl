// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DS (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(-0.0019723945, -0.01111109, -0.011356356, -0.07466389);
    V4 result1 = V4(-0.029940989, -0.0041615614, 0.00074703805, 0.0029623313);
    V4 result2 = V4(0.03396305, -0.004812395, -0.0031600394, -0.0015992466);
    V4 result3 = V4(-0.0006629069, -0.003275111, 0.010900646, -0.060509637);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.027523784, -0.1819377, 0.026359951, 0.0026479661) * inp_0_0_0;
    result0 += V4(0.028065, 0.19320759, 0.16560443, 0.1340275) * inp_0_1_0;
    result0 += V4(0.012171363, 0.09090829, -0.15523858, 0.047028337) * inp_0_2_0;
    result0 += V4(0.017835395, 0.10257151, 0.04465929, 0.17661373) * inp_0_0_1;
    result0 += V4(-0.022884978, -0.086337626, -0.38263825, 0.33613873) * inp_0_1_1;
    result0 += V4(-0.24590085, -0.14935231, 0.16333564, 0.11204625) * inp_0_2_1;
    result0 += V4(0.0012813007, 0.17678583, -0.05068545, 0.09474119) * inp_0_0_2;
    result0 += V4(0.070251666, -0.15864754, 0.272273, -0.054235272) * inp_0_1_2;
    result0 += V4(0.21353346, 0.02113117, -0.052216213, 0.096023865) * inp_0_2_2;
    result1 += V4(0.10252261, -0.11387309, -0.086938, 0.0397966) * inp_0_0_0;
    result1 += V4(-0.09570855, -0.013941215, 0.02103357, -0.23433626) * inp_0_1_0;
    result1 += V4(0.08281427, 0.13853641, 0.07104612, 0.19557855) * inp_0_2_0;
    result1 += V4(-0.08371479, 0.10911178, 0.0774817, -0.04310404) * inp_0_0_1;
    result1 += V4(0.100075416, -0.20758826, 0.10734991, 0.2115494) * inp_0_1_1;
    result1 += V4(-0.13940126, 0.2985248, -0.17981483, -0.16167462) * inp_0_2_1;
    result1 += V4(0.06621885, 0.003464895, 0.027056262, 0.0009919758) * inp_0_0_2;
    result1 += V4(0.09591409, -0.27740034, -0.14331071, 0.0125998845) * inp_0_1_2;
    result1 += V4(-0.08075378, 0.07504768, 0.110654235, -0.031060837) * inp_0_2_2;
    result2 += V4(-0.06908451, 0.11637579, -0.19007206, -0.068850555) * inp_0_0_0;
    result2 += V4(0.13369316, -0.026212076, 0.18321551, 0.022652086) * inp_0_1_0;
    result2 += V4(0.08218168, -0.014111138, 0.0006019095, 0.033317275) * inp_0_2_0;
    result2 += V4(-0.19488183, 0.34786832, 0.41005182, 0.13061334) * inp_0_0_1;
    result2 += V4(-0.32963926, -0.8442793, -0.34470758, -0.07863612) * inp_0_1_1;
    result2 += V4(0.19949508, 0.19445734, -0.062111586, -0.025196023) * inp_0_2_1;
    result2 += V4(0.06793841, 0.11404842, -0.18477613, -0.08110549) * inp_0_0_2;
    result2 += V4(0.29006454, 0.13257523, 0.16438474, 0.14335114) * inp_0_1_2;
    result2 += V4(-0.21492448, -0.016336638, 0.027834311, -0.06685166) * inp_0_2_2;
    result3 += V4(0.089353986, -0.13679226, 0.24332899, -0.13313028) * inp_0_0_0;
    result3 += V4(-0.1987719, 0.24005866, 0.42288104, 0.22952165) * inp_0_1_0;
    result3 += V4(0.014562041, -0.069887124, 0.051211245, 0.04698784) * inp_0_2_0;
    result3 += V4(0.045044273, 0.006471957, 0.05173558, -0.25642106) * inp_0_0_1;
    result3 += V4(0.015061446, -0.13574173, -0.494898, -0.06441767) * inp_0_1_1;
    result3 += V4(0.038614634, 0.14763197, -0.17801443, 0.24579647) * inp_0_2_1;
    result3 += V4(-0.09084494, 0.13392816, -0.05328368, -0.108477) * inp_0_0_2;
    result3 += V4(0.12817565, -0.067267135, -0.1649405, 0.014336947) * inp_0_1_2;
    result3 += V4(-0.032282855, -0.104064316, 0.0314711, 0.16859245) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DS (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.055296335, 0.008630005, 0.1585672, 0.0048957067);
    V4 result1 = V4(0.040328164, -0.012910559, -0.010534898, 0.007722359);
    V4 result2 = V4(0.0074093724, 0.036699925, -0.0023723019, 0.029649941);
    V4 result3 = V4(0.01608807, -0.019956766, 0.00059593667, -0.03692911);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.15180556, 0.35563383, -0.015127785, 0.11269819, 0.2823438, 0.019664586, 0.053631306, -0.043806277, -0.37573734, 0.2518294, -0.04023181, -0.08470057, -0.22901449, -0.08405281, -0.1780658, 0.01872177) * inp_0_0_0;
    result0 += M4(-0.28100738, -0.045875464, 0.02926263, 0.094064936, 0.9062185, 0.16585344, -0.0030799415, 0.028173197, -0.56534094, -0.7871113, -0.09257003, -0.05291885, -0.83746564, 0.14652817, 0.053812955, 0.12542471) * inp_0_1_0;
    result0 += M4(0.6228421, -0.08940467, 0.15103155, 0.037350368, 0.16887559, -0.18928525, 0.16064553, -0.076587655, -0.34587818, -0.06254299, -0.050301574, 0.12585638, -0.35065588, -0.013117665, -0.124356836, -0.10091216) * inp_0_2_0;
    result0 += M4(-0.12326736, -0.034937788, -0.02492568, -0.17845933, -0.28124523, 0.051293537, 0.30496436, -0.19103034, 0.54945165, 0.26386756, 0.02479827, 0.08347732, -0.0973866, 0.10989655, -0.02062735, 0.022447754) * inp_0_0_1;
    result0 += M4(-0.12172277, -0.1469692, -0.026018448, -0.10383206, -0.7511559, 0.44615832, 0.06909099, -0.091597915, -0.54252934, 0.9510436, -0.017968638, -0.46577802, -0.12405178, 0.045485705, 0.15177526, 0.1559978) * inp_0_1_1;
    result0 += M4(-0.44846675, 0.06554113, -0.02513262, -0.07361128, -0.42857537, -0.06995672, -0.10776402, 0.017881991, 0.22156437, 0.26772696, 0.114428915, -0.14912567, -0.1955156, 0.092572406, 0.07410687, 0.04111232) * inp_0_2_1;
    result0 += M4(0.20844348, 0.043864563, -0.004960769, 0.3081618, -0.0888562, -0.25478423, -0.02245635, 0.38255408, 0.5028166, -0.30578902, 0.059761953, -0.18749359, -0.13547646, -0.097720996, -0.1498234, -0.036952175) * inp_0_0_2;
    result0 += M4(0.09111355, 0.021309784, 0.0045913504, 0.089899726, 0.10069365, 0.036828134, -0.051609114, 0.43935332, 0.4542873, -0.25456864, -0.24166761, 1.0700773, -0.08045911, -0.070693456, -0.07170993, 0.022364857) * inp_0_1_2;
    result0 += M4(-0.14089707, -0.03963645, -0.058033194, -0.06374526, 0.23735459, -0.30207333, -0.19268778, -0.12435617, 0.13688989, -0.16590592, 0.12197473, -0.15235868, -0.004475608, -0.10843316, 0.06374076, -0.111643255) * inp_0_2_2;
    result1 += M4(-0.18753496, -0.09939083, -0.08423863, 0.25452024, -0.09803824, -0.077480406, -0.014318105, 0.072005644, 0.0815542, -0.05473321, -0.032718968, 0.012545842, 0.077901796, -0.07572553, -0.07594586, -0.1752803) * inp_0_0_0;
    result1 += M4(0.07620607, -0.076022826, 0.09603123, -0.07744624, -0.26561126, 0.23541652, 0.26753658, 0.09320211, -0.066240236, -0.094593145, -0.083159246, 0.0037965078, 0.16573821, -0.06720213, -0.14206715, -0.05463644) * inp_0_1_0;
    result1 += M4(0.04225256, 0.10278741, 0.0061569284, -0.11560658, -0.08931359, 0.3479378, -0.04758584, -0.0011907205, -0.04057587, 0.16963117, -0.12828565, 0.16984738, -0.15119846, -0.049112346, -0.08078188, 0.20688774) * inp_0_2_0;
    result1 += M4(-0.04056322, 0.17836425, -0.09219896, 0.55809796, -0.068705, -0.034083925, 0.23552488, 0.25734046, -0.079540595, 0.30804875, -0.07017651, 0.07399772, 0.06775298, -0.06978045, -0.042939857, -0.15651464) * inp_0_0_1;
    result1 += M4(0.16328421, -0.20965888, 0.24383256, -0.09256336, 0.16699214, -0.328853, -0.04769751, -0.008183664, -0.20366125, 0.30428386, 1.1135353, -0.12137971, 0.2246412, 0.10473071, -0.13862123, -0.10900499) * inp_0_1_1;
    result1 += M4(0.2482999, -0.17040794, -0.08888593, -0.17226031, -0.052351225, -0.19058865, 0.31600717, -0.05007644, 0.53110886, -0.16437244, 0.11886717, 0.051405583, -0.2447967, 0.12924576, -0.040237915, 0.033887673) * inp_0_2_1;
    result1 += M4(0.091982454, -0.05075693, -0.057399407, -0.2648908, 0.22478938, -0.5699897, -0.19917586, -0.06916858, 0.17239964, -0.01074562, -0.068462, 0.27346474, -0.056630395, -0.07398992, 0.17092656, -0.064570375) * inp_0_0_2;
    result1 += M4(0.019139616, -0.052793063, -0.10412149, -0.07110461, 0.054167114, 0.0042810584, -0.5363487, -0.28186047, 0.023435108, -0.55149215, -0.8068923, -0.23471147, 0.092759244, 0.08038293, 0.122462384, 0.09777579) * inp_0_1_2;
    result1 += M4(0.10056952, 0.01800237, -0.0068379003, -0.031923816, -0.046527795, 0.06964526, -0.0479101, -0.037278697, 0.009646257, -0.09458285, -0.099232465, -0.09416846, -0.13198933, -0.14792942, 0.09064097, 0.13156033) * inp_0_2_2;
    result2 += M4(-0.23269711, -0.16993229, -0.64952797, -0.66789234, 0.1012215, -0.095583536, -0.044897776, -0.45739004, -0.28670883, -0.33656877, 0.331141, -0.305653, 0.01018392, -0.12242222, 0.047904667, 0.054770354) * inp_0_0_0;
    result2 += M4(0.17082962, 0.044231053, 0.22931653, 0.23262496, 0.02244689, -0.035563722, 0.042279035, -0.15282585, 0.20894808, 0.21946609, 0.059669007, -0.6075595, 0.07297303, 0.15205055, -0.07546899, -0.12866431) * inp_0_1_0;
    result2 += M4(0.16972269, 0.37688938, -0.10117788, -0.055549093, 0.0016473426, 0.13734153, 0.08669037, -0.37652576, 0.01832972, 0.23815385, -0.3256407, -0.21074414, -0.079246745, -0.21493275, -0.1484632, -0.028326865) * inp_0_2_0;
    result2 += M4(-0.057851966, -0.12850882, 0.65231, -0.17232259, 0.07063408, -0.24885888, 0.43656725, -0.21452262, -0.04549127, -0.13748343, -0.6388089, 0.56674135, 0.09117276, 0.11193586, -0.0432374, 0.12341266) * inp_0_0_1;
    result2 += M4(-0.11331116, 0.06630095, 0.15804678, 0.16704883, -0.17192407, 0.1264742, 0.23022225, 0.10846912, -0.4980439, -0.041509725, 0.1654848, 0.1778064, 0.30905584, 0.11724931, 0.17201383, 0.106714174) * inp_0_1_1;
    result2 += M4(-0.19374426, 0.008844582, 0.31167448, -0.017139072, -0.10938754, 0.4207502, -0.025788857, 0.1757801, -0.06284545, 0.33456466, -0.12733343, 0.2198382, 0.13028978, -0.040366057, 0.122825086, 0.20291618) * inp_0_2_1;
    result2 += M4(-0.18971851, 0.025057802, -0.4656659, 0.18802112, 0.08945614, -0.08143941, -0.61870486, 0.5077101, -0.0324153, 0.034877174, 0.63372606, -0.008620718, -0.091539375, -0.0359377, -0.0022128115, -0.11659587) * inp_0_0_2;
    result2 += M4(0.12661022, -0.092883684, 0.05166294, 0.11129627, 0.48712054, 0.084661275, -0.10244801, 0.21155374, 0.59455025, 0.0440477, 0.026997356, -0.010109774, -0.2607691, 0.15431316, -0.031903524, -0.18406728) * inp_0_1_2;
    result2 += M4(0.0004802044, 0.14719437, -0.15207955, -0.14223091, -0.083780475, 0.088975646, -0.1967614, 0.028663632, 0.0004038169, -0.13680704, -0.17634253, -0.12690905, -0.08779634, -0.108141884, -0.049688637, -0.0798949) * inp_0_2_2;
    result3 += M4(0.13096207, 0.21336995, 0.2787855, -0.21408083, 0.09232459, 0.017361995, 0.19925174, 0.057247255, 0.05205852, -0.11502257, -0.13039275, -0.007046978, -0.0404693, -0.052283626, 0.017548911, 0.21386842) * inp_0_0_0;
    result3 += M4(-0.18150228, -0.02826121, -0.1303279, -0.03694724, -0.031234004, 0.04038211, 0.2595813, 0.041871388, 0.13582276, -0.093969055, -0.46155572, 0.051094428, -0.014655995, 0.0692883, 0.026119683, -0.06735792) * inp_0_1_0;
    result3 += M4(-0.268598, 0.13025454, 0.055444475, 0.13382706, -0.09047628, -0.13116346, 0.18458283, 0.029969083, -0.25751433, -0.3867761, 0.15881185, 0.13975802, 0.0019603497, 0.07463249, 0.014451806, -0.13810243) * inp_0_2_0;
    result3 += M4(0.3305254, 0.03442507, -0.41644186, 0.12600613, 0.34086877, -0.092853285, 0.18240727, 0.1787273, 0.15478715, -0.21383563, 0.12678066, -0.5975184, -0.19388284, -0.17290871, 0.056824066, 0.13406788) * inp_0_0_1;
    result3 += M4(-0.08611793, 0.009909906, -0.020184547, -0.06621559, -0.40992373, 0.04930143, -0.2052975, 0.17544329, 0.5282732, 0.10344276, 0.53971004, 0.30002126, -0.033438206, 0.1301289, -0.05136222, 0.02526107) * inp_0_1_1;
    result3 += M4(-0.028410282, 0.16325417, -0.022491284, 0.08854138, -0.4132957, -0.21196286, -0.30311516, 0.02948295, -0.409426, -0.43787846, 0.13966115, 0.025093881, 0.18454203, -0.16053893, -0.10701448, -0.04930403) * inp_0_2_1;
    result3 += M4(0.09093388, 0.14884062, 0.06102039, -0.040634796, 0.12662898, 0.5033343, 0.49270874, 0.06163848, -0.14861992, -0.0047286646, 0.12331458, -0.058174, -0.098699056, -0.066841625, -0.032564487, 0.06370424) * inp_0_0_2;
    result3 += M4(-0.06869956, -0.37862977, 0.039411787, -0.069553114, 0.02826636, -0.06478723, -0.7987537, -0.11738191, -0.052629538, 0.99309397, -0.3614564, 0.14247331, 0.017261283, 0.1440921, 0.02816198, -0.007886756) * inp_0_1_2;
    result3 += M4(-0.13536763, 0.19472082, -0.28451812, 0.13695846, 0.115540296, 0.044102233, 0.20817834, -0.13934329, -0.08334133, 0.2260629, -0.4714432, 0.03967171, 0.053780865, -0.0051906793, 0.008948859, -0.014844867) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(1.3727926, -0.0729313, 0.036501985, 0.06525122, -0.510561, 0.0354483, 0.23619634, -0.029145032, -0.9029212, 0.5301715, -0.10057724, 0.02965138, -0.26646397, 0.48496145, -0.08909289, 0.046742447) * inp_1_0_0;
    result0 += M4(-0.43861368, 0.20382254, 0.16819349, -0.058597244, 0.7835047, -0.42349926, -0.024679678, -0.32252815, 0.8383868, -0.21620788, -0.0021481584, -0.110694855, -0.57586443, -0.010926678, -0.18949018, -0.016064351) * inp_1_1_0;
    result0 += M4(0.4689438, 0.29296872, 0.01131566, 0.110947594, 0.1429517, 0.057679035, 0.030220544, 0.0023871409, -0.65967333, -0.12022153, 0.09894392, 0.21594334, -0.04900255, -0.0027616497, -0.2417868, -0.016560806) * inp_1_2_0;
    result0 += M4(-0.45257047, -0.14956205, 0.14418195, -0.0704849, -0.26057693, 0.0643173, -0.20425685, 0.0126559185, -0.118741974, -0.3161738, -0.060470093, 0.21654738, -0.7091697, 0.41661704, 0.024682699, 0.2519003) * inp_1_0_1;
    result0 += M4(0.2204218, -0.40761873, 0.19541745, 0.08876659, -0.1260191, 0.37746564, -0.0042448533, 0.10630779, -0.20176274, 0.16241854, 0.2944797, -0.25301316, 1.2727739, -0.987514, -0.13619334, 0.32459372) * inp_1_1_1;
    result0 += M4(-0.29700977, 0.18024735, -0.108684726, -0.12657245, -0.30145127, -0.11484161, -0.2467787, 0.11505129, 0.0953149, 0.056784116, -0.084908105, -0.29273012, 0.52456194, 0.53928983, -0.015877033, 0.16163206) * inp_1_2_1;
    result0 += M4(0.13046823, 0.13674948, 0.06260095, 0.17605759, 0.11914666, -0.19083135, -0.03720447, 0.048036594, 0.42394608, 0.023913149, -0.34066367, -0.027926462, -0.057223663, 0.07127134, -0.16678476, 0.39251325) * inp_1_0_2;
    result0 += M4(0.13907722, -0.04412568, 0.24136995, -0.31218007, 0.059381023, 0.049139373, -0.08455819, 0.26753953, -0.065708496, 0.11009013, 0.11080174, 0.31710318, -0.07813892, 0.18099234, 0.43348068, -0.98044187) * inp_1_1_2;
    result0 += M4(-0.1836276, 0.19126028, -0.24503425, 0.06502858, 0.22706626, 0.008530157, -0.0721066, -0.20977919, 0.35822958, -0.3858247, 0.050772827, -0.033188865, -0.108489245, -0.35600013, 0.18977748, -0.14320983) * inp_1_2_2;
    result1 += M4(-0.32933083, -0.20120849, 0.06683648, 0.008332608, 0.42759633, 0.5297254, 0.13019502, 0.090187825, 0.18597187, 0.0035141362, 0.040764455, -0.23017101, 0.08353325, -0.030224985, -0.33242595, -0.20676626) * inp_1_0_0;
    result1 += M4(0.10194116, 0.08933854, -0.023209423, -0.019928116, -0.2577432, 0.20113315, 0.26020133, -0.12005519, 0.007360062, 0.12109947, 0.30215606, 0.3166107, 0.07293491, -0.18214096, 0.025003333, 0.013334018) * inp_1_1_0;
    result1 += M4(0.026768738, 0.06078056, 0.16582322, -0.10666237, 0.012791487, -0.068619765, 0.1607259, 0.03834944, -0.12947613, 0.41983965, -0.34800848, 0.060500573, 0.09325819, -0.106581286, -0.09061648, 0.0006417336) * inp_1_2_0;
    result1 += M4(0.07711261, -0.73517585, 0.052966397, -0.3807919, 0.15596847, 0.53511673, 0.063224286, 0.40815645, -0.041693278, -0.19392942, -0.053830642, 0.15643544, -0.28285807, -0.5881609, 0.0034822628, -0.43975383) * inp_1_0_1;
    result1 += M4(0.37247887, 0.099479415, -0.18533105, 0.23203936, -0.3135609, 0.022856977, -0.17855223, -0.37931454, 0.119613014, -0.2861823, -0.34220716, -0.31627318, 0.20073257, -0.007942459, -0.21034892, 0.12446593) * inp_1_1_1;
    result1 += M4(0.23620035, 0.08812666, 0.18229249, -0.025679102, -0.12882286, 0.051181216, 0.032850627, -0.16763435, -0.014335176, -0.27297515, 0.2370572, 0.19788274, 0.20342006, 0.10078754, -0.18242891, -0.06492284) * inp_1_2_1;
    result1 += M4(-0.12376194, -0.46282327, -0.06384587, -0.28742498, 0.42091286, 0.447527, -0.18458648, 1.0339761, -0.24952313, -0.14023189, -0.13801251, -0.010444895, 0.29313275, 0.1756395, -0.13910322, 0.4757406) * inp_1_0_2;
    result1 += M4(0.07714193, 0.069327034, 0.20675799, 0.30411616, -0.11802912, -0.085324146, -0.46374628, -0.14315747, 0.15973188, 0.24310903, 0.120135136, -0.31645525, 0.017365146, 0.6644151, 0.7819806, 0.18194641) * inp_1_1_2;
    result1 += M4(0.284729, -0.025442833, -0.24593234, -0.21230163, -0.2508766, 0.103236444, -0.046902545, 0.06361012, -0.1420705, 0.13102089, 0.14140575, 0.02583856, -0.47933975, -0.076727346, 0.2758272, 0.023372594) * inp_1_2_2;
    result2 += M4(-0.07439029, 0.043022074, 0.7462782, -0.58172, 0.26429445, 0.2082316, -0.29309133, 0.6657233, -0.10686768, -0.032710332, -1.0741513, -0.17823975, 0.068899095, -0.12587906, 0.42219165, -0.8909078) * inp_1_0_0;
    result2 += M4(-0.041441113, 0.09980796, 0.15547754, -0.03626591, -0.15377523, -0.2686342, 0.052876893, -0.26543275, -0.2681029, 0.18941146, 0.49917185, 0.24027891, -0.109279215, -0.061834197, -0.09313374, 0.048552252) * inp_1_1_0;
    result2 += M4(0.019138902, -0.07480306, 0.37956443, -0.12463271, -0.026255053, 0.11202491, 0.14700729, -0.030998608, 0.12146198, -0.11284705, -0.27099216, 0.2975729, -0.0032817323, 0.059780866, -0.231713, 0.45935252) * inp_1_2_0;
    result2 += M4(-0.37033013, -0.049966335, -0.43637446, -0.4287797, 0.23980801, 0.08749523, 0.089272186, 0.5653135, 0.2080941, -0.14753044, 1.411308, -0.15984619, -0.56303, -0.12095751, 0.7581182, 0.29063466) * inp_1_0_1;
    result2 += M4(-0.02615159, 0.247207, -0.48912147, -0.23174255, -0.10006925, -0.24847808, 0.011140135, 0.054530017, 0.33916447, -0.12701727, 0.3511174, 0.015992507, 0.23648971, -0.076503135, -0.3723857, -0.48831216) * inp_1_1_1;
    result2 += M4(-0.024035512, -0.20541012, -0.26427615, -0.031629816, 0.090812266, 0.29592776, 0.11323566, -0.15273249, 0.011611293, 0.2502743, 0.32027912, 0.14755735, -0.09657812, 0.07490832, 0.110889316, 0.52603984) * inp_1_2_1;
    result2 += M4(-0.15413287, -0.20642062, 0.12766813, -0.11792661, 0.30860895, -0.09043874, -0.0077646486, 0.54131055, -0.054169502, -0.03158946, -1.6618215, -0.06252868, 0.8983559, -0.37335703, -0.83923787, -0.5323556) * inp_1_0_2;
    result2 += M4(0.31062117, 0.0132837845, 0.08471435, 0.3364886, 0.20710756, -0.21425241, -0.20136663, 0.2111477, -0.0850159, -0.04615142, 0.25275716, -0.017848622, -0.27215397, 0.35993844, 0.45108643, -0.021573024) * inp_1_1_2;
    result2 += M4(-0.07563045, 0.049891442, -0.0866929, 0.23288766, -0.090724945, -0.10559795, -0.08147878, -0.0043749483, -0.14516436, 0.094005555, 0.0863278, -0.020142071, -0.22411981, 0.11596447, -0.2057453, 0.496343) * inp_1_2_2;
    result3 += M4(0.06821747, 0.19767259, 0.2151795, 0.12939365, -0.015601683, -0.07806215, -0.19413097, -0.20705748, -0.2670382, 0.28915232, 0.08748871, -0.068825975, 0.046752255, -0.15170686, -0.5260762, 0.17072073) * inp_1_0_0;
    result3 += M4(0.1125306, 0.16772798, -0.10715652, 0.061482307, 0.12527402, -0.14541212, -0.044331826, 0.14818983, 0.27298892, 0.032517, 0.67632115, -0.16116229, 0.1991359, 0.12918141, 0.03778694, -0.0709607) * inp_1_1_0;
    result3 += M4(-0.1979127, 0.021499628, -0.19275397, 0.06839287, -0.2416987, -0.04542516, 0.017886393, 0.015484475, 0.3035793, -0.19005977, -0.12721223, 0.04381273, -0.09882246, -0.23893315, 0.16589996, 0.037266463) * inp_1_2_0;
    result3 += M4(0.17157248, 0.55867624, -0.025081929, 0.31057718, 0.03939883, -0.29995623, 0.3478985, -0.81137174, 0.30489329, -0.14688124, -0.67437464, 0.52633625, -0.03696551, -0.014639059, -0.8301881, 0.6106652) * inp_1_0_1;
    result3 += M4(-0.4489266, -0.017116418, -0.3492022, -0.06146383, 0.67848146, 0.14714782, 0.15049793, 0.34173214, -0.47305757, 0.00016177981, -0.24110712, -0.1818493, -0.68627495, -0.07434816, -0.5616482, -0.7011207) * inp_1_1_1;
    result3 += M4(0.12329998, 0.11268167, 0.20511322, 0.07723666, -0.19499704, -0.11036198, -0.05102802, 0.06090909, -0.062008318, -0.13428646, 0.0011229077, 0.053361624, 0.2879526, -0.2403323, 0.41212544, -0.21331267) * inp_1_2_1;
    result3 += M4(0.099327885, 0.09989585, -0.18449317, -0.15658927, -0.20048232, -0.28916207, 0.07906694, 0.056443896, -0.14890142, 0.12495235, 0.4665289, -0.25168836, -0.064710915, 0.21734564, 0.0055798837, 0.07030356) * inp_1_0_2;
    result3 += M4(-0.059782516, -0.40565598, -0.0045363484, -0.16181855, 0.21169297, 0.13960537, -0.30227587, 0.09705922, -0.07457681, -0.020851085, -0.2625515, -0.07236139, 0.30173004, 0.029706191, 0.8845048, 0.08879586) * inp_1_1_2;
    result3 += M4(0.01368649, -0.15799122, 0.26033247, 0.16546507, 0.0005305977, -0.023322623, 0.037647534, -0.015711669, 0.1375036, 0.15299068, 0.14745244, 0.05793716, -0.20026746, 0.49021068, 0.55722415, 0.021280069) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.046773426, -0.21874276, -0.11008851, 0.047205336, -0.18725516, 0.23621227, 0.037008487, -0.1110291, 0.4652576, 0.16296405, 0.1139985, -0.008879921, 1.1328514, -0.013519067, 0.08014667, -0.018017536) * inp_2_0_0;
    result0 += M4(-0.58313394, -0.353547, -0.1315554, 0.1726028, 0.09217176, -0.61880594, 0.020659477, -0.0051662438, 0.2921182, -0.5417172, 0.019951867, 0.107689396, -1.2544249, -0.082537845, 0.03835098, 0.14150727) * inp_2_1_0;
    result0 += M4(-0.26868767, 0.06710545, 0.091990076, 0.02970983, -0.39536548, 0.17800806, 0.050901566, 0.0015729401, -1.3106496, -0.156704, -0.10303117, -0.092494376, 0.23495735, 0.22903115, 0.16440956, -0.07890727) * inp_2_2_0;
    result0 += M4(0.0189777, 0.3272534, -0.084251486, -0.062551275, 0.28285614, 0.08882386, -0.17420337, 0.0096567, 0.18627305, -0.18330346, 0.14721715, -0.12484008, -0.33352408, 0.017926533, 0.14333536, -0.03347117) * inp_2_0_1;
    result0 += M4(-0.14643975, 0.66292113, 0.119159654, -0.40078235, -0.011559304, 0.30756888, 0.31114775, -0.7410071, -0.3063362, 0.954269, 0.14929096, -0.4508195, 0.2992952, 0.19996834, -0.26101464, -0.25056496) * inp_2_1_1;
    result0 += M4(-0.115949504, 0.31399766, 0.1344406, -0.034632787, 0.12281359, -0.1240977, -0.1297621, -0.116328865, 0.22199747, -0.37816933, -0.11878694, 0.17188601, 0.09616056, -0.06696737, -0.13009265, -0.09842216) * inp_2_2_1;
    result0 += M4(0.18196747, 0.0043474315, -0.30451196, 0.12478584, 0.087922536, -0.024917189, 0.05619897, 0.0061677997, -0.018227506, -0.09242703, -0.02110021, 0.10965594, -0.21807227, 0.10445808, -0.13006623, 0.275744) * inp_2_0_2;
    result0 += M4(-0.42424116, 0.035048973, -0.20416047, 0.91514474, -0.2814486, 0.20617592, 0.10785138, 0.5071443, 0.10711916, -0.0663502, -0.20101513, 0.5359585, 0.23111239, -0.33724406, 0.21327955, -0.075120695) * inp_2_1_2;
    result0 += M4(0.14917493, -0.23557319, 0.06463117, -0.10986212, -0.13288105, 0.09435965, 0.035108965, 0.2547848, 0.304569, 0.06884956, 0.0043159765, -0.107175104, -0.13559906, -0.0140703805, -0.07619135, 0.11880756) * inp_2_2_2;
    result1 += M4(-0.1627346, -0.1636202, -0.26076928, -0.1827969, 0.2940927, 0.46714783, 0.08276511, 0.13693932, -0.08717634, 0.14019069, 0.12663537, 0.12124805, -0.2508923, 0.0568069, -0.106041245, 0.2756052) * inp_2_0_0;
    result1 += M4(-0.11893863, 0.13121562, -0.017284637, 0.030053904, 0.14796014, 0.23505844, 0.27344337, -0.14302284, 0.08232218, -0.195032, -0.21819232, -0.08829152, 0.08470429, 0.10682284, -0.22068334, -0.16564208) * inp_2_1_0;
    result1 += M4(-0.052548505, 0.03529564, -0.17564437, 0.022480747, -0.09111652, 0.19222637, -0.13279872, -0.0111011155, -0.17759459, -0.33242247, 0.32551098, 0.11223573, -0.053403176, -0.31783265, 0.31596255, -0.15196942) * inp_2_2_0;
    result1 += M4(0.06489615, 0.22721219, -0.022670425, -0.27923864, 0.2563304, 0.34408274, -0.10386052, -0.24432369, -0.1295412, 0.29353145, 0.0273769, 0.45349133, 0.10438842, 0.35031807, 0.07791941, -0.37869206) * inp_2_0_1;
    result1 += M4(-0.15134043, 0.56835103, 1.0278759, -0.106835134, -0.11559308, -0.013795345, 1.1588185, -0.10909968, 0.14162774, 0.3116494, 0.31844553, -0.5003794, 0.08133233, 0.086161636, 0.46713573, 0.4211856) * inp_2_1_1;
    result1 += M4(0.42555588, -0.014913447, -0.0019251095, 0.11936616, -0.33645818, -0.08524648, 0.17854138, -0.09662774, -0.3826367, 0.39627275, 0.35340345, 0.3243175, -0.09170321, -0.120249696, -0.19955078, 0.037723336) * inp_2_2_1;
    result1 += M4(0.24952012, -0.14455423, -0.15795153, 0.6780923, 0.14202784, 0.5991124, -0.20598622, 0.8727777, -0.1599384, -0.11911856, -0.18954177, 0.02599005, 0.11728117, -0.47755727, -0.07647473, 0.056334384) * inp_2_0_2;
    result1 += M4(-0.13065849, -0.37246567, -0.61631805, -0.084780276, 0.21765055, -0.15226081, -0.6995631, -0.1909178, 0.62752557, 0.018954638, -0.55107296, -0.7403781, 0.062112678, 0.3941523, -0.29835302, -0.47745314) * inp_2_1_2;
    result1 += M4(0.18442883, -0.3210954, 0.06740703, 0.12622333, -0.27999508, -0.13611104, -0.16957878, 0.10393949, -0.22458021, -0.43434837, -0.20226943, 0.06962766, 0.011313366, 0.04211107, 0.09034832, 0.21756062) * inp_2_2_2;
    result2 += M4(-0.11912548, -0.07183259, 0.4178412, -0.17019595, 0.0018847199, 0.13105798, 0.28668308, -0.27255315, 0.11494009, 0.028058108, 0.5220238, -0.09765576, -0.06422245, 0.0215151, 1.0527402, -0.83480465) * inp_2_0_0;
    result2 += M4(0.2987148, -0.11241121, 0.3519971, -1.0953332, 0.18791546, -0.008630039, 0.05895916, -0.28388754, 0.15987734, -0.19953646, -0.5768762, 0.7631732, 0.10138667, 0.047394656, -0.5843342, 0.48781466) * inp_2_1_0;
    result2 += M4(0.13943435, -0.06716601, -0.22955467, 0.054193217, -0.06239036, -0.03023011, -0.119255304, 0.07088378, -0.037737794, 0.07935408, -0.3676004, -0.869602, -0.03707072, -0.16702808, -0.0073942547, -0.20294195) * inp_2_2_0;
    result2 += M4(0.020279504, -0.07854823, -0.27097535, 0.75857234, -0.17616078, 0.09954096, -0.17808838, 0.7487198, -0.14973478, 0.100558296, 0.41193447, 0.18304805, -0.081456915, -0.0023203113, -0.35200727, -0.15193148) * inp_2_0_1;
    result2 += M4(-0.34790534, -0.18047342, 0.05463003, 0.018814025, -0.5659383, -0.6149848, -0.19188325, -0.11927502, -0.29101923, -0.6935695, 0.20406757, -0.108095855, -0.056193743, -0.05244513, 0.42540976, -0.27884966) * inp_2_1_1;
    result2 += M4(-0.20871685, -0.07401789, 0.014145016, -0.039063144, 0.026896032, 0.84771234, 0.25341287, 0.042360708, 0.074451834, 1.4444573, 0.5512443, -0.07538868, 0.08668166, 0.11173404, -0.1670842, 0.1919566) * inp_2_2_1;
    result2 += M4(0.2712132, -0.10742764, 0.53560853, 0.12011461, 0.27339363, 0.049774118, 0.29599753, 0.40677992, 0.048594095, -0.21072692, 0.02046183, 0.5168262, 0.2567158, -0.048908796, -0.284244, 0.8776924) * inp_2_0_2;
    result2 += M4(0.31434977, 0.036859937, -0.20578834, -0.06296092, 0.31201467, -0.26075926, -0.087104246, 0.18403362, 0.51988816, 0.11283263, -0.8083394, 0.03473694, -0.0080652265, -0.2228995, -0.07904714, 0.12810835) * inp_2_1_2;
    result2 += M4(-0.004586257, -0.14003946, -0.18897283, -0.24114324, -0.034902275, -0.046976253, -0.14097181, 0.06794567, -0.16804422, -0.20387177, -0.16961563, -0.19964032, -0.26585904, 0.25487822, -0.19887795, 0.17622814) * inp_2_2_2;
    result3 += M4(0.041514844, -0.1874075, -0.7321847, -0.048912484, 0.00029978968, -0.09864386, -0.42712414, -0.35374406, 0.13893211, -0.011976501, -0.12525597, -0.04150967, 0.25945956, -0.2193401, -0.03751439, -0.101746686) * inp_2_0_0;
    result3 += M4(0.20603244, -0.049112137, -0.28466386, 0.06740886, 0.32327464, 0.008688112, -0.27829, 0.18623616, 0.11715569, -0.09547944, 0.36565542, -0.27332833, 0.08851951, 0.07442659, -0.26543063, -0.10027078) * inp_2_1_0;
    result3 += M4(0.00056316564, 0.21736908, 0.28311038, 0.09509089, -0.16034353, -0.035458196, 0.0416003, 0.11434347, -0.26210386, 0.041890297, -0.470477, -0.03988019, -0.18167117, -0.13080975, -0.034797776, 0.10830174) * inp_2_2_0;
    result3 += M4(-0.06471413, -0.11906014, 0.015417276, -1.0936159, 0.0916379, -0.06352694, -0.14981598, -0.6043582, -0.039891984, -0.116176985, 0.2952589, -0.42226154, -0.13992171, 0.36571595, -0.1384818, 0.19619726) * inp_2_0_1;
    result3 += M4(0.510773, 0.0509124, 0.22839554, 0.20190792, 0.55648637, -0.49403483, 0.5275398, 0.91924465, 0.5386125, 0.18801276, 0.7199272, 1.2681444, -0.30087012, -0.06774219, -0.04163299, 0.11643156) * inp_2_1_1;
    result3 += M4(-0.11781451, -0.15172115, -0.19885926, 0.19881038, -0.9300382, 0.13168503, -0.1617636, -0.14626858, -1.082345, 0.29673484, 0.16136159, -0.0931742, -0.3171374, 0.33971933, 0.32797495, -0.17390424) * inp_2_2_1;
    result3 += M4(-0.08467289, -0.19495547, 0.17956755, -0.28606218, 0.058290906, -0.31082943, 0.11796537, -0.22489563, 0.072681144, -0.099552035, 0.081294455, -0.024834989, 0.2499968, -0.17776506, 0.2808803, -0.14344233) * inp_2_0_2;
    result3 += M4(0.1643076, 0.6552311, -0.0068499106, 0.23489861, 0.27248403, 0.52099264, -0.3350344, 0.2881982, -0.006685202, 0.5342492, -0.96628577, -0.33853844, 0.37452266, 0.2186791, -0.2188795, -0.14476389) * inp_2_1_2;
    result3 += M4(0.0072241593, 0.23180166, -0.22104079, -0.09103514, -0.24590549, -0.13953388, -0.10300225, 0.11591922, 0.49635988, -0.32218736, -0.52202344, -0.0051507503, 0.06309431, -0.42354813, 0.3351396, 0.23059201) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.46282405, -0.040392097, 0.18762699, -0.036317524, 0.49383283, -0.43176714, 0.14985919, -0.064440794, 0.21711287, -0.0013050452, 0.09766455, -0.008095499, -0.04049279, 0.19667646, 0.0016728069, -0.0043313215) * inp_3_0_0;
    result0 += M4(-0.3822045, 0.01369908, -0.0077396375, 0.1312537, -0.35145217, 0.25431475, 0.074981146, -0.0025633727, 0.38038042, -0.17833342, -0.05970272, -0.052564736, 0.075144954, -0.17050543, 0.0097910175, -0.0327784) * inp_3_1_0;
    result0 += M4(0.18286608, 0.10661219, 0.08467612, -0.0926124, 0.5420479, -0.26673704, 0.16942778, -0.13203815, -0.108094096, 0.03425282, -0.0088673765, 0.016613066, 0.57297224, -0.06156592, 0.10718003, -0.00867211) * inp_3_2_0;
    result0 += M4(-0.079370305, -0.112328686, 0.01587581, 0.029611796, 0.37829056, 0.015139635, -0.011686291, -0.054584198, -0.39016277, 0.208897, 0.026743354, -0.052489918, -0.0116788475, -0.075117834, -0.001506141, -0.10629533) * inp_3_0_1;
    result0 += M4(0.398287, -0.2208369, 0.09409558, 0.075729564, -0.73585176, 0.4910305, 0.013516392, 0.06361697, -0.7105634, 0.7063318, 0.0912532, 0.007373186, -0.30609962, 0.12890609, 0.07465728, 0.091993496) * inp_3_1_1;
    result0 += M4(0.07343336, -0.1534792, -0.19086654, 0.06942415, -0.3914649, -0.08516341, -0.28346848, -0.11895302, -0.117730625, 0.2658248, 0.0443515, 0.17315876, -0.13769096, 0.1716296, 0.11009439, 0.013885466) * inp_3_2_1;
    result0 += M4(-0.08465794, 0.09018103, -0.03719319, 0.09086909, -0.24039502, 0.21320088, 0.17734346, -0.105450675, -0.15295544, -0.2563907, -0.08376143, 0.33017215, -0.10395268, 0.07065262, 0.03773062, 0.12580903) * inp_3_0_2;
    result0 += M4(0.12244614, 0.12598011, 0.058200575, -0.5922511, 0.06533199, -0.21390261, -0.040838063, 0.35069045, 0.39190608, -0.056021348, -0.16943814, 1.8949298, -0.008723432, 0.09127091, -0.039072957, 0.48138177) * inp_3_1_2;
    result0 += M4(-0.08357892, 0.08553164, -0.08151185, -0.12309928, 0.060366824, -0.05745058, -0.15035506, 0.10784195, -0.34089032, -0.054889575, 0.06552584, 0.24237074, -0.02051338, -0.0011403857, -0.07521109, 0.2305604) * inp_3_2_2;
    result1 += M4(0.078554094, 0.052243933, 0.12801011, 0.055829152, -0.22089985, -0.025139533, 0.22217448, 0.17745417, -0.10811007, 0.22446045, 0.1716103, 0.11825409, 0.073106065, 0.053644132, 0.07747161, -0.06988404) * inp_3_0_0;
    result1 += M4(-0.13278225, -0.04170423, -0.2444153, -0.024338113, 0.12991649, 0.14947194, 0.06849163, 0.2205617, 0.07312207, -0.25838745, -0.08421991, -0.06630274, -0.3153608, -0.15014905, 0.013196686, 0.10648609) * inp_3_1_0;
    result1 += M4(-0.23629169, -0.11315311, 0.15371893, -0.006254514, -0.13504723, 0.04873127, 0.035014004, -0.17268376, 0.07948572, -0.10888813, 0.014575343, -0.02293372, 0.22152916, 0.020576293, -0.052582458, -0.12934154) * inp_3_2_0;
    result1 += M4(-0.005612902, 0.104059845, -0.09085132, -0.06792554, 0.3261704, 0.07672633, 0.13990621, -0.46127665, -0.39310294, 0.23127754, 0.012457084, 0.41085905, 0.23655605, 0.53626716, -0.0050416244, 0.5401334) * inp_3_0_1;
    result1 += M4(0.03389991, 0.10673483, -0.0069328966, 0.049041633, -0.07556858, -0.111188225, 0.018569076, 0.36562112, -0.030157097, 0.002787261, -0.16252843, -0.25437397, -0.38568607, -0.031019608, -0.025195342, 0.070064016) * inp_3_1_1;
    result1 += M4(0.080107816, -0.08823119, -0.001235783, -0.09304743, -0.11429805, -0.3433566, 0.06413303, -0.052037217, -0.06573468, -0.057114903, 0.06831255, -0.07660877, 0.5348312, -0.0077371276, 0.075977616, -0.058401458) * inp_3_2_1;
    result1 += M4(0.38161838, 0.2713125, 0.013736758, 0.06250495, -0.14791027, 0.31645325, -0.095828705, 0.3282778, 0.008430445, -0.9664568, -0.27999195, 0.35293686, 0.2291387, 0.14881915, -0.15339273, 0.48320255) * inp_3_0_2;
    result1 += M4(0.06586877, 0.2613649, 0.3834381, 0.07324031, -0.1585212, -0.20628022, -0.28240222, -0.34664613, 0.7109457, -0.7109398, -1.3173141, -0.30687523, -0.32490587, -0.17699148, -0.14188269, -0.05203133) * inp_3_1_2;
    result1 += M4(-0.24216525, -0.019940164, 0.16214132, 0.037804674, 0.0058566453, -0.013163984, -0.102641694, 0.044194743, 0.13878947, -0.3220736, -0.28429607, -0.093069375, 0.2968162, -0.1820233, -0.116809286, -0.084558085) * inp_3_2_2;
    result2 += M4(0.09054593, 0.11985981, 0.5331258, 0.15470383, 0.12958394, 0.06291247, 0.6095725, 0.32710344, 0.07644433, 0.024827112, -0.22415084, 0.3394797, -0.034048576, 0.04256132, -0.050986696, 0.47845796) * inp_3_0_0;
    result2 += M4(0.28236008, -0.1199791, 0.047969498, -0.1065641, -0.24477112, 0.018442491, -0.059998702, -0.6908511, -0.13648605, -0.09134413, 0.09486333, 0.102074906, -0.03143203, -0.11792074, -0.039316326, 0.0022244868) * inp_3_1_0;
    result2 += M4(0.19560108, 0.3795756, 0.2680297, -0.0636748, -0.08998585, -0.116816334, 0.37260598, -0.0012131375, 0.06448143, 0.15905297, -0.053027775, -0.056186777, 0.12533163, 0.19317068, 0.06596127, -0.15483174) * inp_3_2_0;
    result2 += M4(-0.041768726, 0.055993613, -0.39540443, -0.025350343, 0.027563808, 0.29836375, -0.82981014, 0.040830094, 0.10260125, -0.17009203, 0.07515259, -0.023972817, -0.0137756895, 0.13919154, 0.0058745234, -0.102765545) * inp_3_0_1;
    result2 += M4(0.031950686, -0.14905564, -0.3630573, -0.43138558, 0.2199892, -0.30610093, 0.12715624, 0.07632634, -0.22425632, 0.12547477, -0.018253347, 0.046903092, 0.095892414, -0.34527844, 0.01790798, 0.12272492) * inp_3_1_1;
    result2 += M4(-0.075285584, 0.071869634, 0.038100183, -0.124975696, -0.16248895, 0.048539918, -0.5021811, 0.17105787, 0.13919383, 0.2697767, 0.19124556, -0.3032244, -0.19010997, -0.20552936, -0.15350522, 0.06313438) * inp_3_2_1;
    result2 += M4(0.02322842, 0.011521114, 0.13448954, 0.39337456, -0.047467954, -0.019590704, 0.5828224, 0.44328958, 0.109046586, -0.06020428, 0.21754351, 0.008914668, 0.13240437, -0.02187373, 0.1744434, 0.11578858) * inp_3_0_2;
    result2 += M4(-0.40385342, -0.1718927, -0.050769992, 0.23726481, 0.19048004, -0.08802541, -0.66019917, -0.12967137, 0.77241176, 0.23572877, 0.009355228, 0.15560684, 0.2380685, -0.12893406, 0.21251604, 0.0060361507) * inp_3_1_2;
    result2 += M4(-0.61224735, -0.026317447, 0.12143289, 0.21600522, 0.14808847, 0.036386274, 0.31111702, -0.0805281, 0.24980472, -0.16804425, -0.17711024, -0.080428325, 0.20762162, 0.19504943, -0.03996117, 0.009756806) * inp_3_2_2;
    result3 += M4(0.0417483, -0.10685548, -0.2012352, 0.104978986, -0.08346007, -0.20483586, 0.2620347, 0.0945189, 0.027133487, -0.044444382, 0.07681858, -0.1438028, -0.036214262, 0.009223599, -0.045636322, -0.107239105) * inp_3_0_0;
    result3 += M4(0.11484245, -0.068247095, -0.17306659, 0.0069586067, -0.14773072, -0.0972602, -0.25238788, 0.12205538, -0.06855447, 0.14839537, 0.22170424, 0.09660342, 0.23066388, -0.05266525, -0.11607693, 0.03725004) * inp_3_1_0;
    result3 += M4(-0.13781084, 0.07118031, -0.22175536, -0.009434934, -0.22122382, 0.14925042, 0.0795028, 0.047637608, -0.052316427, -0.05715271, -0.13200742, -0.026784092, 0.06728691, 0.0083434535, -0.17089589, 0.048811257) * inp_3_2_0;
    result3 += M4(-0.08271968, 0.34093705, 0.10994194, -0.003334276, -0.07003326, 0.41169152, 0.6017587, -0.39789328, 0.20289658, -0.119732425, 0.0025111865, -0.2752, 0.15179592, 0.09706719, 0.09998976, -0.4344298) * inp_3_0_1;
    result3 += M4(0.19011502, -0.0061818003, -0.13214251, 0.18255354, 0.62202096, -0.03552533, -0.019867307, -0.080584824, 0.14919963, 0.19170444, 0.36362088, 0.29970178, 0.14172977, 0.058479186, 0.030650765, -0.779451) * inp_3_1_1;
    result3 += M4(-0.1139973, 0.19082627, 0.3200915, 0.0018213466, -0.10245886, 0.113921754, 0.105136104, 0.025458064, -0.39720502, -0.02463609, -0.4046972, 0.25136223, 0.16808805, 0.1678576, 0.3048226, 0.036628883) * inp_3_2_1;
    result3 += M4(0.013784934, -0.29604757, -0.4375863, -0.12524909, 0.09310945, -0.4044019, 0.2140053, -0.185612, 0.00043437813, 0.3751137, -0.20462598, -0.11448045, 0.14942127, -0.30042157, -0.25515753, -0.1690207) * inp_3_0_2;
    result3 += M4(0.09854892, -0.6835763, 0.3998059, -0.27327812, -0.09723034, -0.032995213, -0.77193123, 0.1355814, 0.18014716, 0.6885852, -0.5480563, 0.14677094, 0.110850014, -0.021149008, 0.03850931, 0.0024766398) * inp_3_1_2;
    result3 += M4(-0.21341628, -0.31651267, 0.11902992, 0.03326671, 0.045867868, 0.051394213, 0.35978213, 0.2244134, -0.28041014, 0.05438791, -0.3097512, -0.051287357, -0.042261325, 0.10170364, -0.17415719, 0.12027048) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.010508318, 0.016279403, -0.0138093075, 0.035620093);
    V4 result1 = V4(-0.012911063, 0.09816636, 0.02539139, 0.05719633);
    V4 result2 = V4(0.0662536, 0.056321383, -0.07514053, 0.037601907);
    V4 result3 = V4(-0.018308999, 0.024211645, 0.013471391, 0.0075904415);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03886227, 0.19087888, 0.04473916, 0.060247373, -0.010798601, -0.031497322, -0.07279908, -0.015823066, -0.21634397, 0.2209635, -0.06357427, -0.021280846, 0.11577758, -0.05387949, 0.03631635, -0.049797144) * inp_0_0_0;
    result0 += M4(-0.07315485, -0.08045926, 0.09257072, 0.02955024, -0.041795217, -0.12812383, -0.03541791, -0.040757626, 0.21938561, 0.067059465, -0.08787804, -0.06381872, -0.12898058, 0.558522, 0.26758868, 0.24172224) * inp_0_1_0;
    result0 += M4(0.096762866, 0.04561219, -0.0030353756, -0.018299783, -0.009277909, -0.019418865, -0.025465248, -0.001635779, 0.22334126, 0.12744638, 0.10631966, -0.0076676128, -0.04023865, 0.06412396, 0.02603943, 0.006910714) * inp_0_2_0;
    result0 += M4(-0.19651933, -0.17982933, 0.08411819, 0.0064068586, -0.11881272, -0.053625718, -0.18652573, -0.05814317, 0.011763614, 0.15635937, 0.18809238, 0.08415463, 0.11559016, -0.0010422447, -0.025355741, -0.040634785) * inp_0_0_1;
    result0 += M4(-0.09676491, 0.67844003, -0.30035618, -0.00548745, 0.100114055, -0.053311527, -0.21926421, -0.044237193, 0.09971987, 0.10296162, -0.013906195, 0.06020988, -0.8529704, 0.08958272, -0.2983397, 0.0423602) * inp_0_1_1;
    result0 += M4(0.053819776, -0.3004388, 0.21801412, 0.10595219, -0.036659036, 0.3825212, -0.12999478, -0.010845079, -0.17491785, -0.49499807, -0.054011002, -0.015940601, -0.95056784, 0.11439048, 0.13494219, 0.12887411) * inp_0_2_1;
    result0 += M4(-0.21520917, 0.9452888, 0.48508954, 0.010008491, 0.22112906, -0.0077371555, 0.14230514, -0.06936827, 0.048498005, 0.048498478, -0.07450976, -0.06894618, 0.10055242, -0.16466668, 0.04607314, -0.04440232) * inp_0_0_2;
    result0 += M4(1.6787658, 0.76622736, 1.0678396, 1.1079266, 0.34640732, 0.23824829, 0.16323777, -0.025634205, -0.3433158, -0.47177157, -0.022226738, -0.1563778, 0.23876952, 0.0048807715, -0.010271878, -0.015046146) * inp_0_1_2;
    result0 += M4(0.21614765, 0.45346713, -0.27993196, 0.066027954, 0.2605534, -0.13599668, -0.03518475, -0.12617287, 0.0995717, 0.13652879, 0.078722335, 0.12367021, -0.35084334, 0.10007522, 0.041691635, 0.003908889) * inp_0_2_2;
    result1 += M4(0.016628608, -0.15771538, -0.05945028, 0.13276859, -0.006674714, 0.053870544, 0.07387049, 0.1386091, -0.27341107, 0.022716323, 0.020341119, -0.02497567, -0.3985027, -0.42443255, 0.039161436, 0.49910837) * inp_0_0_0;
    result1 += M4(0.0051112124, 0.003040633, -0.058979392, -0.08443894, -0.093946286, -0.18939242, -0.07007264, 0.09738499, 0.48039526, -0.05963117, 0.27625397, -0.21819252, -1.3390294, -1.0997772, 0.058555648, -0.22137617) * inp_0_1_0;
    result1 += M4(0.086150795, 0.06385785, -0.013813492, 0.15748766, 0.083000764, -0.29271233, 0.033903465, 0.17342824, -0.028400272, 0.27061656, -0.17845199, 0.040305614, -0.16905518, -0.7394539, -0.36607385, 0.082937814) * inp_0_2_0;
    result1 += M4(-0.04540475, 0.0016354225, -0.095172234, 0.16349372, 0.073391974, 0.45064977, 0.30315614, -0.07466653, 0.0103086, -0.4509357, 0.14651679, -0.1752656, -0.31271118, -0.014635473, -0.037440795, 0.14025015) * inp_0_0_1;
    result1 += M4(0.094868675, 0.02370526, 0.4742306, 0.11787904, -0.88133377, 0.13964905, 0.39720333, 0.2526855, 0.18194008, -0.15174912, -0.8724692, -0.5820975, -0.03425687, -0.36744404, 0.20092136, 0.5875994) * inp_0_1_1;
    result1 += M4(-0.4337997, -0.04684245, -0.2538063, -0.07997986, 0.14855796, 0.068884075, 0.30574512, 0.22221248, -0.17331165, 0.22224401, 0.28853303, 0.57411927, -0.019937757, -0.19838353, -0.062486008, 0.19042307) * inp_0_2_1;
    result1 += M4(0.07461861, -0.37226948, 0.25875393, -0.3639342, -0.025366543, 0.1006367, 0.12888922, 0.27918267, 0.08073495, -0.21102794, -0.10997326, -0.092132084, -0.07227795, -0.048983768, 0.03323711, 0.13442582) * inp_0_0_2;
    result1 += M4(-0.07582415, -0.51462185, -2.3308394, -1.3746716, -0.08143343, 0.08465475, 0.26285455, -0.054512043, 0.14693056, -0.33013508, -0.08095936, -0.27989584, -0.1484294, 0.0256315, 0.041465834, -0.39297813) * inp_0_1_2;
    result1 += M4(-0.40906072, 1.3302082, 0.45953536, 1.2253724, 0.068086825, -0.14759704, 0.23184451, -0.27270254, 0.040193286, -0.004707279, 0.10912123, 0.19320762, 0.04581428, -0.08314159, -0.002521173, 0.26928067) * inp_0_2_2;
    result2 += M4(0.1391079, -0.052044343, -0.1000617, -0.103223056, -0.0018825588, -0.046150353, 0.0023636508, 0.07328756, 0.029981691, 0.17730525, -0.06597195, -0.11793534, 0.310363, 0.08538673, -0.19510834, -0.32865438) * inp_0_0_0;
    result2 += M4(0.09487273, 0.02099264, -0.11465716, -0.009261362, -0.05991572, -0.051936653, 0.12735575, 0.021104956, 0.08935255, -0.05073903, -0.11265372, -0.086488724, 0.093074515, -0.09697696, -0.5219365, -0.07220342) * inp_0_1_0;
    result2 += M4(0.049629204, -0.09859922, -0.07017957, 0.017323414, 0.06449406, -0.0037610577, 0.0029545675, 0.02095629, -0.0707603, 0.09155437, -0.13932759, 0.11762215, 0.08535354, -0.19874477, -0.18407756, -0.16271342) * inp_0_2_0;
    result2 += M4(0.22972664, 0.12110249, 0.030438067, -0.34227696, -0.18678284, 0.0038386898, 0.25143826, 0.2996657, -0.43416074, -0.2678205, -0.31845492, 0.021942565, 0.18760206, 0.123472184, -0.31710893, -0.39071706) * inp_0_0_1;
    result2 += M4(0.033475887, -0.21886861, 0.15995233, -0.143176, -0.11021356, 0.32428604, 0.28429884, 0.14708903, -0.100236855, -0.03087028, -0.9520134, -0.2824792, 0.3084059, -0.5429897, -3.3176956, -0.8398656) * inp_0_1_1;
    result2 += M4(-0.10133755, 0.081727676, -0.092910364, -0.10062034, -0.170201, 0.11317382, 0.33617434, -0.0023404213, 0.06152375, -0.09033295, -0.2956601, 0.01462838, 0.11815255, -0.06895151, 0.34851724, -0.36796993) * inp_0_2_1;
    result2 += M4(0.7456119, 0.39119047, -1.0717533, -0.4194338, -0.04564163, -0.0038434444, -0.048229232, 0.52738893, 0.30020416, 0.17689742, 0.13369487, 0.22071993, -0.19986607, 0.029172683, -0.004524445, -0.111597225) * inp_0_0_2;
    result2 += M4(1.209883, 2.3086574, -1.1615459, -1.1813973, -0.12345183, 0.19274868, 0.092585765, 0.907855, -0.18170314, -0.44145432, 2.0140526, -0.23979796, 0.23887981, -0.32996187, -0.5458158, -0.4161963) * inp_0_1_2;
    result2 += M4(0.06113756, -0.18512973, -1.2581693, -0.22297613, 0.0035284236, -0.07846373, 0.16528566, 0.43478358, 0.067732446, 0.117613584, 0.13383402, 0.060070746, 0.14947397, 0.015832238, -0.05531325, -0.02199293) * inp_0_2_2;
    result3 += M4(0.051850304, -0.25035632, 0.022093717, -0.045975078, 0.018240573, 0.013063814, -0.03126897, -0.07308703, 0.044720303, -0.050964955, -0.07948697, 0.17373781, -0.05357198, 0.025643472, 0.03204818, -0.075829245) * inp_0_0_0;
    result3 += M4(0.017073827, -0.23117343, 0.083715156, -0.059738047, 0.010395686, 0.023796616, 0.0333825, 0.00794429, 0.06914462, -0.016711315, -0.06661704, 0.029081194, -0.048315626, -0.10753143, -0.02201366, -0.29042232) * inp_0_1_0;
    result3 += M4(0.050272044, -0.26821572, -0.031993434, -0.041647796, 0.0653633, 0.020326508, 0.014215804, -0.0020973126, -0.292828, -0.07352332, 0.046754703, -0.21403144, 0.2632438, 0.16491224, 0.054053925, -0.011895316) * inp_0_2_0;
    result3 += M4(0.1159932, 0.10034434, -0.08021679, 0.1620832, -0.005321978, -0.017147884, -0.08452717, 0.25374126, 0.050828356, 0.10294333, -0.018471152, -0.31558242, -0.07913682, 0.116404854, -0.074787416, 0.014716428) * inp_0_0_1;
    result3 += M4(0.38392612, -0.23434426, 0.06613146, -0.06823885, 0.014553126, -0.115329206, -0.041076023, 0.47527772, 0.11369137, 0.018459657, 0.17688976, 0.11672074, -0.20532717, 0.40081382, 0.3841544, -0.2952311) * inp_0_1_1;
    result3 += M4(-0.6236403, 0.08001296, 0.023501568, -0.13678609, 0.03275447, 0.06219635, -0.03379026, 0.2599807, 0.16604291, -0.00874739, -0.06713859, 0.27568758, -0.19434565, 0.30436277, 0.13735268, -0.10036039) * inp_0_2_1;
    result3 += M4(0.2213301, -1.2374995, -0.036540344, 0.02258951, -0.051485185, -0.4318726, 0.024469348, -0.06287474, 0.011432443, -3.6666932, -0.051790107, 0.019275127, 0.0288305, 0.31176785, 0.032299448, 0.15658514) * inp_0_0_2;
    result3 += M4(0.76123047, -0.83491373, 0.28967038, 1.5208809, -0.22345722, -0.819502, 0.23703572, 0.21412545, -0.016790273, -3.758752, -0.048835844, -0.16120714, -0.008808837, 0.19496435, -0.07913003, 0.006620367) * inp_0_1_2;
    result3 += M4(0.49327362, 0.1533181, 0.057717208, 0.94864345, 0.006429853, -0.23569492, -0.05850992, 0.20486619, 0.010194196, -3.1496975, 0.069052465, -0.1101141, -0.0705901, 0.3622907, -0.06744806, 0.08006024) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.15419559, -0.09962749, -0.011124173, -0.03321857, -0.05368256, 0.02091177, 0.072186135, 0.03444566, 0.011126239, -0.19928876, -0.025656551, 0.009951568, -0.036644075, -0.015508072, 0.054425195, 0.025000725) * inp_1_0_0;
    result0 += M4(0.07784616, 0.09945359, -0.09681231, -0.0012251234, -0.007647667, 0.6112838, 0.10532827, 0.060675193, -0.14622907, -0.9349922, -0.24403805, -0.060900103, -0.11080049, 0.2741282, -0.13416284, -0.00469862) * inp_1_1_0;
    result0 += M4(0.2836473, 0.046659905, 0.034897428, -0.093093984, -0.13926388, 0.14207703, 0.019026825, -0.0016938061, 0.2788002, -0.24332342, 0.0041639833, 0.013098144, 0.075529315, 0.22190723, 0.17033657, 0.060997516) * inp_1_2_0;
    result0 += M4(-0.056700397, -0.01949621, 0.19105564, 0.058462154, -0.16602713, 0.110525675, 0.048143875, 0.06821339, -0.028220806, -0.364147, -0.016183052, 0.02666189, 0.16405801, -0.052097395, -0.0085510975, -0.037822694) * inp_1_0_1;
    result0 += M4(0.19767094, 0.16746233, 0.07646031, -0.037978087, -0.1130455, 0.23638548, -0.044553302, 0.058632005, 0.44879493, -0.005328247, 0.8054922, 0.25471348, 0.1301011, -0.44644403, 0.1412813, 0.07161961) * inp_1_1_1;
    result0 += M4(-0.5578104, -0.13207948, -0.08654761, -0.0029738524, -0.89695495, 0.028955242, 0.16973132, 0.065372095, 0.5923897, -0.027228251, -0.085582025, 0.00035674797, 0.42561293, -0.28035587, -0.07906386, -0.026795432) * inp_1_2_1;
    result0 += M4(-0.15996557, -0.073880024, 0.09236474, 0.08806881, -0.03500525, 0.008560903, -0.010430913, -0.0067879935, -0.0376741, -0.047466647, 0.037334695, 0.043776155, -0.024170576, -0.13906132, 0.050717603, 0.019303877) * inp_1_0_2;
    result0 += M4(-0.058452055, -0.09130488, 0.03334567, 0.12084903, -0.035451394, 0.074518785, -0.0027065633, -0.006047799, 0.25473553, 0.11930564, -0.046412718, 0.012579266, -0.06655761, 0.0041716425, 0.042547252, 0.038005847) * inp_1_1_2;
    result0 += M4(0.37106532, -0.072865926, -0.005088177, 0.0138055505, -0.11053165, 0.058693454, -0.050334558, 0.014051214, 0.032670114, -0.15152247, 0.0053839907, -0.008936406, 0.103766836, 0.018216338, 0.03135943, -0.015312485) * inp_1_2_2;
    result1 += M4(0.40045655, 0.23590435, -0.33103397, -0.23729838, 0.003225124, 0.046054292, -0.03164288, 0.12736236, 0.019341607, -0.00817576, -0.11465259, -0.31340593, 0.15260814, -0.017738292, -0.0649278, -0.024999881) * inp_1_0_0;
    result1 += M4(-0.08572519, 0.22616218, 0.16697942, -0.24370833, 0.28508317, 0.26409188, 0.05096545, 0.051799517, -0.3054896, -1.3497721, 0.24524903, 0.34628913, 0.049372457, -0.08629835, 0.03804298, -0.42571327) * inp_1_1_0;
    result1 += M4(0.065280184, -0.032207433, 0.04562972, -0.114079714, 0.22631809, 1.0611963, -0.24571224, 0.19702181, -0.11116315, -1.3744756, 0.17019697, -0.4803391, -0.16437113, -1.980303, -0.09537271, 0.054473013) * inp_1_2_0;
    result1 += M4(0.20540829, 0.2423683, -0.3407273, 0.01995507, -0.03114506, -0.084688574, 0.0007350045, 0.122928195, -0.1403605, 0.09753024, -0.05799112, 0.115523085, 0.070989154, -0.04874071, -0.06133517, -0.100503534) * inp_1_0_1;
    result1 += M4(0.36027446, -0.42551973, -0.1264516, -0.57001823, 0.22217394, -0.17216896, -0.23416953, 0.021667236, -0.75412714, -0.29884112, 0.5909802, -0.07809683, 0.0546239, 0.0547673, -0.13884723, 0.23416032) * inp_1_1_1;
    result1 += M4(-0.17356442, 0.042012606, -0.1580303, 0.51230574, 0.1462132, 0.575715, -0.0740743, 0.9600129, -0.049443968, -0.19655481, -0.1407364, -0.9753555, -0.024798758, -0.53749853, -0.5237269, -0.5742898) * inp_1_2_1;
    result1 += M4(0.108012386, -0.12028622, -0.063382864, 0.13472287, 0.11336991, 0.13525823, -0.021490633, 0.036045995, -0.0027594108, 0.07466133, 0.040255096, -0.07350131, 0.01201091, -0.0050434275, -0.0026917555, -0.055689074) * inp_1_0_2;
    result1 += M4(-0.10434901, -0.30925938, 0.18223797, 0.24238323, 0.02378444, -0.16950095, 0.012903485, 0.53542936, -0.0018231508, 0.0023592561, 0.00847998, -0.37874755, 0.08489652, 0.13589679, 0.025828525, -0.08953004) * inp_1_1_2;
    result1 += M4(-0.08593131, 0.18164992, 0.12234297, -0.27842805, 0.040907286, -0.27271885, -0.029084207, 0.6258426, -0.10643612, 0.05957405, -0.06159252, -0.38720533, -0.03415407, -0.093292035, -0.02131531, -0.37616333) * inp_1_2_2;
    result2 += M4(-0.15112962, -0.30051187, 0.2814806, -0.27048784, 0.16161025, 0.03051541, 0.0603189, -0.124522634, -0.1670293, -0.011942849, 0.01935975, 0.053100377, -0.014418759, -0.1446123, -0.01205479, 0.027853398) * inp_1_0_0;
    result2 += M4(-0.13275412, -0.008768945, -0.01952631, -0.1518043, 0.20664959, -0.030888373, -0.025694985, 0.03533916, -0.5336982, -0.1887097, 0.06467653, 0.045102343, -0.12452737, -0.25877595, -0.16488214, -0.0881954) * inp_1_1_0;
    result2 += M4(0.015067088, -0.1711736, 0.07742756, 0.05421025, 0.16796772, 0.08947824, 0.050141286, -0.073880605, 0.03288758, 0.0218038, 0.0042204736, 0.16691351, -0.39168876, -0.18003862, -0.22880547, 0.015722059) * inp_1_2_0;
    result2 += M4(-0.1477333, -0.28509724, 0.28744364, 0.18091393, 0.19864492, 0.009658032, -0.0614711, -0.23743732, -0.4501001, -0.027375052, 0.32124576, -0.4136765, -0.09502472, -0.10432183, -0.011784056, 0.09762611) * inp_1_0_1;
    result2 += M4(0.27017996, -0.14450839, -0.47680092, 0.59940803, 0.7402247, -0.1989774, -0.5112655, -0.98467463, -0.09956719, 0.54331183, 0.33574754, 0.12223533, -0.39803007, 0.10476131, 0.45395207, 0.2930837) * inp_1_1_1;
    result2 += M4(0.043404836, 0.058268476, -0.26635423, 0.024883015, 0.20456325, 0.058345303, 0.3906758, -0.43996924, -0.2737115, 0.10713308, -0.29695228, 0.016095048, 0.33840877, 0.29828292, -5.9897113, 0.26870337) * inp_1_2_1;
    result2 += M4(0.13302091, -0.23660222, 0.05611541, -0.24255504, -0.009106589, 0.0056859264, -0.017375497, -0.1264053, -0.1253522, -0.04121688, -0.2194707, -0.19629218, -0.02496036, 0.038468804, 0.062986836, -0.05941156) * inp_1_0_2;
    result2 += M4(-0.036607515, 0.42029122, 0.5961263, -0.27856198, 0.10394625, 0.058939513, 0.30703437, -0.3734526, -0.046158243, 0.13203384, -1.962474, 0.09063432, -0.16610953, -0.13316466, -0.2738179, 0.30557895) * inp_1_1_2;
    result2 += M4(-0.0690266, 0.09605293, 0.029564884, -0.14762829, 0.17820612, 0.02325047, -2.4687045, -0.3617334, -0.15045479, -0.036734797, 0.25770155, 0.0037446546, -0.16184445, -0.121061824, 0.209184, 0.35404128) * inp_1_2_2;
    result3 += M4(-0.057582084, 0.010579481, -0.11033388, -0.15688284, 0.056649532, 0.03967973, 0.045430142, 0.005301902, -0.06187852, -0.047267538, -0.031110603, -0.08742358, -0.09868793, 0.005638544, -0.026110794, 0.039042268) * inp_1_0_0;
    result3 += M4(0.19889747, 0.065704435, 0.018760195, 0.055276774, 0.12814635, 0.044372957, 0.08603806, -0.10309813, -0.16885795, 0.055805184, -0.009927294, -0.031555, -0.13466164, 0.071970575, 0.06643185, -0.0067799673) * inp_1_1_0;
    result3 += M4(-0.80132836, 0.10381833, 0.04170861, -0.14964822, 0.12861493, -0.002249646, 0.069185704, -0.078992985, -0.49748188, -0.09594667, -0.014200474, -0.2514153, -0.62114936, -0.26363316, 0.033021025, -0.029554285) * inp_1_2_0;
    result3 += M4(0.08495025, -0.66136694, 0.09873018, 0.040203396, 0.0004864886, 0.1602104, 0.001018598, 0.04583269, 0.04409629, -1.0445532, 0.053663302, -0.045977622, 0.045186594, 0.051597584, 0.024230445, -0.11972715) * inp_1_0_1;
    result3 += M4(0.57805496, 0.4209978, 0.06667493, -0.40058288, 0.01788866, -0.29410434, -0.02883101, 0.023939969, -0.13456361, -1.0095072, -0.16408108, 0.105857365, 0.24652074, 0.3933207, -0.011430358, 0.023092978) * inp_1_1_1;
    result3 += M4(-0.000609573, -0.086910255, -0.08038667, 0.09564906, 0.273119, 0.1435871, 0.035839736, 0.032177802, -0.16619906, -1.4146489, -0.012075004, -0.22732975, -0.13228656, -0.78848755, 0.029073583, -0.23056501) * inp_1_2_1;
    result3 += M4(-0.107913665, 0.9386867, 0.047217753, 0.0040569743, 0.009131493, -0.91435057, -0.011876503, 0.019966995, 0.009487517, 0.61573076, 0.02226786, -0.0031108218, 0.014990302, 0.0046500117, 0.038173918, 0.034042656) * inp_1_0_2;
    result3 += M4(0.24574201, -1.6721351, -0.023707978, 0.21000859, -0.1013578, -1.0105098, 0.055201255, 0.013826413, 0.062367, 0.8067094, -0.0035952644, -0.060954623, -0.028754454, -1.9822749, -0.0034498512, 0.048576135) * inp_1_1_2;
    result3 += M4(0.044915304, -0.20666927, 0.024175674, -0.033405274, 0.011950104, 0.576294, -0.06182913, -0.047597528, 0.009625576, -2.4519725, 0.06904944, -0.021605864, -0.03599355, -1.4124287, 0.020136032, 0.111990936) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.054158986, 0.025421638, 0.036259566, 0.046592504, -0.31720242, 0.020658547, 0.2509638, -0.049133897, -0.085711055, -0.0890123, 0.017291646, 0.020629963, 0.025000596, -0.116218135, -0.014513572, 0.0312519) * inp_2_0_0;
    result0 += M4(0.0441331, -0.38938516, -0.0048243394, -0.012935292, -0.27486292, 0.31585303, -0.23017693, -0.06787342, -0.056512937, -0.09965521, -0.023470802, 0.0021047755, 0.029578974, -0.030068861, 0.034782913, 0.02210041) * inp_2_1_0;
    result0 += M4(-0.0013280326, 0.030915147, 0.031511456, -0.00034288777, -0.08695788, 0.09202329, 0.07237014, -0.028621977, -0.027577149, 0.014795474, 0.0012059313, 0.029868195, 0.061410822, -0.11463294, 0.038744975, 0.0037491384) * inp_2_2_0;
    result0 += M4(-0.17315121, 0.26288375, -0.0016232796, 0.0642479, 0.16983135, 0.18205893, -0.11942262, 0.66231155, -0.041846845, 0.08855976, -0.0031734982, 0.005289703, 0.029241374, -0.09104192, -0.025689278, -0.014404481) * inp_2_0_1;
    result0 += M4(0.85577947, -0.45881653, 0.23301059, 0.030523982, 0.38918564, -0.28778476, 0.34779814, 0.14097425, -0.059312545, 0.11295153, -0.08405115, -0.11309271, 0.12036935, -0.49131075, 0.013722414, -0.027396668) * inp_2_1_1;
    result0 += M4(0.8988627, -0.04667418, -0.039019767, -0.079810806, 0.0023839918, -0.0243714, -0.035920262, 0.122464366, -0.0106032975, 0.027758377, -0.04192558, -0.015924282, 0.31015515, -0.41253394, -0.04510903, -0.019816583) * inp_2_2_1;
    result0 += M4(-0.105980106, 0.1240806, -0.08494738, 0.03559693, 0.12387017, 0.3892978, 0.27549, 0.059783526, 0.04154889, 0.046590757, 0.06227313, 0.0324203, 0.16371717, -0.121441595, 0.05867527, 0.04518491) * inp_2_0_2;
    result0 += M4(-0.39472312, -0.15856278, 0.10632091, 0.009541087, -0.28521535, -0.08332453, -0.13323069, -0.15064968, 0.22297168, -0.033066627, 0.05952653, -0.029215418, 0.022079207, -0.38337097, 0.17415798, 0.1645248) * inp_2_1_2;
    result0 += M4(0.39996558, 0.03294477, -0.04969933, 0.03429824, -0.008299954, 0.057755135, 0.06811823, -0.002478869, -0.16384882, -0.058469467, 0.00014533859, -0.0051010493, 0.6696142, -0.02922823, 0.17277835, -0.01903537) * inp_2_2_2;
    result1 += M4(-0.073276035, 0.06598589, -0.10309778, -0.147392, 0.37366027, 0.044426493, -0.12133393, 0.92848206, -0.12156837, 0.17092527, 0.05269733, -0.008352986, -0.021193415, 0.027951589, 0.018778902, -0.18946654) * inp_2_0_0;
    result1 += M4(-0.13934056, -0.45327175, 0.12348874, -0.16009079, -0.4283711, 0.33461046, 0.054176558, 0.993753, -0.22970173, 0.16883668, 0.09165044, -0.09697197, -0.01508339, -0.19018675, 0.012716581, -0.1753859) * inp_2_1_0;
    result1 += M4(0.10131503, -0.08465967, 0.08739096, 0.1969739, 0.20606053, -0.04601885, -0.06956303, 0.35820863, -0.22190635, 0.27718386, 0.17167705, 0.047472816, 0.047407296, 0.25056532, -0.0023920706, -0.31662136) * inp_2_2_0;
    result1 += M4(0.18838976, -0.22990692, 0.059404675, -0.24790052, 0.19351113, 0.6221091, 0.34948498, -0.5812704, -0.1501219, 0.18422288, 0.115437135, 0.13142239, -0.18319021, 0.024244647, 0.104051225, -0.14922908) * inp_2_0_1;
    result1 += M4(0.23629235, 0.9377641, -0.30585742, -0.8252383, 0.0298136, -0.55489326, 0.15804805, -1.934712, -0.05741499, 0.06362593, 0.08181577, 0.24180478, -0.014805029, 0.32933518, -0.010519951, -0.17877562) * inp_2_1_1;
    result1 += M4(-0.09593554, 0.054858543, 0.13334012, 0.32079285, 0.06784707, 0.15843622, -0.021740118, -0.25257555, -0.12940517, 0.23800994, 0.24140617, 0.12790434, -0.25643063, 0.21813683, -0.004133558, -0.7232695) * inp_2_2_1;
    result1 += M4(0.096479766, -0.069055855, -0.044957653, -0.2362438, -0.1836271, -0.019022359, 0.17164034, 0.6750322, 0.0038725766, 0.18850546, 0.05402546, 0.24648719, -0.062708154, 0.14696884, 0.044865865, -0.13065857) * inp_2_0_2;
    result1 += M4(0.06024562, 0.07627679, -0.083700694, 0.74425024, 0.26658136, 0.7435217, 0.1440017, 0.4688851, -0.022453807, 0.21205458, 0.008088935, -0.024142759, 0.09392595, 0.11164226, 0.15999049, -0.30237484) * inp_2_1_2;
    result1 += M4(0.015125943, 0.0830522, 0.03237819, -0.46097428, -0.022062043, -0.082510635, 0.038234483, -0.13056557, 0.04226381, 0.35730496, 0.07599062, 0.13979243, -0.03240389, 0.20968322, -0.04365586, -0.76461834) * inp_2_2_2;
    result2 += M4(0.31414032, 0.028889727, 0.07233036, 0.047972158, -0.13505764, -0.004678738, 0.139828, 0.11716964, 0.034130525, 0.15408932, 0.17430161, -0.020074654, -0.12783343, 0.07992027, 0.036238097, 0.12649556) * inp_2_0_0;
    result2 += M4(-0.051493917, 0.375772, 0.3744588, 0.05642052, 0.2629548, 0.09805705, 0.26142225, 0.11145245, -0.11792332, 0.18507683, 0.22125837, -0.044020373, -0.028607799, 0.062132906, 0.009970393, 0.08279125) * inp_2_1_0;
    result2 += M4(-0.19054742, 0.34448892, 0.17871314, 0.10744193, 0.04106452, 0.0564569, -0.035198297, 0.0054956777, -0.028163817, 0.26845607, 0.16280304, -0.069233544, -0.029704275, 0.07479528, 0.01071269, 0.040006068) * inp_2_2_0;
    result2 += M4(0.09872504, 0.0020019098, -0.16091862, -0.07613614, -0.15301332, -0.19301328, 0.114818186, 0.25074828, 0.000707596, 0.063472, 0.13020195, -0.22214441, -0.27442417, 0.078516774, 0.01057952, 0.039435163) * inp_2_0_1;
    result2 += M4(-0.43457443, 0.35491952, 0.35079667, -0.30149087, 0.02477758, -0.45347786, 0.23885037, -0.12420238, -0.020085372, 0.10620505, 0.13496096, -0.30068806, -0.5726048, 0.12990232, 0.07120059, 0.02568386) * inp_2_1_1;
    result2 += M4(-0.048707265, 0.028173923, -0.29904643, 0.018332234, 0.056508977, -0.008070911, -0.0885825, -0.10273479, -0.19077456, 0.1066221, 0.38013458, -0.12977783, -0.1665767, 0.2083713, 0.04960852, -0.12978837) * inp_2_2_1;
    result2 += M4(0.20840028, 0.06594989, 0.13856445, 0.18714522, -0.11525649, 0.10819205, 0.52708733, 0.32790303, -0.09682977, 0.038787007, 0.13246599, 0.025469637, -0.15489073, 0.073607996, -0.032023598, 0.12597121) * inp_2_0_2;
    result2 += M4(-0.28255287, 0.29990444, 0.5378609, -0.14266062, -0.39636984, 0.120025635, -0.51427925, -0.18877032, -0.06138859, 0.061676104, 0.12876576, -0.37662783, -0.6458232, 0.19105233, 0.29337105, 0.296476) * inp_2_1_2;
    result2 += M4(-0.07424355, -0.05952952, -0.043208767, -0.008920363, -0.038557004, 0.021954603, 0.3120758, 0.120060064, 0.1645427, 0.14919841, -0.1299975, -0.27886698, -0.44483933, 0.061884508, -0.072558545, 0.21417297) * inp_2_2_2;
    result3 += M4(-0.012897378, -0.022845656, 0.020804284, 0.04278207, -0.1117916, -0.021763917, 0.06887392, 0.15191959, 0.030026166, -0.022626353, 0.026037578, -0.004352504, 0.022341717, -0.01843858, -0.00093739585, -0.06309032) * inp_2_0_0;
    result3 += M4(-0.12654094, 0.114738084, 0.0031171374, -0.16958813, 0.10568304, 0.2172582, -0.08757326, 0.13497247, 0.063512035, -0.015340012, 0.0011998075, -0.08880514, 0.009506048, -0.02817956, 0.018484417, -0.027892092) * inp_2_1_0;
    result3 += M4(0.0018707655, -0.039323106, -0.032406386, -0.21195589, 0.04872211, -0.047909047, 0.05158145, -0.08484629, 0.07210147, -0.013209359, 0.027630808, 0.0552259, 0.009796033, -0.014840258, 0.028341351, -0.009191993) * inp_2_2_0;
    result3 += M4(0.019709628, 0.25532603, 0.015750393, 0.026884343, 0.10521042, 0.11886019, 0.2240856, 0.4424268, -0.029204037, 0.07921883, -0.013836554, 0.058818493, -0.041158672, -0.012349971, -0.057545498, 0.005789463) * inp_2_0_1;
    result3 += M4(0.27571765, 0.2657433, 0.3717203, 0.29107562, 0.2605082, 0.20496218, 0.19599956, -0.034471747, -0.066175066, 0.059459027, -0.10079687, -0.08617193, 0.06723189, -0.033456758, 0.011397491, -0.13995107) * inp_2_1_1;
    result3 += M4(0.21433415, 0.2337001, 0.0071424856, -0.04161897, 0.071747735, 0.052065607, -0.0015379261, 0.16328976, -0.027997121, -0.104432836, -0.0046047154, 0.08569932, 0.002967818, 0.04768973, -0.040549614, 0.105281256) * inp_2_2_1;
    result3 += M4(-0.00059969036, 0.08168668, -0.057628784, -0.09526919, -0.28660506, -0.59901756, -0.06443822, 0.14913896, 0.0025772755, 0.012089991, 0.03604881, -0.035721086, -0.023357306, 0.05495481, 0.028457426, -0.015068149) * inp_2_0_2;
    result3 += M4(-0.029464599, -0.69168615, 0.09293106, 0.024228122, 0.13439806, -0.8241204, 0.03443662, 0.094872035, 0.03989452, 0.30588663, 0.010185236, -0.1136961, 0.075933315, -0.36107594, 0.2280707, -0.07090848) * inp_2_1_2;
    result3 += M4(0.08235717, -0.53877205, 0.04298718, -0.071005814, 0.016337039, -1.2672939, 0.036518775, -0.017862525, 0.08338698, 0.05994245, -0.009631081, -0.20087163, 0.063564345, -0.7933114, 0.062189665, -0.09703346) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.12459661, -0.22621614, -0.03309323, 0.053470835, -0.012671189, 0.44812423, -0.06210605, 0.09287978, -0.02588487, 0.07394207, 0.078875735, 0.018309416, 0.14835967, -0.07567509, 0.06147919, 0.003988145) * inp_3_0_0;
    result0 += M4(0.079721786, -0.28039858, 0.077661134, 0.073891886, 0.47029293, -0.51183, -0.033134487, -0.12150736, -0.13579199, 0.32825285, 0.0381212, 0.019896772, 0.16666535, -0.12980835, -0.09330015, -0.022572188) * inp_3_1_0;
    result0 += M4(0.014644939, -0.028685965, -0.012821549, 0.01086465, -0.37809724, -0.3394613, -0.13197361, -0.04889019, -0.20224032, 0.21598308, 0.0114867445, 0.051646084, 0.08853929, -0.09052743, 0.030844199, -0.02611852) * inp_3_2_0;
    result0 += M4(0.040161714, -0.8147108, 0.21762949, -0.5032748, 0.13500205, 0.16410674, 0.0154175265, 0.031683702, -0.34954786, 0.14317341, -0.01934777, 0.0016459827, -0.011526904, -0.12113047, 0.013073402, -0.07115581) * inp_3_0_1;
    result0 += M4(-0.08257558, 0.52080154, 0.07792379, 0.07294998, -0.0038404595, -0.25678056, 0.27466255, 0.080616444, -0.29795754, -0.0070763677, 0.11510452, 0.10300111, -0.37185597, -0.093806796, 0.13749433, 0.56951064) * inp_3_1_1;
    result0 += M4(0.21589437, 0.14321332, -0.025328213, -0.044152897, 0.131967, -0.022569425, 0.01396254, 0.039482728, -0.3374596, 0.17880185, 0.06008128, 0.040555716, -0.21413417, 0.049173582, -0.0057638213, -0.10343994) * inp_3_2_1;
    result0 += M4(0.009581809, 0.32940918, -0.018932726, -0.092404015, 0.10144497, 0.34337524, -0.10358546, -0.05636958, -0.1749117, -0.01182894, 0.020182256, 0.033031885, -0.069124706, 0.030708669, 0.0012854032, 0.031663656) * inp_3_0_2;
    result0 += M4(-0.5505688, 0.31967524, -0.03490054, 0.022741377, 0.024781086, 0.10405293, -0.046478666, -0.0409665, -0.22040537, -0.00012755948, 0.09594475, -0.012043888, 0.17962918, 0.01026152, -0.001948495, 0.010585765) * inp_3_1_2;
    result0 += M4(-0.1464497, -0.07593126, -0.018035822, 0.019903503, 0.023618327, -0.04975961, -0.064310625, -0.0030426122, -0.24236684, 0.2000934, -0.007327705, 0.03690436, 0.31089872, 0.13097748, 0.07020039, 0.08862715) * inp_3_2_2;
    result1 += M4(-0.042344276, 0.16481782, 0.13529386, -0.02297276, -0.0102447765, 0.14795329, 0.24823868, -0.20003566, -0.046080966, 0.30507144, -0.07229143, 0.1326233, 0.12029982, 0.08355405, -0.013787089, -0.07258874) * inp_3_0_0;
    result1 += M4(-0.10651993, -0.95881534, -0.07844665, -0.38843206, -0.082265325, 0.24415225, -0.4528708, -0.37408218, 0.0017252336, 0.055926654, -0.044229485, -0.04167798, -0.01585669, -0.0015155714, -0.21607865, -0.4977014) * inp_3_1_0;
    result1 += M4(0.0044848104, -0.049638517, 0.08080983, -0.24297185, 0.10854594, 0.09392439, 0.27452156, 0.11913005, -0.0032208427, 0.30658647, 0.08435552, 0.30196998, 0.45480987, -1.1258488, -0.17422408, -0.25006235) * inp_3_2_0;
    result1 += M4(0.08350208, -0.07159451, -0.036619727, 0.50307137, 0.12845095, -0.09684281, 0.03930851, -0.07909851, 0.0369657, 0.017474469, -0.03167243, 0.053064264, 0.05624005, 0.07761199, -0.03204071, -0.04667293) * inp_3_0_1;
    result1 += M4(0.20978458, -1.605204, 0.60929096, 0.38868612, 0.054807972, -0.06181629, 0.0047619417, -0.20034607, 0.2201109, 0.32933196, -0.10040618, -0.08729946, -0.47278377, -0.55026114, 0.6841974, 0.235268) * inp_3_1_1;
    result1 += M4(0.06711554, -0.43075424, -0.062225424, -0.45211327, 0.054515745, 0.4812016, -0.009011443, 0.12962438, 0.12752907, 0.13939796, 0.13126452, 0.68037456, 0.06827076, -1.8565731, -0.14708264, -1.360513) * inp_3_2_1;
    result1 += M4(-0.18554989, -0.3068674, -0.05237699, -0.60997885, 0.00846006, 0.020332208, 0.014968571, -0.0052417535, 0.017703068, 0.10439348, 0.063814715, -0.025372934, -0.12712532, 0.007947494, 0.050581984, 0.07239129) * inp_3_0_2;
    result1 += M4(-0.13004918, 0.2781265, 0.51862556, -0.047446344, 0.10815092, 0.102326505, -0.07357612, -0.13458896, 0.08756159, 0.2243338, -0.0033647418, 0.10531597, 0.12160249, 0.21546017, 0.12797825, -0.49856028) * inp_3_1_2;
    result1 += M4(0.0006263088, 0.041592363, -0.021167707, -0.13500348, 0.10098276, 0.3524249, 0.06959796, 0.083626084, 0.11911532, 0.26326197, 0.059782255, 0.24744406, -0.0060385955, -0.26277015, -0.05897287, -0.81393075) * inp_3_2_2;
    result2 += M4(-0.062329613, -0.3214277, 0.029827053, 0.12624627, -0.15079895, -0.0134620285, -0.01585805, 0.1580255, 0.15498422, -0.022525856, 0.1441771, -0.052280962, -0.12116783, -0.03679322, -0.051318716, -0.071257584) * inp_3_0_0;
    result2 += M4(-0.028606832, -0.15455103, -0.20243767, 0.1313067, 0.31762174, 0.2007647, 0.029109653, -0.2126421, 0.17103447, -0.11178006, 0.090871505, -0.113679014, 0.0122481985, 0.0691569, -0.28180945, -0.14388017) * inp_3_1_0;
    result2 += M4(0.051563807, -0.0038676017, 0.04193392, 0.010542597, 0.026957434, -0.284201, -0.039456766, 0.049242187, 0.11405129, -0.05447459, 0.03136478, -0.0030354562, -0.22756223, -0.1787332, -0.060463313, -0.15795293) * inp_3_2_0;
    result2 += M4(0.28315234, -0.05780307, 0.021431493, 0.044374246, 0.031849112, 0.064748816, -0.07669627, -0.063340865, 0.049888283, -0.121927865, 0.11537658, -0.488846, 0.10789086, 0.056058418, -0.0073798522, 0.113157116) * inp_3_0_1;
    result2 += M4(0.1417424, 0.25989723, 0.03977898, 0.16101378, -0.17207639, 0.12204764, 0.5881645, 0.013459871, 0.55237883, -0.4384631, -0.027469577, -0.15566044, 0.040762678, -0.03917002, -0.024327256, 0.16873327) * inp_3_1_1;
    result2 += M4(-0.13925675, -0.028291205, 0.15323439, 0.0991621, -0.058249656, -0.13846083, -0.15486087, 0.2068888, 0.23139459, -0.07473886, 0.0798953, -0.047301974, -0.027144523, -0.04491643, 0.041291576, 0.2574313) * inp_3_2_1;
    result2 += M4(0.42754444, -0.34539172, -0.36378637, 0.09651416, 0.033932645, 0.088226974, 0.14879672, -0.09613518, 0.111033976, -0.049639754, 0.125359, 0.086807065, 0.04777486, 0.04544366, -0.04095721, 0.0691017) * inp_3_0_2;
    result2 += M4(0.125959, -0.3920176, 0.37787548, 0.11413341, 0.015633222, 0.103672676, 0.10924593, -0.14723267, -0.05932088, 0.041647755, 0.5746332, -0.2265637, 0.14713389, 0.07287742, -3.5439262, -0.016141111) * inp_3_1_2;
    result2 += M4(0.08006195, 0.018584719, -0.10185263, -0.071179055, -0.037723992, -0.09707405, 0.24872884, 0.0052931416, 0.137854, -0.104732394, 0.08533092, -0.052586176, 0.28290424, -0.21417867, 0.18274036, -0.0794415) * inp_3_2_2;
    result3 += M4(0.0049245893, -0.026098758, 0.021129692, 0.08731043, -0.017203027, 0.027194649, -0.04152715, -0.085439116, 0.036167093, 0.054775342, 0.04325366, 0.014904429, -0.0152446665, 0.011974392, 0.05217132, 0.0019320893) * inp_3_0_0;
    result3 += M4(-0.08089943, 0.017191354, -0.023004431, 0.04312717, 0.12306837, 0.18720454, 0.1119819, 0.26382095, 0.018367724, -0.02789354, 0.041661423, 0.11063951, 0.030804528, 0.023001764, -0.014116066, -0.029017944) * inp_3_1_0;
    result3 += M4(0.07222548, 0.007100481, -0.009945893, 0.030906828, 0.030578954, -0.16279876, -0.06407596, 0.37630233, 0.08886442, -0.006715313, 0.02186457, 0.021764372, -0.020920537, 0.024371002, 0.008852901, 0.013053365) * inp_3_2_0;
    result3 += M4(-0.32577717, -0.12737992, 0.30753753, 0.018516794, -0.014599371, -0.2457022, -0.010197195, -0.06778698, 0.034221627, 0.03903371, 0.02720417, 0.09030508, 0.06992877, -0.014225898, 0.08399048, 0.048699886) * inp_3_0_1;
    result3 += M4(0.099205144, 0.12046618, -0.10972996, 0.50951046, 0.045647208, 0.34022114, 0.14466135, -0.37238052, 0.05418491, 0.035103735, 0.04511561, 0.13962317, -0.13719127, -0.2637605, -0.10669899, 0.26552603) * inp_3_1_1;
    result3 += M4(-0.07823767, -0.023054896, 0.056515608, -0.07055992, -0.27720362, -0.13969763, 0.012011654, -0.18953167, 0.07390177, -0.017522432, 0.062481854, 0.0313626, -0.7421753, 0.069767855, 0.16217668, -0.39960223) * inp_3_2_1;
    result3 += M4(-0.0818431, 0.10603441, 0.014890735, -0.029811678, -0.014452466, 0.37868908, -0.07184994, -0.14316748, 0.039092775, 0.26028696, 0.03173832, 0.055172443, -0.056772977, 0.21277802, -0.02643681, 0.11139342) * inp_3_0_2;
    result3 += M4(0.014871923, 1.133595, -0.059405454, 0.16789289, -0.054414414, -1.3574561, -0.12562236, -0.1164721, 0.0345305, 0.02802016, 0.0046861907, 0.1501661, 0.013592271, -1.4217702, 0.074388094, 0.11369157) * inp_3_1_2;
    result3 += M4(0.09384935, 0.17315863, 0.017327419, -0.017236644, 0.025221279, 0.44881922, 0.02715769, -0.13886768, -0.017145533, -0.49116653, 0.023878781, 0.16231547, -0.07151881, -1.8273342, 0.030065184, 0.021794774) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0024765125, -0.034769677, -0.014288544, -0.009119367);
    V4 result1 = V4(-0.026554955, 0.0013473993, 0.003265398, 0.03325971);
    V4 result2 = V4(0.007410261, 0.005544957, -0.037300464, 0.017025232);
    V4 result3 = V4(-0.022887753, -0.009999014, 0.017479174, 0.0021836977);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10772714, -0.29926687, 0.33955663, 0.0610092, 0.12086325, 0.015523584, 0.10025161, -0.0114463605, 0.083472654, -0.12647605, -0.10394478, -0.015628405, 0.106085695, 0.14914687, 0.072227575, -0.047018595) * inp_0_0_0;
    result0 += M4(-0.421145, -0.5253569, 0.11113152, -0.16231902, -0.057955436, -0.08363951, -0.13039376, -0.062083755, -0.06679977, 0.12571225, -0.50916165, 0.1582101, -0.18069744, -0.42126447, 0.14506742, -0.31863722) * inp_0_1_0;
    result0 += M4(-0.32648826, -0.106289215, -0.0086695235, 0.038595, -0.031447567, 0.040129144, -0.015846934, -0.015938014, -0.24520478, -0.0808389, -0.11179584, -0.11850821, 0.037362773, -0.11316714, -0.012306016, 9.229615e-05) * inp_0_2_0;
    result0 += M4(-0.25325093, 0.094013296, -0.2492475, -0.045230247, 0.07371938, 0.084684126, -0.217056, 0.2700416, 0.020438686, -0.13895887, -0.030328473, -0.030866977, -0.07188475, -0.13259645, 0.017564755, 0.28357545) * inp_0_0_1;
    result0 += M4(-0.013635558, 0.260558, -0.34553093, -0.11400042, 0.005589405, 0.12959272, 0.27014938, -0.094182864, -0.16520777, 0.02144711, 0.50864273, -0.18100283, 0.0565042, 0.32915896, 0.38216805, -0.38992757) * inp_0_1_1;
    result0 += M4(0.11444449, 0.117141806, -0.13192223, -0.03410229, -0.18241093, -0.12163632, 0.15345511, -0.085330255, -0.16254134, -0.19381426, 0.010216484, -0.059079308, 0.086392246, 0.09952806, -0.073861375, 0.2902552) * inp_0_2_1;
    result0 += M4(0.0021590902, -0.01192734, -0.23848473, 0.023318622, 0.0145129915, -0.06929044, 0.35095075, 0.08848916, -0.07900455, -0.07931535, 0.053664032, -0.099967174, -0.17507713, 0.12487729, -0.07622665, 0.07721731) * inp_0_0_2;
    result0 += M4(-0.026528133, -0.033145275, -0.19871886, -0.05027549, 0.15260074, 0.08450814, -0.20239966, -0.06354872, 0.13905193, 0.00030865512, 0.03658286, 0.060321152, -0.045730792, 0.0705845, -0.46379918, 0.021381894) * inp_0_1_2;
    result0 += M4(-0.097789176, -0.044969924, -0.15432838, -0.049161784, 0.2115998, 0.19647922, -0.014510042, -0.0757958, 0.119527854, 0.026376918, 0.011507914, 0.013748116, -0.23212293, -0.19795989, -0.20864129, -0.07114449) * inp_0_2_2;
    result1 += M4(0.3938387, 0.024417773, -0.054410834, -0.2877658, -0.0062613836, 0.038802285, -0.013709263, -0.052029535, 0.06384328, -0.006371415, 0.022560444, -0.0838132, 0.026119258, 0.012945808, -0.03701159, -0.15764731) * inp_0_0_0;
    result1 += M4(0.18906331, 0.005207598, -0.034698103, 0.101450115, 0.2310222, -0.011540457, 0.013781661, -0.052175328, -0.080323555, 0.017617356, -0.013957865, -0.108506694, -0.04600491, 0.034687106, 0.038006455, 0.040782876) * inp_0_1_0;
    result1 += M4(-0.030736178, -0.036932267, -0.004673359, -0.04497306, 0.14678362, 0.027012808, -0.021697236, -0.23230478, -0.04252259, 0.041039668, -0.023329863, -0.149357, 0.04194642, 0.0010629303, 0.0040572966, 0.25462693) * inp_0_2_0;
    result1 += M4(-0.3450321, -0.06730477, -0.1284733, -0.01180286, 0.106825784, 0.039407015, 0.116342545, 0.4134929, -0.05870246, 0.105235726, 0.09201027, -0.11713438, 0.024286086, 0.00056024984, -0.034311187, 0.0029462194) * inp_0_0_1;
    result1 += M4(-0.37275842, 0.07081053, 0.04010201, -0.061437886, 0.013586942, -0.08120181, -0.06410152, 0.27245545, -0.05283649, 0.36541972, -0.021301009, -0.0734082, 0.017038783, 0.39852282, -0.09577455, -0.21527936) * inp_0_1_1;
    result1 += M4(0.012028783, 0.002080698, 0.030496955, 0.006633421, 0.019833652, -0.021268278, -0.0008702802, 0.10091987, -0.1502513, -0.004097367, -0.045071457, 0.2950914, 0.22815454, 0.06269911, 0.0439241, -0.45970264) * inp_0_2_1;
    result1 += M4(-0.09065247, -0.063441426, -0.06694673, 0.19614168, 0.047277533, 0.015745701, 0.15470281, -0.51977587, -0.08481024, 0.05885859, 0.086001635, 0.00073863287, 0.031756558, -0.06941204, -0.09639947, -0.2770818) * inp_0_0_2;
    result1 += M4(-0.07947891, 0.033640154, -0.0296303, -0.041667406, 0.18308926, 0.05252914, 0.01692632, 0.20627213, 0.07860947, 0.0005312877, 0.02758198, 0.0900559, -0.1928789, 0.023306422, -0.14505555, 0.36467263) * inp_0_1_2;
    result1 += M4(-0.09913187, -0.0017269792, 0.024258237, -0.0029238588, 0.039548498, 0.05885496, -0.02937937, 0.17285734, -0.083384246, -0.0118997665, -0.089832686, 0.015010185, -0.21538036, 0.02401, 0.0905865, -0.30086246) * inp_0_2_2;
    result2 += M4(-0.12920643, -0.07214091, 0.047576252, -0.034274593, -0.0066315746, 0.17395297, 0.0034468942, 0.083427094, -0.015175513, 0.13436376, -0.08754464, 0.046999987, -0.0034468244, -0.010821499, 0.024728155, -0.10547719) * inp_0_0_0;
    result2 += M4(-0.1430616, -0.327637, 0.05766031, -0.08115876, 0.09152448, 0.03952385, 0.019599034, 0.114434406, 0.010283715, 0.08193843, -0.11429375, 0.122948535, 0.16102491, -0.11289769, 0.18521498, -0.07081713) * inp_0_1_0;
    result2 += M4(-0.116270505, 0.050485052, -0.034490343, 0.14066575, 0.037181936, 0.10138885, -0.030254027, 0.013286262, -0.1070176, -0.019026715, 0.014725282, -0.12567104, -0.015018939, -0.11066099, 0.023663944, -0.013408374) * inp_0_2_0;
    result2 += M4(-0.23320687, 0.54646116, -0.1727439, 0.0505564, 0.24712686, -0.17999151, 0.0016586069, -0.10648744, 0.053054877, -0.30361223, -0.06432018, -0.05412092, 0.13965668, -0.10110398, 0.026743462, -0.08412764) * inp_0_0_1;
    result2 += M4(-0.17618772, -0.07053838, 0.0950979, -0.12125152, -0.15850616, 0.40474468, -0.020023696, -0.21310408, 0.5203283, -0.35033202, -0.04963734, 0.001631346, -0.2780947, -0.2697263, 0.6861442, 0.08146237) * inp_0_1_1;
    result2 += M4(-0.07602289, 0.050454788, 0.021408185, 0.1099642, 0.02445515, -0.13222265, 0.05225363, -0.014970301, -0.0027332103, -0.12199022, 0.052044902, 0.015633704, -0.16194914, 0.21453014, -0.13838021, 0.27979496) * inp_0_2_1;
    result2 += M4(-0.17257164, -0.03983535, -0.039118633, -0.0070998226, 0.23487347, -0.06375696, 0.12600505, -0.0754239, -0.025335455, 0.06436302, -0.011151369, 0.010742469, -0.037205502, 0.032984708, -0.07135731, 0.15104075) * inp_0_0_2;
    result2 += M4(-0.060159124, -0.13562365, 0.046437442, -0.08512039, 0.051521704, 0.2948258, -0.04950147, -0.11331824, 0.08721011, -0.04465701, -0.001515704, 0.02682213, -0.16524969, -0.11671369, -0.05005946, -0.34701598) * inp_0_1_2;
    result2 += M4(0.0026589413, -0.015504883, -0.015757551, -0.0017351495, -0.03204779, 0.066874035, 0.08940988, -0.063965924, -0.016143668, 0.03691909, -0.06243637, 0.036917206, -0.18957807, -0.025629159, 0.12473469, -0.12673692) * inp_0_2_2;
    result3 += M4(-0.07584669, -0.10020084, 0.01770258, 0.035763156, 0.029962055, -0.02428076, -0.00048001917, -0.083932005, -0.017175272, -0.043265395, -0.027586164, 0.030203797, 0.04898194, 0.053255767, 0.026352514, 0.01758315) * inp_0_0_0;
    result3 += M4(0.10506503, -0.078512326, 0.01985732, 0.028361477, -0.07475108, 0.10557494, 0.021081882, -0.014130253, 0.06215861, 0.0019491757, 0.09371075, -0.058147598, -0.05589127, -0.045645792, -0.03889534, 0.07700143) * inp_0_1_0;
    result3 += M4(0.012843888, -0.3968177, -0.022814143, 0.15573692, 0.0042686625, 0.03968425, -0.014496317, -0.58144224, -0.061740797, -0.12735224, 0.04659901, -0.66610694, 0.014994016, -0.2543144, 0.01462353, -0.01230064) * inp_0_2_0;
    result3 += M4(-0.038300212, -0.49001166, -0.056321997, -0.07701941, 0.075614594, 0.41605502, 0.047479264, -0.048036754, 0.0059394236, -0.018727468, 0.16770056, 0.049449448, 0.07120413, -0.087923, 0.014952305, -0.036774103) * inp_0_0_1;
    result3 += M4(0.11020384, -0.37458807, 0.057232648, 0.04392017, 0.009337904, 0.06619571, -0.07221455, 0.07557712, -0.21620172, -0.27597362, 0.024190564, 0.038100414, 0.009887019, -0.38387346, -0.10974278, -0.08413336) * inp_0_1_1;
    result3 += M4(-0.0012261667, -0.059429895, -0.008461944, -0.07472092, -0.07056929, 0.0820129, 2.0027717e-06, 0.14153518, -0.047523588, -0.10130064, 0.08577293, 0.10329506, 0.198125, 0.17587061, -0.0411696, -0.2492392) * inp_0_2_1;
    result3 += M4(-0.0117221745, -0.11277764, 0.005437826, -0.07014407, 0.05926289, 0.16384259, 0.06610582, 0.06974387, -0.0059001558, -0.053020842, 0.06858796, 0.034700602, -0.00999738, -0.2186711, 0.0060790027, -0.03213925) * inp_0_0_2;
    result3 += M4(0.032475732, -0.2286221, 0.009044043, -0.026014239, 0.05302155, 0.37763062, -0.0142555125, 0.098256566, 0.013038386, 0.1236179, 0.082461715, 0.09375325, 0.06829363, -0.06670095, -0.21701902, -0.031178096) * inp_0_1_2;
    result3 += M4(-0.0032114326, -0.083656706, -0.0057493234, -0.06850752, -0.011873539, 0.06995507, 0.06078271, 0.021260867, -0.05800862, -0.19860603, -0.023520414, -0.036005408, -0.011021799, -0.15240686, 0.040493727, -0.0824266) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.008999491, 0.035355356, 0.030687174, 0.03456462, 0.16090156, 0.008981851, 0.1152216, 0.039258406, -0.15748934, -0.0008455463, -0.14376353, -0.060176045, -0.020527167, 0.19320571, 0.06925726, -0.023778621) * inp_1_0_0;
    result0 += M4(0.0042342795, -0.073300034, 0.2593059, -0.013462263, 0.03839448, -0.21373849, 0.13619503, -0.08419127, 0.046258442, 0.3519774, -0.25551426, 0.09872667, 0.004492728, 0.28288737, 0.4496375, -0.20895548) * inp_1_1_0;
    result0 += M4(0.03863955, -0.023105396, 0.05101257, -0.026697613, 0.016610825, 0.0022573776, -0.0056147836, 0.0058503523, 0.18669192, 0.18526646, 0.009080684, 0.12010251, 0.0045262403, -0.19022343, 0.015856303, -0.11337566) * inp_1_2_0;
    result0 += M4(0.16896492, 0.013921875, 0.11873361, -0.04399907, -0.16354604, -0.07320326, -0.12028653, -0.0040196255, 0.037269454, 0.048131324, 0.02595236, -0.23211382, 0.00025922005, 0.4381819, -0.19042993, -0.0996304) * inp_1_0_1;
    result0 += M4(-0.2005716, -0.46313602, -0.5879379, -0.09392995, -0.2152316, 0.0468074, -0.20560867, 0.10430345, 0.6512117, -0.19500852, -0.07210738, 0.014509941, -0.22891495, 0.48619434, -0.13176288, -0.07638004) * inp_1_1_1;
    result0 += M4(0.23865375, -0.33957034, -0.24902296, 0.22041892, -0.1495443, -0.12043458, 0.08733775, -0.31003958, 0.12180588, 0.12670161, 0.05508744, 0.2538814, 0.35706398, 0.1651885, 0.21591786, 0.081104) * inp_1_2_1;
    result0 += M4(0.12225312, 0.12717137, -0.0018141709, 0.017636139, -0.3367995, 0.033151083, -0.079066716, 0.019280119, 0.24506214, -0.078862384, 0.121397756, -0.027882477, 0.04697929, -0.1737188, 0.20864454, 0.10152229) * inp_1_0_2;
    result0 += M4(-0.14802459, 0.47085375, -0.02747776, 0.082067594, -0.37309942, -0.059370033, -0.048408285, -0.0311706, -0.12628822, 0.03330047, 0.49682975, 0.01823184, 0.17345561, -0.24922991, -0.014365849, -0.1036141) * inp_1_1_2;
    result0 += M4(0.057937715, 0.14615408, 0.12921242, -0.08108603, 0.16635668, 0.0705319, -0.25048393, -0.13362527, -0.057426732, -0.11913643, 0.24166198, 0.11221738, -0.16820823, 0.0999354, 0.0068636737, 0.066015385) * inp_1_2_2;
    result1 += M4(0.06354255, 0.02128871, 0.00961971, 0.28697374, 0.088066936, -0.02974387, -0.0026945185, -0.237871, -0.16273195, 0.05263861, 0.026139652, 0.27353272, 0.14329179, -0.040578492, -0.06850711, -0.27874503) * inp_1_0_0;
    result1 += M4(-0.039550204, -0.01649313, -0.050567854, -0.35539758, 0.06094846, 0.006178021, 0.013148173, 0.20877229, -0.27466664, 0.02643788, -0.025568495, 0.10976295, -0.16287555, 0.04296211, 0.018183902, -0.41804504) * inp_1_1_0;
    result1 += M4(0.019216927, -0.013983132, 0.00078233355, 0.11638875, 0.047640663, -0.02921884, 0.026500471, 0.0134480735, -0.05739808, 0.002641911, -0.008136405, -0.090559594, -0.14943075, 0.005708287, 0.0026474942, -1.0508584) * inp_1_2_0;
    result1 += M4(0.15177271, 0.011462675, 0.04876954, 0.26706186, -0.039454903, 0.026836548, -0.079941295, -0.06506403, -0.06021983, 0.03576913, 0.09256593, 0.24932663, 0.20065011, 0.051350906, -0.3453935, -0.592014) * inp_1_0_1;
    result1 += M4(-0.08888764, 0.19248918, -0.0241271, 0.1334533, 0.023414362, 0.04625424, -0.0036456613, -0.43016145, -0.039816234, -0.041557077, 0.041086107, 0.018392144, 0.6116637, 0.0020509881, 0.038328104, 0.25836962) * inp_1_1_1;
    result1 += M4(0.09568615, 0.01752751, 0.012256334, 0.21884142, 0.10464408, -0.016312378, 0.028977592, 0.14567345, 0.012778583, -0.0117425015, -0.05625083, 0.10607493, 0.09946098, -0.016553096, -0.011932676, -1.8747088) * inp_1_2_1;
    result1 += M4(-0.15932615, 0.041282315, -0.042884123, 0.31416804, -0.028159646, -0.034663696, 0.039365098, -0.26229027, 0.11533419, -0.008434856, 0.08314565, 0.1343614, 0.14015286, 0.049712747, 0.08514191, -0.3266808) * inp_1_0_2;
    result1 += M4(-0.02647383, -0.09542589, 0.020324, -0.37322482, -0.10116111, 0.0033627863, -0.07637392, -0.24285981, 0.4857251, -0.05017949, -0.035421222, -9.254852e-05, 0.08068009, -0.058956157, -0.14308456, -0.004694081) * inp_1_1_2;
    result1 += M4(0.014510162, 0.027256327, 0.0046992158, 0.06782942, -0.07136475, -0.006548739, 0.015775053, 0.1743859, 0.19974275, -0.03205029, -0.071003035, 0.3512036, 0.110000946, 0.050398402, 0.121376224, 0.057192713) * inp_1_2_2;
    result2 += M4(0.04244554, 0.017476868, 0.021938927, -0.04548713, 0.1187053, 0.065019324, -0.032193765, -0.086443245, -0.07817199, -0.035768397, 0.034616474, -0.026932245, 0.16596228, -0.08774217, -0.024896916, -0.031281367) * inp_1_0_0;
    result2 += M4(-0.068788335, 0.007523028, 0.01710069, -0.10317742, -7.88123e-05, 0.03241671, 1.956572e-05, -0.02695492, -0.14038531, 0.06776346, -0.05871242, 0.075051636, -0.06564996, 0.090168074, 0.006573768, -0.2430894) * inp_1_1_0;
    result2 += M4(-0.098240174, -0.061787456, -0.02295665, -0.0883816, 0.055588085, 0.0727705, -0.030104335, 0.09074673, 0.016810719, 0.036976825, -0.033284802, -0.048055507, 0.03760385, 0.15516248, 0.02127765, -0.108013056) * inp_1_2_0;
    result2 += M4(0.016053468, -0.039994717, 0.05200917, 0.1222716, -0.24357311, 0.20922808, 0.04127853, -0.1227852, -0.0922925, -0.10577857, 0.084072225, 0.07917285, 0.032247353, 0.60251033, 0.083470695, -0.25436586) * inp_1_0_1;
    result2 += M4(0.23499963, 0.016033214, 0.17410678, -0.01755359, -0.23681964, 0.3003132, 0.010878021, -0.24394935, 0.46843252, 0.03214671, -0.12651083, 0.38663745, 0.35209003, -0.024707027, -0.06606179, -0.19718924) * inp_1_1_1;
    result2 += M4(-0.009043681, -0.03171822, 0.0023493583, 0.16736194, -0.017859383, -0.0304811, 0.008435529, -0.0043850373, 0.11620156, 0.114817224, -0.068687536, -0.0430847, 0.027323386, 0.13582842, -0.03638236, 0.10298463) * inp_1_2_1;
    result2 += M4(-0.023099197, 0.032801617, -0.003617345, -0.095605604, -0.09179485, 0.1399309, -0.019119866, -0.038807034, 0.017083822, -0.048726782, 0.017285308, -0.19242671, 0.13249774, -0.25573534, 0.026080662, -0.1303309) * inp_1_0_2;
    result2 += M4(0.12914906, -0.023483587, -0.07058149, 0.12747146, -0.13948534, 0.057035208, -0.009016458, -0.061816663, 0.0488889, 0.05938249, 0.07978122, 0.12741213, -0.09758568, -0.13491818, 0.013147849, -0.35990492) * inp_1_1_2;
    result2 += M4(-0.02902927, 0.008414941, 0.022750251, -0.055727765, 0.045947045, 0.045377713, -0.008132111, -0.0003622032, -0.026425045, 0.06901775, -0.016441021, 0.16227227, 0.04424558, 0.12366757, 0.021583283, -0.17824069) * inp_1_2_2;
    result3 += M4(-0.006067757, -0.1118646, 0.0021881908, 0.04506328, 0.015579623, 0.12305772, -0.01817513, 0.12779647, 0.00828796, -0.07877019, 0.0044965288, 0.033842336, 0.015753413, 0.27006125, 0.06734461, 0.04430659) * inp_1_0_0;
    result3 += M4(0.006741053, 0.2392569, 0.005161747, 0.05110819, 0.024641093, 0.07130259, -0.012445867, 0.10824261, 0.04704431, -0.037484128, 0.016450584, -0.013610432, 0.043557227, -0.022491995, -0.07458457, -0.039288018) * inp_1_1_0;
    result3 += M4(0.017617, 0.110356875, -0.008479943, 0.030555574, 0.05156461, 0.10375238, -0.027354816, 0.13649699, -0.018694116, 0.10001706, -0.031073123, -0.26851398, -0.023469562, 0.13614565, 0.032784753, 0.19256501) * inp_1_2_0;
    result3 += M4(0.0074005676, 0.02917445, 0.07012248, 0.010795016, -0.03722138, 0.053329114, 0.010491489, -0.0045975796, 0.040772893, -0.13515687, 0.025029922, 0.06426263, -0.013180208, 0.22473791, -0.09007217, 0.099707805) * inp_1_0_1;
    result3 += M4(-0.016398093, -0.02890731, 0.055116616, -0.053324293, 0.025070695, -0.517788, 0.10493211, -0.26384655, -0.040368516, -0.036662735, 0.016534673, 0.0039717895, 0.11946384, 0.35238054, 0.1689167, 0.07814295) * inp_1_1_1;
    result3 += M4(0.10797597, -0.01248104, 0.013147515, -0.19149756, 0.056050602, -0.14857808, -0.014654984, 0.13217549, 0.10266475, 0.09766053, -0.048164513, -0.13138588, -0.096003845, 0.37156835, -0.04871973, -0.060770743) * inp_1_2_1;
    result3 += M4(-0.013923868, 0.15886773, -0.040055096, 0.022429232, 0.006929645, -0.8174041, -0.037417553, -0.04399754, 0.040816076, 0.27089122, -0.06789108, 0.05376942, 0.08138941, 0.1038615, 0.057558168, 0.056763455) * inp_1_0_2;
    result3 += M4(0.06505665, 0.02623136, 0.013903088, 0.029453767, -0.02955571, 0.24457225, 0.0176702, 0.079290316, -0.0041529806, 0.23513506, 0.0043146047, 0.023613779, 0.022372318, 0.41520342, -0.15066221, 0.028547648) * inp_1_1_2;
    result3 += M4(-0.07459868, 0.07212229, 0.01760562, -0.017767716, 0.0477228, 0.061112806, -0.020812778, 0.05673707, 0.030064194, 0.003177807, -0.034745492, 0.103903405, -0.020422272, 0.10442549, 0.033564895, -0.057126537) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.015948297, -0.1580167, 0.029547075, 0.004636864, 0.028741831, 0.28389508, -0.09517027, 0.11096862, 0.024677223, 0.2121816, 0.12502778, 0.11375631, -0.16673177, -0.19324365, 0.08593386, 0.20885128) * inp_2_0_0;
    result0 += M4(0.099587224, -0.12947936, 0.16990905, -0.015306403, 0.030824555, -0.11394094, 0.14681804, -0.030924626, -0.4145588, -0.5768582, -2.786961, -0.07991458, 0.13849653, -0.19556032, 0.078574605, -0.3531032) * inp_2_1_0;
    result0 += M4(-0.058989637, -0.4279991, 0.13742648, -0.037013933, -0.06587451, -0.002673824, 0.069657214, -0.12992094, -0.22519925, 0.043669082, -0.0639242, -0.3570577, -0.14240848, -0.122075304, 0.064322986, -0.08275412) * inp_2_2_0;
    result0 += M4(-0.030908184, 0.043524448, -0.052889805, -0.08134336, -0.22779262, 0.01188522, -0.019287812, 0.23943458, 0.19211979, 0.031791933, -0.13239132, -0.09415837, -0.011396891, 0.24801897, -0.082327835, -0.02302596) * inp_2_0_1;
    result0 += M4(-0.016408153, -0.010993055, -0.20865645, 0.16181514, -0.46713546, 0.05243684, 0.0006501378, -0.04155181, -0.3725763, 0.16481182, -0.253613, 0.10934289, -0.07667735, -0.14021777, -0.26651165, 0.063012436) * inp_2_1_1;
    result0 += M4(0.020640591, -0.025940806, -0.22552177, -0.24301454, 0.13656032, 0.17270605, 0.057299074, -0.20061979, 0.09091675, 0.10618503, -0.02589038, 0.061267946, 0.15432921, -0.31462044, -0.39933592, -0.0075903926) * inp_2_2_1;
    result0 += M4(0.121272996, 0.07694074, -0.11137528, 0.05428201, 0.024062423, 0.08284992, 0.20406602, 0.070069365, 0.15396969, -0.042866748, 0.14503856, 0.056461737, -0.0701903, 0.08241578, 0.07755539, -0.011202298) * inp_2_0_2;
    result0 += M4(-0.025619604, -0.021541173, -0.08369263, -0.049888864, 0.022948753, 0.17230663, -0.099858314, -0.15515438, 0.23382187, -0.057361085, 0.038606532, 0.02444877, -0.056826264, 0.16894905, 0.0027615495, 0.071508154) * inp_2_1_2;
    result0 += M4(-0.06681776, 0.06843082, -0.002049073, -0.08504131, 0.044985123, 0.045085184, -0.042475127, -0.110755034, 0.04713383, -0.02670894, 0.084003225, 0.003320478, -0.09311224, 0.24595302, -0.20900947, -0.05646925) * inp_2_2_2;
    result1 += M4(-0.12389518, 0.008763641, -0.019105544, -0.42487776, 0.1218003, 0.007234504, 0.00403668, 0.032042645, 0.17772186, -0.10227938, -0.23478512, -0.7469008, -0.05847953, 0.061026856, 0.08296369, 0.29562855) * inp_2_0_0;
    result1 += M4(0.10688678, -0.025816742, -0.03111987, -0.43618494, 0.17451487, -0.011946359, -0.00010845156, -0.224753, 0.2653318, 0.10434468, 0.08898027, -0.45111728, -0.24993847, -0.112158075, -0.066350125, -0.5323582) * inp_2_1_0;
    result1 += M4(0.13155349, -0.017785968, 0.08116734, -0.17551416, -0.015579881, 0.030410256, 0.024951553, 0.19959962, 0.24221745, 0.012357951, 0.07091596, 0.15397458, -0.09221941, -0.04839163, -0.03570306, 0.7923967) * inp_2_2_0;
    result1 += M4(-0.08052814, 0.01680182, -0.06659192, -0.09399073, -0.042112984, 0.060902137, 0.013424398, -0.1893813, -0.16250496, -0.07055056, -0.23246962, 0.18423152, 0.020998511, -0.025436072, -0.016542302, -0.4011041) * inp_2_0_1;
    result1 += M4(-0.40177727, -0.009005304, -0.15295792, -1.0525157, -0.08416631, -0.102940336, -0.05893196, -0.33479422, -0.57292765, -0.029798321, 0.035229996, -0.32129258, -0.20567262, 0.047895357, -0.10262907, 0.5744916) * inp_2_1_1;
    result1 += M4(-0.39856064, -0.008489392, 0.07850388, -0.5764192, 0.18525133, 0.02823123, 0.07273916, -0.4096164, -0.08084852, -0.013357787, 0.047641244, 0.266026, -0.036535706, 0.12792575, -0.0033426902, -0.27720776) * inp_2_2_1;
    result1 += M4(-0.044885565, -0.03207438, -0.064833865, -0.34676874, 0.16099982, 0.03636864, -0.00404439, -0.1742451, 0.18114883, -0.050958473, -0.065147124, 0.16281396, -0.051058426, -0.027751612, -0.004221972, 0.0075981105) * inp_2_0_2;
    result1 += M4(-0.16252749, -0.019491775, -0.009737115, -0.6187979, -0.07305018, 0.015420256, -0.18659562, -0.0787498, 0.08829562, -0.0377166, 0.00738152, 0.23837508, -0.079861715, 0.0063713077, 0.028497797, 0.26830247) * inp_2_1_2;
    result1 += M4(-0.05470636, -0.026314046, 0.054698482, -0.1907539, 0.04623804, -0.057230268, 0.15046628, -0.348211, 0.11702934, -0.043979622, 0.06493125, -0.04871815, -0.1481066, -0.075545944, 0.04489213, -0.18873078) * inp_2_2_2;
    result2 += M4(0.013840307, -0.10397427, 0.033117704, -0.09268056, 0.11157144, -0.021985222, -0.028288469, 0.052774895, -0.2525973, 0.3155242, -0.20297582, 0.096172325, 0.061960638, -0.14505817, 0.03121336, 0.07126138) * inp_2_0_0;
    result2 += M4(-0.01060803, -0.093075305, -0.085581586, -0.21314777, -0.039620593, 0.117556766, -0.029614266, 0.13467471, -0.56542, 0.30874813, 0.08932336, -0.30235642, -0.053162947, 0.28156307, -0.066204414, 0.16081633) * inp_2_1_0;
    result2 += M4(0.0060294895, -0.08346007, -0.0055624573, 0.033093765, 0.092130885, -0.018806739, 0.021644803, -0.053352542, -0.0032763947, 0.17637585, 0.027865728, -0.16777341, 0.09100077, -0.08928118, -0.019931845, -0.3026601) * inp_2_2_0;
    result2 += M4(-0.0422733, 0.04660762, 0.062662974, 0.13130553, 0.19466649, -0.0856439, 0.19098234, 0.08088978, 0.113257, 0.2555382, -0.04318066, 0.07808146, -0.09814572, 0.041105706, 0.004073574, 0.11178693) * inp_2_0_1;
    result2 += M4(-0.2825614, 0.17790656, -0.12218941, 0.012360408, -0.28553274, 0.16799597, -0.16758116, -0.12971511, 0.013016778, 0.3716811, -0.17399687, 0.15480135, -0.03777647, -0.067730576, -0.016699053, -0.1477233) * inp_2_1_1;
    result2 += M4(-0.10378515, -0.08807111, 0.06452813, -0.21575408, 0.031934593, -0.010607624, 0.025485767, 0.0444121, 0.058442526, 0.24551502, -0.056217097, 0.11864615, -0.25283694, 0.019916285, 0.10584767, -0.018789327) * inp_2_2_1;
    result2 += M4(-0.068409845, -0.0048767887, -0.02307588, -0.08036919, 0.093690775, -0.011743548, -0.00309931, 0.109293684, -0.010384264, 0.016136963, -0.044073526, -0.01851408, 0.079443686, 0.1519398, -0.030012649, 0.01071725) * inp_2_0_2;
    result2 += M4(-0.088148735, -0.048105676, 0.013432535, -0.074735634, 0.02727155, -0.08867343, 0.022542119, 0.06326604, -0.043921743, 0.0573982, 0.038408387, 0.019530686, 0.14796315, -0.01556959, 0.047948446, 0.090966456) * inp_2_1_2;
    result2 += M4(0.12623298, -0.11894325, -0.062423345, -0.05282355, -0.038860645, 0.0012672413, -0.031227766, 0.059660625, 0.04074921, 0.030104224, -0.027217627, 0.017269298, 0.15754767, 0.11046824, -0.11984644, -0.03708215) * inp_2_2_2;
    result3 += M4(-0.03821036, 0.04602125, -0.0048533883, 0.014155551, 0.022567712, 0.030604668, 0.022231562, -0.09920008, -0.06363912, 0.33998942, -0.07306628, -0.06482531, 0.069818795, 0.0058266674, 0.026554937, -0.056860663) * inp_2_0_0;
    result3 += M4(-0.008203914, 0.10451631, -0.013716749, -0.004829735, -0.064966194, -0.17290382, -0.0095079085, -0.19239968, 0.113737956, -0.4044889, 0.07775255, -0.41425878, -0.06552852, 0.08169797, -0.041456044, 0.07433173) * inp_2_1_0;
    result3 += M4(0.08154216, 0.17484756, -0.019098323, 0.18116097, 0.034552217, 0.019306814, 0.011247453, 0.25831985, 0.15628408, 0.19193214, 0.017859774, 0.34508365, 0.023211934, -0.04013317, 0.027227221, -0.09366371) * inp_2_2_0;
    result3 += M4(-0.035598442, -0.052271724, -0.0013604457, 0.0053151385, -0.018371213, -0.07655958, 0.064908236, 0.050063286, 0.0062656524, 0.5077587, -0.00535293, 0.03340884, -0.0135701485, 0.024420423, 0.011111336, -0.04300674) * inp_2_0_1;
    result3 += M4(-0.009420574, -0.0680569, 0.029312372, -0.18801795, 0.021629933, 0.0014389841, -0.06652604, -0.058302972, 0.10478647, -0.14141114, 0.058465526, 0.06939044, 0.002970255, 0.3823886, 0.02045526, -0.032064784) * inp_2_1_1;
    result3 += M4(-0.008890621, -0.2940491, -0.009212778, -0.012577194, 0.02471179, -0.088268556, 0.0012702476, -0.03584996, 0.14552525, -0.030106092, -0.03112081, 0.08001758, -0.00969581, -0.12172906, -0.021096649, -0.21099758) * inp_2_2_1;
    result3 += M4(-0.017800903, 0.06924201, -0.028830705, -0.028189078, -0.018143449, -0.07275461, 0.035732154, 0.0045146393, 0.00071136496, 0.15428373, -0.08288601, -0.007991001, 0.028993241, 0.15332083, -0.004511691, 0.05358215) * inp_2_0_2;
    result3 += M4(-0.01586041, -0.11279205, 0.014730289, -0.07678143, -0.0586952, 0.03175036, -0.000516498, -0.101325125, 0.018147217, 0.32204178, -8.6083695e-05, -0.010750157, 0.018986167, -0.14034605, -0.01470315, 0.00037027948) * inp_2_1_2;
    result3 += M4(-0.0028794657, 0.110789165, -0.019168604, 0.035165284, 0.014918113, 0.0796441, -0.0035978968, 0.03897717, 0.057327338, 0.29348075, -0.04193807, 0.12886412, -0.003934334, -0.060943678, -0.040322807, -0.25640202) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.012415021, -1.1618092, 0.2338411, 0.20989065, -0.37259242, -1.3752584, 0.39351448, -0.95773274, 0.08563785, 0.13109867, 0.06946956, 0.012077913, -0.080676235, -0.2780151, 0.04559541, 0.054117706) * inp_3_0_0;
    result0 += M4(0.0873876, -0.05008602, 0.05424856, -0.0907247, 0.7253502, -0.26640588, -0.6695537, -0.1413698, 0.03543727, 0.21181956, 0.28393775, -0.09100997, 0.15732813, -0.3773522, 0.062263552, 0.18489762) * inp_3_1_0;
    result0 += M4(0.12477129, -0.29469174, 0.122051716, 0.037574466, 1.0907359, -0.46770644, 0.06139338, -0.4099926, 0.14127246, 0.07849089, 0.002116663, -0.07177678, 0.13956346, -0.18296333, 0.035085782, 0.15682864) * inp_3_2_0;
    result0 += M4(-0.6874794, 0.21621111, -0.0971793, -0.431596, 0.056471944, 0.09827304, 0.14432165, -0.0283138, 0.018962111, 0.023447663, -0.18650311, 0.11175311, 0.051862556, 0.20958371, 0.17278387, -0.15161826) * inp_3_0_1;
    result0 += M4(-0.27557623, 0.10699249, 0.26734895, 0.21641819, -0.075375415, -0.15250489, -0.08865031, 0.13784006, 0.036283564, -0.20903939, -0.24090229, 0.20506297, -0.6015611, 0.01789317, -0.06543193, 0.14692025) * inp_3_1_1;
    result0 += M4(-0.27842286, 0.10277242, 0.067761764, -0.14996214, -0.067807585, 0.07034903, 0.33454895, -0.14949624, -0.041580595, 0.10363368, 0.03154982, -0.20351924, 0.205157, 0.009145386, 0.10669594, 0.10717223) * inp_3_2_1;
    result0 += M4(0.29300004, -0.44949004, -1.4967724, 0.49750265, 0.084683694, -0.0062536243, 0.10656582, 0.01597381, -0.045920935, 0.07578921, 0.056828856, 0.053748526, 0.14061455, -0.08157575, -0.2200591, -0.058312036) * inp_3_0_2;
    result0 += M4(0.05512132, -0.13380803, -0.40462643, 0.14631626, -0.10197531, -0.050727453, -0.13426574, -0.034874607, -0.071318984, 0.025846086, -0.042746402, -0.03217667, 0.1105168, -0.23270631, -0.32626557, 0.08757701) * inp_3_1_2;
    result0 += M4(0.093702145, 0.0817678, -0.32180363, 0.0049873567, 0.16257039, -0.019648204, 0.056499686, 0.028510794, -0.017743502, 0.011994205, 0.07814993, 0.020532923, -0.028143683, 0.11932156, -0.047222536, 0.06371279) * inp_3_2_2;
    result1 += M4(-0.03438793, 0.061299052, -0.15211158, -0.10321906, 0.11914771, -0.037479162, 0.05569841, -4.1021314, -0.051873993, 0.014166237, -0.013027996, -0.22656861, 0.15072471, -0.04441551, 0.066273965, 0.2602581) * inp_3_0_0;
    result1 += M4(0.15922424, 0.051806964, 0.019573947, -0.15353082, -0.07153499, 0.5223023, -0.34141514, -2.0890326, -0.2942358, 0.08388672, -0.016338253, 0.17184886, 0.32937422, -0.018432997, 0.048968315, -0.1163154) * inp_3_1_0;
    result1 += M4(0.15611242, 0.012940217, -0.014683551, 0.0884459, 0.3948406, 0.24401894, -0.061569203, -2.0278025, -0.02692574, -0.028334437, -0.0043505337, 0.08665107, 0.11473777, -0.047243673, 0.0015618808, -0.16468687) * inp_3_2_0;
    result1 += M4(-0.855379, 0.24548887, -0.3081462, -0.7638028, 0.03794767, 0.037074883, 0.31331444, -0.1382851, 0.087564014, -0.09397519, -0.072356194, -0.032935187, -0.074981734, -0.039980475, -0.0007615921, -0.15567254) * inp_3_0_1;
    result1 += M4(0.17790411, 0.07286185, -0.097927764, -0.22225265, -0.22205718, 0.12777402, 0.5848573, -0.22681174, 0.5156648, -0.25845617, 0.084744446, -0.004402625, -0.19314267, 0.07297026, 0.06047895, -0.26787028) * inp_3_1_1;
    result1 += M4(-0.031178743, 0.063498005, 0.003277449, -0.17693478, -0.059646267, 0.09105709, 0.14110224, 0.52065676, 0.00876834, 0.02144203, -0.047165394, -0.0012354744, -0.073823616, -0.028502017, 0.027931174, 0.1491416) * inp_3_2_1;
    result1 += M4(-1.591199, -0.008026621, -0.4249924, -0.3178058, -0.026790937, -0.049387112, 0.0070751235, 0.14473559, 0.05075227, -0.035772346, -0.07741356, -0.07508751, -0.16574001, 0.022052243, -0.026583726, 0.26213986) * inp_3_0_2;
    result1 += M4(-0.41987967, -0.08117386, 0.015034986, 0.35391712, 0.05811331, -0.08052235, -0.011857336, -0.1149521, -0.23688805, 0.18029736, 0.12766133, -0.0046776314, -0.38796234, 0.025544005, 0.057590205, -0.3404407) * inp_3_1_2;
    result1 += M4(-0.20999955, -0.054044224, 0.050474815, -0.013916562, 0.12687844, 0.0371296, -0.01685482, 0.14485295, 0.10832394, 0.0026178574, -0.0105707925, -0.1294366, 0.000310799, 0.03995686, 0.061880756, -0.0116292285) * inp_3_2_2;
    result2 += M4(-0.22340804, -0.11098519, 0.025787087, 0.13193382, 0.4036729, 1.4789056, -0.1703484, 0.29187116, -0.025314372, -0.04074696, 0.08983593, -0.033292767, 0.056981735, 0.020510482, -0.074952744, 0.15593661) * inp_3_0_0;
    result2 += M4(0.4108113, -0.22938214, 0.03478709, 0.019530611, 1.0300385, 0.4174605, -0.037380233, 0.7242025, 0.013156368, -0.09455977, 0.2695373, -0.21907856, 0.06819171, 0.08464409, -0.051838692, 0.28518406) * inp_3_1_0;
    result2 += M4(0.010250628, -0.05376961, 0.025976973, 0.15773049, 0.18612012, 1.255078, 0.4057964, 0.29141712, 0.089933775, -0.015561695, 0.058647882, 0.05837163, 0.13725118, 0.09523766, -0.06010079, 0.01907101) * inp_3_2_0;
    result2 += M4(-0.7978132, 0.8932561, 0.15275064, -1.2678028, 0.054023027, -0.13686019, -0.0050459877, -0.07561471, -0.03367317, 0.09634762, 0.06673969, -0.014818239, -0.11527017, 0.21595635, -0.095220864, -0.019242888) * inp_3_0_1;
    result2 += M4(-0.32557112, 0.29906958, 0.008831433, -0.0821973, 0.025921071, 0.10544207, 0.1617291, 0.25424096, -0.30024683, -0.26730272, 0.32332033, 9.129457e-05, -0.15725178, -0.2186375, 0.16905591, -0.3736006) * inp_3_1_1;
    result2 += M4(-0.14623748, 0.10076812, 0.07238823, -0.04360688, 0.11652786, -0.0315968, -0.0706665, -0.17471424, 0.13334914, 0.05423841, -0.08949454, -0.16059625, -0.08565334, 0.018828973, 0.015052069, 0.19829445) * inp_3_2_1;
    result2 += M4(-0.5427671, 0.5041919, 0.14832118, -0.19388236, -0.021034745, -0.07757735, -0.004481791, 0.011540382, 0.012011103, 0.032512672, 0.04587882, 0.042794228, 0.054166935, -0.006876028, 0.047348153, -0.042921167) * inp_3_0_2;
    result2 += M4(-0.19521402, -0.09212129, -0.04791074, -0.08011152, -0.06641265, 0.14021024, -0.04001055, -0.05226908, 0.09488642, -0.020601152, 0.018136173, 0.036683097, -0.18239988, 0.060728442, 0.05806481, 0.075832054) * inp_3_1_2;
    result2 += M4(0.044564683, -0.08649021, -0.050488766, -0.10120322, 0.010226531, 0.010300635, 0.010985264, 0.047999658, 0.056516293, -0.018047161, -0.0070397765, 0.004396712, 0.07860989, 0.052175403, -0.031199794, 0.029368345) * inp_3_2_2;
    result3 += M4(-0.060892846, 0.45304877, 0.0513133, 0.076774456, 0.42800623, 0.16141948, -0.041618727, 0.61943954, 0.014237396, 0.13628843, 0.041131254, -0.01072438, -0.049770832, -0.068634465, -0.04116685, 0.02939463) * inp_3_0_0;
    result3 += M4(0.17314182, -0.15180649, -0.06616009, 0.14059304, 0.59913033, -0.23708156, 0.32059604, 0.1274872, -0.004174059, -0.1970237, -0.032635234, 0.07180769, 0.016899606, -0.008597248, -0.07613227, 0.07087795) * inp_3_1_0;
    result3 += M4(-0.022890799, 0.030824553, 0.0072493516, 0.20503867, 0.12454613, 0.021176139, 0.19105585, 0.106216885, -0.083476104, 0.00748544, 0.026154807, 0.30454242, -0.04409732, 0.05850452, -0.034169883, 0.02210656) * inp_3_2_0;
    result3 += M4(0.021276344, -0.5232952, 0.36940625, -0.7814157, 0.10716293, -0.11159393, 0.24996872, 0.01199655, -0.0037641984, 0.041836727, -0.0908583, -0.002443378, -0.08166907, 0.09463621, -0.03435635, -0.069715254) * inp_3_0_1;
    result3 += M4(0.36802924, -0.26049703, 0.006562107, 0.38684967, 0.43853655, -0.4872998, 0.47886714, 0.043348342, 0.28356397, 0.3232081, 0.46266225, 0.015441591, 0.034406643, -0.49686053, 0.071314245, 0.008380455) * inp_3_1_1;
    result3 += M4(0.020931993, -0.25733596, 0.04038867, -0.1801095, 0.2984491, -0.3187821, -0.06324587, 0.017479759, -0.16383186, -0.19332318, -0.060865846, 0.010010719, -0.050889216, 0.26696038, -0.016432611, -0.3464088) * inp_3_2_1;
    result3 += M4(-0.19312142, -0.9462907, 0.1194406, -0.74692637, -0.020847408, -0.07377171, -0.0019127335, 0.054098293, -0.004754892, -0.058661453, -0.046259478, -0.023445887, -0.042374354, 0.24145114, 0.011233676, -0.03403085) * inp_3_0_2;
    result3 += M4(0.18327728, 0.36853018, -0.053336296, -0.09057491, 0.06562163, 0.0961535, -0.018038033, -0.029929636, 0.035014637, -0.075129166, 0.17069215, 0.022928065, -0.07264045, -0.09689678, 0.038266458, -0.061164036) * inp_3_1_2;
    result3 += M4(-0.017555907, 0.22853696, -0.01603821, 0.008671542, -0.028337069, 0.10415991, -0.010002647, 0.013238586, -0.020970136, 0.12468899, -0.03172789, -0.0028951922, 0.016732499, 0.0234556, 0.008776534, -0.03909392) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.008737584, -0.008980334, 0.014003965, -0.015910065);
    V4 result1 = V4(-0.0055426587, -0.0020610485, 0.0037475924, -0.0034440146);
    V4 result2 = V4(-0.009500684, -0.11846398, -0.0035261249, 0.0004743051);
    V4 result3 = V4(-0.0040369118, 0.010739824, -0.0015431351, -0.0077675693);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.005794569, 0.04389038, -0.024091236, 0.014318715, 0.0011797464, 0.036843084, 0.017309258, -0.012292611, -0.015661994, -0.0032083888, 0.021645973, -0.044877548, 0.015435686, 0.11642232, 0.020623978, 0.010764382) * inp_0_0_0;
    result0 += M4(-0.030322468, -0.03254112, -0.031727057, 0.080287814, -0.0051239207, 0.034074973, 0.02560806, -0.029122768, 0.0102265645, 0.027538685, -0.017813424, 0.06936707, -0.009551726, -0.09127821, -0.000686537, 0.021588631) * inp_0_1_0;
    result0 += M4(0.019500261, -0.039758716, -0.032067098, 0.04655752, -0.005376275, 0.004226635, -0.0078163715, 0.0029678124, -0.013692727, -0.0015123785, -0.028211545, 0.028337609, 0.0029931718, 0.03343331, 0.045952104, -0.04868005) * inp_0_2_0;
    result0 += M4(0.0063790777, -0.019931253, -0.05645431, 0.07195337, 0.0032038668, 0.007749257, -0.034752905, 0.04032634, -0.03580249, -0.17872171, -0.030802172, 0.026339814, -0.011543326, 0.67799366, 0.00665126, -0.009242026) * inp_0_0_1;
    result0 += M4(0.020709028, 0.06825463, 0.19670728, -8.8600966e-05, -0.029013805, 0.022511655, -0.034052927, 0.031268757, 0.065326445, 0.020057652, 0.11468762, -0.14978077, 0.060385186, -0.06496163, -0.23279984, 0.17842604) * inp_0_1_1;
    result0 += M4(0.00822679, -0.055879105, -0.05735583, 0.06393342, 0.023745248, -0.0012192571, 0.0021469507, -0.005115524, -0.03320401, 0.003311195, -0.035596296, 0.03648177, -0.0306572, 0.08033504, 0.07048563, -0.026540315) * inp_0_2_1;
    result0 += M4(0.0012052022, -0.18571152, -0.02657309, 0.025314782, -0.04817334, -0.008854743, 0.037288036, -0.063492395, 0.016982276, -0.03201995, -0.008061657, 0.024981994, 0.07942336, 0.358893, 0.05193622, -0.017091965) * inp_0_0_2;
    result0 += M4(0.03022923, -0.011511777, -0.06433461, 0.06211505, 0.118394226, -0.027499145, 0.009045658, -0.004227624, -0.03769999, 0.007896765, -0.061681297, 0.038893644, -0.12525761, -0.1540766, -0.06703752, 0.05940499) * inp_0_1_2;
    result0 += M4(0.010340273, -0.056648675, -0.0042984327, -0.018460419, -0.06642305, 0.07692756, 0.029789481, -0.013756729, 0.00843803, -0.004192961, -0.013070598, 0.012195375, 0.06152692, 0.07950599, 0.0081013385, -0.021446317) * inp_0_2_2;
    result1 += M4(-0.0071953856, -0.06917831, -0.020112323, -0.033589207, -0.00052215083, 0.020294908, 0.0053174174, 0.048485044, -0.024217367, 0.055136956, 0.005071408, -0.003175628, -0.007976062, 0.009382001, 0.01759394, 0.011806593) * inp_0_0_0;
    result1 += M4(-0.04782042, -0.037219666, -0.012381861, -0.15712899, 0.041313287, 0.04976657, 0.003779775, 0.09830841, 0.000889855, 0.05561712, -0.029724693, 0.024680514, 0.00975322, 0.077141896, -0.01790321, 0.000677194) * inp_0_1_0;
    result1 += M4(0.0056616156, -0.021210631, -0.018594913, -0.03107567, 0.0038288801, 0.015683502, -0.0042606527, 0.00396494, 0.029039675, -0.02629486, 0.0066740625, -0.047876902, -0.035202175, 0.036550164, -0.00011398546, 0.02293681) * inp_0_2_0;
    result1 += M4(0.055200685, 0.041560717, -0.01867395, 0.05621879, 0.044063672, -0.036488533, -0.018234752, -0.05999838, 0.0025840406, 0.08734615, 0.01653183, 0.118517905, -0.04939387, -0.0064432933, 0.032819502, -0.118998066) * inp_0_0_1;
    result1 += M4(0.05848884, 0.08635971, 0.04823927, 0.25504744, -0.11949937, 0.07420355, -0.034025155, -0.24537402, 0.056750398, 0.24414545, -0.0265799, 0.3642732, 0.2915509, 0.003263009, -0.04181542, -0.096308686) * inp_0_1_1;
    result1 += M4(0.029452318, 0.00905861, -0.029598882, 0.06173533, 0.008372991, -0.041702926, -0.020571932, -0.0041109514, 0.013371584, 0.07739851, -0.0032835891, 0.10855117, -0.025133254, 0.06730427, 0.03338513, 0.07882538) * inp_0_2_1;
    result1 += M4(-0.008145711, 0.04745566, -0.064036645, -0.093025655, -0.006065989, 0.1353767, 0.0072361915, 0.19452056, -0.009194675, -0.035767607, -0.027210807, 0.026542606, 0.0811997, -0.05763735, 0.023312941, 0.057715405) * inp_0_0_2;
    result1 += M4(-0.03569018, -0.12793341, 0.0813948, -0.08584549, 0.101511404, 0.21789147, 0.08054569, 0.39089832, -0.02489131, -0.26833656, -0.09958991, 0.09003747, -0.03347542, -0.33831602, -0.21999606, -0.05359468) * inp_0_1_2;
    result1 += M4(-0.017001523, -0.05723187, -0.03933019, 0.0053396365, 0.0082400795, 0.119018994, 0.00224323, 0.16925493, -0.010314777, 0.02052122, -0.01285743, -0.027892707, -0.03783355, -0.0588236, 0.07790299, -0.077754006) * inp_0_2_2;
    result2 += M4(-0.014271669, -0.020268906, 0.018176774, 0.034997, 0.004987083, 0.07284838, 0.014429212, 0.022060448, 0.005897468, 0.08815748, -0.0026410313, 0.017860075, 0.0861066, -0.04425638, -0.0185438, 0.024863143) * inp_0_0_0;
    result2 += M4(0.02490199, -0.10886876, 0.01566213, 0.020305268, -0.0031333251, -0.16374761, -0.031179976, 0.0049340837, 0.01191048, 0.02741611, 0.05177392, -0.030699579, 0.046373963, 0.028447868, -0.03830637, -0.026532106) * inp_0_1_0;
    result2 += M4(0.019086543, -0.14877701, -0.072007805, 0.069159545, 0.009451324, 0.100357175, 0.0036148066, -0.023235291, 0.016001007, -0.029321888, -0.12445008, 0.015810598, -0.022173215, -0.13683182, -0.02986866, 0.04356948) * inp_0_2_0;
    result2 += M4(0.05398756, -0.01988894, 0.003604712, 0.013069504, 0.028554514, 0.051164392, -0.012421595, -0.11942974, 0.0224407, -0.037808713, -0.012120659, 0.03581464, 0.25666928, 0.090533756, -0.059719816, 0.058758333) * inp_0_0_1;
    result2 += M4(0.0010654471, 0.061575055, -0.028775288, 0.1249201, 0.055422146, 0.070829526, 0.066592254, -0.031293135, 0.13310125, -0.064376526, -0.06611172, -0.0145249665, -0.029450733, 0.06327095, 0.15822862, -0.10825303) * inp_0_1_1;
    result2 += M4(-0.023083562, -0.023777312, -0.048037466, 0.04331794, -0.007206554, -0.07376514, -0.19819997, 0.03313522, 0.062774174, -0.028773818, -0.028509162, -0.06308142, -0.012228965, -0.10835261, -0.14780974, -0.081329465) * inp_0_2_1;
    result2 += M4(0.031297296, -0.1476763, -0.011062844, 0.03453119, 0.018119333, -0.15059285, -0.009829668, 0.0563165, 0.021161968, 0.07305034, -0.022732731, 0.020409442, 0.10518051, -0.025516398, 0.026552493, -0.04645041) * inp_0_0_2;
    result2 += M4(2.2356835e-05, 0.025932929, 0.031575654, 0.031256963, -0.015689638, -0.10721278, -0.02328338, -0.10510993, 0.044160523, -0.020535793, -0.0023220317, 0.022084527, -0.01092692, -0.0854966, -0.056861784, -0.009862783) * inp_0_1_2;
    result2 += M4(-0.008161752, -0.058155194, 0.03046731, 0.003443106, 0.026115486, 0.102587655, 0.043705832, -0.012246389, 0.024152078, 0.016269136, 0.05777796, 0.0037149258, -0.022167243, -0.06110546, 0.08282039, 0.057079446) * inp_0_2_2;
    result3 += M4(0.03223137, -0.02623861, 0.054602955, 0.02256069, -0.025298495, -0.02749369, 0.012466765, 0.0011482601, -0.008306309, -0.011897225, -0.059396643, -0.092754714, 0.0131752705, 0.19889657, 0.001091994, 0.08598806) * inp_0_0_0;
    result3 += M4(0.017837591, 0.16230747, -0.027603444, -0.0018757, 0.017778365, 0.027765293, -0.0024300069, -0.00044806697, 0.076214224, 0.029910939, 0.034941476, 0.0042837677, 0.042609118, 0.08428969, 0.1503766, -0.004271078) * inp_0_1_0;
    result3 += M4(0.05636024, -0.0910764, 0.020484213, -0.028954726, 0.0057308613, 0.03261264, 0.031001981, 0.006370173, 0.019418973, 0.040156253, -0.025960714, 0.0071215127, -0.09001066, 0.0927536, -0.017609576, 0.007954157) * inp_0_2_0;
    result3 += M4(-0.031500902, -0.13366324, 0.13329722, 0.14455985, 0.07295268, -0.22356756, 0.010635666, 0.055364903, -0.021165583, -0.14274997, 0.050154496, 0.031356603, 0.07342087, 0.17060995, 0.17439562, 0.06955659) * inp_0_0_1;
    result3 += M4(0.22275703, 0.1997285, 0.053395137, 0.056372657, -0.111753605, 0.06268315, 0.0059308656, -0.017048046, 0.18418364, 0.009830331, -0.06531672, -0.015861232, -0.11550129, -0.20795506, 0.40539524, -0.08092109) * inp_0_1_1;
    result3 += M4(-0.017242078, -0.062927455, 0.026158154, -0.0133387325, -0.014239925, 0.07474416, -0.0430122, 0.0046714647, -0.01862876, 0.04337525, 0.033209365, -0.0061576976, 0.1410305, 0.15190999, -0.09408469, 0.013485978) * inp_0_2_1;
    result3 += M4(0.04838539, -0.044037014, 0.008616424, -0.005781291, 0.00677678, 0.04432949, -0.118508205, -0.03182088, 0.027891235, -0.0030354417, 0.003948268, -0.010629832, 0.06061799, 0.28011623, -0.026398601, 0.11697311) * inp_0_0_2;
    result3 += M4(-0.096060485, 0.124875635, -0.015018977, -0.019308036, 0.03629876, -0.23697348, 0.0144505, -0.0022772823, -0.03816355, -0.08001744, -0.022208204, -0.0034225788, -0.046235632, 0.008056883, 0.06194173, 0.0088078305) * inp_0_1_2;
    result3 += M4(0.009819939, 0.016679304, -0.02377858, -0.009282116, 0.03628886, 0.1202823, -0.0006142476, 0.018904658, -0.0026085852, 0.0024327703, 0.00024537917, 0.011088059, -0.02951476, 0.060438942, -0.03305461, -0.009068546) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.028068036, 0.10031138, 0.024859002, 0.026634516, 0.00044286356, 0.0764601, 0.027926348, -0.015611485, -0.009251165, 0.6083407, -0.15185355, 0.17910388, 0.0036223915, 0.14314903, 0.017261319, -0.038031023) * inp_1_0_0;
    result0 += M4(-0.0036109765, -0.09100635, 0.11563548, -0.057513062, -0.066435054, -0.057305906, -0.16557331, 0.20300496, -0.038011342, -0.024901679, 0.30966967, -0.32487386, -0.021658227, 0.011758211, 0.017682787, 0.006785782) * inp_1_1_0;
    result0 += M4(-0.00074450846, 0.06957405, 0.048841633, -0.0039091497, 0.030134996, 0.050525315, -0.0311643, 0.062220488, -0.06380564, 0.012819092, -0.07409054, 0.21297602, 0.005115728, -0.026647285, -0.017992651, -0.0207183) * inp_1_2_0;
    result0 += M4(0.031111032, -0.16569728, -0.035809085, 0.037499517, -0.018872475, 0.07801313, -0.13788757, 0.12958567, 0.028019216, 0.03196965, -0.058421127, 0.0036607748, -0.04720812, 0.14649221, 0.020977518, -0.04579817) * inp_1_0_1;
    result0 += M4(-0.086652584, 0.08047755, -0.18944532, 0.07972007, -0.09174776, -0.090628274, -0.21434458, 0.2179416, 0.10975987, 0.107066534, -0.002940099, -0.03474315, 0.11818836, -0.21992016, -0.06522546, 0.08431588) * inp_1_1_1;
    result0 += M4(0.05090329, 0.021281242, -0.017231127, 0.010664369, 0.023277173, -0.07473514, -0.06613075, 0.041613434, 0.0738905, 0.28448886, 0.090963535, -0.01610303, -0.039393835, 0.036632847, 0.017194562, -0.041776232) * inp_1_2_1;
    result0 += M4(-0.05287431, -0.046926316, 0.023237007, -0.045637358, -0.040724125, -0.21614492, -0.03243986, -0.024265187, 0.02101347, 0.53439456, 0.005065299, -0.014799846, 0.047613867, 0.24310964, -0.00987357, -0.032262083) * inp_1_0_2;
    result0 += M4(0.074741445, 0.12424031, 0.04158207, -0.03364374, 0.101210445, 0.07131794, 0.06389606, -0.010608337, 0.06733423, -0.0008045952, 0.05925743, -0.05426539, -0.13796344, -0.12783687, -0.029898932, -0.013980937) * inp_1_1_2;
    result0 += M4(-0.083471924, -0.0051195244, -0.0015370435, -0.00927886, -0.14200312, -0.064694285, -0.0066244816, 0.010409825, 0.04423884, -0.004004516, -0.019111212, 0.022023976, 0.03565432, 0.18425198, 0.030780721, -0.0283676) * inp_1_2_2;
    result1 += M4(0.022700476, -0.015711807, -0.014051973, 0.16591415, -0.06438586, 0.05507074, 0.006564765, 0.045166984, 0.11744712, 0.24026692, -0.05122779, 0.08702795, -0.03085052, -0.025576666, 0.008519652, 0.06877358) * inp_1_0_0;
    result1 += M4(0.17757684, -0.053302705, 0.018200118, 0.15192385, -0.21619335, 0.05683639, -0.02167091, -0.20884825, -0.23910357, 0.10875509, 0.022552865, 0.16931766, -0.0028117415, -0.07696355, 0.007254027, -0.1729903) * inp_1_1_0;
    result1 += M4(-0.012371325, 0.0628687, -0.0003737888, 0.17332506, -0.02699891, -0.04195104, -0.020155681, -0.064818054, 0.18229926, -0.04052025, 0.042994443, -0.10902792, 0.0081557715, 0.0548517, -0.01155896, 0.070420936) * inp_1_2_0;
    result1 += M4(-0.011825805, 0.057830404, -0.0009388391, -0.0061953645, 0.011343146, 0.005180462, 0.11345693, -0.024886621, 0.04813412, 0.009066687, -0.055840667, 0.015937634, -0.053480774, -0.038741615, 0.039879803, -0.05245509) * inp_1_0_1;
    result1 += M4(-0.20680146, 0.123128064, 0.0414082, -0.42891258, -0.25778082, -0.12485858, 0.24326837, -0.035025515, -0.2691893, -0.49958602, 0.107973374, -0.5140144, 0.11258082, 0.0069281263, 0.04541812, -0.05494794) * inp_1_1_1;
    result1 += M4(-0.016304731, 0.1449363, 0.026251214, -0.008588137, -0.095287, -0.07882255, 0.0066123838, 0.06443657, 0.04940747, 0.3331232, -0.0434868, 0.36238673, -0.083623335, -0.048211597, -0.03191791, -0.11247774) * inp_1_2_1;
    result1 += M4(-3.7183585e-05, 0.043800592, 0.0018652162, -0.00969806, -0.013921287, -0.055815887, 0.013817746, -0.100538656, -0.023160417, 0.041635104, -0.0913022, 0.07468346, -0.008068179, -0.10731744, 0.023183776, -0.03974802) * inp_1_0_2;
    result1 += M4(0.015929492, 0.21532613, 0.076731436, 0.021465829, 0.033799164, -0.021029316, 0.24982534, -0.022757377, 0.0303129, 0.26551652, 0.17384934, 0.20511371, -0.016608706, -0.31876323, -0.058073513, -0.113458626) * inp_1_1_2;
    result1 += M4(0.007979804, 0.022940962, 0.050825823, 0.03616923, 0.011061232, -0.02644033, 0.019714547, 0.07562573, 0.0060656257, 0.012857754, 0.032972563, 0.042716328, 0.006711377, -6.42381e-05, 0.03612354, 0.040633205) * inp_1_2_2;
    result2 += M4(0.08580538, -0.14864619, -0.024995565, -0.0036865873, -0.030227067, -0.15544088, 0.0052621355, 0.011554669, 0.03018343, 0.035051852, 0.010239975, -0.18922468, 0.0064206957, 0.03721577, -0.007953294, 0.006448658) * inp_1_0_0;
    result2 += M4(0.1092488, -0.03940783, -0.031908505, 0.10250533, -0.08763082, -0.14784352, 0.000120261444, -0.19856039, -0.13604331, -0.039795045, -0.009537758, 0.21900465, 0.048573144, -0.008220531, -0.0156478, -0.02492345) * inp_1_1_0;
    result2 += M4(0.096633464, -0.05032311, 0.16702957, -0.0062083793, 0.0001917601, -0.06902719, -0.31560448, 0.11148973, 0.19144456, 0.09999282, -0.34306252, 0.15595287, -0.011036964, 0.08138807, 0.05084662, 0.037092227) * inp_1_2_0;
    result2 += M4(-0.0025876227, -0.0010368003, 0.0076706074, -0.03733018, 0.04760029, -0.092547484, -0.005218056, -0.10446833, -0.025451014, -0.116662726, 0.0030254074, 0.069639705, 0.04275271, -0.011985372, -0.0016057559, 0.0457314) * inp_1_0_1;
    result2 += M4(0.030817343, -0.12619941, -0.02241566, 0.029522171, 0.25928068, -0.12028176, -0.074285805, 0.17798087, 0.09117528, 0.060820438, -0.060105998, -0.116987266, 0.04785863, -0.084058546, 0.07241423, -0.18593448) * inp_1_1_1;
    result2 += M4(-0.01341351, -0.13395688, 0.07633952, 0.01601206, 0.045466043, -0.15880318, 0.14383619, -0.00903969, 0.09379072, 0.048025526, 0.06825691, -0.111683786, 0.010335744, 0.008932569, -0.027582943, -0.079662524) * inp_1_2_1;
    result2 += M4(-0.033787835, -0.053401504, 0.0021946374, 0.011212193, -0.00819434, -0.12870869, 0.015343662, -0.011824703, 0.011646533, -0.1307943, -0.019500736, 0.05600347, -0.00088370644, 0.07761932, -0.004006987, -0.05109124) * inp_1_0_2;
    result2 += M4(-0.03307581, -0.051695816, 0.017690325, -0.03871612, -0.013927297, -0.06337538, -0.002014722, 0.012028695, -0.022670554, -0.06890632, 0.0027007002, -0.06726124, 0.019071782, 0.040828623, -0.023686979, -0.033747796) * inp_1_1_2;
    result2 += M4(-0.0006395415, -0.14556473, -0.09289636, 0.012851841, 0.015245978, 0.0338413, -0.08955298, 0.007150788, 0.0057322364, -0.02488121, -0.050057273, -0.02614728, 0.023430036, 0.058297895, -0.05897818, -0.02927121) * inp_1_2_2;
    result3 += M4(0.030057194, 0.10487389, 0.024538957, -0.029905623, 0.117743954, -0.09226699, 0.03182581, -0.057914954, 0.09736799, -0.48312163, 0.3889849, -0.07451631, -0.050945744, 0.21219786, -0.13404356, 0.042533077) * inp_1_0_0;
    result3 += M4(0.08572772, -0.17261268, -0.097367994, 0.017569397, 0.047609918, -0.18387091, -0.20402588, 0.0848348, -0.02276447, 1.1273674, -0.44134787, 0.28263825, -0.054845158, -0.071677804, 0.16569453, 0.023519035) * inp_1_1_0;
    result3 += M4(0.033576068, 0.009092367, 0.051715653, 0.022513026, 0.03706815, 0.0082849935, -0.0068181097, -0.053436927, 0.11860645, 0.7653167, 0.3832516, -0.041132107, -0.03763607, -0.038490903, -0.021800622, 0.0010868084) * inp_1_2_0;
    result3 += M4(0.0145154875, 0.10316493, -0.012614339, -0.056907278, 0.060177967, -0.02740517, 0.08042329, 0.157779, -0.1036183, -0.24492624, 0.1281722, -0.13175724, -0.028554978, 0.09347978, -0.0368153, -0.10107664) * inp_1_0_1;
    result3 += M4(-0.09079094, -0.25947478, -0.06763461, 0.015023546, -0.27605584, -0.19440809, -0.1519568, -0.1788173, 0.09044392, 0.21710615, 0.2082745, 0.15953378, -0.044862308, -0.039850943, 0.014267068, -0.047172908) * inp_1_1_1;
    result3 += M4(-0.05247879, -0.045754313, -0.008678485, 0.023420006, -0.0055449395, -0.0036674375, -0.010720753, 0.015599734, 0.10275161, 0.23840156, 0.0291996, 0.028465489, -0.0016875544, 0.11495857, -0.14024477, 0.051515426) * inp_1_2_1;
    result3 += M4(-0.032924064, -0.020175096, 0.00040303508, 0.019397736, -0.085101366, -0.13163859, 0.0039053396, -0.017580956, 0.0047645583, -0.08243683, 0.013688344, 0.11543191, 0.021837765, 0.03730147, 0.055463944, -0.106699474) * inp_1_0_2;
    result3 += M4(0.026853032, 0.025967771, 0.019875538, 0.004074265, 0.04429096, 0.17477787, 0.0042346097, -0.008605963, 0.04803265, 0.0060419375, -0.0363077, 0.11596439, -0.05639562, -0.04049985, 0.048298977, 0.07003627) * inp_1_1_2;
    result3 += M4(0.0058444245, 0.045141675, 0.015638046, 0.018029543, 0.032569103, -0.07983616, 0.00085565704, -0.02116198, -0.03414952, 0.22402558, 0.036093466, 0.047484003, -0.019688768, 0.21733746, 0.024756392, -0.0040243696) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.029926905, 0.24815774, 0.02230461, -0.12037215, 0.00287532, -0.40098342, 0.006565141, 0.0076554082, 0.016134417, -0.0016112305, -0.0056328014, -0.008633788, 0.0046445574, -0.09863719, 0.012981934, -0.035753053) * inp_2_0_0;
    result0 += M4(0.030527927, -0.053437322, 0.078383304, -0.088482186, 0.0011712788, 0.009474699, -0.06495799, -0.059869107, 0.0020129757, -0.11096309, 0.041514125, -0.06202373, -0.007103605, -0.05347618, 0.06080743, -0.08042448) * inp_2_1_0;
    result0 += M4(-0.02701744, 0.010867906, 0.047578115, -0.0558767, 0.016067425, 0.113577455, -0.025594741, -0.03739678, 0.015569673, 0.037592154, 0.06988033, -0.09563121, -0.014209129, -0.018370904, -0.0018209411, -0.0048648855) * inp_2_2_0;
    result0 += M4(-0.001394729, 0.3230438, 0.039980218, -0.024482617, -0.006143052, -0.65284574, 0.008420842, -0.020419981, -0.06322713, 0.13688178, 0.1024637, -0.0798567, 0.06301392, 0.042955726, -0.122284785, 0.07732869) * inp_2_0_1;
    result0 += M4(-0.0038480307, -0.0876105, -0.023963753, 0.25556818, 0.016138688, -0.23634274, -0.05680474, -0.12863411, 0.05796441, 0.09351196, 0.2545136, -0.32572314, 0.053154815, 0.0029804346, 0.04657641, 0.053711068) * inp_2_1_1;
    result0 += M4(0.0037359397, 0.035163626, 0.0854185, -0.100732125, -0.08480004, -0.062350444, -0.0775325, -0.055469178, -0.055126324, 0.102143615, 0.2580308, -0.22784856, 0.010861563, -0.007992211, -0.063903734, 0.013190853) * inp_2_2_1;
    result0 += M4(0.0070085316, 0.18611991, 0.02207214, -0.010699581, 0.022898778, -0.3471911, -0.015806725, -0.0014060253, 0.050819237, 0.32369938, 0.042594057, -0.027266078, -0.0071314885, 0.15493557, -0.03141265, -0.011270911) * inp_2_0_2;
    result0 += M4(-0.07529333, -0.044495825, 0.030356811, -0.040890418, -0.2099244, 0.048709635, -0.009311613, 0.018037166, -0.21718323, -0.16835192, 0.11301497, -0.07111921, 0.30977562, -0.067752935, 0.053201612, -0.08493703) * inp_2_1_2;
    result0 += M4(0.030263888, 0.06752801, -0.0015574084, -0.0015660397, -0.10439255, 0.07994044, 0.002313768, 0.020144453, 0.026401196, 0.03277847, 0.03474524, -0.020019472, 0.0041800025, -0.0444313, -0.035332374, 0.015814034) * inp_2_2_2;
    result1 += M4(-0.037438277, 0.07062035, 0.048848882, 0.09826792, -0.029084355, 0.041100495, 0.00560168, 0.103757694, 0.010222622, -0.025120955, -0.014205195, 0.01811481, 0.031232972, 0.001005261, -0.0014511058, 0.03428514) * inp_2_0_0;
    result1 += M4(0.047462407, -0.024906855, 0.020446854, 0.24931139, -0.050170794, -0.00805447, 0.002705106, -0.40353245, 0.0893161, 0.06364616, 0.020487556, 0.107027195, 0.07878422, 0.028208638, 0.016264072, 0.07634292) * inp_2_1_0;
    result1 += M4(-0.010854943, -0.07126486, 0.02966507, 0.02697108, -0.0067291018, 0.027888663, 0.02071678, -0.077623956, -0.06774646, -0.013372496, 0.024278361, 0.02612623, 0.0028165528, -0.016081708, 0.0029797025, -0.02329935) * inp_2_2_0;
    result1 += M4(-0.04381907, -0.14797172, -0.041167963, 0.0745786, -0.0039018637, -0.06869921, -0.0139821265, -0.15114693, -0.0045952937, -0.012675751, -0.018788578, -0.07875853, 0.06282133, -0.063407995, -0.04098816, -0.032138977) * inp_2_0_1;
    result1 += M4(0.14582904, -0.14172554, -0.16417763, 0.06562999, -0.05453241, -0.35445437, -0.03867167, -0.29710016, 0.07346708, 0.072663724, -0.047829293, -0.15362388, -0.035717197, -0.094013534, -0.08606585, -0.047382474) * inp_2_1_1;
    result1 += M4(-0.090694495, -0.019567195, -0.015299853, 0.03736067, -0.045957744, -0.35201633, -0.004610336, -0.30808488, -0.06292863, 0.18247336, 0.09815998, -0.00959651, 0.0483985, -0.043214593, -0.011057999, -0.04101891) * inp_2_2_1;
    result1 += M4(-0.016279493, 0.26269162, 0.06299815, -0.023454322, -0.009258174, 0.047389377, 0.013580257, 0.055065576, 0.001547993, 0.04373202, -0.025853548, 0.14113726, -0.004314954, 0.10211518, -0.06752483, -0.00031427896) * inp_2_0_2;
    result1 += M4(0.01048265, 0.32597205, 0.14242664, -0.21672438, -0.02004964, -0.57272625, -0.11809477, -0.07519892, 0.014121762, -0.2793216, -0.16725846, 0.052502234, 0.018864082, 0.36621907, 0.20916359, 0.21792145) * inp_2_1_2;
    result1 += M4(-0.00243141, 0.082787484, 0.04442001, -0.10281581, -0.0055451356, -0.37542564, -0.067754954, -0.00093528844, -0.013138309, -0.14188127, 0.09494673, -0.18238558, 0.003522663, 0.04984131, -0.041943178, 0.020302866) * inp_2_2_2;
    result2 += M4(-0.02928756, -0.14580108, 0.011314798, 0.015636254, -0.0117132105, -0.16304184, -0.0012149488, 0.067308076, -0.0020094253, -0.027867783, -0.017936561, 0.023108298, 0.055678274, -0.020518875, -0.010131855, -0.003068207) * inp_2_0_0;
    result2 += M4(-0.0063072355, -0.06169394, -0.07194239, -0.032155663, -0.07011762, -0.1153456, -0.04169159, -0.24991433, 0.08047803, -0.11684001, -0.041329924, 0.00082939095, 0.031306945, -0.09090781, 0.06435431, 0.013250205) * inp_2_1_0;
    result2 += M4(-0.011264516, -0.046634603, 0.13671523, 0.008373916, -0.04492808, -0.12366461, -0.23299189, -0.07970733, -0.049604766, -0.071011186, 0.1920932, -0.024926038, 0.0055253934, 0.091276646, 0.041022874, -0.061384276) * inp_2_2_0;
    result2 += M4(0.063155085, -0.07639595, -0.034250468, -0.011700998, -0.028383605, -0.14746761, -0.010430373, -0.015823845, -0.013074234, -0.10212157, -0.012129902, 0.031762615, 0.12334507, -0.09579284, -0.0075501837, -0.061902046) * inp_2_0_1;
    result2 += M4(0.107886784, -0.019452782, 0.07060319, 0.20425883, -0.09559032, 0.096343435, 0.09891153, -0.31055498, 0.12284908, -0.057919458, 0.05846001, -0.072502345, 0.040163826, -0.14439213, 0.053492174, -0.04589559) * inp_2_1_1;
    result2 += M4(-0.008073249, 0.08247338, -0.0096136145, -0.08877294, -0.033481482, -0.023151798, -0.8052915, -0.36471912, 0.003370936, -0.12136235, -0.34850565, -0.06414624, 0.029375283, -0.08504614, 0.2342471, -0.0029702513) * inp_2_2_1;
    result2 += M4(0.0036305592, -0.07890176, 0.031924862, 0.018757956, 0.010460468, -0.16217586, 0.0037483107, -0.044797044, 0.023140058, -0.14719914, -0.009497978, -0.002559927, -0.034196638, -0.018804459, -0.0032285068, 0.043201994) * inp_2_0_2;
    result2 += M4(-0.061150476, -0.17347513, -0.029027732, -0.100106925, 0.017301988, -0.14680673, -0.06484329, 0.024315085, 0.005352682, 0.023857288, 0.006639976, -0.06809337, 0.061811298, 0.014883833, 0.021162948, -0.06193956) * inp_2_1_2;
    result2 += M4(-0.04633392, -0.13361822, -0.0313475, 0.034451958, -0.0031658409, -0.1269155, -0.0061879475, 0.003068568, -0.029203929, -0.0013349574, 0.046396356, -0.01774872, 0.028953314, -0.008354093, 0.087248065, -0.03480932) * inp_2_2_2;
    result3 += M4(-0.14645004, 0.21452916, -0.13556674, -0.06554615, 0.046713945, 0.123599, 0.09678705, 0.05167152, -0.047221247, 0.12340914, -0.0020284357, 0.029769754, -0.05747624, -0.20413533, 0.022075905, -0.011626228) * inp_2_0_0;
    result3 += M4(-0.058364484, 0.033979774, 0.29319325, 0.042883508, -0.07288808, -0.48952323, -0.2792019, -0.078045145, 0.02618434, -0.16165927, 0.07476804, -0.06992294, 0.004429471, 0.08603958, 0.09595889, -0.014805191) * inp_2_1_0;
    result3 += M4(-0.032737363, 0.08246428, -0.07559353, 0.019914092, -0.07452523, -0.16456543, -0.10483974, 0.0042752973, -0.13774085, 0.08829075, -0.11624163, 0.044703748, 0.004907567, -0.028756412, -0.06140967, 0.004595516) * inp_2_2_0;
    result3 += M4(0.0398714, 0.107263625, -0.09577101, -0.08696601, -0.03032575, 0.016179027, 0.017654847, -0.12641211, -0.030277584, 0.06400314, -0.11184336, -0.13979878, 0.049376555, -0.36402047, 0.071449056, 0.11816273) * inp_2_0_1;
    result3 += M4(0.032489497, 0.006363988, 0.05979081, -0.03521185, -0.1984703, -0.59420377, -0.20798354, -0.14219786, -0.22044948, -0.1442519, -0.03759708, -0.00800649, 0.02996382, 0.34872058, -0.003279734, 0.07457531) * inp_2_1_1;
    result3 += M4(0.036507007, -0.02520228, -0.14786033, 0.019884663, 0.054369017, -0.26040673, -0.06655136, -0.028951371, 0.10424696, 0.08689514, -0.048530154, 0.0018678709, -0.043631, -0.12262554, 0.03490589, -0.004987657) * inp_2_2_1;
    result3 += M4(0.02336313, 0.12381677, -0.038548205, 0.003292382, 0.00042809927, 0.06870046, 0.0055203657, 0.046369515, 0.012958613, 0.05322714, 0.007818598, -0.01454159, -0.089624524, -0.113523565, 0.003493378, 0.0018700428) * inp_2_0_2;
    result3 += M4(0.011274387, 0.10919473, 0.05187369, 0.016010724, -0.01315193, -0.067905165, 0.015999258, -0.014020892, 0.1117428, -0.01852655, 0.028964184, 0.035794195, 0.039949194, 0.075232126, -0.011242852, 0.015710412) * inp_2_1_2;
    result3 += M4(-0.06820092, 0.015370959, 0.0060933908, 0.0073753325, 0.011507041, 0.079976566, -0.015820708, 0.022159874, -0.002011664, 0.14381526, 0.0060465997, 0.0017600344, -0.027381489, -0.10091857, 0.012270541, -0.01620944) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.011013595, 0.13899952, -0.00044116713, -0.11251453, -0.016411662, -0.11657335, -0.092969865, 0.010861443, 0.0033417994, -0.2580305, 0.054024413, 0.009170317, 0.017585728, 0.023342842, -0.06377976, -0.0048440928) * inp_3_0_0;
    result0 += M4(0.028664418, 0.07880062, -0.009311706, 0.00268061, 0.02030129, 0.05117079, 0.06056497, -0.008485808, -0.05008765, -0.13963866, -0.0572833, 0.103780665, -0.07147385, -0.0657902, -0.089273214, 0.059732348) * inp_3_1_0;
    result0 += M4(-0.011536207, -0.059750117, -0.019664783, -0.010473796, 0.0045349565, 0.04842795, -0.0025107246, 0.0046619033, 0.016265482, -0.024502661, -0.137026, 0.08932625, 0.049568243, 0.12585776, -0.025349937, -0.0018763684) * inp_3_2_0;
    result0 += M4(0.0794088, -1.2418875, 0.12396667, 0.02899294, -0.037227295, -0.12783358, -0.024691561, 0.05248875, 0.00018954402, -0.20350933, 0.011479915, -0.03129937, -0.12293211, 0.20423386, 0.070114486, -0.15525977) * inp_3_0_1;
    result0 += M4(0.046767134, 0.2075711, 0.08557662, -0.20799385, -0.1380968, -0.13464202, -0.102348134, -0.020269578, 0.23485471, -0.031742893, -0.18084197, 0.20594332, 0.18695432, -0.3926267, 0.097379714, 0.060195245) * inp_3_1_1;
    result0 += M4(0.024398593, -0.08973664, -0.03766967, 0.041268114, 0.027975997, 0.044585586, -0.0043532434, -0.03422281, 0.0019922468, -0.07918577, -0.18302989, 0.16987851, -0.10690211, 0.10900338, 0.022475958, 0.02296493) * inp_3_2_1;
    result0 += M4(0.05169529, -0.6306398, -0.02608975, 0.023946607, 0.102348715, 0.14701289, 0.0037469957, -0.0032681199, -0.013860462, -0.17316195, -0.005841669, 0.012043389, -0.6636908, 0.24911693, -0.043656033, -0.19436525) * inp_3_0_2;
    result0 += M4(0.026926318, 0.18810709, 0.025956785, -0.018841747, -0.08612494, -0.02816858, 0.0003223712, -0.011845695, -0.15517391, 0.12148207, -0.11633408, 0.07238774, -0.3090286, -0.1258644, -0.022193147, 0.09209935) * inp_3_1_2;
    result0 += M4(-0.049262013, -0.109063074, 0.007813003, 0.013816494, -0.07415833, 0.053187676, 0.03164179, -0.02768666, 0.011511856, -0.01687925, -0.0014494469, -0.018714467, 0.09257105, 0.07879131, -0.0074520707, -0.025769316) * inp_3_2_2;
    result1 += M4(-0.05831015, 0.06010552, -0.00078176754, 0.06231941, -0.02842578, 0.05821672, -0.007541911, -0.10869172, 0.005510662, -0.17580256, -0.010200661, -0.0588679, -0.051272716, -0.1289846, -0.04150214, -0.2818707) * inp_3_0_0;
    result1 += M4(0.041396715, 0.08873447, -0.0028504273, 0.23257686, -0.085486166, -0.029239075, -0.0061730933, -0.18060994, 0.27682626, -0.26814017, -0.05875793, -0.3429292, 0.04629813, -0.0017678443, -0.024576569, -0.46992832) * inp_3_1_0;
    result1 += M4(-0.0128908595, -0.073548555, -0.015226565, -0.023769423, 0.024698956, -0.018667443, -0.008626909, 0.15686578, 0.114075355, -0.047023054, -0.008086474, -0.15806213, -0.041925285, -0.022361722, -0.0018605709, -0.18362674) * inp_3_2_0;
    result1 += M4(0.0015035208, -0.26803815, -0.032925725, 0.052998606, 0.0148224, -0.079710454, -0.043044057, -0.071570985, -0.037854034, 0.1567524, 0.00027793722, 0.04774233, 0.06885722, 0.16223581, 0.06318357, 0.14255708) * inp_3_0_1;
    result1 += M4(-0.26121253, -0.07591676, -0.029239064, -0.23610494, -0.07251834, 0.04797673, 0.06618213, -0.24837376, 0.24437413, 0.3898427, -0.22392528, 0.40771857, 0.07727625, 0.11618033, 0.00761533, 0.4260816) * inp_3_1_1;
    result1 += M4(0.06847731, 0.038398724, 0.02377103, -0.03166379, -0.027999742, 0.036045723, -0.06531664, -0.28242424, 0.2629103, -0.19769813, -0.18290341, -0.054648016, 0.084389314, 0.068116985, -0.011241066, 0.29903188) * inp_3_2_1;
    result1 += M4(-0.0037721444, 0.11280889, 0.09096959, -0.27691668, -0.058955822, -0.22161078, -0.03205616, -0.03420704, -0.011110156, -0.063350715, 0.03817842, -0.0036639594, -0.031943813, -1.3814366, -0.074991696, -0.28187504) * inp_3_0_2;
    result1 += M4(0.021142127, 0.05968439, 0.10960854, 0.14938906, -0.0062820297, -0.16315736, -0.0998417, 0.13015884, -0.036381137, -0.33179492, -0.16143025, -0.24696977, 0.034590013, -0.14799884, 0.042233903, -0.18585463) * inp_3_1_2;
    result1 += M4(-0.030914424, -0.021343643, -0.048399568, 0.083933085, -0.0061534126, 0.09094098, -0.003914611, -0.04396928, 0.037215944, -0.004548038, -0.19093059, -0.096542604, -0.013173299, 0.042449005, -0.01171605, -0.12540458) * inp_3_2_2;
    result2 += M4(-0.05950924, -0.10301885, 0.043443847, 0.06538884, 0.0047163838, -0.052940473, -0.002830258, -0.19062358, -0.028880805, -0.02682288, 0.0096627725, 0.054978035, -0.004810759, -0.1418388, -0.008617739, -0.03885098) * inp_3_0_0;
    result2 += M4(-0.02086525, -0.10943778, 0.019406965, 0.07023747, 0.0070185764, 0.05935424, 0.014456009, 0.12559417, 0.09136473, 0.00962526, -0.022376604, -0.059181727, 0.09750933, 0.06466664, -0.047138236, -0.17014924) * inp_3_1_0;
    result2 += M4(0.0080802655, -0.10111457, 0.21386354, -0.049904868, -0.0132845715, 0.10065414, -0.102449685, -0.0031716872, 0.06244117, -0.024369575, 0.13527973, -0.026299654, -0.020216042, -0.048350345, 0.07935611, 0.02373741) * inp_3_2_0;
    result2 += M4(0.109693125, -0.021825092, -0.03766745, 0.09032054, 0.041991718, -0.16149102, 0.0263082, 0.109378874, -0.058570027, -0.018833451, 0.009656669, 0.018347112, 0.012314143, -0.065733254, -0.03266454, -0.20558152) * inp_3_0_1;
    result2 += M4(-0.19327019, -0.07234108, 0.28348228, 0.026247032, 0.012723676, 0.03497367, 0.0016335424, -0.2594567, -0.15448073, 0.076659195, 0.054574408, -0.05310322, -0.005701923, 0.035085477, 0.19973695, -0.19962324) * inp_3_1_1;
    result2 += M4(-0.011697822, -0.1037546, -0.2697352, 0.07918762, -0.03300001, 0.013508535, -0.25926688, 0.03452813, 0.033265565, 0.06677207, 0.0068765227, 0.024961986, 0.022615962, 0.08613629, -0.27106002, 0.094286285) * inp_3_2_1;
    result2 += M4(-0.051121604, -0.114369914, 0.030724205, -0.013409921, 0.0113314595, 0.10689839, -0.01847894, 0.023670394, -0.0014635344, 0.02752328, -0.0011899062, -0.02719913, -0.11278527, -0.122851305, 0.020700922, -0.3071278) * inp_3_0_2;
    result2 += M4(0.1461646, -0.034424588, 0.041824684, 0.03422788, 0.004396264, -0.059013426, 0.046299458, 0.036915418, -0.070110954, 0.028090287, -0.016301015, 0.06557316, 0.013181501, 0.03199665, 0.052055106, 0.23847955) * inp_3_1_2;
    result2 += M4(0.015064781, 0.003916018, 0.121322066, 0.0035119222, -0.007152365, -0.16059116, -0.019480981, -0.038341407, -0.047144476, 0.0010850969, -0.118483976, -0.002024598, 0.009946486, 0.11547414, 0.044396475, -0.1820672) * inp_3_2_2;
    result3 += M4(-0.049273696, 0.14579374, 0.028457925, -0.081579, 0.05858923, -0.22839558, 0.01996591, 0.004991652, 0.011391472, 0.1464816, -0.20209947, -0.0072261947, 0.054495063, -0.20094205, 0.029029736, -0.12206445) * inp_3_0_0;
    result3 += M4(0.055684093, -0.018038638, 0.03386064, -0.02123635, 0.0541452, -0.06835053, -0.09212099, 0.051307347, -0.054618303, -0.4504292, 0.27110618, 0.072832406, -0.0009722947, 0.2498885, 0.111168526, -0.04878636) * inp_3_1_0;
    result3 += M4(0.073713355, -0.07551053, 0.039185192, 0.013104251, -0.012055836, -0.049974985, -0.015577153, -0.03952306, 0.08055062, -0.16252673, -0.08496632, -0.08174531, -0.05185566, 0.2744077, -0.10491167, -0.028042203) * inp_3_2_0;
    result3 += M4(0.017860169, 0.36630872, -0.07830262, -0.22625813, 0.05754747, -0.17539717, 0.08558814, -0.035047557, -0.010080313, -0.004795055, -0.048013773, -0.12430455, -0.21120371, 0.1921839, -0.31751168, -0.20258485) * inp_3_0_1;
    result3 += M4(0.029605266, -0.067281306, -0.6146627, 0.097141124, -0.042085983, -0.2605093, -0.043350942, 0.02494741, 0.19210154, -0.17259566, 0.13671824, 0.25633886, 0.008850419, -0.3952157, 0.24878979, 0.11257578) * inp_3_1_1;
    result3 += M4(-0.1544695, -0.29513168, 0.18629947, 0.015291093, -0.029690681, 0.084856816, -0.051012345, -0.011573386, -0.111919716, -0.12360674, 0.082641564, -0.05776214, 0.08165742, 0.23632641, -0.21022046, 0.0070016724) * inp_3_2_1;
    result3 += M4(-0.06874791, -0.06756358, -0.013770216, -0.27182218, 0.019301375, 0.063871495, -0.024433369, -0.055955175, 0.058657568, 0.071485184, -0.0051526753, -0.002119106, -0.20162585, -0.47923395, -0.29358783, -0.2261661) * inp_3_0_2;
    result3 += M4(0.009465296, 0.1640423, -0.023550319, -0.08890179, 0.025903385, -0.14371796, 0.017630348, 0.027003242, -0.11883043, -0.19380157, -0.034249693, 0.058027904, -0.12376283, 0.075382024, 0.16490823, -0.033560153) * inp_3_1_2;
    result3 += M4(0.068068765, -0.14031598, 0.063361414, 0.02205761, 0.016350586, -0.0327661, 0.0137116555, 0.016751064, 0.0027555411, -0.05946853, -0.022902168, -0.025011476, -0.0020332963, 0.21922077, -0.05357363, -0.068211965) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DS (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.010025061, 0.0025150664, -0.0036876786, -0.023696993);
    V4 result1 = V4(0.0067796996, 0.0072966847, -0.008601631, -0.001753471);
    V4 result2 = V4(0.0037639688, 0.0065239263, 0.00056953705, -0.00069859135);
    V4 result3 = V4(-0.0032649692, 0.0021565426, 0.04680398, -0.020808075);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.2330211, -0.27222693, -0.3000199, 0.07948528, -0.005116135, 0.11210703, 0.093714654, -0.07923939, 0.031047577, -0.03672954, -0.117798746, 0.042901162, -0.16337971, -0.046192165, 0.11704225, -0.04388921) * inp_0_0_0;
    result0 += M4(-0.49375588, -1.1687785, -0.19461745, -0.33966345, 0.23073098, 0.17297877, -0.0859073, -0.019237634, 0.033053078, -0.081775576, -0.06618529, -0.017601646, -0.09594362, 0.05454237, 0.109043375, 0.047150772) * inp_0_1_0;
    result0 += M4(0.796292, -0.37119767, -0.829288, -0.32531703, 0.25193673, 0.1396456, -0.11798609, -0.0750842, -0.059504833, -0.10832444, -0.08235853, 0.016238246, 0.058395434, 0.07230596, 0.036912818, 0.007948149) * inp_0_2_0;
    result0 += M4(0.010775085, 0.12880598, 0.13169117, 0.12818135, 0.009789986, 0.17165613, 0.044943653, -0.026911598, -0.14304645, -0.10050372, -0.080354474, -0.055258863, 0.030749185, 0.076642506, -0.13463864, 0.07598541) * inp_0_0_1;
    result0 += M4(0.14590524, 0.17069645, 0.25673774, 0.31910512, 0.10799692, 0.1510232, 0.8195486, 0.16613445, 0.36585578, -0.7928513, -0.062198576, -0.17491467, -0.5945478, 0.8369603, -0.14220132, 0.058166817) * inp_0_1_1;
    result0 += M4(0.17747433, -0.020951038, -0.097325765, 0.07057381, 0.07644199, 0.3737295, -0.07961495, 0.036634676, -0.22574486, -0.14733177, 0.07426475, 0.13990334, 0.2745345, 0.21569347, 0.010531245, -0.13338757) * inp_0_2_1;
    result0 += M4(-0.018803364, -0.015582927, -0.008555444, -0.025917491, 0.017556828, 0.1284606, 0.06046431, -0.0016781813, 0.007089469, -0.05553276, 0.21015108, -0.001829443, -0.043200247, 0.0070863455, -0.27249786, -0.008144026) * inp_0_0_2;
    result0 += M4(0.14682241, -0.15619011, 0.18193974, 0.055927318, 0.24341014, 0.037434764, -0.19318189, -0.0056715645, -0.02971199, -0.08307502, -0.013505187, 0.03795139, -0.3946798, 0.16170861, -0.48281017, -0.013477861) * inp_0_1_2;
    result0 += M4(-0.076025136, 0.01066446, -0.06441841, -0.029467413, -0.00731909, 0.07302878, 0.11875717, 0.00490605, 0.15011452, 0.019320749, -0.09406661, 0.02068604, -0.27969968, 0.06932693, 0.025475668, -0.02994343) * inp_0_2_2;
    result1 += M4(0.40180698, 0.081602916, 0.00372552, 0.54159725, -0.11811663, 0.0033696934, -0.07670196, -0.041438986, 0.057958916, 0.09450878, -0.05096457, 0.122794874, -0.004190882, -0.16990282, 0.1991346, -0.15817907) * inp_0_0_0;
    result1 += M4(-0.018524956, -0.36593506, -0.13842222, 2.1615145, -0.22195147, -0.033748165, -0.24271956, -0.09574142, 0.023949029, -0.0059896563, -0.11927934, 0.09631797, 0.036390807, 0.050961178, 0.19266468, 0.028766127) * inp_0_1_0;
    result1 += M4(-0.93810177, -0.5235317, 0.8400091, 0.8433541, -0.2235694, -0.11661239, -0.3535793, 0.23385647, 0.09282101, -0.006765332, 0.020983556, 0.029338773, -0.057486102, 0.020164194, -0.018096775, -0.017354023) * inp_0_2_0;
    result1 += M4(0.11395709, 0.03874499, 0.10255976, 0.030950274, -0.23610868, 0.03258422, -0.113453746, -0.13062888, 0.09139747, -0.10721458, 0.15248199, 0.026515359, -0.101817116, 0.0066373535, -0.13370003, 0.044546816) * inp_0_0_1;
    result1 += M4(0.2127516, 0.021288, -0.31842402, -0.122798614, -0.38282287, 0.07215069, 0.037644524, 0.1773486, 0.51360244, 0.18293373, 0.048870098, -0.22593851, -0.39463753, -0.24567093, -0.0883004, 0.13681926) * inp_0_1_1;
    result1 += M4(0.10133329, -0.32044366, 0.122039385, 0.22770984, -0.5539451, 0.033857208, 0.08122487, -0.037531696, -0.011202833, -0.081017904, -0.26977766, 0.05739503, -0.019771056, 0.10129122, 0.3416483, 0.18808354) * inp_0_2_1;
    result1 += M4(-0.059728056, 0.024707695, 0.007567598, 0.022252882, -0.07557398, -0.02688, 0.046350285, -0.09558161, 0.03741128, 0.12222794, 0.12061689, 0.019296758, 0.007771458, -0.1578317, -0.14220242, -0.07831029) * inp_0_0_2;
    result1 += M4(0.076735415, -0.012707849, 0.1284971, 0.12559105, -0.22141404, -0.1043198, -0.23764232, -0.09072479, 0.024244687, -0.24327505, 0.034727186, -0.050645422, -0.01901254, 0.01703928, -0.08942947, -0.35485378) * inp_0_1_2;
    result1 += M4(-0.0056261183, -0.005460596, 0.00790554, -0.120046385, -0.12631479, 0.07755791, 0.011420464, -0.12589481, -0.060267217, -0.028044604, -0.015831882, -0.10025906, 0.0848544, -0.020753674, -0.09190081, -0.11212648) * inp_0_2_2;
    result2 += M4(0.09872, -0.12715122, -0.62573475, 0.03216111, -0.0069511808, 0.029716674, 0.020580042, -0.057510104, 0.007838139, -0.022099992, 0.070607804, 0.030013422, 0.046912666, 0.0004936038, -0.15865113, 0.029335255) * inp_0_0_0;
    result2 += M4(-0.7745183, 0.39380977, -2.0493474, -0.75738, -0.09093968, 0.017857546, 0.16763286, 0.05716073, -0.00029933275, -0.071471095, -0.14329636, -0.0010324365, 0.030666167, 0.09376297, 0.27547672, 0.036026422) * inp_0_1_0;
    result2 += M4(-0.950664, -0.115002535, -0.77771676, -0.17656721, -0.19263966, 0.03127207, 0.34926635, 0.19294037, 0.09904643, 0.014125499, -0.058244657, -0.0015202143, -0.06484651, -0.0015045255, 0.055717748, 0.0012697811) * inp_0_2_0;
    result2 += M4(0.11596653, -0.017268574, 0.04107491, 0.08494077, -0.063800916, -1.4770826e-05, 0.19637968, 0.16888437, 0.096027255, -0.048294704, -0.058480475, 0.04637046, -0.16795671, 0.0010650489, -0.12825039, -0.073422514) * inp_0_0_1;
    result2 += M4(-0.0032427034, 0.010735391, -0.076028235, -0.22026753, -0.2243671, -0.023238508, 0.14959303, 0.30538714, 0.4723842, -0.18206386, -0.27909276, -0.03531452, -0.7211218, 0.21167938, 0.024457116, 0.40901613) * inp_0_1_1;
    result2 += M4(-0.1840283, -0.014445959, 0.039250407, 0.12616126, -0.22616427, -0.03105333, -0.3723583, 0.007447927, 0.079837255, 0.08832116, 0.06806185, -0.07800475, -0.15217647, -0.10232967, -0.13378061, 0.15074989) * inp_0_2_1;
    result2 += M4(-0.03421696, -0.010570913, 0.055868514, -0.0039803083, -0.029498715, 0.004509715, -0.047000714, -0.046695232, 0.047576636, 0.022733342, 0.05532445, 0.055585723, -0.0955795, -0.07797241, -0.06942354, -0.110597506) * inp_0_0_2;
    result2 += M4(0.10739155, 0.15742585, 0.003663743, -0.08415274, -0.19265027, -0.030296402, 0.07403131, -0.27699465, 0.122549854, 0.0857122, 0.1229334, 0.09567834, -0.1890151, -0.17581686, -0.19594535, -0.1978104) * inp_0_1_2;
    result2 += M4(-0.021390425, -0.03775542, -0.022733085, 0.081377976, -0.09660676, -0.0028800662, 0.16181262, -0.029171351, -0.14642817, -0.008526159, -0.0136728, -0.0027277092, 0.1286136, -0.039640885, 0.05997141, 0.106029816) * inp_0_2_2;
    result3 += M4(0.009287959, 0.7755653, -0.31169516, -0.040451113, -0.050930288, 0.039443158, 0.015064526, -0.06269293, 0.057674017, -0.047213797, -0.03526604, 0.03488354, -0.017089868, -0.025451003, 0.029566139, 0.06478448) * inp_0_0_0;
    result3 += M4(-0.1389388, 1.1125319, -0.23237361, -0.20535628, 0.1972054, 0.18083306, 0.062797286, -0.096516915, 0.192729, -0.09432895, -0.029918706, 0.0014574254, -0.44305432, -0.00012295053, -0.025260625, 0.05049748) * inp_0_1_0;
    result3 += M4(-0.06356999, 0.9069137, 0.28743094, -0.15691054, -0.07617443, 0.29598153, 0.03248727, -0.15457663, 0.13146181, 0.02437637, -0.0559684, 0.007932295, -0.096885145, 0.007152674, 0.010896329, -0.009841519) * inp_0_2_0;
    result3 += M4(-0.07089215, -0.008116282, -0.060214184, 0.08422598, 0.064654954, 0.2566359, 0.006858903, -0.059293464, 0.08420978, -0.28148296, -0.011981113, 0.031274, -0.07951338, 0.15829031, 0.03710292, 0.103444725) * inp_0_0_1;
    result3 += M4(0.13157797, -0.1418503, -0.31344476, -0.14427914, -0.10049792, 0.6853031, 0.026660426, -0.029505383, 0.584311, 0.08745152, -0.05803463, 0.1975341, -0.7033848, -0.08652483, 0.17434426, -0.14408526) * inp_0_1_1;
    result3 += M4(-0.16077998, 0.050052084, 0.027051201, 0.054705083, 0.16609389, 0.50723654, 0.017930467, -0.089190856, 0.18708473, 0.1715237, -0.0776124, 0.22875226, -0.37504667, -0.19871774, 0.13232526, -0.1759512) * inp_0_2_1;
    result3 += M4(-0.0046251765, 0.00013410534, 0.02516267, 0.005163408, -0.007550732, 0.15186445, 0.011526318, -0.03277352, 0.026047215, 0.07389732, 0.024860209, 0.0115302, -0.00801598, -0.023917148, -0.036179285, -0.0146271745) * inp_0_0_2;
    result3 += M4(0.045867942, -0.10863714, -0.03245251, 0.030008242, -0.14620574, 0.2435634, 0.061089944, 0.06730277, 0.2854575, -0.24118492, -0.097870395, 0.045873232, -0.08537917, 0.1898487, 0.06718187, -0.104862005) * inp_0_1_2;
    result3 += M4(-0.006125933, -0.0006325129, 0.009043305, -0.084412135, 0.096810035, 0.14756915, 0.02229383, 0.019114453, 0.069245756, -0.09059021, 0.034002744, 0.053483646, -0.012366351, 0.021713188, -0.055026222, -0.14168034) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.012803551, 0.092226736, 0.037292536, -0.06449618, -0.036196254, 0.06019686, -0.12855431, 0.06263483, -0.025916861, -0.09845375, -0.10672767, 0.013037722, 0.08350128, 0.044221137, -0.032523528, 0.0017314606) * inp_1_0_0;
    result0 += M4(0.18131255, 0.106959626, -0.21094233, -0.0412674, -0.17108715, 0.40600893, 0.60670656, 0.08069762, -0.1780082, -0.21237095, 0.32427335, 0.015224544, 0.12807453, -0.0198459, -0.27903277, -0.010721805) * inp_1_1_0;
    result0 += M4(0.070002325, 0.106998965, 0.093016684, 0.054171555, 0.25226337, 0.17981859, -0.0026604536, -0.067774706, -0.22004704, -0.1709722, -0.100382, 0.052030187, -0.06515358, -0.085031874, -0.02310886, -0.006785042) * inp_1_2_0;
    result0 += M4(-0.011293132, 0.06707998, 0.19693474, 0.0066290763, -0.014785522, 0.09319841, -0.15929371, 0.003372977, 0.015784519, -0.02860923, -0.111748494, -0.009626042, -0.073142745, -0.09623316, 0.05832027, -0.11187427) * inp_1_0_1;
    result0 += M4(0.50833285, 0.305354, 0.14142826, 0.080274515, 0.3877194, 0.18279178, 0.4428076, 0.059895135, 0.5457867, -0.22763748, 0.5242224, -0.09336411, 0.72237575, -0.34511548, -0.04565243, 0.25033456) * inp_1_1_1;
    result0 += M4(0.020491902, 0.03374678, -0.07440624, -0.051929586, -0.104624934, -0.017520742, 0.055856153, -0.12869869, 0.039846517, 0.037805635, 0.10811553, 0.03252397, -0.08362288, -0.15205415, -0.03246698, 0.0077897143) * inp_1_2_1;
    result0 += M4(0.034733534, 0.048626024, 0.033190176, -0.054497123, 0.010077271, 0.06458735, 0.008656904, 0.0049159043, 0.030251117, 0.014671179, 0.048562933, 0.01462283, 0.0658267, -0.120779164, 0.2749252, -0.053360704) * inp_1_0_2;
    result0 += M4(0.21828394, -0.02996571, 0.25339282, 0.09503252, 0.23730668, 0.0048387223, 0.1608885, 0.06320622, 0.108340934, 0.14984109, 0.26252863, -0.021267755, -0.111286186, -0.36071858, -0.05411069, -0.04668624) * inp_1_1_2;
    result0 += M4(0.054174725, -0.0067326045, -0.02657255, -0.03857867, 0.03688978, -0.033122584, 0.104732305, -0.0032305634, -0.05655855, -0.01710806, -0.0016930194, 0.014332366, 0.04736498, 0.024170358, -0.09546307, -0.05162744) * inp_1_2_2;
    result1 += M4(-0.07946162, 0.02399289, -0.1070899, -0.06957348, 0.26029143, 0.18614598, 0.014286074, 0.035655364, 0.23138861, 0.063732706, 0.013746772, 0.019359145, -0.09686331, 0.055875633, -0.20147015, 0.082534716) * inp_1_0_0;
    result1 += M4(-0.07186893, -0.033187762, 0.0493171, -0.2741783, -0.062752776, -0.10838594, -0.29726607, 0.03184381, 0.17815132, 0.28150773, -0.25601766, -0.062424842, -0.023415543, -0.012706423, 0.11281087, -0.030904312) * inp_1_1_0;
    result1 += M4(-0.15070474, -0.06581765, -0.0722709, -0.14950943, -0.05325625, 0.17898631, 0.28090966, -0.085938886, 0.19805191, 0.16003211, 0.20123127, -0.06716262, 0.06585967, -0.010717847, 0.119409874, 0.02571433) * inp_1_2_0;
    result1 += M4(-0.23718359, 0.08616284, 0.16147263, 0.14569622, 0.07650677, 0.042421106, -0.0025652016, 0.015606054, 0.13182038, -0.008895309, 0.050554402, 0.047927357, -0.090309866, -0.15833403, 0.11241269, 0.009791197) * inp_1_0_1;
    result1 += M4(-0.4561121, -0.16950315, -0.06608874, 0.2581368, 0.061053805, 0.16592294, -0.30279475, 0.15146044, 0.122436605, 0.39312956, 0.52327913, 0.5231356, 0.0069423495, 0.32441014, 0.2851573, -0.2703687) * inp_1_1_1;
    result1 += M4(-0.17274952, -0.3111358, -0.120786704, -0.0451881, 0.039155353, 0.06003281, 0.2447452, 0.23535737, -0.010251879, 0.15539537, 0.13624923, 0.120770626, -0.18482575, -0.34016025, -0.36452493, 0.16159098) * inp_1_2_1;
    result1 += M4(-0.119325474, -0.009575684, -0.056885757, 0.05251777, -0.042076077, 0.011727687, 0.009515383, -0.063615516, 0.037979063, 0.017176477, -0.01771512, -0.015372065, 0.025928209, 0.12882122, 0.07990297, 0.15233023) * inp_1_0_2;
    result1 += M4(-0.10103306, 0.007050326, -0.016688334, 0.16898426, 0.06938876, 0.119344324, 0.049019597, -0.06776693, 0.013197945, 0.049120862, -0.07186812, -0.053078156, -0.25036275, -0.32916927, 0.15105513, 0.19816336) * inp_1_1_2;
    result1 += M4(-0.05954595, -0.05074785, 0.04440165, 0.18980826, 0.028013341, 0.03293441, 0.08376971, 0.1933736, 0.017179297, 0.017151352, 0.0056325076, -0.033084188, -0.03474349, -0.012210465, -0.11831636, -0.30328357) * inp_1_2_2;
    result2 += M4(0.0028148524, 0.008617754, 0.11227157, -0.07202097, 0.24133511, 0.020105027, 0.05709763, 0.04933389, 0.17686416, -0.09515688, 0.0217648, 0.08553428, -0.08410634, -0.016003108, 0.11899387, -0.045263182) * inp_1_0_0;
    result2 += M4(0.084058076, -0.1014508, 0.06327101, 0.10133829, -0.13222656, 0.24425747, -0.17995949, 0.0017721428, 0.11537841, -0.09977239, -0.06464308, -0.45238286, 0.0428179, -0.13368332, -0.25128153, -0.018862588) * inp_1_1_0;
    result2 += M4(-0.14776832, -0.030658396, 0.058511995, -0.03318506, -0.03421153, -0.031145569, -0.0061796727, -0.09819237, 0.23935969, 0.12505928, 0.08780337, -0.112178676, 0.031262636, -0.03792296, -0.14092413, -0.013885673) * inp_1_2_0;
    result2 += M4(-0.036129635, 0.07168641, 0.11175586, 0.2647758, 0.15632029, -0.01292492, 0.082234405, 0.13481589, 0.07323695, 0.020209799, 0.011137062, -0.06487748, -0.0068508256, 0.008025333, 0.08463613, 0.119426616) * inp_1_0_1;
    result2 += M4(0.16298424, -0.019332595, 0.09958543, -0.08491547, -0.084799096, 0.17164484, 0.07891035, -0.2242615, -0.1486487, 0.13194974, -0.16968703, -0.00547947, 0.35843036, -0.15876882, -0.13335942, -0.41654763) * inp_1_1_1;
    result2 += M4(-0.186397, -0.07546997, 0.0020967412, -0.02139884, 0.059205633, -0.022569206, -0.037130803, -0.08796064, 0.007122127, -0.0011622838, -0.03354235, 0.066474624, -0.13584265, -0.019271128, 0.062184658, 0.09275253) * inp_1_2_1;
    result2 += M4(-0.05375496, -0.033189334, 0.08264066, -0.02538007, -0.038982663, 0.0011791651, 0.014183563, -0.045759127, 0.04337106, 0.04794067, -0.005687534, 0.008136428, 0.058273118, 0.0425296, 0.085064456, 0.058062825) * inp_1_0_2;
    result2 += M4(0.013330753, 0.124545924, 0.106124125, -0.167171, 0.024562007, 0.061762188, 0.08968742, 0.118780285, 0.00014132725, -0.045550227, -0.003075517, 0.013862436, 0.059731185, 0.18193947, 0.0697699, -0.31366396) * inp_1_1_2;
    result2 += M4(-0.042091224, -0.010111262, -0.11183363, 0.024992239, 0.03581685, 0.0056439615, -0.07175587, 0.0380232, 0.03902942, 0.008805213, 0.049634703, -0.047642436, -0.032252196, 0.009072897, 0.03200882, -0.03405283) * inp_1_2_2;
    result3 += M4(-0.0149704255, -0.12394643, 0.01869, -0.04700511, -0.06619093, -0.026564073, -0.065768816, 0.009171041, -0.04894493, -0.11570471, -0.052741595, 0.12587121, 0.054851044, 0.021556182, 0.01756426, -0.0034179739) * inp_1_0_0;
    result3 += M4(0.27014935, -0.048605647, 0.023945848, -0.026375921, -0.57357043, 0.32572207, 0.10900342, 0.016617322, -0.49007383, 0.21105252, -0.0698183, 0.1638311, 0.4727801, -0.06125038, -0.014514962, -0.027897257) * inp_1_1_0;
    result3 += M4(0.012301528, 0.030396344, 0.03439989, 0.043200605, -0.41446802, -0.20256574, 0.068440095, -0.08533166, -0.16401154, -0.053114176, -0.07721742, 0.09785377, 0.07860439, -0.083371505, -0.012636903, 0.022810198) * inp_1_2_0;
    result3 += M4(0.23767214, 0.104598954, 0.04713986, 0.009361668, -0.123588465, -0.108841434, -0.04587675, -0.013415857, -0.13244706, -0.325789, -0.01062557, 0.013789495, 0.18117492, -0.30622846, 0.02733613, -0.05151599) * inp_1_0_1;
    result3 += M4(0.8578407, -0.4392629, -0.11143459, -0.11519014, -0.87013924, 0.07878169, -0.119012214, -0.09471254, -0.39589193, -0.13496551, 0.2062453, 0.20320831, 0.85265213, -0.2750737, 0.1161576, 0.08507216) * inp_1_1_1;
    result3 += M4(0.49022612, 0.2599583, 0.0608688, -0.09937636, -0.024823485, 0.088156566, 0.023535922, -0.1502186, -0.20234126, 0.003105292, -0.030117657, 0.033214673, 0.4310853, 0.33691806, 0.109133214, 0.05284129) * inp_1_2_1;
    result3 += M4(-0.0075842524, 0.0064397133, 0.022951864, 0.004399018, -0.08363098, 0.036312506, 0.009827026, -0.0036259796, -0.050465032, -0.019244002, -0.025182411, -0.042602282, 0.06820974, 0.033621863, 0.056220792, -0.028947704) * inp_1_0_2;
    result3 += M4(0.16634826, 0.038254548, 0.0136510255, 0.07215302, -0.35360467, 0.018078273, -0.048386388, -0.018157033, -0.25532234, 0.24390267, -0.012379203, -0.07840949, 0.7819651, -0.051380556, 0.058270995, 0.079455726) * inp_1_1_2;
    result3 += M4(0.04060766, 0.06560267, 0.01448176, -0.032080766, -0.07533255, 0.07771076, -0.0051592663, 0.0017353473, -0.07130097, -0.0129831005, -0.0144259455, 0.011363438, 0.05993261, -0.19912001, 0.041301057, -0.033824466) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.053030174, -0.0095568495, -0.0600799, 0.034806132, 0.014028714, 0.13018174, -0.1294512, -0.051753487, -0.102240235, 0.09308822, 0.36159176, -0.01465407, 0.05997787, 0.02161092, 0.010172873, -0.015277587) * inp_2_0_0;
    result0 += M4(0.036780354, -0.035251714, 0.007405304, 0.0036803544, -0.040566515, -0.011916993, -0.05602662, -0.08984827, -0.284879, 0.02265502, -0.01747209, 0.2208206, 0.064787164, -0.033638727, -0.110044956, 0.09519053) * inp_2_1_0;
    result0 += M4(-0.027723072, 0.008395133, 0.030091649, 0.058809515, -0.06724162, 0.0578516, 0.07387339, 0.11384854, 0.016094124, -0.072938055, -0.11600093, -0.028104795, 0.20321517, -0.007383545, -0.14137574, -0.04438146) * inp_2_2_0;
    result0 += M4(-0.111321375, -0.055521872, 0.04606996, -0.048400693, -0.037322033, -0.015923865, -0.023515642, 0.018436989, -0.7284291, 0.19581816, 0.13823365, -0.5981999, 0.17362107, -0.31782374, 0.07164264, -0.088554695) * inp_2_0_1;
    result0 += M4(-0.010980622, -0.12532355, 0.02069375, -0.035065304, -0.046304148, -0.01088801, 0.031334344, 0.01601841, -0.08951694, 0.13264188, -0.17491819, 0.25810498, -3.2206062e-05, 0.29121873, -0.16552629, 0.046256345) * inp_2_1_1;
    result0 += M4(0.11596423, -0.0055863503, -0.07114696, -0.023213597, 0.061442774, 0.029584829, -0.107129395, 0.012067865, -0.058146827, -0.003738571, 0.05675007, 0.011598602, 0.15440941, 0.26193437, 0.23224927, -0.03944287) * inp_2_2_1;
    result0 += M4(-0.08831696, 0.045091126, -0.11678238, 0.014324995, 0.0044386694, -0.022028893, 0.110042155, 0.101991884, -0.8377212, 0.08336429, -0.56302506, -0.16758949, -0.0012726439, -0.06740071, -0.06350687, 0.08672234) * inp_2_0_2;
    result0 += M4(-0.14869049, 0.006917197, -0.3053648, -0.0039456817, -0.08491031, 0.057662774, 0.058386095, -0.07365916, 0.17286049, -0.062277056, -0.01666004, 0.21908385, 0.26295176, 0.12675321, 0.18465057, 0.032612734) * inp_2_1_2;
    result0 += M4(-0.14125304, 0.0886838, -0.16493784, -0.003986827, 0.10680873, 0.044012114, -0.025241777, -0.037937503, 0.1089469, -0.03052079, -0.057407036, 0.038138263, 0.4297536, -0.10241351, 0.09586938, -0.0038728868) * inp_2_2_2;
    result1 += M4(0.0858012, 0.081733525, 0.06464469, 0.036029566, 0.091333725, 0.11340006, 0.02348401, -0.0607992, -0.17914875, -0.2644628, -0.10519549, -0.73713875, -0.2822549, -0.07991325, -0.20314732, -0.089841254) * inp_2_0_0;
    result1 += M4(0.071817, 0.049699627, -0.14512435, 0.058592208, -0.089737594, 0.0091643445, -0.022390675, -0.059841294, 0.048622705, 0.12895645, 0.033748172, 0.18337944, 0.06681173, -0.057665333, 0.2648562, -0.2608215) * inp_2_1_0;
    result1 += M4(0.0147374235, 0.043003473, -0.07565549, -0.12273293, 0.10879465, -0.1248022, -0.040144898, 0.11855503, 0.013508096, -0.027782915, 0.070711836, 0.15096428, -0.047365487, -0.05900144, 0.08557759, 0.08034169) * inp_2_2_0;
    result1 += M4(0.037499074, -0.016071096, 0.06012839, -0.047499504, 0.0050594853, 0.12054124, 0.006990198, -0.11702031, 0.20290002, -0.5397049, -0.067682505, -1.2841324, 0.09139982, -0.115537986, -0.04356471, 0.6441532) * inp_2_0_1;
    result1 += M4(-0.009840483, -0.03418796, 0.0047064344, -0.14744599, -0.118221276, -0.07596795, 0.010840815, -0.042547625, 0.041614667, 0.35572615, -0.15691869, -0.25173417, 0.16682501, 0.26398945, -0.3240004, 1.2833729) * inp_2_1_1;
    result1 += M4(0.089512445, 0.0086169345, 0.06992769, 0.21110511, -0.06745315, -0.1348197, -0.11465439, 0.10916726, 0.004170111, 0.038625445, -0.07788284, 0.026263515, -0.097380355, 0.110421315, -0.16237432, -0.080936685) * inp_2_2_1;
    result1 += M4(-0.018493865, 0.022652056, 0.08293436, -0.07385056, 0.05600872, -0.0155401975, -0.13475622, 0.012746322, -0.10418016, -0.32014492, -0.19575796, -1.4583093, 0.08948056, -0.086766854, 0.0028658954, 0.11079286) * inp_2_0_2;
    result1 += M4(0.17564884, -0.018645182, -0.19402352, -0.11605335, 0.015288194, -0.09708911, 0.06576222, -0.092854604, -0.020976502, 0.15655266, 0.13382134, -0.086413726, -0.07514342, 0.1566988, -0.026698228, 0.6061877) * inp_2_1_2;
    result1 += M4(0.0012356341, -0.049485397, -0.048742265, -0.1486946, -0.06664438, -0.048471533, 0.0067455713, -0.05613826, -0.023471434, 0.010788382, 0.03035303, -0.120518014, -0.3601539, -0.11853285, 0.19033955, 0.34822634) * inp_2_2_2;
    result2 += M4(0.066806935, 0.004160799, 0.047583923, -0.0013847955, -0.037502512, 0.0030416392, 0.09082085, -0.011969709, 0.07915542, -0.024204094, 0.6141727, 0.13688484, -0.25732312, -0.006452217, 0.09164683, -0.13794713) * inp_2_0_0;
    result2 += M4(0.023161044, -0.069368325, -0.030325184, 0.034971345, -0.13187036, -0.07419948, 0.10045913, 0.09672408, 0.06995006, 0.11429921, 0.25531688, -0.14996792, 0.00412592, -0.028504277, -0.4072728, -0.18714823) * inp_2_1_0;
    result2 += M4(0.036163907, 0.028562121, 0.09926911, -0.05324576, -0.0367905, -0.108510524, 0.091878645, 0.1298341, -0.016836064, -0.0014382886, -0.08253844, 0.038467627, -0.15234472, -0.055690445, -0.1304835, 0.07631938) * inp_2_2_0;
    result2 += M4(0.02942263, -0.07345443, 0.053002298, 0.10340527, 0.11977541, -0.044318147, -0.06832979, -0.065638244, 0.054577798, -0.4097298, 0.5367633, -0.05206186, -0.06244382, -0.039081387, -0.07345257, 0.13603552) * inp_2_0_1;
    result2 += M4(-0.060687304, 0.1879505, 0.07739771, -0.12889545, 0.078126386, 0.039709657, 0.1388932, 0.12054222, -0.13673802, -0.08654422, -0.35993052, 0.5167354, 0.8120861, 0.21293849, -0.1225059, 0.105585374) * inp_2_1_1;
    result2 += M4(-0.08436054, -0.007988241, -0.0070532314, 0.25444287, -0.04558364, 0.11473406, -0.13059857, -0.11936033, 0.07654664, 0.024513692, -0.047672674, 0.03316697, 0.06852653, -0.0035021375, 0.0022919644, -0.056074295) * inp_2_2_1;
    result2 += M4(-0.009644371, -0.044875156, -0.089087665, -0.07800675, 0.03572157, -0.08415817, 0.003995758, 0.039592296, -0.17605951, -0.35074404, 0.25323758, 0.2443833, -0.017024118, -0.017377982, -0.13508329, 0.06340166) * inp_2_0_2;
    result2 += M4(-0.012253936, -0.083945975, -0.037301082, 0.20289059, -0.08553568, 0.1258611, -0.05900744, 0.06353135, -0.21844223, -0.037912183, 0.11824846, -0.40347135, -0.02264574, 0.010073206, 0.027589936, 0.07789094) * inp_2_1_2;
    result2 += M4(-0.010794603, -0.037253078, 0.006078192, 0.022092234, 0.12195856, -0.027259784, 0.05997377, -0.082258366, -0.039626226, 0.011612714, 0.08037083, -0.08698192, -0.18502529, 0.048497654, -0.06910553, -0.33594158) * inp_2_2_2;
    result3 += M4(-0.012847047, -0.15597193, -0.016327776, 0.050746676, 0.110934176, -0.11261832, -0.023913668, -0.1213779, -0.19964229, 0.058929566, 0.008454462, 0.30175942, 0.17048019, 0.019893995, 0.06220593, -0.030323876) * inp_2_0_0;
    result3 += M4(0.05588471, 0.03437926, -0.09168312, 0.014080128, 0.12571163, -0.1218636, -0.08736395, 0.061252207, -0.044687662, 0.049468447, -0.08374868, 0.18242918, 0.34028915, -0.1834578, -0.015854659, -0.103935376) * inp_2_1_0;
    result3 += M4(-0.0052853804, 0.01427063, -0.015255335, 0.058352068, -0.034351844, -0.07287697, 0.1413217, 0.07097564, 0.043564122, 0.03604753, 0.0007442052, -0.011598937, 0.00878287, -0.005764997, 0.106194444, -0.027666615) * inp_2_2_0;
    result3 += M4(-0.0756858, 0.012712095, 0.01756569, 0.059301656, -0.11128196, -0.0074155587, -0.049753442, 0.1032662, -0.8205259, -0.7437575, 0.156038, 0.47107744, 0.120172076, 0.027512314, -0.036588166, -0.012460047) * inp_2_0_1;
    result3 += M4(-0.21418376, -0.030209986, 0.07765416, -0.038516175, -0.11735616, 0.024614803, 0.07019284, 0.05959362, 0.12960936, -0.007888548, -0.29048726, 0.18273506, 0.34045285, 0.5616344, -0.333751, -0.07154513) * inp_2_1_1;
    result3 += M4(-0.16256714, -0.087669976, 0.10315406, 0.01951405, 0.1344711, 0.0354489, -0.015176364, 0.05560234, -0.034871478, 0.012180617, -0.032914545, 0.024941258, 0.030057577, 0.0071623153, -0.14897594, -0.15378173) * inp_2_2_1;
    result3 += M4(0.0056984453, 0.020020112, 0.006955173, 0.070923515, 0.03327854, -0.05347365, -0.079153955, -0.024384534, 0.1227957, 0.39658865, -0.05769099, -0.18851289, 0.1011032, 0.058373448, -0.046616, 0.042142946) * inp_2_0_2;
    result3 += M4(0.023809453, -0.14332627, -0.046875894, -0.011283571, -0.046891537, -0.123524, -0.10572858, -0.08473452, -0.11834149, -0.11438314, 0.05340824, 0.40561587, -0.2404191, -0.2615534, 0.03242802, 0.09999148) * inp_2_1_2;
    result3 += M4(-0.0026409405, 0.027933512, -0.028126778, -0.018963704, -0.06460597, -0.10693413, -0.08918696, 0.14436917, -0.0644755, -0.04887673, 0.017015968, 0.0634209, 0.12666073, 0.4546121, 0.14455955, 0.13108881) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.13827376, 0.07272141, -0.13772167, 0.031036558, -0.005439667, -0.13521186, -0.19027391, 0.1103608, 0.0638631, 0.12658657, -0.028570322, -0.030305708, -0.0027980094, -0.026227959, -0.11055166, 0.062689275) * inp_3_0_0;
    result0 += M4(-0.28684825, 0.17417406, 0.24478573, -0.038746193, -0.21545258, -0.22168015, 0.30511072, 0.05668047, 0.20185784, 0.2484712, -0.03241369, -0.046022166, -0.23901166, -0.13298179, 0.14402682, -0.032918736) * inp_3_1_0;
    result0 += M4(0.06657739, 0.20520459, 0.17446822, -0.042906836, -0.07588147, -0.19427086, -0.12955731, -0.059113808, -0.011179544, 0.1545648, 0.1192058, 0.020577544, -0.16423935, -0.18605301, 0.14168169, 0.0075073172) * inp_3_2_0;
    result0 += M4(-0.09668034, 0.26705012, 0.2136543, -0.0035371424, 0.29161584, -0.29421172, 0.07631961, -0.035809554, -0.20424545, 0.27809668, -0.07487654, 0.007612166, 0.0026542943, -0.12606205, 0.09631156, 0.06893914) * inp_3_0_1;
    result0 += M4(0.49891397, -0.834284, 0.18267016, -0.017228715, -0.27605113, -0.7316608, -0.46009582, -0.36378035, 0.56718796, 0.684887, 0.4209661, 0.27426514, -0.23199698, -0.34056056, -0.5505211, 0.21453719) * inp_3_1_1;
    result0 += M4(-0.37342942, -0.08163042, -0.23228933, 0.07800909, -0.07718744, -0.06362496, 0.16696842, 0.097860806, 0.19104116, 0.121944875, -0.019538378, -0.058625348, -0.19014944, -0.7343828, -0.3205286, -0.24889158) * inp_3_2_1;
    result0 += M4(-0.101421215, -0.018570932, 0.18459788, -0.07610776, -0.034861814, -0.31384587, 0.2993526, 0.11861079, 0.09444098, 0.16625476, -0.2051896, -0.08628399, -0.03167463, -0.08423672, -0.009842199, 0.015469628) * inp_3_0_2;
    result0 += M4(0.11225513, -0.27566862, 0.24983513, 0.0034384618, -0.35566443, -0.11385241, -0.314897, -0.01585153, 0.23316213, 0.12297628, 0.34923133, -0.036108535, 0.021326266, -0.021239357, 0.22849089, 0.0056252484) * inp_3_1_2;
    result0 += M4(-0.09300443, 0.045572013, 0.09660061, -0.0015102255, 0.39077505, -0.05552446, 0.10775664, 0.07890965, -0.1401851, 0.07320508, 0.14569451, -0.02461901, -0.11177646, -0.12242946, -0.18174393, -0.09966225) * inp_3_2_2;
    result1 += M4(0.17415291, 0.30117172, -0.06678188, 0.16361457, 0.12554859, -0.011930042, 0.21258405, 0.15169087, -0.07615301, 0.06306886, -0.18595627, 0.027731003, 0.0628323, 0.042518277, 0.06140265, 0.012156026) * inp_3_0_0;
    result1 += M4(-0.023016242, -0.094427, -0.36458668, -0.2197928, 0.17070985, 0.0532416, -0.37999365, 0.08020681, 0.04697465, 0.09784026, -0.030469768, 0.0050653755, 0.32087445, -0.06075815, 0.26612455, 0.10750009) * inp_3_1_0;
    result1 += M4(-0.048857637, 0.023958385, -0.13119882, -0.16009334, 0.14682758, -0.069050536, 0.015980605, 0.13830742, -0.0027385526, 0.1182475, -0.005026297, -0.06865979, 0.24236165, 0.13265817, 0.18510127, -0.05767026) * inp_3_2_0;
    result1 += M4(0.033420395, 0.11036305, 0.07856816, -0.32742727, 0.46573344, -0.02632428, -0.44812775, -0.13267422, -0.34456268, -0.05523159, 0.3782561, -0.072686665, 0.24174806, 0.108076476, 0.19704318, 0.14794068) * inp_3_0_1;
    result1 += M4(-0.16954608, -0.20641601, 0.23965442, -0.9905999, 0.73907137, 0.27041107, 0.19682576, -0.041434582, -0.8332113, -0.22002544, -0.07459177, -0.6481239, 0.573836, 0.17768016, -0.08687543, -0.6154753) * inp_3_1_1;
    result1 += M4(0.056099292, -0.023555115, -0.09722696, -0.19579393, 0.030409459, 0.11783193, -0.2294256, -0.18787739, -0.20964704, -0.027349073, 0.04876329, 0.018509852, 0.63265634, -0.43568662, 0.100301266, 0.18426454) * inp_3_2_1;
    result1 += M4(-0.07537884, 0.1633071, 0.16876975, -0.13189527, 0.33410823, -0.0075610545, 0.17436121, -0.030123578, -0.22073095, 0.021026826, -0.14380154, 0.2529392, 0.040195044, 0.040552307, 0.06512353, 0.07278161) * inp_3_0_2;
    result1 += M4(0.06031283, -0.09893226, -0.02855292, -0.09555144, 0.23081483, -0.06394472, 0.038696956, -0.068693355, -0.16372328, 0.17225905, 0.10943247, 0.5173476, 0.2805556, 0.06396043, 0.0764369, 0.17110503) * inp_3_1_2;
    result1 += M4(0.16357812, 0.22176807, -0.015604672, -0.13616225, -0.14309655, -0.025104828, 0.07602135, 0.0785237, 0.10729296, 0.09964108, -0.09018658, 0.07214391, 0.22565591, -0.21188283, -0.029921085, 0.041442737) * inp_3_2_2;
    result2 += M4(0.16529374, 0.018415187, 0.2866363, 0.086552784, -0.0018978446, -0.031936374, -0.1382973, 0.12438591, -0.01644326, 0.01555866, 0.08354951, -0.04760312, 0.015004532, -0.018780058, 0.04693583, 0.05336464) * inp_3_0_0;
    result2 += M4(0.077338144, 0.1441314, -0.029761054, 0.03611308, -0.032534648, 0.058988106, -0.06534181, -0.12775567, 0.17244239, -0.05537742, 0.08646013, 0.20412765, 0.110743016, 0.066707745, -0.19926, 0.12668897) * inp_3_1_0;
    result2 += M4(0.05593669, -0.013879105, 0.18132865, 0.02746335, 0.1358797, 0.01836355, -0.16854914, 0.083618134, 0.062874146, 0.038547296, 0.17473629, -0.049442135, 0.163577, -0.030603359, -0.22512268, -0.11651521) * inp_3_2_0;
    result2 += M4(0.08619544, -0.029740114, 0.24110359, -0.07972234, 0.03739054, -0.16134705, 0.07705407, -0.31651512, 0.0433375, 0.10906268, -0.1410099, 0.016983056, 0.093967766, -0.035780784, -0.18980218, -0.12534063) * inp_3_0_1;
    result2 += M4(-0.4617445, -0.17449073, 0.38785726, -0.45007807, 0.46512324, 0.1988977, 0.8027986, 0.19442227, -0.54204035, -0.22204918, -0.47654864, -0.42914635, -0.08693564, 0.08097306, 0.13167614, -0.372112) * inp_3_1_1;
    result2 += M4(0.12070032, 0.018547174, 0.12937416, -0.10130975, 0.21079543, 0.1380618, 0.22951744, -0.27944836, -0.15784612, -0.10782616, -0.23085342, 0.05674564, 0.04569162, -0.03424635, 0.15159434, 0.089283034) * inp_3_2_1;
    result2 += M4(0.012945997, 0.0015165518, 0.11390125, 0.08821162, 0.09134788, 0.011941421, -0.14741889, 0.25642622, 0.028291052, 0.07584469, 0.18053083, -0.113830954, 0.041466314, 0.024546241, 0.021365382, 0.08574814) * inp_3_0_2;
    result2 += M4(0.20823134, 0.15376867, 0.21153983, -0.029345483, 0.03863457, -0.1550978, -0.18589725, 0.27624294, 0.0049808547, 0.06764346, -0.07457822, -0.13519686, 0.2542499, 0.12941173, -0.18517494, 0.07871831) * inp_3_1_2;
    result2 += M4(0.097604625, 0.0030813091, 0.048001863, 0.20290239, -0.12435259, 0.064494595, 0.05280103, -0.22906573, 0.109991595, -0.0028974866, 0.04111097, 0.11144485, 0.17149922, 0.02311691, -0.20975602, 0.16249545) * inp_3_2_2;
    result3 += M4(-0.12684359, -0.014506605, -0.1079694, -0.05673342, 0.119034745, 0.04653275, -0.016637981, 0.09889801, 0.008350262, 0.010219167, 0.0055771917, -0.06828127, 0.02120534, -0.064468816, -0.011252546, 0.05544845) * inp_3_0_0;
    result3 += M4(0.22573708, -0.11416063, 0.03848242, 0.030627755, -0.02041322, -0.17880163, 0.019229736, 0.017145332, -0.09161895, 0.09457345, -0.01533594, -0.02790759, -0.34521422, -0.15795778, -0.12611446, -0.0120345205) * inp_3_1_0;
    result3 += M4(-0.18969478, -0.0828903, 0.044643026, -0.06879978, 0.1516024, 0.045905378, 0.0032028456, -0.016166512, -0.15075617, -0.043536507, -0.083004296, -0.050717637, -0.24964137, -0.2190811, 0.033987653, 0.12042787) * inp_3_2_0;
    result3 += M4(-0.30010808, -0.027998386, 0.04337885, -0.020476023, -0.3947877, 0.135274, -0.13448913, -0.06516669, 0.3506953, -0.1386386, 0.019516272, -0.022259418, -0.06953415, -0.04350658, -0.011617878, 0.1114177) * inp_3_0_1;
    result3 += M4(0.079205975, -0.42638373, 0.03673852, 0.105257295, -0.55056226, 0.90190727, -0.20961308, 0.14830005, 0.46639398, -0.683273, 0.2791486, -0.09002308, 0.2449404, -0.18172616, 0.06364247, 0.020770181) * inp_3_1_1;
    result3 += M4(0.22685008, 0.04892696, 0.0799581, 0.1106313, -0.14108565, 0.03825167, -0.2262083, 0.11463555, 0.19033447, 0.0928081, 0.113431595, -0.08200864, -0.00017886434, -0.27025664, 0.12741488, -0.16787183) * inp_3_2_1;
    result3 += M4(0.03694, 0.15577689, 0.05194237, -0.04542026, 0.09625691, 0.2730296, -0.106200375, 0.013575256, -0.032555114, -0.56734705, 0.05264771, -0.007374069, 0.053425644, -0.07484108, -0.0055227443, 0.020940896) * inp_3_0_2;
    result3 += M4(0.08520183, -0.003805356, -0.09290785, 0.05613328, -0.002534021, -0.0506285, -0.005882115, 0.025114432, 0.085906364, -0.017639585, 0.042263974, 0.01225034, -0.03748305, -0.10291451, -0.0890625, -0.11627352) * inp_3_1_2;
    result3 += M4(-0.13338654, -0.32150143, -0.056373734, 0.035343554, -0.015320746, 0.15766865, 0.051953338, 0.16220313, -0.07921604, -0.19329359, -0.044879377, -0.07248942, -0.012335567, -0.051563732, -0.06335508, -0.17463376) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DS (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.107147224, 0.10261111, 0.10855868, 0.102479);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0914065, -0.0363562, -0.034112193, -0.034484506, -0.04628265, -0.020685852, -0.036952708, -0.03675489, 0.009020391, 0.013843837, -0.0021369006, 0.003990438, 0.17590556, 0.10482087, 0.06197061, 0.09125476) * inp_0_0_0;
    result0 += M4(-0.102163866, -0.13255024, 0.015708521, 0.036755625, 0.068047814, -0.022098336, -0.05041527, 0.014361307, -0.0009697726, -0.11926666, 0.060912162, 0.012760228, -0.005495821, 0.1552214, 0.041142702, -0.025186408) * inp_0_1_0;
    result0 += M4(-0.0030864913, -0.03769526, -0.006970343, -0.0044180444, -0.052606292, -0.026911823, -0.03672029, -0.05466173, -0.015378721, 0.008295712, 0.001972348, 0.034291938, 0.09902317, 0.029810486, 0.059361313, 0.010814138) * inp_0_2_0;
    result0 += M4(0.14264582, -0.007418522, 0.0019817473, 0.043894127, 0.018988453, -0.082670085, 0.14114164, -0.051260654, -0.008899997, -0.0004571278, 0.06738111, -0.028241148, 0.19909891, 0.11383355, 0.18756846, 0.12923077) * inp_0_0_1;
    result0 += M4(0.10471158, 0.19657168, -0.07558477, -0.11475904, -0.15166919, 0.1686863, -0.08739804, 0.27984616, -0.010341227, 0.08752891, 0.0106098335, -0.071123175, 0.2377201, 0.22946063, 0.16717252, 0.2899939) * inp_0_1_1;
    result0 += M4(-0.015193136, 0.057538204, 0.0269682, 0.0077539072, 0.039586574, -0.07207894, 0.02282462, -0.09427055, -0.009117835, 0.014585463, -0.021502646, 0.05591137, 0.17376713, 0.2224111, 0.17251463, 0.26621297) * inp_0_2_1;
    result0 += M4(-0.017485788, -0.004892681, 0.0067150104, 0.014849232, -0.037277624, 0.0014282246, -0.076180845, -0.0034070485, 0.03363184, 0.004392639, 0.023032505, -0.0038011898, 0.11312129, -0.0010140357, 0.23032688, -0.028683297) * inp_0_0_2;
    result0 += M4(-0.03739019, -0.044126976, 0.06980304, 0.061902523, 0.0757362, 0.02570129, 0.061984625, -0.089918554, 0.0012831681, 0.02154064, -0.084007174, 0.04477389, 0.0137035, 0.057938214, 0.056493267, 0.20930144) * inp_0_1_2;
    result0 += M4(-0.008560355, -0.011150432, -0.0033717288, 0.030938517, 0.051636666, 0.016476365, 0.07380523, 0.019950612, -0.010129113, -0.02033859, -0.023047378, -0.06925449, 0.05083359, 0.15220849, 0.07385307, 0.118153565) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.109779604, -0.04591086, -0.048716594, -0.07170125, -0.031115003, -0.050492745, 0.0047423514, -0.0024105806, -0.0069875857, 0.019347396, -0.0004773756, -0.0033536796, 0.040888615, 0.0378166, 0.0098411925, 0.010806126) * inp_1_0_0;
    result0 += M4(0.06315957, -0.13048019, -0.14798765, 0.004725568, 0.07839851, 0.108068936, 0.12426248, 0.017992571, 0.024863277, -0.0425204, 0.024828224, 0.024791224, -0.0021595962, -0.06667109, 0.019598983, 0.0132760005) * inp_1_1_0;
    result0 += M4(-0.060361058, 0.017938236, -0.016323334, -0.022349589, -0.01840588, 0.07643139, 0.00982338, 0.08330051, -0.033938445, 0.024231305, 3.22158e-05, 0.023606395, 0.025921054, -0.02144339, 0.0055547953, -0.0078088064) * inp_1_2_0;
    result0 += M4(-0.054727778, -0.10771847, 0.040805638, -0.07448985, -0.122216046, -0.06326625, -0.14047538, -0.12858318, 0.11370024, 0.014023615, -0.004370718, 0.045718353, -0.015133525, 0.0064636488, 0.05733081, 0.026336897) * inp_1_0_1;
    result0 += M4(0.1775561, 0.08785652, 0.26165348, 0.10438226, 0.11384535, 0.0068434887, -0.08131004, 0.059075166, -0.045507215, 0.02824783, -0.036276206, -0.02807292, 0.03362762, -0.03513598, -0.09554246, 0.055057764) * inp_1_1_1;
    result0 += M4(0.055106334, 0.089795165, 0.03129699, 0.042245444, -0.009834143, 0.0148649765, -0.05558967, -0.07992945, -0.029164506, -0.06816085, -0.013784996, 0.0077966982, 0.010490996, 0.015635716, 0.015629485, -0.0062591336) * inp_1_2_1;
    result0 += M4(-0.04337593, -6.908387e-05, -0.10064171, 0.014276355, -0.039682362, -0.013319678, -0.061212733, -0.017166972, -0.00020980075, -0.022809744, 0.009038294, -0.00010361499, -0.0047658677, -0.0005550395, -0.012759314, -0.014932586) * inp_1_0_2;
    result0 += M4(0.03021706, 0.09172932, 0.034200948, -0.08226216, -0.04154197, -0.06611673, 0.08640509, 0.02104193, -0.0100858975, 0.0015176166, 0.018894138, -0.054482132, -0.01815508, -0.0016871566, -0.008634506, -0.07778444) * inp_1_1_2;
    result0 += M4(0.027596712, -0.053357463, 0.021005174, 0.007753579, 0.008229827, -0.0021090799, 0.0136379935, 0.08578048, 0.026758736, -0.029291743, 0.035772156, -0.06857767, -0.0017974627, 0.004552298, 0.0015490059, 0.0217935) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.08773268, 0.07985092, 0.0369104, 0.058688767, -0.15823072, -0.10187754, -0.06684076, -0.0704548, 0.024914686, 0.047977533, 0.005497484, 0.0035098225, 0.02024491, -0.04506184, -0.0061779185, 0.012388221) * inp_2_0_0;
    result0 += M4(-0.1183267, 0.013561408, 0.04276162, -0.006904455, -0.1503065, -0.069464535, 0.044417698, 0.023851646, 0.037521385, -0.06590202, -0.006198782, 0.011568883, -0.09049685, 0.04461598, 0.01141037, -0.053604122) * inp_2_1_0;
    result0 += M4(0.028388388, -0.07029895, -0.011432314, -0.036349352, -0.0025065942, 0.01274261, 0.023571491, 0.027036194, 0.00551898, 0.018203814, 0.013976313, 0.019618617, -0.02976229, 0.015852243, -0.006803997, 0.03739514) * inp_2_2_0;
    result0 += M4(0.06351961, 0.12847443, 0.06282827, 0.13860667, -0.23969018, 0.004533395, -0.24819611, -0.014082968, 0.028775921, 0.023715263, 0.028896943, 0.08508204, 0.039957445, -0.028634856, -0.0007019549, -0.05751541) * inp_2_0_1;
    result0 += M4(-0.038263045, -0.2554674, -0.36236978, -0.30329704, -0.16145049, -0.1715249, -0.0807511, -0.027848292, 0.07003759, 0.009173603, 0.010323385, -0.03966236, 0.012906932, -0.013211451, 0.026084067, 0.073379934) * inp_2_1_1;
    result0 += M4(-0.11774363, 0.0144924475, -0.042184204, -0.02001664, 0.39708, 0.035758343, 0.34994802, 0.08933835, -0.057856224, -0.09494334, -0.051564973, -0.04367527, -0.041462574, -0.027696108, -0.021371437, 0.021473927) * inp_2_2_1;
    result0 += M4(0.040107366, 0.008453443, 0.14156543, 0.0055122063, -0.083035834, 0.01676681, -0.17438662, 0.03406254, -0.026764216, -0.014977109, -0.017685514, 0.002874778, -0.009835109, 0.015094921, -0.010350731, -0.0018699898) * inp_2_0_2;
    result0 += M4(0.02291665, -0.031964816, 0.14738058, 0.05849559, 0.12051333, 0.03486909, -0.10901459, -0.1757402, -0.0018568746, 0.0654834, 0.058202144, -0.09112477, 0.05329776, -0.012152444, -0.021739518, -0.005950506) * inp_2_1_2;
    result0 += M4(0.0010112057, 0.073774084, 0.017810019, 0.05010095, 0.08884522, 0.08334996, 0.13758655, 0.06441434, 0.00021559419, -0.017763985, 0.0036002195, 0.005965364, -0.0025917988, 0.0440963, 0.0123633295, 0.030397756) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03753553, 0.0034946813, -0.0344818, -0.022841804, 0.0023772235, 0.015983418, 0.007949124, -0.00076821184, 0.026159585, 0.026859337, 0.03135525, 0.014079903, -0.15274863, -0.08706395, -0.04232043, -0.06976516) * inp_3_0_0;
    result0 += M4(-0.0027713273, -0.09788201, 0.02195139, 0.0018993659, 0.039525975, 0.022306629, -0.009747033, 0.007195964, -0.02378581, -0.06454604, -0.06767793, -0.0403297, -0.054470196, -0.10153256, 0.013340931, 0.046353552) * inp_3_1_0;
    result0 += M4(-0.013135376, 0.038316727, 0.013985581, 0.039106376, -0.05911881, 0.015761487, -0.026139893, -0.0004010746, 0.032715257, 0.056892384, 0.041247696, 0.037541773, -0.077609435, -0.08444279, -0.07100064, -0.037073873) * inp_3_2_0;
    result0 += M4(-0.040163215, -0.05638636, 0.0519106, -0.017311988, -0.019814102, 0.019220274, -0.0139272, 0.052788947, 0.06991306, 0.010883634, 0.06637516, 0.077370964, -0.10362977, 0.0011027764, -0.116491124, 0.021359028) * inp_3_0_1;
    result0 += M4(0.17896566, 0.24418895, -0.16223258, -0.04469636, 0.1151457, -0.15675958, 0.09579427, -0.05998999, -0.6110828, -0.47138014, -0.45496282, -0.4187428, 0.4731522, 0.3943391, 0.4538825, 0.32846874) * inp_3_1_1;
    result0 += M4(0.0041864254, -0.032901462, 0.018229311, -0.03640813, -0.035101905, 0.08424362, -0.05913345, 0.020991925, 0.100970514, 0.019057797, 0.044819325, 0.055671506, -0.17057142, -0.2036794, -0.15855633, -0.23901288) * inp_3_2_1;
    result0 += M4(-0.022046236, -0.005979583, -0.045962755, -0.0043592723, -0.033488754, 0.004558608, -0.03494568, 0.0017025468, 0.10649388, 0.050889157, 0.19419302, 0.02226782, -0.06262565, 0.027474338, -0.108159676, 0.035353526) * inp_3_0_2;
    result0 += M4(-0.0109367, -0.021638345, 0.07423758, 0.018613763, 0.012524494, -0.01818638, 0.037060995, -0.100102395, 0.20226465, 0.19614963, -0.0077976994, 0.11524366, 0.16280794, 0.045073174, 0.07390252, -0.052423652) * inp_3_1_2;
    result0 += M4(0.004244784, -0.01924632, 0.013367441, 0.0054304483, 0.004580083, -0.0034234973, 0.007958689, 0.044445045, 0.08536622, 0.16750179, 0.091727436, 0.1080999, -0.031214468, -0.024980595, -0.043297533, -0.060823053) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DS (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
