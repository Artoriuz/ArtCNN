// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DN (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(0.0009130224, -0.0094768265, -0.01519074, -0.04864094);
    V4 result1 = V4(-0.027854495, -0.00572272, 0.0022632969, 0.0008514238);
    V4 result2 = V4(0.032272004, -0.0017888371, -0.0073184716, -0.0011864655);
    V4 result3 = V4(0.0018246243, 0.006281857, 0.0124778235, -0.060938198);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.025565963, -0.122300975, 0.021163724, 0.040338803) * inp_0_0_0;
    result0 += V4(0.040717203, 0.15301196, 0.103187084, 0.123943955) * inp_0_1_0;
    result0 += V4(-0.012383055, 0.10990789, -0.07811461, 0.06295093) * inp_0_2_0;
    result0 += V4(-0.009794018, 0.05693776, -0.0137372315, 0.16675293) * inp_0_0_1;
    result0 += V4(-0.045871, -0.07439283, -0.3502178, 0.27121994) * inp_0_1_1;
    result0 += V4(-0.22160617, -0.12908696, 0.081715204, 0.111702636) * inp_0_2_1;
    result0 += V4(0.019021144, 0.14479612, -0.00018327223, 0.09504778) * inp_0_0_2;
    result0 += V4(0.094036125, -0.10880834, 0.19762708, -0.004796309) * inp_0_1_2;
    result0 += V4(0.16269043, -0.00889519, 0.044853587, 0.09032119) * inp_0_2_2;
    result1 += V4(0.07783784, -0.057230286, -0.10657022, 0.018994922) * inp_0_0_0;
    result1 += V4(-0.058666658, -0.025101345, 0.0028992826, -0.18408869) * inp_0_1_0;
    result1 += V4(0.035546374, 0.11190947, 0.047497977, 0.1269124) * inp_0_2_0;
    result1 += V4(-0.04111773, 0.077720955, 0.11150108, -0.031110916) * inp_0_0_1;
    result1 += V4(0.10247421, -0.1570475, 0.12888813, 0.15421076) * inp_0_1_1;
    result1 += V4(-0.1153927, 0.24256864, -0.18676071, -0.100408636) * inp_0_2_1;
    result1 += V4(0.05201078, -0.009550694, 0.012868824, 0.026485134) * inp_0_0_2;
    result1 += V4(0.083893076, -0.22596551, -0.09652069, 0.031218166) * inp_0_1_2;
    result1 += V4(-0.07278986, 0.05275507, 0.08898927, -0.039992556) * inp_0_2_2;
    result2 += V4(-0.05769828, 0.11523247, -0.07936189, -0.057006422) * inp_0_0_0;
    result2 += V4(0.07966297, -0.05306394, 0.12062885, -0.0058651282) * inp_0_1_0;
    result2 += V4(0.06558856, -0.0018133476, 0.030806223, 0.0068002567) * inp_0_2_0;
    result2 += V4(-0.17574714, 0.2695274, 0.29481974, 0.1500644) * inp_0_0_1;
    result2 += V4(-0.27561593, -0.6985571, -0.2908088, -0.057764754) * inp_0_1_1;
    result2 += V4(0.130055, 0.11091243, -0.0714173, -0.04322265) * inp_0_2_1;
    result2 += V4(0.039755285, 0.12615892, -0.09254025, -0.014832095) * inp_0_0_2;
    result2 += V4(0.19198482, 0.06290986, 0.05521651, 0.14554213) * inp_0_1_2;
    result2 += V4(-0.14631876, 0.003062233, 0.025959335, -0.11923827) * inp_0_2_2;
    result3 += V4(0.057099678, -0.117060564, 0.21973953, -0.09354068) * inp_0_0_0;
    result3 += V4(-0.15185368, 0.1632937, 0.34729078, 0.16885792) * inp_0_1_0;
    result3 += V4(-0.010144909, -0.013907693, 0.06072147, 0.056368865) * inp_0_2_0;
    result3 += V4(0.035782557, -0.031867206, 0.021640701, -0.19420065) * inp_0_0_1;
    result3 += V4(0.017757583, -0.13755053, -0.40638676, 0.0045228307) * inp_0_1_1;
    result3 += V4(0.044948168, 0.12941246, -0.17183083, 0.19899793) * inp_0_2_1;
    result3 += V4(-0.05895979, 0.14739689, -0.049923312, -0.0778837) * inp_0_0_2;
    result3 += V4(0.08881793, -0.07718337, -0.15680808, 0.014844573) * inp_0_1_2;
    result3 += V4(-0.02124472, -0.06716304, -0.01680991, 0.14759271) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.015688092, 0.012724122, 0.091410585, 0.015386676);
    V4 result1 = V4(0.036422584, -0.0044928445, -0.005383238, 0.015630202);
    V4 result2 = V4(0.011808735, 0.03062065, 0.006439961, 0.014790914);
    V4 result3 = V4(0.014737174, 0.0050226282, 0.0033486155, -0.018744864);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0796047, 0.41236335, -0.02765687, 0.005038543, 0.08710314, 0.05087667, 0.06709353, -0.009762182, -0.2897807, 0.25919104, -0.07892699, -0.0708111, 0.004708008, -0.060241785, -0.12729691, 0.030694572) * inp_0_0_0;
    result0 += M4(-0.2650171, 0.16871992, 0.01399427, 0.040915363, 0.6140534, 0.24447876, 0.0060510784, 0.09569881, -0.59909046, -0.47212517, -0.0660432, -0.10635617, -0.3437885, 0.09186216, 0.037546866, 0.108172975) * inp_0_1_0;
    result0 += M4(0.33008212, 0.016949777, 0.04819254, -0.0018169103, 0.13464154, -0.15794162, 0.20398532, -0.124623135, -0.2690121, 0.08359933, -0.07006342, 0.053473186, -0.07641219, -0.016190317, -0.09150339, -0.055033483) * inp_0_2_0;
    result0 += M4(-0.19361155, -0.15135041, -0.013274551, -0.14719231, -0.23511314, -0.17213541, 0.20361015, -0.15649877, 0.21770929, 0.12503068, 0.0072219716, 0.004113275, 0.039307453, 0.08262588, -0.016501231, 0.029547578) * inp_0_0_1;
    result0 += M4(-0.051058564, -0.16768555, -0.039654892, -0.109827116, -0.4398152, 0.23063952, 0.075726286, -0.04198797, -0.4716672, 0.59399265, 0.008302797, -0.3667927, 0.042103935, 0.03546174, 0.104102135, 0.1230786) * inp_0_1_1;
    result0 += M4(-0.35396534, 0.008747232, -0.07394026, -0.079773426, -0.40397474, -0.12442511, -0.051464077, -0.03886751, 0.18949357, 0.13129458, 0.07416493, -0.14924832, -0.04247064, 0.06683142, 0.055816904, 0.040069934) * inp_0_2_1;
    result0 += M4(0.043247107, 0.049258165, -0.0029711945, 0.13418077, -0.04320617, -0.097530924, -0.05615575, 0.23462756, 0.2667834, -0.1988256, 0.056041114, -0.083069496, -0.040663496, -0.05242219, -0.1083887, -0.018115021) * inp_0_0_2;
    result0 += M4(0.041602008, 0.041913856, -0.050634257, 0.13107957, 0.09245024, 0.16172007, -0.04838134, 0.4686353, 0.27767023, -0.13685878, -0.20453888, 0.80631185, 0.009078122, -0.036226332, -0.05537902, 0.025395159) * inp_0_1_2;
    result0 += M4(-0.16417639, -0.10549911, -0.009895353, 0.0200365, 0.18132173, -0.23298994, -0.1358923, -0.13656913, 0.07534674, -0.06700242, 0.074079, -0.08366478, 0.042995043, -0.066331916, 0.04138662, -0.07440876) * inp_0_2_2;
    result1 += M4(-0.11323611, -0.0149175385, 0.06483533, 0.17368267, -0.07294667, -0.03322286, 0.021936964, 0.04926273, 0.06601927, -0.030506367, -0.017044095, 0.008209221, 0.07944827, -0.069627054, -0.059285797, -0.114034064) * inp_0_0_0;
    result1 += M4(0.113614395, -0.047318522, 0.07202673, -0.06550284, -0.08413631, 0.11896655, 0.114658155, 0.051793553, -0.10104981, 0.028574083, 0.02725612, 0.00096130243, 0.1372525, -0.053194877, -0.10977605, -0.045868654) * inp_0_1_0;
    result1 += M4(0.1274325, 0.036887325, 0.006795999, -0.08019914, -0.13614567, 0.3027441, 0.045899827, -0.03274982, 0.061650325, 0.10552907, -0.116582975, 0.107605346, -0.11008222, -0.03400303, -0.055265263, 0.14319302) * inp_0_2_0;
    result1 += M4(-0.0538525, 0.24076937, -0.10229001, 0.35772043, -0.07013891, -0.07276844, 0.12593123, 0.10341972, -0.08851971, 0.27668253, 0.019619482, 0.12464645, 0.06615036, -0.059895944, -0.037194446, -0.104435585) * inp_0_0_1;
    result1 += M4(0.11580244, -0.19013928, 0.2348624, -0.04361221, 0.20262215, -0.2018497, -0.0599211, -0.06742574, -0.18563919, 0.1353233, 0.8916415, -0.05912144, 0.17009024, 0.06867573, -0.108202524, -0.08309419) * inp_0_1_1;
    result1 += M4(0.11513212, -0.1851663, -0.03573832, -0.117164515, -0.03795663, -0.18851362, 0.22907203, -0.09346892, 0.37827486, -0.1343556, 0.11665391, 0.056135137, -0.20230593, 0.089872435, -0.027105594, 0.02422579) * inp_0_2_1;
    result1 += M4(0.0036318635, -0.03632867, 0.004323439, -0.17499122, 0.13740733, -0.47923198, -0.10753552, 0.07554424, 0.10766974, 0.018188884, -0.08403691, 0.16786289, -0.012453103, -0.06463221, 0.11225961, -0.03423945) * inp_0_0_2;
    result1 += M4(0.10658062, -0.13085188, -0.13816223, -0.043874417, 0.17535758, 0.001319643, -0.5190352, -0.31210265, -0.040592406, -0.4273761, -0.62768996, -0.14479795, 0.08105792, 0.033713296, 0.07987868, 0.062574) * inp_0_1_2;
    result1 += M4(0.19268054, -0.120191775, -0.025725001, -0.046397936, 0.028200328, 0.012807906, -0.024374425, -0.038795, 0.04341585, -0.12610333, -0.115534276, -0.11975256, -0.13759221, -0.11286448, 0.06652285, 0.09060123) * inp_0_2_2;
    result2 += M4(-0.24884026, -0.10389847, -0.48208332, -0.7865167, 0.007037413, -0.011260165, 0.032415148, -0.41860193, -0.20858379, -0.19497043, 0.30659166, -0.3009116, 0.009032445, -0.07097585, 0.028913582, 0.031407814) * inp_0_0_0;
    result2 += M4(0.058165867, 0.08105746, 0.0536209, -0.039160576, 0.0293317, 0.022239251, 0.09220587, -0.17371014, 0.060757145, 0.08753865, 0.04074051, -0.4881337, 0.053806376, 0.106241256, -0.050721493, -0.09948158) * inp_0_1_0;
    result2 += M4(0.072063215, 0.21087225, -0.14652024, -0.22776172, 0.0063027535, 0.04871742, 0.09476245, -0.47972733, -0.040831313, 0.22297795, -0.29655817, -0.21090771, -0.0557887, -0.16969307, -0.10028582, -0.026640676) * inp_0_2_0;
    result2 += M4(-0.09994672, -0.13312735, 0.54306376, -0.12177438, -0.04295428, -0.13449942, 0.425691, -0.13505282, -0.05924386, -0.13775963, -0.47638524, 0.37306568, 0.06896539, 0.08881195, -0.034166563, 0.08465152) * inp_0_0_1;
    result2 += M4(-0.14177874, 0.03695332, 0.11546672, 0.130306, -0.08226673, 0.101633556, 0.12488303, 0.100932285, -0.4540704, -0.16282511, 0.118143626, 0.14826475, 0.21476921, 0.08567359, 0.113890186, 0.067507654) * inp_0_1_1;
    result2 += M4(-0.19978139, 0.03302616, 0.22254726, -0.08446042, -0.066450424, 0.3192937, -0.06694458, 0.09785726, -0.079427674, 0.26542965, -0.05492937, 0.17225647, 0.08927043, -0.045397647, 0.08407964, 0.14611287) * inp_0_2_1;
    result2 += M4(-0.15069394, -0.0074625784, -0.15229371, 0.09979405, 0.106381044, -0.091060564, -0.309436, 0.37545067, 0.020512449, 0.052434474, 0.45824277, -0.06665964, -0.06568364, -0.016285261, -0.003578823, -0.08470171) * inp_0_0_2;
    result2 += M4(0.09987555, -0.061021414, 0.031883944, 0.12836835, 0.45954606, 0.06649752, -0.17742206, 0.13914557, 0.4945515, -0.01090047, 0.01633383, 0.01407587, -0.19170809, 0.1063246, -0.023413733, -0.14644223) * inp_0_1_2;
    result2 += M4(0.050732177, 0.13097674, -0.13794987, -0.023909789, -0.08158435, 0.06441929, -0.08094174, 0.009234396, 0.03420415, -0.08691694, -0.14700265, -0.019241886, -0.07065657, -0.08871203, -0.03364185, -0.056487788) * inp_0_2_2;
    result3 += M4(0.16531922, 0.121951565, 0.22997494, -0.11268061, 0.08617833, -0.03562809, 0.22124077, 0.120787404, 0.01590846, -0.12911414, -0.10758608, -0.012079263, -0.030404244, -0.047269657, -0.010128566, 0.15177046) * inp_0_0_0;
    result3 += M4(-0.1521954, -0.08919432, -0.08510112, -0.039077487, 0.006995481, 0.047847107, 0.02189746, 0.05401044, 0.12086253, -0.1215926, -0.3113464, 0.062005445, -0.008749958, 0.05779861, -0.01041689, -0.04673284) * inp_0_1_0;
    result3 += M4(-0.18543407, 0.03914728, 0.016033776, 0.045977037, -0.03908981, -0.08970638, 0.12039923, 0.07537436, -0.20041399, -0.27152267, 0.097150914, 0.07232081, 0.0049726088, 0.055505056, -0.012811175, -0.08899334) * inp_0_2_0;
    result3 += M4(0.20947874, 0.0068015326, -0.29495245, 0.13431017, 0.13945502, -0.06572699, -0.0073330994, 0.14913304, 0.11320248, -0.24210922, 0.1116416, -0.44437376, -0.14491807, -0.12020847, 0.024497846, 0.09911412) * inp_0_0_1;
    result3 += M4(-0.081887685, -0.058292653, -0.036400568, -0.024915494, -0.3041396, 0.060120557, -0.16175376, 0.120573916, 0.4600954, 0.018472454, 0.41756037, 0.23046109, -0.028007684, 0.096928634, -0.05563874, 0.020109423) * inp_0_1_1;
    result3 += M4(-0.02743715, 0.05100865, -0.10786761, 0.05979863, -0.33267283, -0.1602566, -0.28568852, 0.014589379, -0.36356193, -0.37960422, 0.015369451, 0.02780487, 0.13114372, -0.11282378, -0.09641563, -0.024693953) * inp_0_2_1;
    result3 += M4(0.028706891, 0.018780416, -0.085139714, 0.02210208, 0.060868464, 0.4166183, 0.26806122, 0.04756599, -0.142185, 0.00088198466, 0.11706706, -0.020778846, -0.07138306, -0.05060025, -0.03976122, 0.04247925) * inp_0_0_2;
    result3 += M4(0.0069571403, -0.27263033, 0.06399758, -0.06936379, 0.034114145, 0.14336048, -0.4894068, -0.12502636, -0.0035655522, 0.78791714, -0.24759777, 0.10957125, 0.014904802, 0.11547826, 0.00089044624, -0.008657807) * inp_0_1_2;
    result3 += M4(-0.0853835, 0.055513218, -0.29925025, 0.041034006, 0.14464253, -0.026624145, 0.02620531, -0.22733979, -0.06397625, 0.22015134, -0.27210182, 0.007661767, 0.039905544, -0.008568502, -0.021130512, -0.011298685) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.79123914, 0.003988765, -0.036368947, 0.061947335, -0.23120575, 0.09898908, 0.20052207, -0.0133935, -0.7632892, 0.39032257, -0.037822146, -0.0942145, -0.3899516, 0.800888, 0.0048560156, 0.068528935) * inp_1_0_0;
    result0 += M4(-0.36217007, 0.09126365, 0.06405353, 0.010139418, 0.6390477, -0.38947198, -0.014735146, -0.22218554, 0.8010278, -0.079971686, 0.025593473, -0.003913891, -0.27910244, -0.1628841, -0.16902886, 0.027527943) * inp_1_1_0;
    result0 += M4(0.23780522, 0.23439978, 0.008407068, 0.015098227, 0.1637973, -0.02847651, 0.03459432, 0.043165285, -0.33729163, -0.45808887, 0.054515187, 0.14601453, 0.034846503, -0.19199795, -0.07949392, 0.07101799) * inp_1_2_0;
    result0 += M4(-0.34157425, -0.08316819, 0.07542354, -0.067359224, -0.10257649, 0.040230058, -0.16064064, 0.03772871, -0.049495768, -0.27198538, -0.029762328, 0.1655773, -0.28469208, 0.52388275, 0.13985252, 0.22933793) * inp_1_0_1;
    result0 += M4(0.17556623, -0.3844849, 0.08565072, 0.094185576, -0.10150968, 0.25310355, 0.026391072, 0.06991712, 0.05702628, 0.32661086, 0.13680148, -0.02521285, 0.85817695, -0.7082514, -0.1953196, 0.22570877) * inp_1_1_1;
    result0 += M4(-0.17433019, 0.060820542, -0.11956171, -0.15063767, -0.22722113, -0.03244166, -0.13042717, 0.10830302, -0.14367466, 0.28376505, -0.064165525, -0.15900676, 0.376162, 0.464066, -0.065156385, 0.1478219) * inp_1_2_1;
    result0 += M4(0.061160762, 0.15892743, -0.0075937184, 0.13404255, 0.101423554, -0.12886658, -0.07485273, 0.05881078, 0.28757706, 0.12697424, -0.21063761, -0.16449614, 0.026532643, 0.14481999, -0.24667212, 0.18822043) * inp_1_0_2;
    result0 += M4(0.077781744, -0.057168383, 0.122774936, -0.15165047, 0.06402453, 0.012127543, -0.012931715, 0.16328165, -0.028359517, 0.08991459, 0.063538484, 0.17455743, -0.16957608, -0.10632412, 0.24202083, -0.7892402) * inp_1_1_2;
    result0 += M4(-0.117176145, 0.18027104, -0.17446858, -0.0034532554, 0.111579396, -0.02794279, -0.06755598, -0.14023712, 0.22511871, -0.47785372, 0.082473814, -0.088542715, -0.009717251, -0.47460717, 0.02510435, -0.11414858) * inp_1_2_2;
    result1 += M4(-0.29749972, -0.12530833, 0.010407168, -0.022863574, 0.26791614, 0.37745103, 0.05476818, 0.17699847, 0.06307593, 0.094209105, 0.23500569, -0.10372539, 0.022461286, -0.08955087, -0.31831774, -0.16825458) * inp_1_0_0;
    result1 += M4(0.110516205, 0.037142858, -0.062335126, -0.033416055, -0.22330621, 0.08968689, 0.15319552, -0.08794014, 0.12966098, -0.09027288, 0.11327967, 0.25621566, 0.13299374, -0.21894927, -0.034114633, 0.016193943) * inp_1_1_0;
    result1 += M4(0.06566729, 0.11507357, 0.11046148, -0.062171478, -0.04273986, -0.07813661, 0.113822654, -0.018465914, -0.2073816, 0.25556833, -0.17731683, 0.07752347, 0.100546286, -0.1538311, -0.070995465, 0.0064276964) * inp_1_2_0;
    result1 += M4(-0.013509681, -0.55540395, 0.054343957, -0.38897473, 0.13050961, 0.4042554, 0.018604774, 0.4765127, -0.05676643, -0.16157211, -0.1225664, 0.0455544, -0.20334728, -0.44615966, -0.10589712, -0.52045494) * inp_1_0_1;
    result1 += M4(0.36145642, 0.056780756, -0.15041366, 0.17143595, -0.28576037, 0.038971297, -0.13248613, -0.29182887, 0.14001396, -0.20130172, -0.3912613, -0.24804989, 0.34419492, 0.057711404, -0.1890603, 0.13646762) * inp_1_1_1;
    result1 += M4(0.2612182, 0.06895822, 0.1476309, -0.001421877, -0.122615755, 0.08563352, 0.010859689, -0.13811605, -0.18685493, -0.2234984, 0.13547233, 0.11679843, 0.19298427, 0.02042148, -0.18963341, -0.07464526) * inp_1_2_1;
    result1 += M4(-0.14780271, -0.48631036, -0.02540822, -0.21754515, 0.29903185, 0.43865108, -0.1493391, 0.91822433, -0.25557005, -0.083588205, 0.036353253, -0.08721666, 0.07034014, 0.037093505, -0.022236418, 0.4575599) * inp_1_0_2;
    result1 += M4(0.12876548, -0.00766584, 0.1807588, 0.21076119, -0.15192932, -0.027631411, -0.3594233, -0.18071146, 0.25135553, 0.27671787, 0.047835957, -0.29820657, -0.046014663, 0.65118647, 0.8904443, 0.17773524) * inp_1_1_2;
    result1 += M4(0.16479531, -0.08223794, -0.18623008, -0.11601121, -0.22920424, 0.1275386, -0.016639387, 0.010274642, -0.05106519, 0.11461091, 0.20184256, 0.03729507, -0.2664744, -0.06915279, 0.16386496, 0.12109274) * inp_1_2_2;
    result2 += M4(-0.07437607, 0.052026518, 0.6091446, -0.51084876, 0.21934627, 0.16371472, -0.21222213, 0.747419, -0.19878934, -0.14764205, -0.90462303, -0.3262798, -0.14489865, 0.005000984, 0.56483954, -0.59176874) * inp_1_0_0;
    result2 += M4(-0.029150737, 0.1273431, 0.13932413, -0.07159312, -0.112036996, -0.26499113, 0.014402585, -0.12957083, -0.14747362, 0.20728977, 0.18268453, 0.13973713, -0.173075, 0.016245684, -0.045359723, -0.15476337) * inp_1_1_0;
    result2 += M4(-0.006732625, 0.014802002, 0.3221798, -0.043317053, 0.0065538622, 0.015154211, 0.113462865, 0.057069354, 0.20041639, -0.30551806, -0.10581464, 0.117508136, -0.12585524, 0.09266962, -0.12858802, 0.5493158) * inp_1_2_0;
    result2 += M4(-0.35403943, -0.0039561796, -0.24051489, -0.3636163, 0.25434628, 0.07253531, -0.014529461, 0.48567075, -0.02177435, -0.11773394, 1.2610025, -0.13917373, -0.50458825, -0.054943297, 0.7809558, 0.30244365) * inp_1_0_1;
    result2 += M4(-0.058878023, 0.23182544, -0.39040053, -0.19735089, -0.034950987, -0.27106172, 0.0018189085, 0.06825614, 0.5017228, 0.09205291, 0.24728845, -0.04196098, 0.18580681, 0.11273918, -0.32883227, -0.4765788) * inp_1_1_1;
    result2 += M4(-0.03940471, -0.07919116, -0.1946113, -0.011570076, 0.112305894, 0.15329191, 0.0704011, -0.062177256, 0.06763154, 0.109461084, 0.07096226, -0.095103264, -0.116660856, 0.037590757, -0.06645495, 0.35240516) * inp_1_2_1;
    result2 += M4(-0.054339573, -0.17701909, 0.09299763, -0.24811068, 0.29268542, -0.0578836, -0.059469424, 0.4984554, -0.14407973, -0.09405545, -1.0031872, 0.2735977, 0.74024117, -0.4787209, -0.83552134, -0.3485988) * inp_1_0_2;
    result2 += M4(0.20941176, 0.015807886, -0.025647234, 0.15900758, 0.19204317, -0.18575795, -0.16913968, 0.19150771, -0.12396351, 0.021682246, 0.09912411, 0.098630816, -0.40875223, 0.3049789, 0.05462777, 0.101212285) * inp_1_1_2;
    result2 += M4(0.024484426, -0.034152005, -0.06539179, 0.10742373, -0.05443643, -0.05146362, -0.0140760075, -0.021981092, -0.16567673, 0.15294418, 0.16102253, -0.015948404, -0.1419377, 0.058271475, -0.05609583, 0.14059287) * inp_1_2_2;
    result3 += M4(0.005726999, 0.1942935, 0.090107664, 0.22314677, 0.008415826, -0.15897968, -0.11453145, -0.27722213, -0.028240332, 0.21938665, 0.33843213, -0.028648127, -0.053521898, -0.04448515, -0.5728614, 0.23258817) * inp_1_0_0;
    result3 += M4(0.09317138, 0.12689495, -0.15343478, 0.044544686, 0.12178353, -0.09519659, -0.027145308, 0.13433714, 0.1632339, 0.030300284, 0.4693983, -0.10950703, 0.0595349, 0.123267524, -0.0005666353, -0.045238063) * inp_1_1_0;
    result3 += M4(-0.10845818, -0.005770907, -0.1299085, 0.06591157, -0.16740239, -0.030472161, 0.061099716, 0.028643496, 0.22357605, -0.08803294, -0.14638789, 0.012634772, -0.07799533, -0.2774437, 0.44541383, 0.019508453) * inp_1_2_0;
    result3 += M4(0.010987346, 0.42059603, -0.0050824424, 0.297715, 0.06202993, -0.2981205, 0.19171287, -0.7062231, 0.17195931, 0.03891586, -0.43294707, 0.57305235, -0.14671694, 0.056298096, -0.6048204, 0.5523528) * inp_1_0_1;
    result3 += M4(-0.3979457, -0.022323346, -0.3130062, -0.057334114, 0.5697782, 0.083371274, 0.11833654, 0.27840802, -0.5739935, 0.06836259, -0.1990663, -0.14075492, -0.75538456, -0.07563563, -0.45246184, -0.49845657) * inp_1_1_1;
    result3 += M4(0.109221764, 0.06292947, 0.14599074, 0.03871296, -0.17482217, -0.09627378, -0.03778399, 0.0675225, -0.0076067797, -0.014252174, -0.069721796, 0.015887126, 0.37882558, -0.11870401, 0.4980954, -0.15312475) * inp_1_2_1;
    result3 += M4(0.032300036, 0.25525728, -0.032945108, -0.05098446, -0.09631834, -0.27263993, 0.04701493, -0.06378681, -0.09173587, 0.09920237, 0.12867932, -0.1910873, 0.032658186, 0.29543537, 0.1534778, -0.038418457) * inp_1_0_2;
    result3 += M4(-0.046279076, -0.10355729, -0.045140646, -0.09681875, 0.17193282, 0.07815112, -0.19834515, 0.07518187, 0.021623785, -0.07184254, -0.017949024, -0.15619314, 0.23738678, -0.06547586, 0.56650627, 0.0898692) * inp_1_1_2;
    result3 += M4(0.07470485, 0.05430721, 0.24851297, 0.09222684, -0.02460344, -0.035577405, -0.07315825, 0.0010334731, 0.11080096, -0.059175935, 0.0017379349, -0.02999947, 0.028297443, 0.38175148, 0.35609055, -0.023025665) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.049356427, -0.07109082, -0.082797214, 0.035545617, -0.15707727, 0.30905935, 0.009175879, -0.06297515, 0.32279417, 0.37371916, -0.013210647, -0.053290095, 0.8214203, 0.12521648, -0.010158754, -0.0020443385) * inp_2_0_0;
    result0 += M4(-0.64264536, -0.15214102, -0.09454938, 0.035208445, -0.023483595, -0.43308902, -0.04669661, -0.05143309, 0.0062620947, -0.35468072, 0.10043267, 0.005871621, -1.0767027, -0.1694822, 0.058212325, 0.056444913) * inp_2_1_0;
    result0 += M4(-0.23184615, 0.103745595, 0.12828752, 0.011686703, -0.1981241, 0.27359122, 0.016868308, -0.010216387, -0.6663014, -0.18303527, -0.1875266, 0.06465013, 0.3964992, 0.05417391, 0.06267123, 0.0107068075) * inp_2_2_0;
    result0 += M4(0.05948212, 0.17573975, -0.049291536, -0.06976873, 0.17583919, -0.032722022, -0.103326686, -0.040592324, 0.07303059, -0.43013212, 0.14456907, -0.14878629, -0.18463805, 0.0003747071, 0.19738117, -0.06809129) * inp_2_0_1;
    result0 += M4(-0.17143108, 0.41494307, 0.07399921, -0.3337324, -0.05846488, 0.1219868, 0.22290504, -0.57778144, -0.15190363, 0.65917826, 0.118607976, -0.3780596, 0.2372885, 0.24465418, -0.20652202, -0.17589514) * inp_2_1_1;
    result0 += M4(-0.06860713, 0.14844769, 0.08836714, -0.031567633, 0.16111054, -0.0987309, -0.07662499, -0.09966257, -0.005769013, -0.14895476, -0.07213496, 0.13838476, -0.04723006, 0.12046025, -0.04614418, -0.03328053) * inp_2_2_1;
    result0 += M4(0.17664546, 0.007958696, -0.255081, 0.13399202, -0.017468005, -0.04065479, -0.0026270319, 0.03992703, -0.0027804123, 0.059945337, 0.022887224, 0.041374978, -0.097829685, 0.093078196, -0.028108064, 0.16678603) * inp_2_0_2;
    result0 += M4(-0.37107205, 0.05902316, -0.22764653, 0.68244004, -0.21206716, 0.17797132, 0.11303802, 0.36470515, 0.05596401, 0.058803763, -0.19267373, 0.47776502, 0.09605359, -0.24761094, 0.10761287, -0.04504703) * inp_2_1_2;
    result0 += M4(0.0943004, -0.14109953, -0.063799664, -0.025514375, -0.08439152, 0.094618835, 0.0898505, 0.16819403, 0.1957346, -0.042083293, -0.08930801, -0.06622779, -0.03363573, -0.15561992, -0.031094115, 0.026904933) * inp_2_2_2;
    result1 += M4(-0.044364937, -0.13806713, -0.22224496, -0.11356324, 0.23825018, 0.33912173, 0.083929315, 0.106062464, -0.11211642, 0.07036549, 0.06921642, 0.08763337, -0.13590777, -0.026514497, -0.20109172, 0.12503079) * inp_2_0_0;
    result1 += M4(-0.110282764, 0.20730042, 0.107471794, 0.0647958, 0.07197315, 0.037637897, 0.21971358, -0.0645043, 0.090624854, -0.043436654, -0.086974554, -0.0619527, 0.107331686, 0.15537469, -0.087564565, -0.048362453) * inp_2_1_0;
    result1 += M4(0.054919675, -0.0150709255, -0.09620236, 0.03627563, -0.07221428, 0.17677261, -0.058123503, -0.041817468, -0.17868663, -0.25390244, 0.13332513, 0.049373403, -0.09473685, -0.14471959, 0.14057568, -0.064644106) * inp_2_2_0;
    result1 += M4(0.080562495, 0.16216105, 0.011992275, -0.17954694, 0.18179616, 0.25760457, -0.015410642, -0.11012491, -0.15066852, 0.10438065, 0.03694678, 0.38121626, 0.021541938, 0.078404956, 0.11049865, -0.37325647) * inp_2_0_1;
    result1 += M4(-0.120495446, 0.42943802, 0.80050725, -0.025898239, -0.12164953, -0.12926696, 0.84995884, -0.076050244, 0.14255717, 0.11682532, 0.30294782, -0.3296785, 0.14595507, -0.027202405, 0.3823441, 0.3345805) * inp_2_1_1;
    result1 += M4(0.35042748, -0.0551457, 0.023590403, 0.107739665, -0.35628128, -0.028358793, 0.18698545, -0.10241161, -0.2453963, 0.27364713, 0.2366111, 0.21446289, -0.13481297, -0.088356145, -0.12144213, 0.043362826) * inp_2_2_1;
    result1 += M4(0.21532546, -0.13393995, -0.1503642, 0.5456199, 0.15606166, 0.44540423, -0.18372959, 0.6481556, -0.14478579, -0.16412772, -0.11795104, -0.07067084, 0.07065561, -0.37256917, -0.06455312, -0.14881682) * inp_2_0_2;
    result1 += M4(-0.16800268, -0.24783368, -0.40510935, 0.031643264, 0.098813646, -0.17872642, -0.53408414, -0.16946821, 0.5139085, -0.014954361, -0.50455004, -0.5786343, 0.07341045, 0.35711464, -0.11861351, -0.24589221) * inp_2_1_2;
    result1 += M4(0.29058307, -0.24475959, 0.012687412, 0.11228836, -0.29892564, -0.10916403, -0.13712153, 0.00435491, -0.21631445, -0.32400855, -0.11612219, -0.003275826, -0.10511009, 0.06585901, 0.052692927, 0.12759449) * inp_2_2_2;
    result2 += M4(-0.12197921, -0.020856012, 0.37424067, -0.13909908, -0.011132957, 0.12729286, 0.10012681, -0.24210857, -0.028532568, -0.013781102, 0.40612933, 0.048280854, -0.021716088, 0.0031212096, 0.8618336, -0.59144366) * inp_2_0_0;
    result2 += M4(0.14889386, -0.10776495, 0.28813484, -0.8709791, 0.028493112, -0.04589504, 0.012554902, -0.28394744, 0.11187549, -0.23992644, -0.45026198, 0.41513047, 0.11018863, 0.07482244, -0.40270716, 0.21320304) * inp_2_1_0;
    result2 += M4(0.033117425, 0.007071868, -0.2352947, -0.124193385, -0.093617916, 0.01990794, -0.076538414, 0.04022083, -0.052397374, 0.15107033, -0.34413794, -0.61124283, -0.0071565816, -0.044345062, -0.107593305, -0.115725234) * inp_2_2_0;
    result2 += M4(0.0046426924, -0.09656357, -0.21860756, 0.56636834, -0.12878375, 0.03323095, -0.21457192, 0.52369535, -0.15839975, 0.022071464, 0.41365087, -0.009291893, -0.08195842, -0.021359906, -0.15116479, -0.23572652) * inp_2_0_1;
    result2 += M4(-0.3352174, -0.21464762, 0.05806954, 0.0070151915, -0.4592526, -0.5612138, -0.16386884, -0.08263587, -0.3096702, -0.6713243, 0.16376643, -0.08843104, -0.10999693, -0.015778882, 0.30282786, -0.20129123) * inp_2_1_1;
    result2 += M4(-0.18794034, -0.078287974, -0.00053862744, -0.06997792, 0.0035724975, 0.60997695, 0.20469652, 0.062126633, 0.1563901, 1.0222737, 0.35860878, -0.09939889, 0.118414976, 0.042802893, -0.10463077, 0.10478772) * inp_2_2_1;
    result2 += M4(0.17339173, -0.1259324, 0.2710156, 0.049959786, 0.24702482, 0.04638584, 0.12917526, 0.28951427, 0.036723964, -0.19376883, -0.0159436, 0.35255733, 0.1532517, -0.06904889, -0.34611893, 0.5821409) * inp_2_0_2;
    result2 += M4(0.18325494, -0.0065242676, -0.1439094, -0.011044939, 0.28727394, -0.19670494, -0.08901555, 0.1300023, 0.48370418, 0.092507705, -0.55125237, 0.12096237, 0.0018300018, -0.11329425, -0.12224818, 0.1739923) * inp_2_1_2;
    result2 += M4(-0.058570977, -0.072322644, -0.16211587, -0.19838919, 0.073684454, -0.09328105, -0.11079545, 0.10165139, -0.22494175, -0.074209265, -0.018105842, -0.070259295, -0.21965313, 0.11669731, -0.009044012, 0.093396895) * inp_2_2_2;
    result3 += M4(0.036982127, -0.15683329, -0.6592743, -0.09007578, 0.010943358, -0.1422107, -0.32184106, -0.29414907, 0.1331895, 0.02396647, 0.0546839, -0.08384481, 0.1291388, -0.051396612, -0.09336766, -0.047093295) * inp_2_0_0;
    result3 += M4(0.17023286, -0.075523466, -0.168027, 0.017528106, 0.22776437, -0.051549766, -0.18399817, 0.21885191, 0.11429212, -0.11868208, 0.41693828, -0.16001613, 0.04489072, 0.016311996, -0.1424493, -0.054993287) * inp_2_1_0;
    result3 += M4(-0.011332231, 0.10190045, 0.21929309, 0.0386306, -0.18473926, -0.066346675, -0.022153717, 0.0887951, -0.24138075, 0.07932215, -0.33084455, -0.07839089, -0.15533285, -0.10271046, -0.13218884, 0.077552445) * inp_2_2_0;
    result3 += M4(0.02852975, -0.120806634, -0.08941349, -0.8397476, 0.093779944, -0.11030664, -0.11758545, -0.46085596, -0.05940847, -0.08012296, 0.3275704, -0.26829824, -0.12795174, 0.34502813, -0.115257226, 0.2238688) * inp_2_0_1;
    result3 += M4(0.44643754, 0.033875797, 0.18376668, 0.1089334, 0.45036903, -0.36877817, 0.41150323, 0.72535235, 0.4632482, 0.16095981, 0.59097785, 1.0500226, -0.1821372, -0.0038354057, 0.020163843, 0.1287686) * inp_2_1_1;
    result3 += M4(-0.06796005, -0.117105305, -0.09734443, 0.108782105, -0.7962454, 0.04657665, -0.21336019, -0.06252985, -0.9388596, 0.26629585, 0.027830102, -0.02174835, -0.30495098, 0.27850163, 0.13399212, -0.08910895) * inp_2_2_1;
    result3 += M4(-0.016571196, -0.16400813, 0.11286603, -0.22167423, 0.046340775, -0.2942265, 0.024915127, -0.189691, 0.04568495, 0.06604088, 0.03560265, -0.051853463, 0.13622229, 0.009041963, 0.31810743, -0.14363371) * inp_2_0_2;
    result3 += M4(0.13436122, 0.3477325, -0.014556825, 0.13803506, 0.1887094, 0.33441418, -0.23257948, 0.24682902, 0.10338817, 0.4629661, -0.60241723, -0.2927108, 0.25079426, 0.15290183, -0.14972028, -0.09851101) * inp_2_1_2;
    result3 += M4(0.06143863, 0.09934337, -0.12626795, -0.10577047, -0.19782881, -0.1447362, -0.1777319, 0.050586667, 0.3577688, -0.19376095, -0.3607575, 0.01798368, 0.068860605, -0.3609999, 0.26141846, 0.16246629) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.3309469, 0.0816226, 0.08080068, -0.03020106, 0.6269354, -0.58833706, 0.1107909, 0.0620978, 0.09668554, 0.0013781197, 0.051660955, 0.0025919052, 0.0191772, 0.16294165, -0.02457481, -0.008429785) * inp_3_0_0;
    result0 += M4(-0.30200028, -0.20910235, -0.07949256, 0.008852952, -0.336745, 0.44519132, 0.002298637, 0.06654198, 0.22688472, -0.114428826, -0.028317876, -0.0350081, 0.07773407, -0.11201181, 0.024733797, -0.0074006496) * inp_3_1_0;
    result0 += M4(0.24007471, 0.0644311, -0.049191833, -0.003349131, 0.3875797, -0.09621616, 0.2271302, -0.22001669, -0.0814962, 0.059916038, -0.019982683, 0.021639556, 0.288071, -0.04487316, 0.058693092, -0.0068096886) * inp_3_2_0;
    result0 += M4(-0.00011578874, 0.1722536, 0.031030197, 0.0071389237, 0.18493436, -0.20600657, -0.08657125, -0.08084142, -0.26699764, -0.02604706, 0.005723973, -0.032050434, 0.0045764553, -0.03919688, -0.04802128, -0.05971034) * inp_3_0_1;
    result0 += M4(0.19656621, -0.01662133, 0.014352628, -0.006081485, -0.44428277, 0.40735295, 0.09428776, 0.07681742, -0.44760668, 0.34851164, 0.07246098, 0.0066028107, -0.2277872, 0.054728724, 0.0631249, 0.078688756) * inp_3_1_1;
    result0 += M4(0.11116615, 0.09318899, -0.13118644, 0.06544254, -0.37120476, -0.21107109, -0.07814727, -0.12981834, 0.013212288, 0.062239494, -0.024607174, 0.12869875, -0.16549405, 0.10496201, 0.06922028, -0.023186926) * inp_3_2_1;
    result0 += M4(-0.13083786, 0.026555184, -0.020069081, 0.046512127, -0.1148265, 0.11292559, 0.096550345, -0.02459483, -0.09009712, -0.17724639, -0.09632653, 0.26856688, -0.07353732, 0.10211497, 0.009890503, 0.11266921) * inp_3_0_2;
    result0 += M4(0.017449584, -0.05611571, 0.053421535, -0.56364614, 0.070881136, 0.09464421, -0.034211025, 0.34605226, 0.3100776, 0.007399985, -0.12803148, 1.3691356, -0.02542994, 0.0737892, -0.04269154, 0.37152335) * inp_3_1_2;
    result0 += M4(-0.043828126, 0.005038139, -0.044900008, -0.09746543, 0.05057494, 0.044326622, -0.05999764, -0.0506256, -0.21640575, 0.0033783587, -0.013768594, 0.23352896, -0.08539195, 0.026275326, -0.1520436, 0.18791781) * inp_3_2_2;
    result1 += M4(0.070632696, -0.028174575, 0.03991344, 0.0421144, -0.052992936, -0.056135394, 0.03211791, 0.07671205, -0.10231622, 0.15071097, 0.0801456, 0.07866488, 0.044644136, 0.048990674, 0.05246285, -0.0008881928) * inp_3_0_0;
    result1 += M4(-0.13789602, -0.081529886, -0.11514029, -0.0042607705, 0.04963234, 0.12906407, 0.07496068, 0.122656025, 0.05370833, -0.19373785, -0.08362144, -0.037425607, -0.26342103, -0.029537376, -0.00084168307, 0.04692095) * inp_3_1_0;
    result1 += M4(-0.16021188, -0.098709695, 0.047325343, -0.01625417, -0.20611735, 0.14051646, 0.133865, -0.13728805, 0.07986002, -0.0745781, -0.0023883628, -0.0324797, 0.20832784, -0.044309128, -0.051082682, -0.070222065) * inp_3_2_0;
    result1 += M4(-0.0026849401, 0.04953101, -0.034424916, -0.015103024, 0.28012857, -0.06434807, 0.18345536, -0.2929927, -0.27861995, 0.13964082, -0.014170361, 0.27598602, 0.18605784, 0.41850954, 0.0059060347, 0.4435217) * inp_3_0_1;
    result1 += M4(-0.0052462122, 0.0024479518, 0.046647303, 0.088426195, -0.09651128, -0.03892111, 0.017039726, 0.15454286, 0.017963473, -0.019158944, -0.11762276, -0.18492424, -0.34733802, 0.02140754, -0.013657193, 0.052911516) * inp_3_1_1;
    result1 += M4(-0.038812187, -0.014803205, 0.0064523784, -0.044783145, -0.114109896, -0.3077439, 0.10548513, -0.0703787, 0.05217224, -0.025242925, 0.032777287, -0.08847772, 0.4677564, -0.015992701, 0.056721035, 0.009863068) * inp_3_2_1;
    result1 += M4(0.23224474, 0.28155023, -0.0037678285, -0.030263014, -0.012476691, 0.2711601, -0.14733103, 0.45067072, 0.043414287, -0.83482826, -0.2132873, 0.25220588, 0.1456531, 0.12032175, -0.10376383, 0.3992753) * inp_3_0_2;
    result1 += M4(-0.0960017, 0.2467579, 0.44211563, 0.09793782, -0.19005121, -0.09963108, -0.41471612, -0.29127857, 0.5823864, -0.5963256, -0.98355323, -0.2091862, -0.30533284, -0.15939996, -0.12875228, -0.035289254) * inp_3_1_2;
    result1 += M4(-0.3197446, 0.036313843, 0.0947752, -0.004694586, 0.055914562, 0.056405455, -0.06238266, 0.039450716, 0.09965047, -0.27798983, -0.20907703, -0.06397244, 0.24080977, -0.18455358, -0.08335288, -0.03432452) * inp_3_2_2;
    result2 += M4(0.053093143, 0.08138104, 0.35758522, 0.15582873, 0.17800497, 0.18697885, 0.5189405, 0.2222812, 0.034395874, 0.0030234712, -0.19251744, 0.30974415, -0.016548319, 0.04130675, 0.00083261734, 0.38767532) * inp_3_0_0;
    result2 += M4(0.08651082, -0.13710593, -0.039288186, -0.19944441, -0.14101142, -0.025743665, 0.20911321, -0.4698112, -0.08250916, -0.066800766, 0.060335726, 0.10790122, -0.006345511, -0.17391157, -0.017318191, -0.0001903214) * inp_3_1_0;
    result2 += M4(0.04875752, 0.34010854, 0.1595003, 0.18689789, 0.024552243, -0.14371589, 0.16941957, -0.31462377, 0.021294214, 0.13821243, 0.017551053, -0.042597428, 0.11096485, 0.10647909, 0.017207045, -0.14275418) * inp_3_2_0;
    result2 += M4(-0.008699237, 0.015054738, -0.34105158, -0.02483516, 0.09891607, 0.24532335, -0.72945535, 0.1139268, 0.07582096, -0.1253823, 0.050267614, -0.037277084, 0.016473483, 0.10597983, -0.014973243, -0.043267075) * inp_3_0_1;
    result2 += M4(-0.12588443, -0.17428634, -0.2623577, -0.44275597, 0.18545447, -0.32009593, 0.10735596, 0.16916163, -0.12267393, 0.07894749, -0.018022845, 0.04112633, 0.05778614, -0.34457868, 0.010263526, 0.08696361) * inp_3_1_1;
    result2 += M4(-0.07431393, 0.032391015, 0.035151824, -0.04404975, -0.11258437, -0.012821224, -0.35779783, 0.171309, 0.1257154, 0.2120866, 0.13431361, -0.23029776, -0.14032593, -0.14426118, -0.110521644, 0.035828874) * inp_3_2_1;
    result2 += M4(0.0368198, 0.015388315, -0.13219073, 0.31211498, -0.051110275, 0.097033046, 0.43744597, 0.4091477, 0.109929845, -0.090095945, 0.18482974, -0.11829026, 0.1116356, -0.010955327, 0.13083336, 0.063932225) * inp_3_0_2;
    result2 += M4(-0.383768, -0.114478946, -0.03336522, 0.18130516, 0.2602802, -0.069818094, -0.57019854, -0.116654806, 0.6343631, 0.15478683, 0.02078585, 0.059612967, 0.16711922, -0.1513251, 0.1549474, -0.00850129) * inp_3_1_2;
    result2 += M4(-0.3925709, -0.068179354, 0.0988782, 0.12999158, -0.05368145, 0.043403354, 0.31985265, -0.103271425, 0.21645047, -0.10906173, -0.16170323, -0.03422073, 0.13542666, 0.18140902, -0.025658436, -0.050164208) * inp_3_2_2;
    result3 += M4(-0.02161897, -0.048701357, -0.18807271, 0.023342185, -0.090259634, -0.20510703, 0.22198537, 0.15867709, 0.021965537, -0.011969813, 0.057444673, -0.10234015, -0.017374726, -0.05208914, -0.056266867, -0.114396006) * inp_3_0_0;
    result3 += M4(0.058321886, -0.07746452, -0.006137985, 0.0550562, -0.052374694, -0.040001255, -0.30289254, 0.14522344, -0.036261503, 0.08032313, 0.15545589, 0.077432275, 0.18454431, 0.0023881109, -0.106267884, 0.0067187413) * inp_3_1_0;
    result3 += M4(-0.16518566, 0.040257014, -0.04985317, -0.020246888, -0.11343228, 0.120131224, -0.11959559, 0.20706841, -0.045792863, -0.03683128, -0.083068654, -0.02157161, 0.08050798, 0.03675243, -0.06431485, 0.009896049) * inp_3_2_0;
    result3 += M4(-0.036111355, 0.23751767, 0.23486722, -0.005751092, -0.03742274, 0.17104271, 0.23169495, -0.38713655, 0.13579042, -0.084562026, 0.007609049, -0.21143909, 0.09165099, -0.06968419, 0.050516363, -0.3477617) * inp_3_0_1;
    result3 += M4(0.16894905, -0.022071866, -0.04936365, 0.1994202, 0.56308335, 0.056916595, 0.07668159, -0.082527, 0.1120977, 0.13562788, 0.2475705, 0.20274495, 0.11771034, 0.012237574, -0.027977454, -0.5784219) * inp_3_1_1;
    result3 += M4(-0.12840103, 0.1354652, 0.261248, 0.045278274, -0.12804928, 0.0030494516, 0.009427839, 0.032853667, -0.3392412, 0.035196505, -0.3019039, 0.15845297, 0.16231132, 0.08373416, 0.24710952, 0.010421558) * inp_3_2_1;
    result3 += M4(0.042866144, -0.2196102, -0.14135396, -0.14684172, 0.008387571, -0.34326008, 0.17063504, -0.11746698, 0.005653077, 0.3138099, -0.19934116, -0.04978091, 0.101768725, -0.13449483, -0.14158702, -0.1381882) * inp_3_0_2;
    result3 += M4(0.072614975, -0.5734385, 0.24630326, -0.12413864, -0.12195454, 0.10551787, -0.43861544, 0.06632064, 0.12210463, 0.54447985, -0.3906752, 0.10722189, 0.10339173, 0.08500622, 0.02236669, -0.020872118) * inp_3_1_2;
    result3 += M4(-0.16116452, -0.17580283, 0.16387582, 0.07896409, 0.02206229, -0.084389485, 0.23026513, 0.05423287, -0.18616363, 0.101005025, -0.24279834, -0.022806745, -0.024942556, 0.15635306, -0.07611435, 0.072274424) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.02821693, -0.014352398, 0.009090651, 0.0323857);
    V4 result1 = V4(0.0100333635, 0.04816131, -0.010419946, 0.037435513);
    V4 result2 = V4(0.027313273, 0.05103105, -0.0074005974, 0.011609072);
    V4 result3 = V4(-0.023353063, -0.020379234, 0.026466517, 0.018347036);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03211889, 0.13949595, -0.05562546, 0.0019619672, 0.028617399, 0.010397029, -0.011947573, -0.031171666, -0.11184047, 0.38177627, -0.08336094, -0.08012924, -0.034919724, -0.07455224, 0.016447965, -0.08065888) * inp_0_0_0;
    result0 += M4(-0.052769624, -0.18031944, 0.036375947, 0.03211154, -0.05753306, 0.000116575626, -0.075166956, -0.010976189, 0.2046968, -0.2142275, -0.0027117678, -0.09382297, -0.18004163, 0.41838765, 0.0526334, 0.19095977) * inp_0_1_0;
    result0 += M4(0.09192948, 0.1124098, 0.061952613, -0.009374281, -0.11379493, 0.090724036, -0.026666924, -0.027813908, 0.023645094, -0.010102282, -0.062629566, 0.051382765, 0.027302478, 0.065136105, 0.09841337, -0.013573449) * inp_0_2_0;
    result0 += M4(0.044793807, -0.26781666, 0.13925931, -0.016024875, 0.038396355, -0.078289926, 0.01049359, -0.0042141373, 0.12846117, 0.20492752, 0.0849287, 0.09312424, 0.020709677, -0.098318905, -0.029409498, -0.061619256) * inp_0_0_1;
    result0 += M4(-0.11136097, 0.33826134, -0.25631136, -0.07296786, -0.062342454, -0.0061074416, 0.011264623, 0.039110944, -0.05375118, -0.09892643, -0.0098982435, 0.105029345, -0.6160987, 0.059994813, -0.25743428, -0.030668983) * inp_0_1_1;
    result0 += M4(-0.030893192, -0.06576213, 0.09047963, 0.07458183, -0.017953482, 0.28753343, -0.025520274, 0.050931558, -0.1469951, -0.10061916, 0.01225441, -0.059376977, -0.5945426, 0.041917037, 0.0851707, 0.0737085) * inp_0_2_1;
    result0 += M4(0.06059108, -0.070033945, -0.009721818, -0.07569085, 0.012148373, 0.025053632, 0.035762567, 0.013617049, 0.0339007, 0.11060306, -0.046211403, -0.14158402, 0.029148692, -0.2825683, 0.07031458, -0.028486295) * inp_0_0_2;
    result0 += M4(0.5008104, -0.13665886, 0.42233694, 0.42901626, 0.07192386, 0.18076576, 0.09049779, -0.0068647056, -0.29945317, -0.124116145, -0.18204004, -0.12918283, 0.054955382, 0.05079008, 0.031140918, 0.006712919) * inp_0_1_2;
    result0 += M4(-0.46193162, 0.05408474, -0.2998934, -0.151812, 0.046192028, 0.05631598, -0.01070625, -0.032921337, 0.19711526, 0.04561266, 0.08091081, 0.049271256, -0.31869102, 0.063308395, 0.00606072, -0.002626204) * inp_0_2_2;
    result1 += M4(0.11577906, -0.063454665, 0.012244353, 0.017857509, 0.050033033, 0.17022006, 0.027001502, -0.036677867, -0.19741206, -0.056104682, 0.014399027, -0.043409787, -0.3187958, -0.18222524, 0.018394113, 0.34971505) * inp_0_0_0;
    result1 += M4(-0.10053847, -0.09858452, 0.031331994, -0.048680384, 0.012202561, 0.11679687, 0.1618876, 0.04946275, 0.1977125, -0.21235862, 0.14157651, -0.03420636, -0.95340914, -0.61244935, 0.08384975, -0.11386819) * inp_0_1_0;
    result1 += M4(0.034351587, 0.16746771, -0.061364274, 0.09735087, 0.15080926, -0.048758596, -0.030249992, 0.10930966, -0.05108879, 0.3105467, -0.06987984, 0.25139067, -0.119900994, -0.3462538, -0.24620335, 0.07385089) * inp_0_2_0;
    result1 += M4(-0.14674734, -0.038699888, -0.13945547, 0.14409901, 0.10474235, 0.2582463, 0.06124027, -0.0016926861, 0.045352507, -0.21813215, 0.12405729, -0.068286225, -0.16047512, -0.0626212, -0.04466242, 0.04674712) * inp_0_0_1;
    result1 += M4(-0.029062208, 0.13601767, 0.44631636, -0.165567, 0.08292988, 0.23702389, 0.16557132, -0.039244488, -0.01571189, -0.08188013, -0.59289753, -0.6244343, -0.39053085, -0.38701144, 0.20638034, 0.44022557) * inp_0_1_1;
    result1 += M4(0.21300326, -0.11622928, -0.2836091, 0.09107944, 0.13247792, 0.35829318, 0.09232386, -0.024197532, 0.05980383, 0.39965796, 0.23126465, 0.3567911, -0.16843672, -0.27803457, 0.068548866, -0.008862113) * inp_0_2_1;
    result1 += M4(0.01563596, -0.25568253, 0.29625282, 0.31509942, 0.11589295, 0.18940459, 0.09289205, 0.023398595, -0.11144543, -0.07168428, -0.065379895, -0.008420767, -0.033915035, -0.0048952196, -0.06392321, 0.0040627164) * inp_0_0_2;
    result1 += M4(-0.29751834, 0.10712799, -0.8806681, -1.1017386, 0.12286122, 0.04408609, 0.086455226, 0.041339394, 0.18697883, -0.17232446, 0.06399755, -0.08613904, -0.16789325, -0.07136885, 0.0076700943, -0.34760094) * inp_0_1_2;
    result1 += M4(-0.35991842, 0.76839316, 0.40004835, 0.1528472, 0.15119345, 0.30077454, 0.1280383, 0.04484819, 0.048515987, -0.14040488, 0.06826026, 0.017806966, 0.125373, -0.16075118, 0.027806548, 0.135203) * inp_0_2_2;
    result2 += M4(-0.033368535, -0.0323778, -0.046125084, -0.08835132, -0.018623257, -0.039217733, 0.1131321, 0.15773916, -0.13564748, 0.06544484, -0.17233968, 0.0386247, 0.10576848, 0.1604828, -0.104251824, -0.37903303) * inp_0_0_0;
    result2 += M4(0.051370252, 0.011331439, 0.0014127888, 0.022578184, -0.04554736, -0.00857366, 0.21380055, -0.00021610157, 0.087523654, -0.045220725, 0.046147533, 0.027536368, 0.04058253, 0.04847492, -0.23384732, -0.12064124) * inp_0_1_0;
    result2 += M4(0.07124584, -0.024363343, 0.062321734, 0.02880774, -0.19503646, -0.024777697, 0.053160854, -0.0075097233, 0.08604217, -0.18187219, -0.11359142, 0.08382704, 0.15001789, 0.054930747, -0.054678813, -0.23975138) * inp_0_2_0;
    result2 += M4(0.26024404, 0.13364066, 0.0011844549, 0.060329698, 0.006086648, -0.036366336, 0.04724741, 0.16405845, -0.16121419, -0.14994317, -0.2229822, 0.021094978, 0.1772584, 0.0836445, -0.3757615, -0.14544086) * inp_0_0_1;
    result2 += M4(0.06466422, -0.33685175, 0.15047464, -0.070861295, -0.1281194, 0.07737996, -0.018046139, 0.13636473, 0.018755395, -0.19520645, -0.392721, -0.20489931, 0.14587638, -0.32987067, -2.4202125, -0.31052944) * inp_0_1_1;
    result2 += M4(-0.2961103, 0.086845234, -0.10247913, -0.013210539, -0.059666734, -0.19184658, 0.16315043, 0.08765062, -0.10797617, 0.2738504, -0.26167277, 0.041584164, 0.20119046, 0.0824973, 0.22881187, -0.26419795) * inp_0_2_1;
    result2 += M4(-0.11829394, -0.30769196, -0.1401747, -0.39590976, -0.038856555, -0.13288665, 0.19733416, 0.28880292, 0.2970474, 0.062326405, -0.0873244, 0.19581842, -0.19997525, 0.069352485, -0.011251953, -0.012494885) * inp_0_0_2;
    result2 += M4(0.4280951, 1.3863173, -0.25037897, -0.36379087, -0.2208981, -0.026433986, -0.038141187, 0.42213956, -0.1261684, -0.33653206, 1.1062177, -0.29235768, 0.10333682, -0.19958217, -0.3160962, -0.42629117) * inp_0_1_2;
    result2 += M4(0.08307327, -0.5546628, -0.29217482, -0.2499002, 0.07133961, -0.21261099, 0.19684657, 0.2756821, -0.02551348, 0.12874171, 0.2119905, 0.0922489, 0.082847364, 0.031839438, -0.074870564, -0.19411959) * inp_0_2_2;
    result3 += M4(0.020371152, 0.041655917, -0.022653714, 0.03196155, 0.015863989, 0.0060584233, -0.0014225532, 0.013437809, -0.06284866, -0.006368545, -0.08182186, 0.02703302, -0.0037783426, 0.018409904, -0.081513986, -0.03010899) * inp_0_0_0;
    result3 += M4(0.021217987, -0.039655227, 0.04063115, -0.033965796, -0.017531615, -0.05361853, -0.014235569, 0.17270273, 0.058529925, 0.025304988, -0.037998233, -0.03749047, 0.08157028, -0.18275736, 0.026761172, -0.13417092) * inp_0_1_0;
    result3 += M4(-0.027615687, -0.09206183, 0.0060414732, -0.01015101, 0.0023882354, -0.044618607, 0.008357746, 0.08504154, -0.14024584, 0.08199782, 0.034317713, 0.03569528, 0.16512446, 0.12153716, 0.03845175, 0.08043603) * inp_0_2_0;
    result3 += M4(-0.0058926125, 0.13871013, -0.08398663, -0.0073180227, 0.020554759, -0.037589185, -0.0052739973, 0.044231467, 0.044259436, 0.14521773, -0.024046354, -0.11047862, -0.10028243, 0.14866287, -0.02371846, -0.07342964) * inp_0_0_1;
    result3 += M4(0.28535807, -0.08463227, 0.09258368, 0.15792264, -0.048007295, -0.01862403, 0.025822861, 0.26155904, 0.19796534, 0.015679218, 0.0026555504, 0.030076157, -0.24438053, 0.35314846, 0.47364545, -0.19990638) * inp_0_1_1;
    result3 += M4(-0.25295427, 0.029599354, -0.024928488, -0.17365785, 0.05132718, -0.0052916803, 0.018628875, 0.16132185, 0.18807913, -0.0007205794, -0.15810294, 0.10332251, -0.24517499, 0.23528835, 0.04342479, 0.14254755) * inp_0_2_1;
    result3 += M4(-0.15992625, -0.92630684, -0.069811024, -0.58536375, 0.0019103757, -0.3718069, 0.019704638, 0.10310185, -0.013422682, -2.955791, -0.0919665, 0.07972147, -0.030790789, 0.21066819, 0.018745983, 0.14511281) * inp_0_0_2;
    result3 += M4(0.25227612, -0.7943341, 0.287073, 1.002059, 0.045244314, -0.855277, 0.08682312, 0.23034778, -0.042847883, -3.0256422, -0.0074338363, -0.15560603, -0.026702441, 0.17220312, 0.0032897585, -0.10699493) * inp_0_1_2;
    result3 += M4(0.25615734, -0.053414565, -0.22372204, 0.10585564, 0.06517101, -0.41738173, -0.070401765, 0.15044549, 0.038427584, -2.447575, 0.1616026, -0.12891236, -0.093986146, 0.31108296, -0.053665433, 0.11463803) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.010520545, 0.044448163, 0.0064266818, 0.0318324, -0.011133648, 0.02191814, 0.064293936, 0.00041473488, 0.094890036, -0.36470303, -0.058588427, 0.02319973, -0.03185943, 0.03263336, 0.0014378836, 0.013955486) * inp_1_0_0;
    result0 += M4(0.10903169, 0.045349367, -0.029160395, 0.081895694, -0.07799324, 0.46081424, -0.009650582, 0.05403307, -0.10479461, -0.4993418, -0.09909521, -0.014456241, -0.0064081033, 0.15822193, -0.031297423, -0.09966267) * inp_1_1_0;
    result0 += M4(0.09585565, -0.068986244, -0.019678462, 0.007249393, -0.037459, 0.12890632, 0.0901938, 0.03413151, 0.16678087, -0.06953585, 0.009469196, 0.056060996, 0.1560541, -0.00076000305, 0.075321846, 0.058342893) * inp_1_2_0;
    result0 += M4(-0.024838878, -0.0064848373, 0.0653157, -0.021401523, -0.16219404, 0.061583415, -0.011738875, 0.023495967, 0.014638605, -0.29068908, 0.0034209082, 0.08197258, 0.1828692, 0.04653406, -0.02805925, -0.024836488) * inp_1_0_1;
    result0 += M4(0.19647118, 0.2287559, -0.013835277, -0.1453728, -0.057151765, 0.086628266, -0.009708748, 0.063305475, 0.2792061, 0.16712785, 0.7534511, 0.2707066, 0.05736595, -0.39136678, 0.068989515, 0.06743362) * inp_1_1_1;
    result0 += M4(-0.37356454, -0.024085976, -0.062219907, -0.07911823, -0.6807365, 0.05280722, 0.10094878, -0.019338846, 0.47581354, -0.09821707, -0.055762827, -0.042794697, 0.4132092, -0.35020536, -0.062740274, -0.004368434) * inp_1_2_1;
    result0 += M4(-0.139719, -0.012367769, 0.03735779, -0.010627689, -0.011821397, 0.0043682805, -0.007327389, -0.041107506, 0.015052101, 0.01667318, 0.04837859, 0.057033874, -0.05965679, -0.11688946, 0.037509598, 0.034534127) * inp_1_0_2;
    result0 += M4(-0.11258337, -0.050045747, 0.1619938, 0.10384461, -0.053457607, 0.0066300877, -0.05865955, -0.033322543, 0.22310925, -0.010523646, -0.04063419, 0.01785165, -0.04597002, -0.03753408, 0.04271467, 0.005127492) * inp_1_1_2;
    result0 += M4(0.31564206, 0.07117346, 0.017622044, 0.055696864, -0.08502384, 0.1190358, -0.039998963, -0.028331256, -0.0073377877, -0.13260181, -0.010726171, 0.00034800277, 0.09050424, -0.050446067, -0.013674019, 0.011406187) * inp_1_2_2;
    result1 += M4(0.37329316, 0.1823424, -0.22657388, -0.11574857, 0.045530636, -0.009614566, -0.027464995, 0.12691665, 0.053909637, -0.13304652, -0.06716653, -0.25850728, 0.03732767, -0.010480063, -0.016367272, -0.08445374) * inp_1_0_0;
    result1 += M4(-0.061302517, -0.075209126, 0.06717743, -0.42040387, 0.019456472, 0.13904062, 0.11738491, 0.11794207, -0.2836686, -0.46390244, 0.1491461, 0.20255451, 0.13615955, -0.04048874, 0.06335331, -0.5071619) * inp_1_1_0;
    result1 += M4(0.08812802, 0.066272706, -0.038754866, -0.12515272, 0.27279937, -0.07946373, -0.18999982, 0.21062623, -0.04235476, -0.6681956, 0.13829611, -0.4680125, -0.2239362, -0.3700728, -0.14295445, 0.041906703) * inp_1_2_0;
    result1 += M4(0.019280177, 0.26741156, -0.09367589, 0.14853749, -0.020238066, -0.08434877, -0.03162651, 0.06407942, -0.38391072, 0.11991124, -0.018562783, 0.012088611, 0.10756538, -0.021831183, -0.0650134, -0.04051831) * inp_1_0_1;
    result1 += M4(0.20957027, -0.0078103133, 0.13374774, -0.5791063, 0.17667516, -0.0073534655, -0.22332871, 0.21461788, -0.46566206, -0.32371128, 0.3737038, -0.061099283, -0.13525245, 0.0067816013, -0.0417519, 0.18091896) * inp_1_1_1;
    result1 += M4(-0.18418384, -0.14643608, -0.016744504, 0.49178785, -0.054399904, 0.17744455, 0.06805528, 0.8546007, 0.009480626, -0.019430803, -0.19496755, -0.6688133, 0.027182188, -0.41853207, -0.39136502, -0.07583306) * inp_1_2_1;
    result1 += M4(0.1444139, 0.06570937, -0.114094466, 0.18024835, 0.025962828, 0.015425425, 0.00611955, -0.0014801358, -0.02310182, 0.0987213, 0.047714546, -0.0056160945, 0.043874864, -0.008621856, -0.006118224, -0.075499065) * inp_1_0_2;
    result1 += M4(-0.004161566, 0.006530173, 0.11463739, 0.30919972, -0.0008042987, -0.13593638, -0.028658355, 0.34130624, 0.07429968, 0.023942238, -0.003926699, -0.31672004, 0.050771, 0.05649256, 0.0060811397, -0.11179771) * inp_1_1_2;
    result1 += M4(-0.0413047, 0.120613955, 0.11900342, -0.2586005, 0.052585736, -0.30461943, -0.053231623, 0.37188512, -0.069497, 0.110312775, -0.056238286, -0.2322415, 0.02303754, -0.13125478, -0.03989872, -0.32383046) * inp_1_2_2;
    result2 += M4(-0.08427377, -0.18395323, 0.33318046, 0.09576005, 0.11132045, -0.002663697, 0.0014411274, -0.1546573, 0.090277314, -0.045239784, -0.011192071, 0.10283796, 0.10613652, -0.099726066, -0.09659081, 0.108674504) * inp_1_0_0;
    result2 += M4(-0.03392324, 0.080203906, 0.001607245, -0.009391929, 0.07791677, -0.064101435, -0.0037363023, -0.022420704, -0.38463926, -0.094136976, 0.096962444, 0.06748437, 0.006428812, -0.16648759, -0.095710196, -0.04486097) * inp_1_1_0;
    result2 += M4(0.024179578, -0.15043116, 0.17327975, -0.08700032, 0.07483742, 0.07921597, 0.005298513, 0.012566655, -0.037394702, 0.05718547, 0.02432726, 0.09163622, -0.21426007, -0.061372098, -0.30447704, -0.00468219) * inp_1_2_0;
    result2 += M4(-0.14382158, -0.3712627, 0.4791687, -0.029958112, 0.015235648, 0.07630923, -0.011527013, -0.18119864, -0.18996766, -0.038209796, 0.3752619, -0.26516184, -0.11208942, -0.12433723, 0.0660012, 0.1789154) * inp_1_0_1;
    result2 += M4(0.17517403, -0.2741204, -0.20394655, 0.2843082, 0.55019045, 0.002432974, -0.5505072, -0.7759108, -0.091845565, 0.39677218, 0.20380172, 0.048557617, -0.17970277, -0.005654358, 0.4154224, 0.5347858) * inp_1_1_1;
    result2 += M4(-0.054401644, 0.05185869, -0.1491124, 0.047461186, 0.08301041, 0.06642568, 0.38515407, -0.3326004, -0.16005431, 0.08200804, -0.1727294, 0.01550552, 0.38137707, 0.1294545, -3.14456, 0.32361978) * inp_1_2_1;
    result2 += M4(0.11669419, -0.12417413, 0.028127275, -0.1270416, 0.092937216, -0.00991938, -0.08133551, -0.17513427, -0.11920941, -0.007696626, -0.20387729, -0.08047932, 0.019043645, 0.010638911, 0.005685685, 0.0438017) * inp_1_0_2;
    result2 += M4(0.084062636, 0.17645527, 0.3733804, -0.010691373, 0.034503687, 0.038733732, 0.15176556, -0.5427123, -0.002859192, 0.14306812, -1.4134743, 0.27037466, -0.12704536, -0.11792973, -0.19409962, 0.28947362) * inp_1_1_2;
    result2 += M4(-0.012211204, 0.093204014, -0.11106334, -0.027668199, 0.12464253, -0.057317756, -2.028068, -0.38981926, -0.08072414, 0.02417526, 0.121517085, 0.006842317, -0.121066295, -0.09097839, 0.18797249, 0.2937004) * inp_1_2_2;
    result3 += M4(0.012564626, -0.0671379, -0.09103897, -0.2186601, -0.009938739, 0.018667608, 0.015789421, 0.012123846, 0.00046271094, -0.0047312104, 0.006956495, -0.081865035, -0.052308157, -0.102565065, -0.028976882, 0.0074596447) * inp_1_0_0;
    result3 += M4(0.20671049, 0.085352816, 0.0042849537, -0.08654771, -0.019392235, 0.053374913, 0.005474658, -0.050893787, 0.006594662, 0.081978895, -0.036779974, -0.15710293, 0.013876063, 0.28552127, 0.055365622, 0.074545406) * inp_1_1_0;
    result3 += M4(-0.39963946, 0.14624684, -0.009535463, -0.07000236, -0.15709734, -0.015035338, 0.0997053, -0.02132474, -0.7176308, -0.067502014, 0.013666971, -0.21275437, -0.33142367, -0.19420919, -0.022007897, -0.1112044) * inp_1_2_0;
    result3 += M4(0.09606977, -0.5300349, 0.15415432, -0.14767851, 0.03996538, -0.20118447, 0.0153132565, 0.025616731, -0.017448978, -0.6909675, 0.027681526, -0.0058403737, 0.04105582, 0.38403776, -0.024511838, -0.066205785) * inp_1_0_1;
    result3 += M4(0.5351052, 0.23521954, 0.16695826, -0.29243666, 0.016053865, 0.190343, -0.008666941, 0.053599495, -0.1133327, -0.9474798, -0.2704725, -0.04889809, 0.11993745, 0.38213938, -0.03761637, 0.05026157) * inp_1_1_1;
    result3 += M4(-0.059028722, -0.11920287, 0.0039468575, 0.051815633, 0.013409045, -0.060681794, 0.0041828193, -0.00046667375, -0.04646526, -0.8429831, 0.055611547, -0.17780945, -0.031715218, -0.86160386, -0.026807671, -0.1832316) * inp_1_2_1;
    result3 += M4(-0.047576353, 0.5123599, 0.04003741, -0.09618471, 0.0024411695, -0.4214588, 0.002225024, 0.014645497, 0.014909127, 0.092803486, 0.0739905, -0.02586252, 0.006264499, -0.24871935, 0.06707868, 0.043022934) * inp_1_0_2;
    result3 += M4(0.23273334, -1.1200345, 0.0012708367, 0.13528442, -0.05403125, -0.8585622, 0.065060236, -0.01932326, 0.037469957, 0.39534816, -0.023495633, -0.04549352, -0.0270337, -1.7672281, 0.06596426, 0.06013568) * inp_1_1_2;
    result3 += M4(0.10328695, -0.06407946, -0.041353934, -0.0033520393, -0.07677946, 0.25188535, -0.031959254, 0.038857415, 0.04834264, -1.6897722, -0.018819649, -0.029639946, -0.06813392, -2.2201712, 0.02198655, 0.07096135) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06122015, 0.10826249, 0.054233078, 0.09019895, -0.15328568, -0.09483167, 0.14233977, -0.08420442, -0.053282335, -0.0782157, -0.019141398, 0.0064395717, 0.017914299, -0.095367715, -0.02580657, 0.03286586) * inp_2_0_0;
    result0 += M4(0.101399645, -0.19841501, 0.007086783, 0.028139645, -0.29480907, 0.24506706, -0.17593765, -0.1269488, -0.018688938, -0.116142705, 0.024459792, 0.011273025, 0.006836069, -0.06310196, 0.05239383, 0.013615744) * inp_2_1_0;
    result0 += M4(-0.059306007, 0.18084845, -0.05633339, -0.039202522, -0.038190458, 0.01054386, 0.054036982, -0.021346804, 0.0016928107, -0.0352154, 0.0081086, 0.040617228, 0.05665524, -0.11577193, -0.014387513, 0.018208388) * inp_2_2_0;
    result0 += M4(0.023932079, 0.26246, 0.07384369, 0.047213435, 0.13520466, 0.11918592, -0.08805261, 0.5901141, -0.047128577, 0.03909406, 0.0042197024, 0.018596206, 0.015344964, -0.13523832, -0.02844133, 0.047014553) * inp_2_0_1;
    result0 += M4(0.5931649, -0.22202553, 0.21261267, 0.092831224, 0.20104586, -0.386936, 0.1913645, 0.16480647, -0.105933994, 0.1465385, -0.034003936, 0.007996002, 0.033414334, -0.36212593, 0.015634796, 0.032048076) * inp_2_1_1;
    result0 += M4(0.56106204, -0.032418445, -0.024825834, 0.031265978, 0.045836303, -0.05083388, -0.022662884, 0.04918578, 0.015098636, 0.21837077, 0.0296398, 0.034033816, 0.22214969, -0.30591947, -0.018059345, -0.021640146) * inp_2_2_1;
    result0 += M4(-0.05127593, 0.20112377, -0.08445685, 0.041960422, 0.13352473, 0.021969782, 0.27409592, 0.14257579, 0.05891773, 0.08110517, 0.045042366, 0.010608364, 0.05193825, -0.044847175, 0.0788014, 0.066274434) * inp_2_0_2;
    result0 += M4(-0.16661294, -0.09403188, 0.06744488, 0.0061951093, -0.12488242, -0.108324856, 0.024295682, -0.036780838, 0.20718819, 0.045307133, 0.0354772, -0.016164364, 0.04135586, -0.23687433, 0.25525782, 0.11496532) * inp_2_1_2;
    result0 += M4(0.37206757, -0.05940368, -0.0032773875, 0.008960234, -0.011611883, 0.049974877, 0.04299993, -0.0029080857, -0.05749962, 0.013994896, 0.015084229, -0.004494492, 0.4768464, -0.07816517, 0.041520525, 0.043039303) * inp_2_2_2;
    result1 += M4(0.01898438, -0.0023114616, 0.057006273, -0.08893249, 0.14557666, -0.24194191, -0.04749686, 0.3735803, -0.054756913, 0.030516298, 0.06313873, -0.008049796, 0.04600342, 0.08375146, 0.010472979, -0.061592665) * inp_2_0_0;
    result1 += M4(-0.23629545, -0.3440241, 0.28983983, 0.11729792, -0.26408646, 0.5263711, 0.05071449, 0.41764516, -0.016455473, 0.12874947, 0.048483897, -0.004540892, -0.019535672, -0.097495414, -0.021299046, 0.033700176) * inp_2_1_0;
    result1 += M4(0.042200267, -0.054789916, 0.020548055, 0.21516435, 0.08810164, -0.120561786, -0.0019414013, 0.22341852, -0.01489915, 0.24565952, 0.11613657, 0.075845875, 0.0011985612, -0.15647443, 0.009482149, -0.074364394) * inp_2_2_0;
    result1 += M4(0.15022412, -0.1961428, 0.051851712, -0.09411617, 0.13031922, 0.46401417, 0.3084625, -0.13437475, -0.1213101, 0.10215413, 0.06773521, 0.01668836, -0.11772843, 0.042406403, 0.08621351, -0.077710815) * inp_2_0_1;
    result1 += M4(0.3324805, 0.72658616, -0.10716082, -0.4312679, -0.03315388, -0.89433736, 0.15944293, -1.0738697, -0.011904859, -0.0048065614, 0.106801204, 0.091999374, -0.0005714612, 0.14577791, -0.08254424, -0.17568341) * inp_2_1_1;
    result1 += M4(-0.0024073098, 0.29807183, -0.014703346, 0.15951489, 0.041761536, 0.095125854, -0.14029965, -0.29163334, -0.14780448, 0.3519759, 0.25263056, 0.16129877, -0.20864587, -0.023525085, -0.006083721, -0.45388997) * inp_2_2_1;
    result1 += M4(0.09217015, -0.10852635, 0.06669267, -0.07492574, -0.06599424, 0.19024093, 0.1453513, 0.65063196, -0.10576028, 0.13397136, 0.036186025, 0.20567241, -0.13437358, 0.16573848, 0.08192886, -0.11002195) * inp_2_0_2;
    result1 += M4(-0.030685302, 0.08332954, -0.07545791, 0.4648082, 0.183111, 0.38846508, 0.07379926, -0.03485462, -0.058499224, 0.17441124, -0.0062282966, 0.035493594, -0.11981979, 0.14632758, 0.1445424, -0.12396704) * inp_2_1_2;
    result1 += M4(-0.08660978, 0.09003873, -0.014541649, -0.23555036, 0.024897909, 0.040021036, 0.059517875, -0.012098842, 0.045788206, 0.33046556, 0.08726068, 0.1160385, -0.18636751, 0.12034835, -0.18977478, -0.50025874) * inp_2_2_2;
    result2 += M4(0.17556101, -0.08068512, 0.020018112, 0.13041544, -0.003580149, 0.083367415, 0.14520936, -0.0089879995, 0.010119047, 0.10281463, 0.09883165, -0.10272681, -0.020687839, 0.018966416, 0.048357025, 0.081188396) * inp_2_0_0;
    result2 += M4(0.2163153, 0.26971576, 0.10876703, 0.028686302, 0.103915386, 0.03441653, 0.15623105, 0.02998391, 0.025539652, 0.11868311, 0.27059445, -0.028536556, -0.06621671, -0.005367367, 0.035966955, 0.05354782) * inp_2_1_0;
    result2 += M4(-0.2554419, 0.14260691, 0.081836134, 0.16176872, 0.108030125, 0.10572225, -0.06772185, 0.0039905277, -0.11828027, 0.13777678, 0.21306787, -0.06948844, 0.04814665, 0.05142592, 0.009187918, 0.0468918) * inp_2_2_0;
    result2 += M4(0.07208899, -0.032126207, -0.028747197, -0.05108964, -0.2561228, -0.21786238, 0.29703555, 0.074707575, -0.049233776, 0.093637615, 0.1258475, -0.16756192, -0.1575501, 0.0422748, 0.030996276, 0.09371969) * inp_2_0_1;
    result2 += M4(-0.06813553, 0.24662669, -0.04804398, -0.20140304, -0.03782353, -0.046661604, 0.07842471, -0.18001723, -0.078845754, 0.21318118, 0.12657936, -0.13320471, -0.43621346, 0.16548981, 0.0866134, 0.020627579) * inp_2_1_1;
    result2 += M4(0.02452275, -0.071320854, -0.1105986, -0.036704816, -0.05184665, -0.05164531, -0.04241121, -0.07402733, -0.17000854, 0.13348934, 0.3084468, -0.12242798, -0.24165207, 0.19056974, 0.105649404, -0.017090015) * inp_2_2_1;
    result2 += M4(0.22901985, -0.039865833, 0.08545871, -0.04621544, -0.10538647, 0.067130886, 0.4414835, 0.015427147, -0.18340695, 0.024178442, 0.12523457, -0.038292456, -0.15772031, 0.10740736, -0.023625264, 0.011750178) * inp_2_0_2;
    result2 += M4(-0.11378993, 0.21733531, 0.26170298, -0.30330893, -0.31023076, 0.08244421, -0.40890142, -0.17489722, -0.0003440668, 0.08611639, 0.10193196, -0.137081, -0.5608184, 0.18687493, 0.15314348, 0.096616745) * inp_2_1_2;
    result2 += M4(-0.058309037, -0.045006502, -0.010080495, 0.10866392, 0.019382926, -0.0381211, 0.2277567, 0.12376915, 0.13268302, 0.13902938, -0.12847427, -0.11310203, -0.4237219, 0.10195468, 0.048739538, 0.090864874) * inp_2_2_2;
    result3 += M4(-0.066054, -0.019112363, 0.0942301, 0.10740657, 0.025185667, -0.0433241, 0.032033946, 0.10975806, 0.040558457, -0.028469397, 0.0023250657, 0.00064945564, 0.02303585, -0.011803193, -0.00966248, -0.051413585) * inp_2_0_0;
    result3 += M4(-0.2618665, 0.06611073, -0.018002521, 0.07328772, -0.016045861, 0.12833081, -0.039073285, 0.2377046, 0.052125603, -0.034364577, 0.046351716, -0.12219655, 0.010275153, 0.0140579725, 0.019886224, 0.00015472264) * inp_2_1_0;
    result3 += M4(-0.072225854, -0.027021084, -0.065287374, -0.114500955, 0.045668818, -0.06576741, 0.050600205, -0.02221971, 0.10161249, 0.000841833, 0.029653694, -0.014753876, -0.01151704, 0.049205918, -0.0053656036, -0.016141437) * inp_2_2_0;
    result3 += M4(0.089481175, 0.27983, 0.050546218, 0.124625616, -0.12324352, 0.037311006, 0.1185107, 0.08988781, -0.033709772, 0.030564032, -0.009358234, 0.0024584795, -0.019595288, 0.017085403, 0.004083131, -0.038404517) * inp_2_0_1;
    result3 += M4(0.36857736, 0.29662165, 0.32996222, 0.1232403, 0.24405399, 0.23396541, 0.15278246, -0.056482546, -0.042231116, -0.02423236, -0.025230931, -0.09139372, -0.035712242, -0.06596421, 0.038268175, -0.009025599) * inp_2_1_1;
    result3 += M4(0.1840368, 0.24352814, 0.0083328495, -0.07327428, -0.016507568, 0.049262702, 0.010196959, 0.025242094, 0.054788183, -0.064329475, 0.07416674, 0.035079516, 0.032908462, -0.010364919, -0.04185632, 0.030476155) * inp_2_2_1;
    result3 += M4(0.029042711, 0.01316856, -0.053733107, -0.05053225, -0.054817244, -0.06043547, -0.0075834505, 0.026887447, 0.003927379, 0.466666, 0.021164674, -0.03311588, -0.0396549, -0.061332047, 0.07867882, 0.02135356) * inp_2_0_2;
    result3 += M4(0.019885466, -0.52317816, -0.007368732, 0.05805263, 0.056295834, -0.6053392, -0.0035634045, 0.09867786, 0.032847017, 0.17028368, -0.0445652, -0.12777044, -0.059791654, -0.55159986, 0.2808319, -0.061432295) * inp_2_1_2;
    result3 += M4(0.05503988, -0.38978922, 0.08738447, -0.043498594, 0.04453636, 0.025781995, 0.006983844, 0.015465377, 0.095834784, 0.9117172, -0.016306564, -0.19232658, -0.09073324, -0.8950754, 0.035863172, -0.12459986) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.057750452, -0.15072152, -0.0056443745, 0.03221958, -0.017919945, 0.22291747, -0.12476563, -0.015395928, -0.011738588, 0.01178879, 0.08202868, -0.013425151, 0.11910602, -0.112165086, 0.031832278, 0.024745258) * inp_3_0_0;
    result0 += M4(-0.04653042, -0.16317883, 0.05077417, 0.105395265, 0.3603314, -0.24450622, 0.12348243, -0.0876532, -0.09420928, 0.3329527, 0.007211168, 0.012683741, 0.10812923, -0.04116874, -0.09323715, 0.011117262) * inp_3_1_0;
    result0 += M4(-0.005181997, 0.01757017, 0.007482743, 0.015984865, -0.2547638, -0.23449706, -0.1403369, -0.040514633, -0.112720124, 0.15069528, -0.002578656, 0.011713617, 0.17149909, -0.0031746735, 0.05784098, -0.018155878) * inp_3_2_0;
    result0 += M4(-0.031488996, -0.26298156, 0.21931699, -0.42373538, 0.16415077, 0.19723685, -0.018485028, -0.041917607, -0.27300465, 0.186924, -0.019103872, 0.026226332, -0.012715107, -0.11106014, 0.00647276, -0.044774126) * inp_3_0_1;
    result0 += M4(-0.12255106, 0.3728086, 0.022669494, -0.0065008383, -0.027723692, -0.13661762, 0.18383256, -0.029952873, -0.23690714, -0.019505048, 0.059395436, 0.081433326, -0.34863135, -0.013297647, 0.07526092, 0.5178499) * inp_3_1_1;
    result0 += M4(0.16299047, 0.013866936, -0.0058405153, -0.009186355, -0.025558667, -0.0113727255, 0.022973089, 0.038124572, -0.19941565, 0.2265962, 0.06356354, 0.046146333, -0.16232277, 0.1998952, -0.09924038, -0.043468785) * inp_3_2_1;
    result0 += M4(0.08312962, 0.2274757, -0.0037372068, -0.107643165, 0.019512728, 0.22167748, -0.11325385, -0.004606484, -0.12360659, 0.013123206, 0.073383905, 0.0077004153, -0.12933148, -0.07701719, 0.043361418, 0.04563095) * inp_3_0_2;
    result0 += M4(-0.4513025, 0.20639044, -0.010448509, 0.05077951, 0.09176693, 0.08661282, -0.05810711, -0.05019132, -0.115618, 0.04757856, 0.038315665, 0.026031874, 0.04940362, 0.13387415, 0.06342307, 0.03712105) * inp_3_1_2;
    result0 += M4(-0.019307038, -0.07595756, -0.022476105, 0.003606926, 0.063715585, -0.02562133, -0.14773275, -0.05671196, -0.17626595, 0.10947309, 0.01658236, 0.0031915386, 0.22449961, 0.034927726, 0.060168907, 0.015691616) * inp_3_2_2;
    result1 += M4(-0.01700065, 0.05119754, 0.03050409, 0.07439287, -0.04172521, 0.0022886638, 0.06354657, -0.12522472, 0.05714592, 0.18120897, -0.020578692, 0.050651457, 0.019580798, 0.037944995, 0.010786835, -0.016984148) * inp_3_0_0;
    result1 += M4(0.018757302, -0.7002515, -0.021864202, -0.17909746, -0.17061362, 0.50012976, -0.26604995, -0.1233719, 0.026885048, -0.04961008, 0.02226431, 0.07449569, 0.03950908, -0.06524452, -0.10929155, -0.24233268) * inp_3_1_0;
    result1 += M4(0.046449248, 0.024549132, -0.008502822, -0.20468411, -0.051515665, -0.027230494, 0.1941443, 0.2623992, -0.06538545, 0.1515245, 0.013234978, 0.27233404, 0.26222256, -0.6470327, -0.12457288, 0.022136949) * inp_3_2_0;
    result1 += M4(0.014199408, -0.0896627, 0.013459726, 0.3041668, -0.0364312, -0.07332533, -0.023450993, 0.11776486, 0.015475735, -0.027022347, 0.035398994, 0.04697255, 0.04802734, 0.061520156, -0.028009232, 0.0034871327) * inp_3_0_1;
    result1 += M4(0.15048754, -0.51337576, 0.5878886, 0.018444547, 0.059948422, -0.102921516, 0.094616115, -0.08683617, 0.0569285, 0.25198728, -0.009203682, 0.008496602, -0.20314537, -0.38135856, 0.5515355, 0.045955714) * inp_3_1_1;
    result1 += M4(0.047032267, -0.19582848, -0.0032972316, -0.3938722, 0.14335488, -0.12257875, -0.13291477, 0.13944004, 0.1270612, 0.15627982, 0.11406325, 0.3049262, 0.12083887, -0.78314435, -0.11889978, -0.41643646) * inp_3_2_1;
    result1 += M4(0.14016095, -0.13427499, -0.10775858, -0.43769848, 0.04625148, 0.009629241, 0.013503909, 0.10894728, -0.00452048, 0.055892408, 0.08473473, 0.05815008, -0.01880876, -0.060560126, 0.032951787, -0.106828846) * inp_3_0_2;
    result1 += M4(0.035035387, 0.12588583, 0.40493459, -0.3368252, 0.17327751, 0.18414871, 0.03597348, -0.05236889, 0.032261156, 0.22945684, 0.057468303, 0.14566293, 0.029302942, -0.02381173, 0.09437148, -0.3566281) * inp_3_1_2;
    result1 += M4(-0.0054826993, -0.013453795, -0.03744975, -0.12735377, 0.07135115, 0.29467002, 0.05789791, 0.09014724, 0.053690907, 0.17244154, 0.099866405, 0.20014809, -0.026100684, -0.32503352, -0.031299237, -0.41915798) * inp_3_2_2;
    result2 += M4(-0.04983112, -0.16717225, 0.11167098, 0.10022281, -0.24299157, -0.088837005, 0.051526282, 0.29786548, 0.081747934, -0.047854587, 0.10191566, -0.10230175, 0.009444138, 0.037129425, -0.034211405, -0.04002745) * inp_3_0_0;
    result2 += M4(-0.09157174, -0.15592982, -0.16952603, 0.03359692, 0.1647429, 0.01401424, -0.010691284, 0.041252702, 0.18177322, -0.120667115, 0.07921197, -0.19624682, 0.05539401, -0.010034521, -0.36406016, -0.027369414) * inp_3_1_0;
    result2 += M4(-0.020040067, -0.038534325, 0.06593167, 0.0041255257, 0.039893, -0.3212686, 0.122732535, 0.025184069, 0.0763163, -0.03910075, -0.02810436, -0.08637323, 0.02938422, -0.036397427, 0.009554174, -0.01819845) * inp_3_2_0;
    result2 += M4(0.16288868, -0.23394728, 0.13681635, 0.1480799, 0.051698744, 0.105459385, -0.174244, 0.024727488, 0.08247889, -0.059024133, 0.07032953, -0.30889726, 0.01039748, 0.022762237, 0.027089274, 0.0020683932) * inp_3_0_1;
    result2 += M4(0.13266361, 0.2261575, -0.114252314, 0.15734491, 0.061157696, -0.010848695, -1.5057061, 0.07675711, 0.27568528, -0.30713585, -0.054835565, -0.16376, 0.08748936, 0.08398105, -0.2689809, 0.12596871) * inp_3_1_1;
    result2 += M4(-0.0108072795, 0.011368517, 0.06116875, 0.07597112, -0.23138483, -0.2506941, -0.022854937, 0.062665604, 0.08570128, -0.0924749, 0.063295476, -0.043127798, 0.057271473, -0.43043074, 0.06506211, 0.17691022) * inp_3_2_1;
    result2 += M4(0.27450138, -0.17991468, -0.16243124, 0.114755385, -0.084178284, -0.02221528, 0.19952513, -0.18133791, 0.13975388, -0.07756933, 0.08594656, -0.009136551, 0.08003053, 0.025053797, -0.08620298, 0.05627769) * inp_3_0_2;
    result2 += M4(0.07657079, -0.23249556, 0.23186788, 0.031423096, -0.013949685, -0.0080565475, -0.121887416, -0.01680888, 0.015090817, -0.082980804, 0.5624721, -0.1394559, 0.035919834, 0.06268779, -2.0355024, 0.03768712) * inp_3_1_2;
    result2 += M4(0.020715412, 0.016336553, -0.11045138, -0.021464577, -0.0980128, -0.014633806, 0.26930308, 0.084044985, 0.13204081, -0.07909795, 0.09922487, -0.13015977, 0.21345127, -0.11025319, -0.011777466, -0.043062538) * inp_3_2_2;
    result3 += M4(0.10403222, -0.028974075, 0.01854913, 0.0081738895, 0.021278357, 0.011335948, 0.043701842, -0.06050356, 0.050828863, 0.009613036, 0.06631747, 0.0196676, -0.013608363, 0.060760174, 0.028304605, 0.011299332) * inp_3_0_0;
    result3 += M4(-0.054396603, -0.0833055, 0.03834282, 0.0037910945, 0.23806326, 0.17628372, 0.09918271, 0.03701951, 0.07934763, 0.027533852, 0.012757399, -0.012966482, -0.068945214, 0.02439222, -0.025217148, 0.022972433) * inp_3_1_0;
    result3 += M4(0.079726495, -0.010005262, 0.007200617, -0.0066190716, 0.014964895, -0.061329473, 0.017154284, 0.15244003, 0.10938179, 0.026579693, 0.030441862, -0.018104214, -0.03928683, 0.008377016, 0.009479848, 0.0082282005) * inp_3_2_0;
    result3 += M4(-0.20928012, -0.15112297, 0.26250204, -0.14027837, -0.04629021, -0.15453255, -0.10778543, 0.013206195, 0.00036356025, -0.13540258, 0.0037238966, 0.062340662, 0.020059755, 0.0210328, 0.051652126, 0.094931655) * inp_3_0_1;
    result3 += M4(0.08118892, 0.07058871, -0.017123222, 0.4473931, -0.07251141, 0.31622568, 0.08082665, -0.23296456, -0.066530615, 0.09730346, -0.037103567, 0.18997394, -0.08284439, -0.21094508, -0.04524166, 0.42621976) * inp_3_1_1;
    result3 += M4(-0.12951995, 0.01825283, 0.025029244, 0.03093346, -0.11868448, -0.21801767, -0.017812641, -0.28429902, 0.16432387, 0.035643626, 0.05796958, -0.009234243, -0.5357003, 0.10202993, 0.114022076, -0.28029737) * inp_3_2_1;
    result3 += M4(0.009686581, 0.17579444, -0.035640758, -0.07780406, 0.03056019, 0.22997287, -0.061316844, -0.07902517, 0.014043568, 0.3401107, 0.0059383833, 0.059907492, -0.019094842, 0.16624318, 0.022185309, 0.06818901) * inp_3_0_2;
    result3 += M4(-0.024476986, 0.85511065, 0.0034901195, 0.21029074, -0.033608906, -0.81545097, -0.11184553, -0.09719976, 0.05333494, -0.66824144, 0.018741773, 0.05298487, -0.0319796, -1.8968675, 0.081422865, 0.13168077) * inp_3_1_2;
    result3 += M4(0.03874521, 0.55846167, -0.0035995545, -0.0026025597, 0.01068596, 0.3187986, -0.017463667, -0.13263199, 0.007690219, -0.17369002, 0.011852845, 0.03685069, -0.081409186, -2.1640568, 0.08555316, 0.042220343) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.009017153, 0.0010485377, 0.0082032345, -0.004235611);
    V4 result1 = V4(-0.002536382, 0.0018013647, 0.010443753, 0.024370257);
    V4 result2 = V4(0.011871099, -0.008075864, -0.010526546, 0.0028494566);
    V4 result3 = V4(-0.0100317225, 0.014339489, 0.01466705, 0.0048686345);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.07318278, -0.49887508, 0.20092589, 0.1383618, 0.0008038116, 0.02396685, 0.008799458, -0.006330794, 0.0628358, -0.012898512, -0.053965587, 0.0011306108, 0.032443337, 0.08517168, 0.030283555, 0.01141995) * inp_0_0_0;
    result0 += M4(-0.29900736, -0.49857074, 0.003593424, -0.25066125, 0.20840266, 0.0021460762, -0.04131541, -0.028855704, -0.10225524, 0.04830555, -0.22485198, 0.022975724, 0.0002669361, -0.3155444, 0.065144986, -0.10083988) * inp_0_1_0;
    result0 += M4(-0.22293393, -0.08526127, -0.0007298409, 0.06706196, 0.12925673, -0.036234893, 0.07081374, 0.13886574, -0.09564379, 0.025669778, -0.12016505, -0.113475375, -0.04304624, -0.058899034, 0.02617126, -0.028994022) * inp_0_2_0;
    result0 += M4(-0.02214686, 0.0818392, -0.34317663, -0.10186992, -0.0024117432, 0.13382512, -0.11287085, 0.15323372, 0.058442615, -0.17197007, 0.046700004, 0.023394639, -0.061120357, -0.061841447, 0.041703023, 0.14866214) * inp_0_0_1;
    result0 += M4(-0.007570265, 0.20596075, -0.30073816, -0.114724696, 0.019891249, -0.2236963, 0.082334034, -0.06151881, -0.2106175, -0.018437738, 0.46441317, -0.07904392, 0.095718086, 0.29633966, 0.30510616, -0.31286353) * inp_0_1_1;
    result0 += M4(0.06250039, 0.1187878, -0.026508614, -0.068648145, -0.11272157, -0.2339885, 0.16375396, -0.12534304, 0.043092433, -0.139868, 0.07093811, -0.06705509, -0.010806973, 0.2238631, -0.008425617, 0.2632561) * inp_0_2_1;
    result0 += M4(-0.017539514, 0.025215412, -0.16387264, -0.056949243, 0.12566295, -0.19220628, 0.28349808, 0.11394686, -0.04083231, 0.007019627, 0.082470916, -0.06414087, -0.17508905, 0.006498127, -0.09793903, 0.07627849) * inp_0_0_2;
    result0 += M4(-0.12847534, -0.021655986, -0.056504965, -0.06619597, 0.05245907, 0.19973323, -0.2817974, -0.09685767, 0.142474, -0.017300993, 0.121816784, 0.040774338, -0.040183224, 0.036496352, -0.39073986, 0.0010126084) * inp_0_1_2;
    result0 += M4(-0.0942072, -0.023414351, -0.104700826, -0.010166659, 0.07714303, 0.23044042, 0.00060443056, -0.06479499, 0.03371674, 0.04821828, 0.081602946, 0.042575743, -0.12708409, -0.21412374, -0.08481267, -0.06807309) * inp_0_2_2;
    result1 += M4(0.17229527, -0.037148118, -0.107336506, -0.17810826, -0.010819889, -0.05368822, 0.0018185279, 0.062324353, -0.028017418, -0.043505058, -0.055086896, -0.13549647, -0.018464347, 0.018034043, 0.011946962, -0.15161212) * inp_0_0_0;
    result1 += M4(0.2758, -0.022913089, -0.009614192, 0.22697479, 0.010272483, -0.030487856, -0.009163334, -0.40370274, 0.06704853, 0.060314532, 0.02431466, 0.00046507662, -0.0043463474, 0.0592924, -0.013254602, -0.08162072) * inp_0_1_0;
    result1 += M4(-0.083791904, 0.015107068, -0.006006652, -0.060736585, 0.10585418, -0.003652966, 0.009788624, -0.40521723, -0.05128352, -0.04222646, 0.03649727, -0.05881932, 0.039167132, 0.07592871, -0.02702191, 0.10380507) * inp_0_2_0;
    result1 += M4(-0.3674789, -0.012027773, -0.19829752, -0.06318647, -0.00050177076, -0.110135704, -0.027634505, 0.2975008, -0.025902038, 0.09878944, -0.027682161, 0.055241767, 0.0007506265, 0.07430275, -0.0033905534, 0.078111395) * inp_0_0_1;
    result1 += M4(-0.36590898, 0.11511496, 0.0692147, -0.25841075, -0.08247528, 0.059368238, -0.08392935, -0.5759596, -0.12973344, 0.35326445, 0.075357355, -0.06811066, 0.12931912, 0.28780496, -0.070103325, -0.14483567) * inp_0_1_1;
    result1 += M4(0.040542264, 0.038226064, 0.00681267, 0.11719852, -0.023182208, 0.054472756, -0.012098097, -0.050879624, -0.101161994, 0.06312069, 0.01318609, 0.100866474, 0.052866083, -0.043009017, -0.030689474, -0.33426747) * inp_0_2_1;
    result1 += M4(-0.09188155, 0.019467069, -0.09345799, 0.14801688, 0.1611709, -0.11126961, 0.03863378, 0.34796023, -0.066986784, 0.02532678, 0.10988784, -0.048796523, -0.031609852, -0.016069857, -0.1339531, -0.18409662) * inp_0_0_2;
    result1 += M4(0.044441942, 0.01979555, -0.0147277545, 0.050542016, -0.16624272, -0.012235385, 0.027662965, -0.11871334, 0.012506672, 0.052655134, 0.06839573, 0.018364435, -0.09524738, 0.020183226, -0.15521178, 0.17712237) * inp_0_1_2;
    result1 += M4(-0.0334905, -0.0005998506, -0.034080785, 0.036984053, -0.08316115, -0.017113736, -0.021534475, 0.13972235, 0.045847204, -0.035840724, -0.060358193, 0.12863313, -0.08806807, 0.049906462, 0.11753874, -0.2907402) * inp_0_2_2;
    result2 += M4(-0.18178983, 0.18519333, -0.01525493, -0.0052877627, -0.04850378, 0.081263065, -0.082566, -0.04895881, -0.058818724, 0.09098339, -0.09102612, 0.018873652, 0.04684599, -0.0044676177, 0.034772273, -0.03707175) * inp_0_0_0;
    result2 += M4(-0.08050434, -0.2087153, 0.041722644, -0.018832346, 0.06678136, 0.031265497, 0.0095670065, 0.06815456, 0.09616352, -0.007173968, -0.17516822, -0.011410945, 0.07219337, -0.07655592, 0.11142689, 0.046005458) * inp_0_1_0;
    result2 += M4(-0.033680845, 0.0477549, -0.0055180243, 0.12422401, 0.029722357, 0.14346898, -0.008773131, 0.028305015, -0.050233144, 0.0917617, -0.055136222, -0.15271923, 0.084413625, -0.10902294, 0.029920598, -0.033808984) * inp_0_2_0;
    result2 += M4(-0.23380344, 0.47887778, 0.014346375, 0.042204246, 0.0999212, -0.10452064, -0.1736832, -0.11486587, 0.08436946, -0.055830974, -0.05193812, 0.040640846, 0.10238492, -0.06608949, -0.023595082, -0.07915065) * inp_0_0_1;
    result2 += M4(-0.11453768, -0.22986357, 0.14220048, -0.10412307, 0.0010835112, -0.08531013, 0.0013771025, -0.18050812, 0.4274716, -0.18190771, -0.12031276, 0.07340547, -0.24889725, -0.1646629, 0.564748, 0.08485824) * inp_0_1_1;
    result2 += M4(-0.07451971, 0.0026267539, 0.061042283, 0.09018299, -0.1242304, -0.086841285, 0.07546604, -0.21004407, 0.051761962, -0.0994604, 0.07882618, 0.033582974, -0.07510976, 0.17931403, -0.08357317, 0.14016464) * inp_0_2_1;
    result2 += M4(-0.06754602, -0.03261558, 0.03158395, 0.036541462, 0.20248258, -0.2652735, -0.046815064, -0.15977214, 0.042744733, 0.114235885, -0.011558321, 0.0052244524, -0.045686945, 0.017863078, -0.017705902, 0.09162851) * inp_0_0_2;
    result2 += M4(-0.00804366, -0.14419669, 0.01689822, 0.005557144, -0.096086025, 0.39439917, -0.05556509, -0.08264148, 0.037488665, -0.110837065, 0.064941, 0.007177833, -0.12726773, -0.19723387, -0.026130226, -0.23702782) * inp_0_1_2;
    result2 += M4(-0.0056900987, 0.035201944, -0.0022192202, 0.068835944, 0.024908904, -0.004116111, 0.055468753, -0.045977984, 0.028143331, 0.058044054, -0.022011584, 0.067093, -0.11874518, -0.0103330705, 0.05580744, -0.117851295) * inp_0_2_2;
    result3 += M4(-0.05225156, -0.19688869, 0.0017872368, 0.035090078, 0.038671482, 0.07878374, -0.072243795, -0.0064579626, 0.0051621664, -0.04800427, -0.053525448, -0.0022893553, 5.1417035e-05, 0.047656298, 0.062341906, 0.027569506) * inp_0_0_0;
    result3 += M4(0.07977352, -0.05927955, 0.0011020103, -0.041523613, -0.0873799, 0.31152743, -0.011169869, 0.015728856, 0.009480848, 0.119028434, 0.06507701, -0.004982688, 0.009528238, 0.0035258736, -0.0032666267, 0.042336714) * inp_0_1_0;
    result3 += M4(-0.022531215, -0.21016951, 0.0005042067, 0.048543338, 0.012935319, 0.16593012, -0.00247137, -0.30067793, -0.093028694, -0.06740951, 0.044841878, -0.4463513, 0.009186595, -0.11523489, 0.023627542, 0.02479351) * inp_0_2_0;
    result3 += M4(-0.061511755, -0.45458046, -0.05732259, -0.07162974, 0.018991392, 0.21157008, -0.029994372, -0.01800898, 0.057059698, 0.05582425, 0.10313039, 0.013020792, 0.048605036, -0.116867006, 0.010748688, -0.035476796) * inp_0_0_1;
    result3 += M4(0.08438271, -0.3901492, 0.085120924, -0.068490446, 0.02319832, 0.38096666, -0.04702538, -0.035660528, -0.18414399, -0.24742548, 0.12640174, 0.104126625, 0.011711838, -0.25948545, -0.2668175, -0.07923382) * inp_0_1_1;
    result3 += M4(-0.032698955, 0.05754306, 0.037411816, -0.08751108, -0.027102098, 0.34964487, -0.012252281, 0.22565427, -0.087139, 0.01719284, 0.07405802, 0.1287449, 0.16816407, 0.00199765, -0.0664923, -0.31661087) * inp_0_2_1;
    result3 += M4(-0.029624287, -0.041028965, 0.037216462, -0.012425286, 0.047959775, 0.13653283, -0.022699552, 0.01841105, -0.011761501, 0.022692882, 0.042492047, -0.005002123, -0.020699762, -0.15257904, -0.014352729, 0.03624504) * inp_0_0_2;
    result3 += M4(0.012419978, -0.1526494, 0.0155420005, -0.015455238, -0.076002255, 0.43831426, -0.021805497, 0.0034105668, 0.04053418, -0.018435542, 0.060835328, 0.07953378, -0.03678357, -0.064925775, -0.22595574, -0.060743924) * inp_0_1_2;
    result3 += M4(-0.023525506, -0.0577142, 0.009641247, -0.008821182, 0.1072278, -0.10791789, 0.02279, 0.0709248, -0.059791464, -0.102928564, 0.00025300676, 0.0061429823, 0.0050314176, -0.0073393867, 0.056223255, -0.031028787) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.01322709, -0.13894929, 0.04766599, 0.06311907, 0.16501647, -0.09829291, 0.06491031, 0.07772843, 0.030349975, 0.018663378, -0.041406963, -0.054252286, 0.05700313, -0.04908212, 0.046947416, 0.02460132) * inp_1_0_0;
    result0 += M4(0.060757164, -0.22958264, 0.010384466, 0.0357438, -0.020625038, -0.19614586, 0.06095618, -0.17183422, 0.035938933, 0.27455848, -0.10803353, 0.024415707, 0.020057198, -0.20235726, 0.17624703, -0.20607619) * inp_1_1_0;
    result0 += M4(0.045095943, -0.18345907, -0.103939675, 0.008333857, -0.016698541, 0.037625927, 0.002097282, -0.003987684, 0.121418476, 0.14064719, 0.02160842, 0.10478597, -0.18071273, -0.030447394, -0.044845156, -0.18068255) * inp_1_2_0;
    result0 += M4(0.10867461, -0.16868895, -0.04976029, 0.0036646295, -0.20351623, -0.11329266, -0.00604201, -0.03658876, -0.022112943, 0.05833473, -0.017063238, -0.15751036, -0.052899566, 0.35653377, 0.026517171, -0.02757987) * inp_1_0_1;
    result0 += M4(-0.22847416, -0.5055839, -0.2054184, -0.101192296, -0.24030752, -0.07355778, -0.096868046, -0.0063416306, 0.48443142, 0.003266164, 0.024403725, 0.12687783, -0.11470313, 0.3137929, -0.0705826, -0.22770397) * inp_1_1_1;
    result0 += M4(0.24844636, -0.3890596, -0.13653205, 0.19767609, -0.10910574, -0.24297749, -0.039095357, -0.19776523, 0.2037967, 0.08978801, 0.04481908, 0.24510525, 0.20554718, 0.12078809, 0.070479296, -0.03664941) * inp_1_2_1;
    result0 += M4(0.08507098, 0.1890324, 0.07354907, -0.040213846, -0.23281637, -0.0548857, -0.29441705, 0.109696664, 0.25885645, 0.031821527, 0.11924913, -0.068304375, 0.0112470435, -0.27591762, -0.027235573, -0.02406633) * inp_1_0_2;
    result0 += M4(-0.015656011, 0.24308212, -0.138206, 0.0455412, -0.15611897, 0.011535327, -0.17347495, -0.16728494, -0.049337775, -0.04144255, 0.35155442, 0.06562214, 0.020102493, -0.10309162, 0.022830542, -0.28073037) * inp_1_1_2;
    result0 += M4(-0.020117655, 0.20969263, -0.008840249, -0.043391123, 0.2027387, 0.037445057, -0.23224097, -0.085771, -0.003132166, -0.10008364, 0.088587165, 0.13539463, -0.10930224, 0.070058614, -0.033683963, -0.02952015) * inp_1_2_2;
    result1 += M4(0.07547721, -0.022778127, 0.01620134, 0.21927331, 0.03991289, 0.026343921, -0.04810505, -0.004200238, 0.03720248, 0.024611562, -0.012160301, 0.12325078, 0.0437441, 0.033276565, -0.0033978303, -0.15174976) * inp_1_0_0;
    result1 += M4(0.019004166, 0.02531096, -0.022892894, -0.2680508, -0.00037133877, 0.005383343, 0.005312344, 0.26598105, -0.0745233, 0.031626247, -0.0018838451, 0.052559044, -0.017835826, -0.013025496, 0.039165195, -0.5574165) * inp_1_1_0;
    result1 += M4(0.12834728, -0.06574024, 0.0006220269, 0.0660696, 0.020558752, -0.020023087, 0.01864769, -0.006828868, -0.0925899, 0.0100951865, 0.0038128446, -0.015675059, -0.22312617, -0.0061185104, -0.013607036, -0.19576736) * inp_1_2_0;
    result1 += M4(0.0073613166, 0.055261046, 0.08126179, 0.276482, -0.05959166, 0.031055667, -0.08967428, -0.46006382, -0.037769407, 0.082199566, 0.08382755, 0.124291986, -0.0128695415, -0.071660616, -0.110985674, -0.4177711) * inp_1_0_1;
    result1 += M4(-0.12284266, 0.09176826, -0.016764738, 0.055323727, 0.009610677, 0.0045479103, 0.020480677, -0.27618563, -0.19550619, 0.07964297, 0.050595563, 0.30203176, 0.4183551, 0.09388456, 0.024761986, 0.022438763) * inp_1_1_1;
    result1 += M4(-0.07133585, -0.064788446, 0.029145135, 0.12724718, 0.048506446, -0.0046493113, -0.010167785, 0.14327303, 0.0214678, 0.00057170034, -0.039962873, 0.16588806, 0.19819134, 0.02945608, 0.024761358, -1.2674707) * inp_1_2_1;
    result1 += M4(-0.1816332, 0.030026814, 0.06300222, 0.08322557, -0.061483093, -0.006395063, -0.11858751, -0.13933767, 0.14936213, -0.009683444, 0.18141924, 0.053296424, -0.10681464, -0.06924974, -0.062124383, -0.17852597) * inp_1_0_2;
    result1 += M4(-0.23243614, 0.11863495, 0.0046650767, -0.18575527, -0.27164364, 0.06754796, -0.04754667, -0.31049547, 0.46439844, -0.027534185, -0.0377074, 0.070310965, 0.063975185, -0.107293785, -0.015744848, 0.36418134) * inp_1_1_2;
    result1 += M4(-0.14269915, 0.01438459, -0.00096701, 0.03331313, -0.059698712, -0.0078728, 0.011661788, 0.098304175, 0.10521779, -0.020524243, 0.0017365072, 0.25354284, 0.010232542, -0.004668383, 0.049613528, -0.3307601) * inp_1_2_2;
    result2 += M4(0.051282976, 0.015824946, 0.0012796057, -0.056065153, 0.06973193, 0.05208927, -0.02451011, -0.027531352, -0.074271046, 0.031401508, 0.0051167184, 0.054549236, 0.14740826, -0.07270768, -0.044018734, -0.06226756) * inp_1_0_0;
    result2 += M4(-0.10528294, 0.112864845, 0.028319413, -0.0061326562, -0.010210251, 0.04554127, -0.028372137, -0.054048043, -0.10233905, -0.019378336, -0.045056637, -0.0065396572, -0.13365184, 0.0565788, 0.0044991653, -0.20617646) * inp_1_1_0;
    result2 += M4(-0.07244284, -0.019188594, -0.049753, -0.10512116, 0.009019207, 0.11253819, -0.035155162, 0.09682545, -0.012501867, -0.045597833, -0.012268822, -0.010353951, -0.034046255, 0.105955295, 0.06379638, -0.15032387) * inp_1_2_0;
    result2 += M4(0.10368938, 0.02080614, 0.09194577, 0.038323198, -0.13263102, 0.121769704, -0.03497422, -0.16885948, -0.029696876, -0.14457431, 0.17965521, 0.10416807, 0.018830365, 0.3660913, -0.02130458, -0.10584288) * inp_1_0_1;
    result2 += M4(0.21170187, 0.0111845955, 0.014795399, -0.051169347, -0.18304378, 0.18446994, 0.06611764, -0.25269303, 0.3861928, -0.046469927, 0.03287443, 0.45433626, 0.1492367, 0.11599979, 0.08500176, -0.10854222) * inp_1_1_1;
    result2 += M4(-0.03932352, 0.081521116, -0.022510374, 0.1520946, -0.09360557, 0.022163028, -0.02275269, -0.04549571, 0.0569885, 0.09668144, -0.013175608, 0.07028885, 0.025732966, 0.07670861, 0.05888863, 0.13356106) * inp_1_2_1;
    result2 += M4(-0.09604204, 0.08482725, 0.0021368936, -0.020177998, -0.17472002, -0.066713266, 0.007258881, -0.07018708, 0.020298246, -0.052135993, 0.008541358, -0.11351018, -0.026412172, 0.05136249, -0.024268907, -0.1639753) * inp_1_0_2;
    result2 += M4(0.051908813, 0.012855281, 0.07439407, 0.07881635, -0.12459155, 0.07290337, 0.022551281, -0.22148728, 0.018242767, 0.092509225, -0.008350619, 0.04118051, -0.045544107, -0.3191435, -0.053247757, -0.18424143) * inp_1_1_2;
    result2 += M4(0.014962686, 0.035865378, 0.04853595, -0.07096107, -0.03150149, -0.010521459, -0.018758047, -0.0133815715, -0.049088806, 0.06518308, -0.028181758, 0.113505356, -0.0048654363, 0.17832734, -0.02258633, 0.061668012) * inp_1_2_2;
    result3 += M4(0.01782016, 0.017644916, -0.018572006, 0.050805543, 0.0029509668, 0.094287686, 0.0073569934, 0.11647991, -0.014567115, 0.00041583198, -0.009609254, 0.010276389, 0.010384148, 0.2619616, 0.018207818, 0.073048495) * inp_1_0_0;
    result3 += M4(0.002095309, 0.2776468, 0.020385636, 0.035535563, 0.061690774, 0.034741394, -0.019893326, 0.07120695, 0.05542193, 0.08039, 0.034215555, -0.05721021, 0.04016226, 0.020384727, -0.07626918, 0.00014914312) * inp_1_1_0;
    result3 += M4(0.03329115, -0.01879152, -0.029919613, -0.10305916, 0.044006106, 0.032809827, -0.025750441, 0.16145754, 0.0015531543, -0.014172018, -0.016193775, -0.15265037, -0.043404534, 0.18273547, -0.0026215692, 0.12920547) * inp_1_2_0;
    result3 += M4(0.0191548, 0.0048390706, 0.038781874, -0.025874175, -0.0018266166, -0.10410498, 0.055744674, -0.045315325, 0.016707662, -0.06637466, 0.049661692, 0.06890051, -0.09627991, 0.25642496, 0.0020890574, 0.04097637) * inp_1_0_1;
    result3 += M4(-0.046176184, -0.0675066, 0.06410658, 0.074957505, 0.066416554, -0.31303233, 0.07424976, -0.16849855, 0.039962992, -0.023653265, 0.05614278, 0.11445853, 0.10952054, 0.16418365, 0.058332976, 0.1606492) * inp_1_1_1;
    result3 += M4(0.082370624, 0.19884038, -0.0032951806, -0.11487521, 0.055457097, 0.016937355, -0.016145272, 0.13181467, 0.051154986, 0.07265729, 0.01113364, -0.01828243, -0.048949517, 0.253969, 0.037253566, -0.36139524) * inp_1_2_1;
    result3 += M4(-0.041250605, 0.12767977, -0.011248811, 0.0036187277, 0.043525867, -0.06910252, 0.029275531, -0.062095717, 0.021199694, 0.21374671, -0.034164023, 0.0007784001, -0.022342786, 0.09148443, -0.019055849, 0.08487247) * inp_1_0_2;
    result3 += M4(-0.0005336251, 0.106261835, -0.0387047, 0.12664118, -0.00074338773, 0.0186303, 0.047587782, -0.029406825, 0.059493523, 0.15310732, 0.072599955, 0.06628257, -0.025502028, 0.19724514, -0.061889373, 0.019506305) * inp_1_1_2;
    result3 += M4(-0.06690242, -0.012356547, 0.03471484, 0.0347068, 0.0701603, 0.048416235, -0.020066349, 0.06924834, 0.058237124, 0.0035391462, 0.007804459, 0.04094817, -0.05295317, 0.10276026, -0.008561995, -0.040086236) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.10559466, -0.18832408, 0.047490966, -0.037478194, -0.050066713, 0.19131856, -0.08020017, 0.06351251, 0.010231287, -0.018463809, -0.047697075, 0.13749799, -0.2700571, -0.25872383, 0.046291906, 0.13397823) * inp_2_0_0;
    result0 += M4(-0.064398006, -0.24379392, 0.111075446, -0.056452595, -0.071202524, -0.116616026, 0.11851178, -0.0055296496, -0.22268514, -0.27029908, -0.1287795, -0.07780617, 0.17591122, -0.28425884, 0.0055980543, -0.121729255) * inp_2_1_0;
    result0 += M4(-0.11762247, -0.3326484, -0.0022515017, -0.15835936, 0.0011564465, -0.03313187, 0.00072034035, -0.05267108, -0.12668245, -0.0679486, -0.05356065, -0.1992662, -0.16576864, -0.072914496, -0.019519744, -0.1629625) * inp_2_2_0;
    result0 += M4(0.0016562236, 0.057023227, -0.102566294, -0.062699355, -0.24708354, 0.05345244, -0.006222569, 0.104501784, 0.117511414, 0.0071239704, 0.00434557, 0.0067319707, -0.0036565436, 0.25366315, -0.12095129, -0.011026245) * inp_2_0_1;
    result0 += M4(-0.080734245, 0.07436366, -0.19415829, 0.13336734, -0.24247426, 0.09830385, -0.120091945, -0.07071064, -0.24045476, -0.014632863, -0.2718639, 0.10190819, -0.022576781, -0.13961366, -0.12404196, 0.01705539) * inp_2_1_1;
    result0 += M4(-0.0434762, -0.17271134, -0.10522399, -0.26813808, 0.012285996, 0.0969152, 0.041761667, -0.13150491, -0.05882986, 0.06458652, -0.020827426, -0.060454242, 0.060167685, -0.07609565, -0.08356541, 0.001233161) * inp_2_2_1;
    result0 += M4(0.062602885, 0.0845806, -0.014911122, 0.058032237, 0.09249831, -0.023455285, 0.10767299, 0.087066874, 0.045951396, -0.021496683, 0.026394585, 0.029540336, -0.08272652, 0.05559524, 0.02718684, 0.026972793) * inp_2_0_2;
    result0 += M4(-0.115784675, 0.018924657, -0.15534729, -0.08576161, -0.1913578, 0.12858264, 0.015473958, -0.079766415, -0.030754775, -0.032498695, 0.092286415, 0.044772, -0.07116952, 0.13217582, 0.018051755, 0.010174206) * inp_2_1_2;
    result0 += M4(-0.005829871, 0.07959474, -0.045549136, -0.11493488, 0.06700729, -0.008450559, -0.09101405, -0.120037846, 0.031204874, 0.0129764, 0.067440055, -0.010714713, 0.0018153042, 0.17974983, -0.21739782, -0.039910227) * inp_2_2_2;
    result1 += M4(-0.02671403, 0.032736875, -0.03407472, -0.46897107, 0.077004984, 0.060072757, -0.003503309, 0.08787502, 0.079558514, -0.03247207, -0.051197074, -0.33616927, -0.09689712, 0.069878995, 0.03229127, 0.253739) * inp_2_0_0;
    result1 += M4(-0.011560654, 0.012577245, -0.031853072, 0.017945547, 0.013360241, -0.045700293, -0.012887861, 0.09034743, -0.06557291, 0.029481519, 0.02821414, -0.33561277, 0.021484023, 0.049641233, -0.033286385, -0.51804245) * inp_2_1_0;
    result1 += M4(0.1385584, 0.017976355, 0.024490425, 0.07830215, -0.012771365, -0.01031772, 0.0068973503, 0.07529199, 0.11685909, 0.026742296, -0.002686295, 0.028066, 0.017912205, -0.016148454, -0.0039130175, 0.4879013) * inp_2_2_0;
    result1 += M4(-0.13030247, 0.08227772, -0.076230854, -0.15691704, -0.023211103, 0.0538744, 0.010908053, -0.01013542, -0.098670326, -0.0041460358, -0.1901114, -0.027072474, -0.061741672, 0.043311756, -0.024570176, -0.21659936) * inp_2_0_1;
    result1 += M4(-0.17545643, -0.0294475, -0.11033071, -0.13341957, 0.051126957, -0.13895474, -0.06877883, -0.3813956, -0.19650337, 0.102242224, -0.0628832, -0.30176815, -0.1198036, 0.058953524, -0.014161902, 0.35505116) * inp_2_1_1;
    result1 += M4(-0.22934818, 0.016214192, 0.038299117, -0.21435404, 0.1513957, 0.014056123, -0.008061727, -0.13037002, -0.064876154, 0.0323207, 0.05986019, 0.08512774, 0.08404764, -0.08593935, -0.03932641, -0.10686671) * inp_2_2_1;
    result1 += M4(-0.071239345, 0.04794874, -0.06314593, -0.21197103, 0.15759137, 0.0033328831, -0.031082459, 0.021191785, 0.049831066, -0.032147847, -0.16440481, 0.17589079, -0.08923916, 0.05589901, -0.018493282, -0.102592945) * inp_2_0_2;
    result1 += M4(-0.15425831, 0.004201008, -0.1235694, -0.19603336, -0.037210763, -0.065968685, -0.16659728, -0.019453194, -0.08618538, 0.06917392, 0.08855598, 0.028700572, 0.23763238, -0.1039581, 0.018647678, 0.24537891) * inp_2_1_2;
    result1 += M4(-0.083555706, 0.06372476, -0.0043730047, -0.22398052, 0.033730336, -2.4470854e-05, 0.03549393, -0.13345301, 0.061632197, -0.03845845, 0.025029434, 0.07289991, 0.046501063, 0.14355063, 0.0060840324, 0.042162146) * inp_2_2_2;
    result2 += M4(-0.028594587, -0.06432669, 0.06042106, -0.07575371, 0.06565813, 0.014955621, 0.0013140172, 0.06847645, -0.15352342, 0.1349989, -0.08923886, -0.0033357688, 0.013959205, -0.12884974, 0.043435078, 0.094378226) * inp_2_0_0;
    result2 += M4(-0.045216177, 0.0040863813, -0.021519711, -0.11735649, -0.063216016, 0.08014967, -0.059801795, 0.0021150343, -0.21065003, 0.2129656, 0.05123017, -0.122927725, -0.0935093, 0.26582882, 0.05742675, 0.23064876) * inp_2_1_0;
    result2 += M4(0.11135615, -0.15284352, 0.024454584, 0.07522718, -0.0028661264, -0.035525896, -0.013584578, -0.016950829, -0.019081324, 0.07855941, 0.00842451, -0.021628922, 0.12938601, -0.14787228, 0.023146037, -0.25171667) * inp_2_2_0;
    result2 += M4(0.035786197, 0.071831085, 0.10202551, 0.14465743, 0.10696241, -0.11976316, 0.017240511, -0.022743925, 0.09659351, 0.18387742, -0.0015742441, 0.119611986, -0.15116476, -0.07817205, 0.009801678, 0.005967799) * inp_2_0_1;
    result2 += M4(-0.22151367, -0.043536004, 0.034604732, -0.063697465, -0.2812807, -0.026058964, -0.18336675, -0.23792997, -0.06101468, 0.26387107, 0.028311431, 0.035507075, 0.055294346, 0.087006226, 0.0031396912, -0.20754349) * inp_2_1_1;
    result2 += M4(-0.10130685, -0.18063058, 0.0012896671, -0.13896218, -0.064115584, 0.02145116, -0.021423249, -0.01413633, 0.084304094, 0.03664354, 0.02946377, 0.07812566, -0.17590877, -0.068371154, -0.057639915, -0.061686926) * inp_2_2_1;
    result2 += M4(-0.0039383485, -0.07441132, 0.05348193, -0.054400276, 0.013199559, 0.020219509, 0.0128686465, 0.04388968, -0.03160191, 0.06001661, -0.032692514, 0.004252791, 0.050617304, 0.12641163, 0.02832117, 0.1277553) * inp_2_0_2;
    result2 += M4(-0.035513934, -0.028247245, 0.020796163, 0.027941454, 0.09903067, 0.11401358, -0.06062463, 0.1035032, 0.032315277, 0.09498704, -0.0063320748, 0.08540091, 0.15381883, -0.00669403, 0.04989764, 0.028345823) * inp_2_1_2;
    result2 += M4(0.09545977, -0.14476666, 0.010984442, -0.16151792, -0.0073285955, -0.017930599, 0.022480533, 0.0021082507, -0.0023603851, 0.004719339, -0.034605194, 0.014748356, 0.0144613795, 0.08889924, 0.012643566, 0.022470405) * inp_2_2_2;
    result3 += M4(0.0070310105, -0.0024081448, 0.010573609, 0.012853986, 0.033747815, -0.075293615, 0.018758092, -0.074776486, 0.006015973, 0.34431806, -0.04507666, -0.050111532, 0.037850607, -0.19052532, 0.08917231, 0.014473345) * inp_2_0_0;
    result3 += M4(-0.0054464964, -0.13943933, -0.014349024, -0.033640917, -0.014453066, -0.023814987, -0.011328633, -0.23714228, 0.09545782, 0.04813199, 0.04758581, -0.26895905, -0.004925835, 0.20115353, -0.016923023, 0.028183373) * inp_2_1_0;
    result3 += M4(0.07139449, -0.12328313, 0.0381691, 0.20715795, 0.025085047, 0.07333724, -0.018789079, 0.07013418, 0.13329932, 0.15308088, 0.0027112681, 0.11281901, 0.03175908, -0.06753548, 0.012459612, -0.041024346) * inp_2_2_0;
    result3 += M4(-0.01615948, -0.09599219, 0.072211765, 0.020333076, 0.00018362553, -0.06466767, 0.13659446, 0.0540972, 0.00968937, 0.24690944, 0.02844676, 0.00085836084, -0.010613336, 0.06476787, 0.0036166243, -0.043424584) * inp_2_0_1;
    result3 += M4(0.053329814, -0.26176575, 0.083994806, -0.25519946, 0.07016746, -0.11528794, -0.046816677, -0.09117449, 0.059880227, 0.3991285, 0.10945694, -0.052269123, 0.023076044, 0.45046264, 0.09981011, -0.11601666) * inp_2_1_1;
    result3 += M4(0.016091477, -0.16571277, 0.00461071, -0.14041713, 0.13511275, -0.027957004, -0.016151797, -0.063305825, 0.1382129, 0.016638638, 0.05502204, 0.029077632, 0.06429736, 0.0086986255, -0.031126263, -0.16273332) * inp_2_2_1;
    result3 += M4(-0.00050518144, 0.023565214, 0.05248657, -0.04897581, 0.01699933, 0.05015676, -0.003581336, -0.004590869, -0.01068975, 0.100520626, -0.025211388, 0.023286145, -0.0017597558, -0.07263911, 0.060080916, 0.03461377) * inp_2_0_2;
    result3 += M4(0.0036727658, -0.10712747, 0.018600838, -0.10095166, -0.06938665, -0.052112237, -0.03821451, -0.06581624, 0.046101365, 0.09653075, 0.03923007, 0.010426374, 0.023450328, -0.07610707, -0.0072677135, -0.07056264) * inp_2_1_2;
    result3 += M4(-0.002787738, -0.012085854, 0.012880709, 0.025360432, 0.021366145, 0.10675045, 0.0038263828, 0.051447324, 0.034535274, 0.10714088, -0.039842855, 0.075400636, -0.024195533, 0.043334965, 0.03677664, -0.12896542) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.4583712, -0.48503485, -0.036709696, 0.3460914, 0.32303157, -0.1782459, 0.030122293, 0.32999027, -0.019817278, 0.087555274, 0.012797603, 0.030522361, -0.116311006, -0.32795987, 0.047465403, 0.059169408) * inp_3_0_0;
    result0 += M4(0.12445438, -0.0829041, 0.1210546, -0.09779295, 0.5343662, 0.07354681, 0.23048608, 0.026103068, 0.049817324, 0.10859729, 0.13302308, -0.10696507, -0.09782086, -0.4226859, -0.056660157, 0.13237461) * inp_3_1_0;
    result0 += M4(0.036311913, -0.18736313, 0.01585691, 0.020459365, 0.12931202, -0.18803382, 0.25442627, -0.7123144, 0.09030328, 0.06568975, -0.059741426, -0.009063583, 0.09123624, -0.034830045, 0.045816332, 0.14354959) * inp_3_2_0;
    result0 += M4(-0.67921114, -0.03164487, -0.5924606, 0.030701704, 0.10230981, 0.026696613, 0.20799872, -0.06892717, -0.06631194, 0.028886437, -0.052489, -0.009175124, 0.21102913, 0.19910482, 0.08701026, -0.124907635) * inp_3_0_1;
    result0 += M4(-0.39766786, 0.08152145, 0.09115711, 0.12891617, -0.09847036, -0.09721547, -0.20635343, 0.11338947, 0.098836, -0.25791168, -0.2928597, 0.090085104, -0.50239336, -0.13460426, -0.1628686, 0.21336542) * inp_3_1_1;
    result0 += M4(-0.13979907, 0.16586733, 0.0005071168, -0.121195234, -0.0008443589, 0.10743964, 0.2589817, 0.016536657, -0.12391061, 0.05878445, 0.074802384, -0.094092034, 0.011763132, -0.012237382, 0.07669032, -0.051204037) * inp_3_2_1;
    result0 += M4(-0.38109446, -0.026321381, -0.7634703, -0.46982598, -0.010859043, -0.039807975, 0.1072391, -0.035964273, -0.07048101, 0.03459091, -0.05670788, 0.0011896247, 0.018122714, -0.028401256, -0.1566999, -0.04791503) * inp_3_0_2;
    result0 += M4(0.07437605, -0.056379896, -0.3306864, 0.13798358, 0.037996203, 0.033664454, 0.022054395, 0.055145957, -0.046951596, -0.024882175, -0.107622325, 0.029195303, 0.061768763, -0.1802582, -0.26737812, 0.0036451549) * inp_3_1_2;
    result0 += M4(-0.02520038, -0.045395184, -0.09495341, -0.02527379, 0.08516532, -0.067257375, 0.026039978, 0.048388813, 0.034172334, 0.047455907, 0.090089805, -0.047676034, -0.008243803, 0.13629602, -0.03519206, 0.041262098) * inp_3_2_2;
    result1 += M4(-0.3507797, 0.038019523, -0.12256684, -0.7950574, 0.13608517, 0.12955095, -0.059502676, -1.9844966, 0.047931574, -0.0051417844, 0.02433959, 0.03878694, -0.007044491, -0.055046733, 0.02757827, 0.18738407) * inp_3_0_0;
    result1 += M4(-0.004794407, 0.028635675, -0.028196398, 0.020375598, -0.20588516, 0.6203467, -0.46979737, -1.2951579, -0.11925839, 0.03038226, 0.03209453, 0.034996834, 0.08458999, -0.054128595, 0.011000943, -0.13039853) * inp_3_1_0;
    result1 += M4(0.066111, -0.020959679, 1.0908156e-05, 0.029029354, -0.2056151, 0.36151332, -0.17167337, -1.0879307, -0.09010107, 0.04227578, -0.005923677, 0.026681256, 0.036294274, -0.038330182, 0.000689453, -0.021758227) * inp_3_2_0;
    result1 += M4(-0.14339246, -0.12902749, -0.27700138, -1.2298472, -0.0313683, -0.008703877, 0.33971557, -0.24922308, 0.049248785, -0.14237005, 0.0006495145, -0.10729179, 0.016365742, -0.0369912, 0.007677683, -0.08997106) * inp_3_0_1;
    result1 += M4(0.11245526, 0.044555247, -0.06276921, -0.2579349, 0.07802725, 0.16286358, 0.5867692, 0.33188796, 0.43890134, -0.33193132, 0.07410332, 0.04090812, -0.38316065, 0.04126949, 0.027181663, -0.38743305) * inp_3_1_1;
    result1 += M4(-0.015454773, 0.05924211, -0.0022896174, -0.1524962, -0.031995073, 0.042495314, 0.15521774, 0.09849538, 0.05305545, 0.019893266, -0.05376129, 0.07151718, -0.043832112, 0.006301616, 0.0051935194, 0.13521115) * inp_3_2_1;
    result1 += M4(-1.0469551, -0.29113093, -0.8429688, -0.72072953, 0.09647955, -0.10232432, 0.034313306, 0.20081021, -0.019062579, -0.019301306, -0.10307853, -0.12031198, -0.031054884, -0.061667107, -0.07598063, 0.18675062) * inp_3_0_2;
    result1 += M4(-0.21616198, -0.14953433, 0.026616195, 0.071488425, -0.0036048612, 0.036927983, 0.07875055, -0.022457046, -0.18961641, 0.10876839, 0.10024957, 0.0041033337, -0.35576, -0.09400823, 0.1287373, -0.16842008) * inp_3_1_2;
    result1 += M4(-0.08009679, -0.03563824, 0.028335756, -0.089198016, 0.06339837, -0.040307626, -0.005514216, 0.07618076, 0.14347245, 0.00066133885, -0.033198472, -0.020854259, -0.0065773455, 0.013667301, -0.01202708, -0.038383674) * inp_3_2_2;
    result2 += M4(-0.20592214, 0.14589505, -0.046454486, -0.33695462, 0.25030333, 0.5662927, 0.06753963, -1.0686072, 0.063511565, -0.061350077, 0.025227115, -0.046296265, 0.04822661, -0.037591297, -0.07651311, 0.0213579) * inp_3_0_0;
    result2 += M4(0.27938688, -0.086373754, -0.029082999, -0.046821628, 0.7047996, -0.17237969, 0.24576247, -0.6786778, -0.031819183, -0.076911874, 0.2890285, -0.116201356, 0.06092482, 0.13652611, -0.05860985, 0.16203336) * inp_3_1_0;
    result2 += M4(0.02516025, -0.006458054, -0.0032446785, 0.10510527, 0.48110777, 0.0036935867, -0.044385143, -0.036053643, 0.08494345, -0.023550017, 0.13935472, 0.12929876, 0.020521663, 0.0495167, -0.032941658, 0.08740048) * inp_3_2_0;
    result2 += M4(-0.6828585, 0.8308192, 0.03446853, -0.68204993, 0.02381575, -0.09634505, -0.026245236, -0.12719412, -0.049182065, 0.07135241, -0.035353836, -0.038845167, -0.08709614, 0.2620321, -0.035015386, -0.030282674) * inp_3_0_1;
    result2 += M4(-0.21878794, 0.22257231, 0.00015513976, -0.13225327, 0.019445611, 0.22572887, 0.10102353, 0.1549531, -0.30981413, -0.2607315, 0.24923785, -0.13646232, -0.15656757, 0.10008283, -0.036072813, -0.39221096) * inp_3_1_1;
    result2 += M4(-0.14676034, 0.010340191, 0.0920002, -0.04730113, 0.17417851, 0.0038941556, -0.092747755, 0.034982968, 0.12473761, 0.024904432, -0.1021717, -0.0620168, -0.03403797, -0.010948107, 0.011529689, 0.0001737991) * inp_3_2_1;
    result2 += M4(-0.71314526, 0.116793856, -0.111572705, -0.33644763, -0.0190686, 0.0128517905, -0.037984323, -0.035915058, -0.05837968, -0.003011738, -0.001234221, 0.016752955, 0.004282228, -0.16243005, -0.01643404, -0.058733806) * inp_3_0_2;
    result2 += M4(-0.185466, -0.026926935, -0.095329046, 0.011736974, -0.0018845438, 0.051593773, -0.021401597, 0.032069724, 0.043874826, 0.04427383, 0.067552395, 0.052987386, -0.13748546, 0.08640288, -0.0667668, -0.009454816) * inp_3_1_2;
    result2 += M4(0.074884415, -0.03571091, -0.059625786, -0.11711191, 0.01691518, -0.019500248, 0.015783735, 0.05793996, 0.041188646, 0.012474186, -0.036779996, -0.044334523, 0.069832355, -0.018591428, -0.010724553, 0.03160283) * inp_3_2_2;
    result3 += M4(0.099634044, -0.07424108, -0.023675239, 0.100988485, 0.071295194, -1.0254798, 0.045089833, 0.19788006, 0.015119974, 0.07360362, 0.048950616, -0.0035100926, -0.007133645, 0.023114624, -0.049060967, 0.011202703) * inp_3_0_0;
    result3 += M4(0.14694221, -0.1131214, -0.032566182, 0.17397834, 0.41846952, 0.065996654, 0.12322403, 0.39305267, -0.06841111, -0.0977658, -0.043905564, 0.030362915, -0.005480453, -0.13797034, -0.04566244, 0.10616233) * inp_3_1_0;
    result3 += M4(0.022427697, 0.029503288, -0.017762488, 0.14476897, 0.35747632, -0.0909101, 0.007949908, 0.32357237, -0.04094438, -0.051249985, 0.06261199, 0.22498117, 0.022717206, 0.08340429, -0.014473901, 0.15111928) * inp_3_2_0;
    result3 += M4(0.07711035, -1.6305271, 0.23674554, -0.60359615, 0.08890996, -0.41925517, 0.25346887, 0.05118872, -0.07420717, 0.017192334, -0.09841174, 0.002660949, -0.050726186, 0.17307578, -0.06238651, -0.0745844) * inp_3_0_1;
    result3 += M4(0.36565524, -0.115755275, -0.0052418807, 0.2782538, 0.38750976, -0.6737671, 0.54724216, 0.09989472, 0.24733484, 0.16989358, 0.2882871, -0.009331475, -0.0025044256, -0.5125246, 0.037308153, -0.047160354) * inp_3_1_1;
    result3 += M4(0.010609191, -0.07931016, 0.06648604, -0.13898791, 0.27905253, -0.7507471, 0.0034958434, 0.023711447, -0.124072775, -0.11131703, -0.021506073, -0.015053587, -0.009733908, -0.00096866145, 0.014588673, -0.101876386) * inp_3_2_1;
    result3 += M4(-0.15256755, -0.62538916, 0.12446201, -0.28138962, 0.004076179, -0.0346259, 0.0016432981, 0.029360946, -0.02471529, -0.08816293, -0.013581433, 0.006899103, -0.0029680415, 0.05856887, -0.029903797, -0.036574252) * inp_3_0_2;
    result3 += M4(0.1475377, 0.119438685, -0.075031884, -0.02530599, 0.05374722, 0.014708383, -0.0036435046, 0.04456605, 0.049545903, -0.045711104, 0.074033335, -0.011110881, -0.09057565, 0.055048585, -0.04535559, -0.05098367) * inp_3_1_2;
    result3 += M4(-0.027109232, 0.080138005, -0.053268533, 0.047320757, -0.049850427, 0.11644592, -0.019848743, -0.020705778, -0.0577143, 0.069243714, -0.036942773, -0.0005103065, -0.0087177185, -0.028088674, 0.0047047064, -0.036852818) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.0031233386, -0.008039806, -0.0015525441, -0.0026616016);
    V4 result1 = V4(0.0012986264, 0.00011897199, -0.0018267198, -0.0062570227);
    V4 result2 = V4(0.0068605626, -0.08127619, -0.0057549425, 0.008183364);
    V4 result3 = V4(0.005973259, 0.0033220183, -0.0036759912, -0.004676213);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.016599765, -0.09754408, -0.011726404, 0.030481022, 0.0017913012, 0.013213696, 0.032805674, -0.04580067, -0.033362284, -0.014343618, 0.02306165, -0.090030365, 0.0134868575, 0.09560353, -0.050137747, 0.03823441) * inp_0_0_0;
    result0 += M4(-0.018148784, -0.045882646, -0.043557424, 0.13654013, -0.0066730175, 0.055228017, 0.053580094, -0.01800391, 0.017652929, 0.11123829, 0.07659432, -0.0761216, 0.0023204237, -0.09304267, -0.0017931387, -0.0051015727) * inp_0_1_0;
    result0 += M4(0.0142531935, -0.016215414, -0.0021939727, -0.02099273, 0.00312889, 0.031108739, -0.0062727663, -0.010613676, -0.013750875, -0.036697764, 0.022818742, 0.016607605, 0.0073861345, 0.035831477, -0.034717146, 0.026344301) * inp_0_2_0;
    result0 += M4(0.036330204, -0.036627315, -0.1072773, 0.09752557, 0.018502416, -0.12416246, -0.060504265, 0.028168136, -0.032907456, -0.12865005, 0.014589998, 0.010940203, 0.012458586, 0.44913355, -0.017293876, -0.0012037718) * inp_0_0_1;
    result0 += M4(0.02589329, -0.003707151, 0.2841025, 0.06971722, -0.085955724, 0.026236057, -0.1967656, 0.12710236, 0.05143389, -0.07039697, 0.17698827, -0.22461456, 0.019713039, 0.0039229346, -0.14381193, 0.035312224) * inp_0_1_1;
    result0 += M4(0.007530651, 0.010778213, -0.09600005, 0.042336464, 0.026786998, -0.007518183, 0.020601647, 0.00886622, -0.029207967, -0.05145942, 0.045879163, -0.014099706, -0.037611246, 0.025848523, 0.061934467, -0.059089426) * inp_0_2_1;
    result0 += M4(-0.030149395, -0.04467245, 0.0057174014, -0.03910453, -0.060555562, 0.009967522, 0.0036699483, 0.004817645, 0.02577308, -0.10888109, 0.025898645, 0.011714903, 0.06233259, 0.30121264, 0.056318432, -0.080964945) * inp_0_0_2;
    result0 += M4(0.0034909481, 0.028797334, -0.088020615, 0.032751124, 0.11759194, -0.016340023, 0.11954523, -0.035395775, -0.109080926, -0.05270691, -0.020325107, 0.043006733, -0.11427418, -0.12928426, -0.05058689, 0.08804819) * inp_0_1_2;
    result0 += M4(0.01631506, -0.07236522, -0.0454858, 0.010194918, -0.03471093, 0.025868693, -0.023225715, 0.025946869, 0.008594871, -0.004114931, -0.020418378, 0.031748448, 0.023057638, 0.06133895, 0.007623697, -0.0027705536) * inp_0_2_2;
    result1 += M4(0.0039936644, -0.090538286, -0.022134606, -0.049991097, -0.0075078593, 0.039129447, 0.014526553, 0.030211246, -0.06315049, 0.059591863, 0.024757208, 0.0046716104, -0.017487908, 0.02974792, -0.007786928, -0.05031473) * inp_0_0_0;
    result1 += M4(0.012568952, -0.065863475, -0.010893555, -0.09810318, 0.036548704, 0.016439248, -0.022506958, 0.081340596, -0.054587483, 0.056256182, -0.045590326, -0.00026516576, -0.035018932, 0.042486638, -0.029263875, 0.1831934) * inp_0_1_0;
    result1 += M4(-0.013726303, -0.02177734, -0.0005300655, -0.029417906, -0.0101217255, 0.039569598, -0.0009219043, 0.064429134, 0.046692513, 0.009720731, 0.021073513, 0.03759513, -0.043303765, 0.019226078, 0.02029846, 0.054734975) * inp_0_2_0;
    result1 += M4(0.07761846, -0.000113119866, -0.03944649, -0.013369194, 0.008977908, -0.073660694, -0.01323603, -0.055436708, 0.019685643, 0.066930264, -0.006780379, 0.021241, 0.045657232, -0.049692623, 0.027605068, -0.10654792) * inp_0_0_1;
    result1 += M4(0.15982047, 0.09199876, 0.10996622, 0.19309357, -0.30035755, 0.09929913, -0.03355238, -0.26730573, -0.0011956564, 0.23974246, 0.032327935, 0.34782732, 0.14990835, -0.045720737, -0.10344382, -0.1882722) * inp_0_1_1;
    result1 += M4(-0.021766538, -0.005994288, -0.03613612, 0.10475543, -0.008869519, -0.08170615, -0.03286209, -0.00889801, -0.044638287, 0.032035083, -0.035575222, 0.05635447, -0.03784275, -0.017735017, 0.06645841, 0.006378579) * inp_0_2_1;
    result1 += M4(0.012307321, -0.037098806, -0.09184094, -0.012716138, -0.05164457, 0.058968104, -0.08502646, 0.15248787, -0.008121518, 0.028461779, -0.06864664, 0.046051167, 0.09618055, -0.088481665, 0.005325588, 0.1108701) * inp_0_0_2;
    result1 += M4(-0.039222322, -0.12057019, 0.1806663, -0.15225734, 0.09883011, 0.21332535, 0.04337089, 0.24762052, -0.0025754876, -0.2658296, -0.07874488, -0.00499089, -0.019402634, -0.019404141, -0.22868614, -0.036405243) * inp_0_1_2;
    result1 += M4(-0.017773308, 0.044872817, -0.0738955, 0.0063219606, -0.025741428, 0.12822857, -0.022104926, 0.33373064, -0.02258061, -0.01704664, -0.0030871877, -0.037745003, -0.0139715, -0.047803964, 0.058549825, -0.11670685) * inp_0_2_2;
    result2 += M4(-0.02373085, -0.01367119, 0.0023332057, -0.0039475644, -0.009416345, 0.05000921, 0.012735457, -0.026685078, 0.004798129, 0.059361733, 0.0041202963, 0.022033725, -0.0008025931, -0.029858507, 0.018916579, -0.036167312) * inp_0_0_0;
    result2 += M4(0.0061474415, -0.07609324, 0.028789299, -0.09058792, -0.011972834, -0.109968156, -0.03661685, -0.013115139, -0.040326007, 0.019155923, 0.035555024, 0.058385372, 0.013269423, 0.01984376, -0.046396725, -0.0055826395) * inp_0_1_0;
    result2 += M4(-0.035205472, -0.102328606, 0.0030880633, -0.0278598, -0.003389704, 0.07010853, 0.045573156, 0.007965172, -0.031978693, -0.020231783, -0.06750342, 0.01906068, 0.018958043, -0.09290424, 0.040290933, -0.029969944) * inp_0_2_0;
    result2 += M4(-0.024093635, -0.013528703, -0.0046782694, -0.10963364, -0.038330182, 0.03571494, -0.018550215, -0.022851214, -0.03553315, -0.026042998, -0.023103481, -0.03350686, 0.02785718, 0.061738007, -0.08609707, -0.19430764) * inp_0_0_1;
    result2 += M4(-0.05951141, 0.041851655, -0.045400776, -0.03658925, -0.04495026, 0.048528895, 0.07336249, -0.058660816, -0.33321038, -0.043096233, -0.10294412, -0.16039647, 0.052426152, 0.042543445, 0.18750498, 0.11022862) * inp_0_1_1;
    result2 += M4(-0.07034857, -0.016354166, -0.086003885, -0.00305066, 0.03141545, -0.05069678, -0.19047841, -0.056236077, -0.04538583, -0.020049091, -0.04751751, -0.015182043, -0.0130833015, -0.07574914, -0.016280359, 0.0006758977) * inp_0_2_1;
    result2 += M4(-0.0706066, -0.10150308, -0.010908237, -0.024637004, 0.04576314, -0.10369049, 0.006075907, -0.029745815, -0.03454298, 0.050160684, -0.024635673, -0.015617852, 0.0135288965, -0.017807098, 0.029541926, -0.045789354) * inp_0_0_2;
    result2 += M4(-0.11015499, 0.018189069, -0.00037020305, 0.05274454, 0.07808433, -0.07498925, -0.01402427, 0.009277402, -0.015147942, -0.013766151, 0.015087187, -0.021024201, 0.00475019, -0.0568059, -0.039140377, 0.031649493) * inp_0_1_2;
    result2 += M4(-0.07441333, -0.040300705, -0.017639125, -0.019914012, 0.021171667, 0.071854755, -0.11821082, -0.011296861, -0.01552674, 0.011050427, 0.019611856, 0.00019577258, -0.0023013724, -0.041538592, 0.02371018, -2.5117519e-05) * inp_0_2_2;
    result3 += M4(-0.012610144, -0.041046605, 0.04632508, 0.005814039, -0.011999044, 0.030701559, -0.017925588, 0.027281178, -0.040701266, 0.09889286, -0.12562644, -0.07503197, -0.003968953, 0.095613554, 0.090925366, 0.2151284) * inp_0_0_0;
    result3 += M4(-0.024931392, 0.14777677, 0.009971134, 0.15842995, 0.005701114, 0.0063701742, -0.004348388, -0.069900885, 0.0108194705, -0.107660055, 0.18820971, -0.00078382314, -0.010881707, 0.17876223, 0.15345828, 0.012747948) * inp_0_1_0;
    result3 += M4(0.0065437425, -0.12926257, -0.019107359, -0.0031051121, 0.0019498729, 0.07670274, 0.022749847, 0.0034496696, -0.017144473, -0.15541154, -0.055737466, -0.021704242, -0.019447114, 0.07442722, -0.0907591, -0.03838297) * inp_0_2_0;
    result3 += M4(-0.033431422, -0.16889444, 0.1224211, 0.3946928, 0.10053698, -0.055214114, 0.028923014, -0.18249893, 0.091105625, -0.14825743, 0.07593897, 0.12879488, -0.109670386, 0.0018225814, 0.15613331, -0.10307721) * inp_0_0_1;
    result3 += M4(0.042487334, 0.276651, 0.088779785, 0.07976497, 0.027222844, 0.0420644, -0.033916797, 0.012249995, -0.045154806, -0.09288841, -0.052074004, -0.15535991, 0.018822385, -0.2502485, 0.36811337, 0.12739348) * inp_0_1_1;
    result3 += M4(0.01099615, -0.052555807, 0.07130666, 0.009205448, 0.004013091, 0.0056195795, -0.0016094883, -0.057723653, 0.002861455, 0.14072701, 0.011046959, -0.0177802, 0.0009661308, 0.13995609, -0.047961723, 0.0087710945) * inp_0_2_1;
    result3 += M4(-0.035909574, -0.18441312, 0.0010732564, 0.14172103, -0.052745845, 0.092293955, -0.1139002, -0.03087566, -0.00553234, -0.034578253, 0.023034424, -0.013711188, -0.012781837, 0.12586579, 0.021468217, 0.04716874) * inp_0_0_2;
    result3 += M4(0.040932816, 0.08194873, -0.02479769, 0.118744075, -0.032694772, -0.04945205, 0.041143592, -0.045844156, 0.01015593, -0.013973106, -0.009119946, -0.047599062, -0.0015158544, 0.086640984, 0.03203687, -0.11391825) * inp_0_1_2;
    result3 += M4(-0.031567033, 0.012848771, -0.009060255, -0.018701734, -0.019685846, -0.07027126, 0.009258384, 0.018155849, 0.0021094326, 0.0648024, -0.023868036, -0.015999889, -0.013835938, 0.06927937, -0.053646553, -0.00527933) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0059106424, -0.14608069, 0.022542315, 0.02607492, 0.016593216, 0.017856441, -0.029564118, 0.046077825, 0.016039655, 0.3020266, -0.11759611, 0.07229898, 0.01575246, 0.15573029, 0.019120784, -0.04335059) * inp_1_0_0;
    result0 += M4(0.062172316, -0.19944878, 0.22291876, -0.053861786, -0.10226799, -0.06136136, -0.061359894, 0.1585901, -0.23168966, 0.18375137, 0.046271645, -0.31893373, -0.011387091, 0.045913517, -0.057546295, 0.03502271) * inp_1_1_0;
    result0 += M4(-0.035370074, 0.049209956, 0.0016877562, 0.064835906, 0.03598413, 0.07393229, -0.01770148, -0.016980624, -0.110351905, -0.012560908, -0.032274354, 0.17618482, 0.027110046, 0.04208751, -0.05604689, -0.06524735) * inp_1_2_0;
    result0 += M4(0.008886621, -0.23599231, -0.02570334, 0.045956112, -0.0047555584, -0.08146565, -0.08620356, 0.086657286, -0.005343724, -0.2613967, -0.025168959, 0.01604464, -0.007819413, 0.20685731, -0.007011025, -0.07102024) * inp_1_0_1;
    result0 += M4(-0.02757153, 0.067941636, -0.23466378, 0.17825471, -0.028723465, 0.08599142, -0.2589396, 0.26606274, 0.14730994, 0.22253366, -0.07198486, 0.040538576, 0.12721209, -0.10201475, -0.020222744, 0.037222702) * inp_1_1_1;
    result0 += M4(0.036561165, 0.07979861, -0.005552681, 0.055345707, -0.08577724, 0.008750323, -0.15286821, 0.1446742, 0.14587359, 0.36865675, 0.1287683, -0.10416036, -0.06363591, 0.0005116747, 0.04193119, -0.14175318) * inp_1_2_1;
    result0 += M4(-0.050278775, -0.18028368, 0.009423922, -0.037830744, -0.043148383, -0.19854087, -0.00026442285, -0.0205204, 0.0115028685, 0.25202462, 0.012236054, 0.0093080215, 0.043800853, 0.23055372, -0.038657375, -0.014461154) * inp_1_0_2;
    result0 += M4(0.090488546, 0.28046536, 0.02479759, -0.008718916, 0.12038278, 0.18013178, -0.031974986, 0.025651637, 0.053583592, 0.05077729, 0.025286201, 0.024329184, -0.04938849, -0.19247425, -0.06462984, -0.01308648) * inp_1_1_2;
    result0 += M4(0.0086261835, -0.051230375, 0.024604073, -0.01225128, -0.030924251, -0.0499914, -0.0070079505, -0.016990362, -0.025134845, -0.04168718, 0.016281478, 0.008858326, 0.03390501, 0.071386546, -0.025433358, -0.010813782) * inp_1_2_2;
    result1 += M4(0.06366409, -0.018050157, 0.022060957, 0.14010221, 0.0076206336, 0.0019462992, -0.010519359, 0.0581828, 0.04069791, 0.021093694, -0.07612007, 0.0686247, -0.0005606066, -0.023894116, 0.014539343, 0.0667658) * inp_1_0_0;
    result1 += M4(0.36007172, -0.078126386, 0.009711792, 0.2141126, -0.04724032, -0.08166005, -0.0034399764, -0.22984232, -0.22677314, -0.24818099, 0.084554456, -0.22661562, 0.059160646, -0.04086279, 0.04501492, -0.08471314) * inp_1_1_0;
    result1 += M4(-0.012297211, 0.023127485, 0.021107825, 0.1453977, -0.10355838, -0.013482307, 0.009106994, -0.033020973, 0.07934223, 0.0042618867, 0.18898304, -0.46283424, -0.038393933, 0.003057495, -0.03599668, -0.19800793) * inp_1_2_0;
    result1 += M4(0.01244664, -0.02314951, 0.0519656, -0.037086554, -0.030665392, -0.0323738, 0.013065834, -0.0058235778, 0.043415256, -0.15372306, -0.0754803, -0.02937667, -0.09403104, 0.020570945, 0.09401141, -0.07189699) * inp_1_0_1;
    result1 += M4(-0.10447361, 0.08611553, 0.056907874, -0.26250386, -0.16690105, -0.16302517, 0.12873086, -0.067324795, -0.096281506, -0.5603959, 0.290991, -0.35483015, 0.23312908, 0.03344274, -0.021804819, -0.05242317) * inp_1_1_1;
    result1 += M4(0.029228033, 0.086542755, 0.08641693, -0.023474736, -0.027972663, -0.067542285, 0.09636636, 0.023922632, -0.03495965, -0.120004185, 0.06082359, 0.20223026, -0.05944526, -0.085224055, 0.037104886, -0.026593706) * inp_1_2_1;
    result1 += M4(0.029397167, 0.035179004, -0.008170803, 0.001696233, 0.004882131, 0.012272278, -0.01863742, 0.0320077, 0.020263316, 0.081098154, -0.02924664, 0.01626597, -0.023896847, -0.028485073, 0.0008585373, 0.005680934) * inp_1_0_2;
    result1 += M4(-0.023578864, 0.28701106, 0.08803007, 0.14980692, 0.0040290374, -0.00384308, 0.17364097, 0.0038688863, 0.018223448, 0.2222625, 0.09069741, 0.13791057, -0.054783713, -0.1500253, 0.044554338, -0.05190199) * inp_1_1_2;
    result1 += M4(0.025121635, 0.1076131, -0.007723003, 0.017728927, -0.01593352, 0.044513017, -0.013539355, -0.0065746796, -0.030272288, -0.019270793, -0.02000371, -0.001207138, -0.018936632, -0.06563837, 0.11103149, -0.0041063973) * inp_1_2_2;
    result2 += M4(0.005131049, -0.1022305, -0.026898626, -0.022822918, -0.019029982, -0.106853135, -0.003740194, 0.06008314, 0.017914241, 0.023921616, -0.0043137623, -0.10666128, -0.010867747, 0.02559829, 0.0014595421, 0.00793301) * inp_1_0_0;
    result2 += M4(0.060699116, -0.026918637, -0.0145507045, -0.14732218, 0.009646954, -0.1016285, -0.015239595, -0.1517717, -0.062062, -0.027063843, 0.0067432993, 0.123940565, 0.012195376, -0.00550384, 0.05049637, -0.065400325) * inp_1_1_0;
    result2 += M4(-0.04083788, -0.035150614, 0.30400178, -0.035877164, -0.00874818, -0.046910584, -0.19165678, -0.03423866, -0.09776404, 0.06986563, -0.25030926, -0.1877582, -0.008153238, 0.054801926, 0.087964766, 0.012478615) * inp_1_2_0;
    result2 += M4(-0.020149533, -0.0006972139, 0.0054119197, 0.028094672, 0.018222792, -0.063742906, 0.0057814624, 0.041071296, -0.031088898, -0.08071885, -0.0063590156, -0.014377634, -0.028372504, -0.00827129, 0.009175153, 0.025167769) * inp_1_0_1;
    result2 += M4(0.1433434, -0.084915645, 0.056824464, 0.1411934, 0.35231188, -0.08192149, -0.092395805, 0.17518626, -0.023735384, 0.041348577, -0.022583244, 0.14900401, 0.045127846, -0.055803355, 0.043983273, -0.017617244) * inp_1_1_1;
    result2 += M4(0.055472817, -0.09048982, 0.055339817, -0.014758839, 0.11778461, -0.10810917, 0.21941088, 0.053568557, 0.028478958, 0.033141185, -0.011659348, -0.05087373, -0.049233045, 0.006126075, 0.071376875, -0.032765783) * inp_1_2_1;
    result2 += M4(0.022969851, -0.037358034, 0.0069012055, -0.0057778438, 0.030586358, -0.08616799, -0.015632609, -0.008604717, 0.021740198, -0.087469265, -0.013939768, -0.04335634, 0.018869113, 0.053388648, -0.007793038, 0.005726233) * inp_1_0_2;
    result2 += M4(0.0132026, -0.03622091, -0.03129431, 0.018146528, 0.05248088, -0.042581245, 0.01582036, 0.04479488, -0.029984312, -0.04681993, 0.010576483, -0.0030464241, 0.009021779, 0.027451433, -0.0038649882, 0.016668525) * inp_1_1_2;
    result2 += M4(-0.0019056365, -0.0999194, -0.02054033, -0.018911544, 0.07168115, 0.023075007, -0.020987941, 0.017136497, 0.029095493, -0.01738841, -0.044508528, 0.00036727736, 0.017144207, 0.04034827, -0.022305217, -0.021728342) * inp_1_2_2;
    result3 += M4(0.015621581, -0.13554056, -0.017143438, 0.033935457, 0.06156402, -0.056877293, 0.040143907, -0.08189371, 0.0034792605, -0.31183666, 0.13466941, 0.43692505, -0.06222393, 0.1522721, -0.1117783, -0.0279182) * inp_1_0_0;
    result3 += M4(-0.007877069, -0.25576323, 0.021200886, 0.022238245, -0.06726994, -0.094491124, -0.07324311, 0.11031076, -0.7893714, 0.9675279, -0.33585387, 0.101374604, -0.0014119683, -0.11532797, 0.087246664, 0.010387436) * inp_1_1_0;
    result3 += M4(-0.003490611, 0.050658528, -0.16959698, 0.031941872, -0.014725098, 0.15792342, -0.1513942, -0.04460627, -0.22819266, 0.8694233, 0.044402674, -0.07438973, 0.024145506, 0.031466424, -0.06042733, -0.042046063) * inp_1_2_0;
    result3 += M4(0.00079477974, 0.054528836, 0.0023137333, -0.13556199, -0.011531397, 0.006103755, 0.035610616, 0.076750755, -0.03550383, -0.06947184, 0.13017319, 0.014143411, -0.031276017, 0.06540971, -0.04496336, -0.12868059) * inp_1_0_1;
    result3 += M4(0.08131408, -0.11644935, -0.22131377, 0.011054707, 0.06413002, -0.20796046, -0.2119367, -0.06904791, -0.108802885, 0.28332597, 0.10260539, 0.16247037, -0.13501704, -0.049459685, 0.009362488, -0.0028492948) * inp_1_1_1;
    result3 += M4(0.0030242375, -0.06786466, 0.024166312, 0.036740202, 0.026594855, 0.008079038, -0.009903806, 0.039672047, -0.020564804, 0.28728998, -0.046492346, -0.027640902, -0.016824422, 0.1210157, -0.115784355, -0.043719176) * inp_1_2_1;
    result3 += M4(0.012463726, 0.04589775, 0.030301508, -0.043514058, 0.0049039978, -0.11255299, 0.031948607, 0.0007403078, 0.012232225, -0.04832239, 0.08994006, 0.09296832, 0.005875007, 0.004222348, 0.008388336, -0.03880195) * inp_1_0_2;
    result3 += M4(0.010009406, -0.0055922833, -0.047307815, 0.02445319, 0.015279239, 0.14059688, -0.02878224, 0.0770424, -0.04612676, 0.058136195, 0.0020776906, 0.025566991, 0.018866623, 0.020613058, -0.0028085983, -0.06144003) * inp_1_1_2;
    result3 += M4(-0.010523635, -0.14807369, 0.03905595, 0.00466331, 0.010656695, -0.14384457, 0.018920794, 0.009441065, -0.02923914, 0.111038305, 0.029891606, -0.042552043, -0.0036744273, 0.14989193, 0.018195001, 0.0007248517) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0238103, 0.26459587, 0.029059438, -0.06568694, 0.017123643, -0.46755424, 0.041703064, -0.046100345, 0.012365133, 0.015984321, -0.016500989, -0.030276269, 0.0038334092, -0.10890987, -0.03337573, -0.023965215) * inp_2_0_0;
    result0 += M4(0.053625677, -0.048384976, 0.10364674, -0.13272184, -0.07150503, 0.06716688, -0.1417653, -0.006510503, 0.005741347, -0.09539481, -0.01700782, 0.005806636, 0.029217683, -0.08491763, 0.08607586, -0.169644) * inp_2_1_0;
    result0 += M4(-0.011806229, 0.006242638, -0.007034819, 0.027622709, 0.0389092, 0.07633042, -0.005038901, -0.025867732, -0.0021802036, 0.011293102, 0.031084806, -0.00860947, -0.009408097, -0.055579416, 0.013242676, -0.050452586) * inp_2_2_0;
    result0 += M4(0.026871435, 0.3113658, 0.09025758, -0.035291046, 0.003961382, -0.13262303, -0.026519015, -0.046746057, -0.068332575, 0.12296621, 0.14307071, -0.14166473, 0.076009184, -0.04386536, -0.07722539, 0.123121485) * inp_2_0_1;
    result0 += M4(-0.14208913, -0.21180616, 0.013431111, 0.36702126, -0.013517275, -0.35319844, -0.099050544, -0.11779251, -0.03382773, 0.027571103, 0.29376438, -0.35694918, 0.024765719, 0.02098291, 0.103667155, 0.21017988) * inp_2_1_1;
    result0 += M4(0.037938412, -0.001232215, 0.07082695, -0.08982175, -0.12649642, -0.15318264, -0.11682204, -0.1003591, 0.035489943, -0.034178786, 0.20463122, -0.15587398, 0.05080529, -0.031396866, -0.037295446, 0.021286469) * inp_2_2_1;
    result0 += M4(-0.019427916, 0.31834427, -0.02909168, 0.039124362, -0.021268131, -0.6699585, -0.022322832, -0.027215203, 0.06345759, 0.18069953, 0.0015074677, 0.0017461473, -0.049404513, -0.023514543, 0.013597374, -0.016559195) * inp_2_0_2;
    result0 += M4(-0.045316756, -0.06849654, 0.040929813, -0.083322294, -0.20254578, -0.05896784, 0.03820328, 0.039936185, -0.20753643, -0.06308521, 0.07071474, -0.034256794, 0.3162043, -0.03838496, 0.085555375, -0.14794199) * inp_2_1_2;
    result0 += M4(0.03804476, 0.108104624, 0.037412487, -0.033393033, -0.09234161, 0.119818725, -0.015051058, 0.08526688, -0.008160052, -0.0068667396, 0.10916961, -0.1194003, 0.032675803, 0.027143829, -0.05747354, -0.0065233936) * inp_2_2_2;
    result1 += M4(-0.062481474, 0.063289195, 0.020987207, 0.06752374, -0.0029773237, 0.095768176, 0.0048921932, 0.12264618, -0.03973921, 0.029983088, 0.0020912788, -0.0119044, -0.019780098, 0.02557982, 0.019097196, 0.004138672) * inp_2_0_0;
    result1 += M4(0.05412166, 0.045991465, 0.008676688, 0.2923867, -0.1429923, -0.076375365, 0.02045979, -0.6426791, 0.035115708, 0.0010128374, 0.03034642, 0.058978613, 0.06477691, 0.0076287934, -8.355882e-05, 0.13038063) * inp_2_1_0;
    result1 += M4(-0.008534509, -0.026583415, 0.014691749, 0.090427764, 0.07263271, 0.024815973, 0.01155952, -0.14728065, 0.016265135, -0.000964877, 0.013655403, -0.016791161, -0.0015094801, 0.045512203, 0.038364843, -0.009059289) * inp_2_2_0;
    result1 += M4(-0.06570976, -0.034274705, -0.05506196, -0.080653906, -0.03641601, -0.44139025, 0.0157675, -0.0029730618, 0.010122156, -0.007580763, 0.008100149, -0.048335798, 0.14814672, -0.102483496, -0.011861887, -0.016301671) * inp_2_0_1;
    result1 += M4(0.34337005, -0.21702819, -0.07533501, -0.030991873, -0.012016358, -0.3289813, -0.14422509, -0.796327, 0.070729464, 0.06016438, -0.09272376, -0.12167114, -0.0345462, -0.101633616, -0.0859251, 0.06321327) * inp_2_1_1;
    result1 += M4(-0.06957972, -0.056254853, -0.03491422, -0.047890496, -0.034116913, -0.3279883, 0.0350278, -0.39773062, -0.043682255, 0.10128153, 0.112876, 0.09816879, 0.034612738, -0.03890256, -0.06033481, -0.15013875) * inp_2_2_1;
    result1 += M4(-0.0316377, 0.30428353, 0.110394254, 0.016054265, -0.05533206, 0.015972853, -0.00933679, 0.038283933, 0.0106505295, -0.019379323, 0.020827392, -0.014126807, 0.05609194, 0.05452459, -0.10895867, -0.02950084) * inp_2_0_2;
    result1 += M4(0.013223268, 0.42664975, 0.09954004, -0.112286255, -0.009309037, -0.46550536, -0.090573356, -0.11021004, -0.025023235, -0.1704934, -0.12841421, -0.011411022, 0.01000373, 0.40989596, 0.28273875, 0.03848802) * inp_2_1_2;
    result1 += M4(0.044565722, 0.105923176, 0.08248805, -0.041782178, 0.013850607, -0.22681592, -0.06933378, 0.11376933, 0.0030235942, -0.090612695, 0.1388149, -0.13031669, 0.021604734, 0.035653017, -0.054076545, 0.027027508) * inp_2_2_2;
    result2 += M4(0.03313227, -0.100096665, 0.017784892, -0.0681632, -0.012522733, -0.109703496, -0.016458329, -0.006460409, -0.0021383339, -0.019457038, 0.0024192706, -0.021074653, -0.0022287236, -0.013764928, 0.002930206, -0.023791745) * inp_2_0_0;
    result2 += M4(-0.028113652, -0.041930914, -0.07400536, 0.0113087185, -0.02070932, -0.08027981, -0.04227122, -0.08458599, 0.020984165, -0.08077795, -0.00068223506, 0.050670356, -0.037243173, -0.062112063, 0.053728055, 0.05363415) * inp_2_1_0;
    result2 += M4(-0.020237183, -0.032213904, -0.0186291, -0.030376995, 0.023860252, -0.08404631, -0.46143433, -0.08938549, 0.02703553, -0.048631314, -0.020577224, -0.009744524, -0.0075110034, 0.062480897, 0.06104842, 0.019562958) * inp_2_2_0;
    result2 += M4(-0.039378203, -0.05266989, -0.051199533, -0.05720326, -0.010830331, -0.10132718, 0.0032086023, -0.041752566, -0.020010358, -0.07127651, -0.011336071, 0.0027948676, 0.046869062, -0.06611022, -0.020165732, -0.14702544) * inp_2_0_1;
    result2 += M4(-0.114327505, -0.013365144, 0.060026895, -0.121000685, -0.057068534, 0.06654722, 0.08198591, -0.14182696, -0.0687509, -0.040220827, 0.06892634, 0.11369377, -0.023826193, -0.09903995, 0.07108223, -0.094771236) * inp_2_1_1;
    result2 += M4(-0.10317512, 0.055245206, 0.028370196, -0.037057802, -0.041594308, -0.015952861, -0.6600325, -0.042182904, -0.12599611, -0.082501955, -0.36760014, -0.04400498, 0.045143563, -0.05646806, 0.3605813, 0.02821419) * inp_2_2_1;
    result2 += M4(-0.008693586, -0.05386956, 0.039764985, 0.0021141218, -0.047631994, -0.10936411, -0.013925977, -0.007914169, 0.0024910003, -0.101135865, 0.0063953483, -0.033408377, -0.0023953624, -0.012946576, 0.009832661, -0.03492778) * inp_2_0_2;
    result2 += M4(-0.14658007, -0.11588363, -0.02379503, -0.010532755, -0.11493739, -0.100815035, -0.062489413, -0.025176214, -0.2111567, 0.016488997, 0.04436804, -0.10707785, -0.20161599, 0.010209456, -0.031326268, -0.08990393) * inp_2_1_2;
    result2 += M4(0.02515378, -0.090099394, -0.06724333, -0.0094116535, -0.0849711, -0.08527369, -0.043723844, 0.021818567, 0.03622189, -0.0008480569, -0.011916672, 0.0392908, 0.010298937, -0.0056374017, 0.062146693, -0.010327542) * inp_2_2_2;
    result3 += M4(-0.06890498, 0.16779916, -0.0901457, 0.09333651, -0.004914956, 0.15250278, 0.06866437, -0.31385997, -0.039862532, 0.09531423, -0.053232145, 0.05059284, -0.03627144, -0.36314806, 0.021501416, 0.08804156) * inp_2_0_0;
    result3 += M4(-0.052090026, -0.107915364, 0.12800124, -0.019899478, 0.0036831575, -0.66034937, -0.15910758, -0.175295, 0.002062665, -0.15068768, 0.034567382, -0.03961478, 0.0068878536, 0.19925292, 0.10535827, -0.16972612) * inp_2_1_0;
    result3 += M4(-0.022304054, 0.0062373057, -0.058400065, -0.008782625, -0.041528035, -0.29607445, -0.14845182, 0.082127124, -0.014138951, 0.037702445, -0.06784371, -0.009463349, -0.0009002182, -0.0017574134, 0.06291093, 0.015392999) * inp_2_2_0;
    result3 += M4(-0.22094613, 0.028092267, -0.14577384, -0.12840205, -0.043883856, -0.024279833, 0.015947567, -0.13334337, -0.03287544, 0.11010947, -0.014089554, -0.1482607, -0.0153893465, -0.17547747, 0.14489059, 0.10288082) * inp_2_0_1;
    result3 += M4(-0.19483237, 0.022585558, 0.1648709, -0.045984246, -0.073419005, -0.3063843, -0.12011995, -0.47588104, -0.34694052, -0.107055426, -0.019621091, -0.047112975, 0.011807668, 0.44188502, 0.044920016, -0.034361277) * inp_2_1_1;
    result3 += M4(-0.040042553, 0.010379796, -0.098399386, -0.028691655, -0.0066560833, -0.49013978, 0.14113045, 0.10095267, -0.046648424, 0.06883599, -0.10525904, 0.012337617, 0.022826348, -0.21984302, 0.042536136, 0.016474742) * inp_2_2_1;
    result3 += M4(-0.008433056, 0.24549316, -0.105657674, 0.08320796, 0.0070353565, 0.11621934, 0.0025063916, -0.08542466, -0.015353841, 0.066705115, -0.027040489, -0.009590488, 0.037897587, -0.02938184, -0.009935441, -0.08816247) * inp_2_0_2;
    result3 += M4(-0.029032402, -0.08481982, 0.08566732, -0.10353591, -0.015616978, 0.04525184, 0.019073533, 0.021616919, -0.0540943, -0.0015433413, 0.028664395, -0.100561395, -0.083429545, 0.027647508, 0.03236195, 0.027370745) * inp_2_1_2;
    result3 += M4(0.006007874, 0.049161963, -0.001829007, -0.005737451, -0.012417897, 0.23014471, -0.036721103, -0.0839661, -0.006209946, 0.18060055, 0.012975843, -0.031252183, -0.011834637, -0.108602494, -0.017263109, 0.0058719073) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.037001163, 0.18913755, 0.06633531, -0.119934574, 0.0054891254, -0.006469927, -0.019125722, -0.057104133, -0.024834057, -0.18801112, 0.02140182, 0.02889061, -0.020740978, 0.2952907, -0.052027248, -0.02830859) * inp_3_0_0;
    result0 += M4(-0.0059388885, 0.17803377, -0.017027622, 0.010210163, 0.00076291326, 0.05963029, 0.013912963, 0.0048262374, -0.0038380753, -0.10042214, -0.026411708, 0.072642036, 0.027882433, -0.23788218, -0.040025175, 0.11817388) * inp_3_1_0;
    result0 += M4(0.031101255, -0.047093887, -0.0028736237, -0.04170481, 0.028534692, 0.106024496, 0.012555127, 0.014687929, 0.022440998, 0.026022272, -0.07163289, -0.04135066, -0.024081595, 0.089040436, 0.00011792793, 0.0099117365) * inp_3_2_0;
    result0 += M4(0.10019828, -0.8778809, 0.06257895, 0.0013231357, -0.09950203, -0.13884674, 0.014237658, 0.035055593, 0.012897343, -0.15586312, -0.0118752085, 0.0065275016, -0.03558277, -0.06616124, 0.05050823, -0.23127529) * inp_3_0_1;
    result0 += M4(0.03235697, 0.015234881, 0.10520172, -0.25461468, -0.13075408, -0.0889109, -0.08377403, -0.16524158, 0.19608206, -0.086278684, -0.11030826, 0.1819034, 0.1255975, -0.012496445, 0.06992031, 0.067669585) * inp_3_1_1;
    result0 += M4(0.033340316, 0.0417439, -0.004591832, 0.059692673, 0.00866827, 0.024958422, -0.06416601, 0.058806747, -0.033656325, -0.12210754, -0.101594545, 0.07916076, -0.031763785, -0.09221874, 0.014569152, 0.062412415) * inp_3_2_1;
    result0 += M4(0.0903315, -0.30951753, -0.005843995, -0.055693414, 0.12428219, -0.100592785, -0.0067990692, 0.050229177, -0.0052039684, -0.10436471, -0.017582582, 0.013990893, -0.15489037, 0.17333446, -0.07308587, -0.2704375) * inp_3_0_2;
    result0 += M4(0.033506986, 0.13631274, 0.027440881, -0.033316348, -0.18951872, -0.028697615, 0.030334916, 0.06422681, -0.10594772, -0.022431754, -0.0588804, 0.058399603, -0.24205177, -0.14944755, -0.081590086, 0.13517374) * inp_3_1_2;
    result0 += M4(-0.05331002, -0.03564543, 0.013765755, -0.033696573, -0.05895456, 0.04891488, 0.04897848, -0.03138918, 0.024076996, -0.013307864, -0.04024966, 0.008740635, 0.049476746, 0.037593156, -0.008311206, -0.060583513) * inp_3_2_2;
    result1 += M4(-0.008339693, 0.14641261, -0.026494374, 0.22634955, -0.081834584, 0.118401155, 0.0048700636, 0.046828732, 0.026653528, -0.095757775, 0.0008029499, -0.123752065, -0.089806, 0.019640114, -0.03041357, -0.07491529) * inp_3_0_0;
    result1 += M4(0.031358574, 0.0779569, -0.03162945, 0.1745056, 0.059892662, -0.054673612, -0.026556326, -0.20387182, 0.12977235, -0.1081974, -0.01721071, -0.22122924, 0.048093595, -0.06325847, -0.03474586, -0.12728216) * inp_3_1_0;
    result1 += M4(-0.010818129, -0.021108732, -0.053958353, -0.022431212, 0.027223945, 0.025296802, -0.018595595, 0.19860464, 0.04061835, 0.052654363, -0.03771757, -0.05107431, -0.015166726, -0.064826034, 0.06742027, -0.1658938) * inp_3_2_0;
    result1 += M4(0.023438565, -0.03295575, -0.023423428, 0.04367473, 0.120515846, -0.073110946, -0.098858945, 0.08876312, 0.006889513, 0.060944166, 0.041657276, 0.027050255, -0.051868528, 0.1732977, 0.0824639, 0.36051896) * inp_3_0_1;
    result1 += M4(-0.32986996, 0.03974311, 0.042002976, -0.10747819, -0.34714323, 0.14365055, 0.17661229, -0.10298091, 0.24474068, 0.088955365, -0.2137968, 0.26527086, 0.17540202, 0.1698571, 0.08291472, 0.41466516) * inp_3_1_1;
    result1 += M4(0.032582793, 0.0017358107, -0.020557297, 0.031029355, 0.045231428, -0.04348953, -0.1029348, -0.30884618, 0.064398125, -0.14377826, -0.18622923, -0.04766621, 0.050449237, 0.13718624, 0.043708153, 0.3525711) * inp_3_2_1;
    result1 += M4(-0.064360455, 0.13836417, 0.134031, -0.078194, -0.04066925, -0.032861024, 0.03482949, -0.020304307, -0.023628157, -0.14561616, 0.010831915, -0.04253051, -0.1474884, -0.57838106, -0.15551648, -0.7660428) * inp_3_0_2;
    result1 += M4(0.030437322, -0.03444774, 0.20685, 0.00708747, 0.059724916, -0.20640607, -0.19560806, 0.04867758, 0.018702047, -0.21717168, -0.18504032, -0.09408564, 0.09405453, -0.20235004, -0.16190138, -0.3875194) * inp_3_1_2;
    result1 += M4(0.019943215, 0.03715128, -0.01282255, 0.06540848, -0.012729002, 0.13984609, 0.037313245, 0.032411147, 0.008028041, -0.029701825, -0.16817781, -0.012562018, -0.09466393, -0.04828965, 0.018958034, -0.23602657) * inp_3_2_2;
    result2 += M4(0.005779679, -0.0721049, -0.044386566, 0.082138285, -0.009561966, -0.03705068, -0.009858572, 0.058554728, 0.007109071, -0.018760435, -3.0390722e-05, 0.0035141238, 0.019709565, -0.09712496, -0.03684898, 0.0439543) * inp_3_0_0;
    result2 += M4(0.00013275763, -0.07647258, 0.044083346, -0.0033877643, 0.015223444, 0.040700383, 0.017995715, 0.026349971, -0.026556479, 0.0066405605, -0.04519906, 0.05493032, 0.060379606, 0.04324762, -0.015551235, -0.008155843) * inp_3_1_0;
    result2 += M4(0.012178035, -0.07061346, 0.092553966, 0.038829368, -0.005985272, 0.07030651, -0.18748303, 0.025720544, 0.016006792, -0.016904559, 0.21851632, 0.10675206, -0.006042389, -0.033420313, 0.19687574, -0.028058903) * inp_3_2_0;
    result2 += M4(0.028511085, -0.014618119, 0.008008012, 0.08146002, 0.047902234, -0.1091205, 0.006854604, 0.022893406, 0.014853788, -0.012956358, 0.03144024, 0.024632951, 0.026373925, -0.043999724, -0.039078284, 0.057423756) * inp_3_0_1;
    result2 += M4(-0.20006852, -0.049628735, 0.2814511, -0.05839238, 0.06260127, 0.023843434, -0.0054188524, 0.10801038, 0.040813226, 0.052874308, 0.05356005, -0.25144178, 0.12477957, 0.02395524, 0.17083654, 0.10893378) * inp_3_1_1;
    result2 += M4(-0.013807342, -0.0726838, -0.15963857, -0.03421808, 0.04255927, 0.009444948, -0.19309561, 0.014162973, 0.10487025, 0.045096718, -0.12040113, 0.10222732, 0.012004782, 0.057345428, -0.25546536, 0.006296057) * inp_3_2_1;
    result2 += M4(-0.051899403, -0.07975387, 0.02064591, 0.06751625, 0.027762044, 0.07477966, -0.0039648134, 0.02174153, -0.002653436, 0.019237597, -0.003423272, 0.028190956, 0.05064208, -0.08350411, 0.033665743, 0.0024280634) * inp_3_0_2;
    result2 += M4(0.068270415, -0.023388535, 0.08327959, -0.015389122, 0.117394574, -0.04058678, 0.025568567, 0.015217491, 0.091243595, 0.019613067, -0.029459855, 0.03074313, 0.0038661237, 0.02145231, 0.09873413, 0.0030363004) * inp_3_1_2;
    result2 += M4(0.012975074, 0.0026446867, 0.029222474, -0.008320224, 0.030284002, -0.10878448, 0.053528514, 0.010282215, -0.11514497, 0.00078960136, -0.025103971, -0.038599495, -0.028816607, 0.08032266, 0.06084546, 0.032927122) * inp_3_2_2;
    result3 += M4(-0.020221734, 0.16844489, -0.06568013, -0.044402916, 0.028832551, -0.07142817, -0.040313505, 0.02230521, 0.01648353, -0.011154471, 0.018166305, -0.08552963, 0.043705806, -0.086465046, 0.08222765, -0.2708093) * inp_3_0_0;
    result3 += M4(0.054356776, -0.054348756, -0.09255375, -0.05589048, 0.013265774, -0.0024138214, -0.073230185, -0.025834812, 0.16301183, -0.37033623, 0.31328684, -0.062030096, -0.01453563, 0.26100326, 0.20447725, 0.13878797) * inp_3_1_0;
    result3 += M4(0.045753587, -0.011613862, 0.06298838, 0.023447055, 0.016040167, 0.0036616249, 0.056415435, -0.0010135237, 0.04791414, -0.13035107, 0.1181708, 0.025172122, -0.0074266377, 0.283553, -0.06228668, -0.020465344) * inp_3_2_0;
    result3 += M4(-0.10678766, 0.19642024, -0.18940297, -0.05770094, -0.0023056073, -0.02483001, 0.06082894, -0.07174448, 0.09859412, -0.03959956, -0.07150438, -0.09908158, -0.059621625, 0.218453, -0.03232553, -0.23312715) * inp_3_0_1;
    result3 += M4(-0.07065887, -0.1248566, -0.514406, -0.12086642, 0.043409087, -0.5235486, -0.077494584, 0.096767806, 0.22537036, -0.2071663, 0.26045716, 0.08366945, -0.042479243, -0.029021863, 0.2593631, 0.12125994) * inp_3_1_1;
    result3 += M4(-0.0149788195, -0.22307488, 0.028900605, -0.014086771, 0.010209046, 0.00668003, -0.08707768, 0.012503882, 0.075163424, -0.1838165, 0.23362358, 0.060337406, -0.05338537, -0.076674685, -0.0385892, -0.0040835515) * inp_3_2_1;
    result3 += M4(0.015130488, 0.009932628, -0.061610144, -0.17565626, -0.013763175, 0.1293349, -0.0025560562, -0.05121753, -0.007892187, 0.021356687, -0.03785164, -0.021817701, 0.01079142, -0.15237314, -0.16898967, -0.08291627) * inp_3_0_2;
    result3 += M4(0.027547996, 0.12945797, -0.021200327, 0.058139637, 0.009147187, -0.018855568, 0.058655612, 0.019370096, 0.03490676, -0.1712849, -0.020501984, 0.077537246, -0.018741025, -0.09898564, 0.117246106, -0.10619133) * inp_3_1_2;
    result3 += M4(0.01472895, -0.065343335, 0.0009971964, 0.010943234, 0.012851757, 0.0713715, -0.033965062, 0.020775722, -0.0057015796, -0.095015734, -0.015103808, -0.02175646, -0.000676842, 0.20297727, -0.027714685, 0.011516728) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.003745407, -0.0028173781, 0.013942191, -0.012512344);
    V4 result1 = V4(0.0055327592, 0.008494625, -0.0064052297, -0.009930403);
    V4 result2 = V4(0.011386403, 0.007048197, 0.008541117, -0.00011352015);
    V4 result3 = V4(-0.0050338204, 0.0013964863, 0.033584375, -0.020902006);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.1978474, -0.28942078, -0.21453053, 0.06253238, 0.0021586975, 0.058489542, 0.067231864, -0.058294084, 0.11308038, -0.00780996, -0.15848239, 0.08926692, -0.15367848, -0.02983059, 0.1346641, -0.09004357) * inp_0_0_0;
    result0 += M4(-0.4303211, -0.93224496, -0.1056859, -0.34541237, 0.056174964, 0.026685337, 0.095715195, -0.07431071, -0.032432344, -0.048341025, -0.000712171, -0.0017102925, -0.056034833, 0.04032418, 0.031959377, 0.023549793) * inp_0_1_0;
    result0 += M4(0.5617334, -0.33780152, -0.55161506, -0.3414484, 0.18520156, 0.12873666, 0.14023115, -0.21953475, -0.025577102, -0.07357147, -0.048104174, 0.014048931, 0.03405165, 0.045779027, 0.04505143, 0.012950508) * inp_0_2_0;
    result0 += M4(-0.009730916, 0.06877717, 0.11148677, 0.08978435, 0.027097654, 0.13880669, 0.10302968, -0.010418952, -0.07278241, -0.09853534, 0.004499581, -0.0737964, 0.058980707, 0.034765765, -0.08741396, 0.022832038) * inp_0_0_1;
    result0 += M4(0.12281198, 0.11327973, 0.17775837, 0.25671595, 0.11805797, 0.15121464, 0.39701417, 0.17913395, 0.27393758, -0.65596807, -0.039149035, -0.13583708, -0.5197188, 0.61686665, -0.09577231, 0.02351583) * inp_0_1_1;
    result0 += M4(0.10487394, -0.0505194, -0.12634757, 0.051188473, -0.2048846, 0.30865794, -0.0558598, -0.010951237, -0.19342831, -0.115918785, -0.0047612167, 0.08095289, 0.19090723, 0.17909917, 0.01078845, -0.1149373) * inp_0_2_1;
    result0 += M4(0.010598795, -0.0030146402, -0.0075826403, -0.0135487085, -0.0036842441, 0.07139781, 0.042955372, -0.06306272, -0.046865977, -0.06468296, 0.10990383, 0.011930265, -0.046061836, 0.01805753, -0.12752679, -0.033979647) * inp_0_0_2;
    result0 += M4(0.13853249, -0.12134983, 0.24651243, 0.038484693, 0.16249058, 0.07510624, -0.20650743, -0.03137575, -0.013399771, -0.034522098, 0.055495534, 0.06075843, -0.2788418, 0.068190485, -0.3953763, -0.03073566) * inp_0_1_2;
    result0 += M4(-0.026494266, 0.013220301, -0.087023474, -0.010438289, -0.09471496, 0.13768733, 0.01868349, -0.009286995, 0.13391142, -0.0129804695, -0.02057517, 0.024525736, -0.2535647, 0.041853026, -0.08892533, -0.026230274) * inp_0_2_2;
    result1 += M4(0.42411914, 0.13989973, -0.0058175093, 0.3943706, -0.05901556, -0.040301975, 0.009538232, 0.029945064, 0.04140496, 0.11928473, -0.053937975, 0.07193457, -0.04345308, -0.16143939, 0.11672863, 0.0011489333) * inp_0_0_0;
    result1 += M4(-0.27595323, -0.41192338, -0.08328098, 1.6658709, -0.19992341, -0.09514596, -0.045927178, -0.005563433, 0.062312502, -0.001452922, -0.05750645, -0.012183519, 0.03274464, -0.0026343649, 0.04010552, 0.07711379) * inp_0_1_0;
    result1 += M4(-0.7668698, -0.27602333, 0.60068625, 0.44667134, -0.22616856, -0.105175436, -0.261975, -0.024942476, 0.02123185, -0.018640835, -0.028565623, 0.08866082, -0.031745464, 0.0008798982, -0.010270759, 0.010430347) * inp_0_2_0;
    result1 += M4(0.08723858, -0.000809795, 0.059606127, 0.053459086, -0.1206053, -0.0065430906, -0.03477795, -0.12765093, 0.0796718, -0.02130877, 0.10747492, 0.036254764, -0.033997636, -0.06232837, -0.18360655, 0.030146115) * inp_0_0_1;
    result1 += M4(0.22210433, -0.004709933, -0.26116657, -0.083289385, -0.037941597, -0.015183271, 0.025604453, 0.060355023, 0.43417767, 0.1587742, 0.056833416, -0.08857809, -0.31861168, -0.21796286, -0.072480194, 0.16185704) * inp_0_1_1;
    result1 += M4(0.072879896, -0.19822276, 0.100579485, 0.16145785, -0.44026157, -0.12457595, 0.001113955, -0.26294738, 0.027225696, -0.11111249, -0.20190531, 0.0369842, 0.038626455, 0.05396165, 0.122742936, 0.12123401) * inp_0_2_1;
    result1 += M4(-0.00061734335, 0.01755211, -0.0073541696, -0.011130253, -0.08666519, -0.02295901, -0.0140282, -0.090014555, 0.011584574, 0.068293974, 0.1606469, -0.0134054925, 0.07810557, -0.14056343, -0.13207655, -0.07418183) * inp_0_0_2;
    result1 += M4(-0.0070973574, 0.05320915, 0.13041125, 0.22783439, -0.13728872, -0.16412236, -0.33239207, -0.18291561, 0.030295972, -0.18255262, -0.02889862, -0.014645146, 0.027706154, 0.00013035732, -0.026243728, -0.22375669) * inp_0_1_2;
    result1 += M4(0.04642713, -0.029870784, -0.049451753, -0.048859164, -0.12251137, -0.07867067, 0.09596086, -0.19171625, -0.06263004, 0.021900754, 0.06790615, -0.057965644, 0.15156361, -0.030411419, -0.10047783, -0.1321685) * inp_0_2_2;
    result2 += M4(0.23499936, -0.04718616, -0.35693136, 0.09244336, -0.0053087925, 0.034103204, -0.04341517, 0.03108767, 0.031143008, -0.04505051, 0.053869452, -0.028116977, 0.026425118, 0.029336685, -0.17608315, 0.038728412) * inp_0_0_0;
    result2 += M4(-0.43366137, 0.36998695, -1.2867004, -0.4302642, -0.338069, 0.022252142, 0.093369044, 0.055381913, 0.038932707, -0.011762961, -0.10870207, -0.012364463, -0.032815415, 0.05446898, 0.16543517, 0.071311004) * inp_0_1_0;
    result2 += M4(-0.5682618, 0.04270481, -0.6440732, -0.14419836, -0.34567744, -0.03600682, 0.16331922, 0.0368844, 0.050970573, 0.00580157, 0.027960528, 0.020598914, -0.06283574, -0.005014447, -0.051112883, -0.01980579) * inp_0_2_0;
    result2 += M4(0.071104884, -0.033253152, 0.035210792, 0.022251558, -0.11575903, 0.0058363685, 0.058460016, 0.012682609, 0.15651047, -0.046840485, 0.030659815, -0.022359662, -0.15099235, 0.0045956564, -0.12860619, 0.0018774436) * inp_0_0_1;
    result2 += M4(-0.048929837, -0.087424144, -0.20788713, -0.1647085, -0.36793733, -0.14634715, 0.08012768, 0.29721195, 0.44273695, -0.10553581, -0.12742408, -0.13791153, -0.5261054, 0.21560024, -0.034855507, 0.3416426) * inp_0_1_1;
    result2 += M4(-0.13693736, -0.0012483215, 0.014750096, 0.032547068, -0.27805158, 0.017868232, -0.26048213, -0.08765231, 0.036287297, 0.0732426, 0.08174707, -0.061064612, -0.10889248, -0.103292264, -0.06901122, 0.2076395) * inp_0_2_1;
    result2 += M4(0.017687904, 0.0018334633, 0.0059848763, 0.023638232, -0.051504873, -0.021179376, -0.0144952545, -0.027842157, 0.00714999, -0.032578424, 0.03165612, 0.13751154, -0.0024113832, -0.023508362, -0.08004339, -0.12104226) * inp_0_0_2;
    result2 += M4(0.048629235, 0.09819131, 0.02227743, -0.10434966, -0.1781404, -0.022775955, 0.10078327, -0.14122896, 0.11052564, 0.0488222, 0.0690968, 0.019897986, -0.1070645, -0.111440584, -0.22323555, -0.083384395) * inp_0_1_2;
    result2 += M4(0.0041645374, -0.010411172, -0.05947095, -0.03202265, -0.11609537, -0.042044573, 0.21340989, 0.01741325, -0.0909145, 0.019389601, -0.08516398, -0.08671312, 0.09988733, -0.04216016, 0.049036656, 0.20309056) * inp_0_2_2;
    result3 += M4(-0.021227395, 0.44787276, -0.12663905, -0.19096245, -0.009796479, 0.08671321, -0.0071325735, -0.040760435, 0.036129612, 0.023204487, -0.04227151, 0.03100741, -0.011937979, -0.07162256, 0.050702572, 0.03402445) * inp_0_0_0;
    result3 += M4(-0.20576663, 0.8354663, 0.13827918, -0.23398583, 0.12041824, 0.19692911, -0.064361714, -0.13878632, 0.18393958, -0.037555937, 0.03975453, 0.013908169, -0.2945798, -0.0059315334, -0.08609805, 0.049842685) * inp_0_1_0;
    result3 += M4(-0.0051982654, 0.44650063, 0.24540043, -0.087000735, -0.19453533, 0.06396437, 0.057485662, -0.13909504, 0.065683424, 0.08374261, -0.020885453, -0.004259333, -0.06368549, -0.00083822006, 0.051906697, 0.009761852) * inp_0_2_0;
    result3 += M4(-0.025334215, -0.012050805, -0.054468974, 0.11972365, 0.005352592, 0.13442574, -0.008784365, -0.049366705, 0.04969269, -0.21072929, -0.012713631, 0.016505193, -0.074043564, 0.19490881, 0.015800912, 0.03683647) * inp_0_0_1;
    result3 += M4(0.13979384, -0.13134304, -0.23815036, -0.04011722, -0.23146187, 0.61603284, -0.057251375, -0.09528181, 0.41836658, 0.13419504, -0.035293333, 0.18247959, -0.5440911, -0.07980852, 0.06932791, -0.08821059) * inp_0_1_1;
    result3 += M4(-0.14025794, 0.05521019, -0.00018339603, 0.09500909, 0.20552298, 0.30638152, -0.079169005, -0.2164087, 0.11714826, 0.0498346, -0.08895407, 0.20820999, -0.27871454, -0.15161125, 0.15730527, -0.16643147) * inp_0_2_1;
    result3 += M4(-0.0029840644, 0.051406104, 0.012263512, -0.008417424, 0.0041462723, 0.13304652, -0.016945805, -0.06768284, 0.097715996, 0.059150938, 0.012605733, 0.044065215, -0.053527266, -0.05674718, -0.030148085, -0.04382336) * inp_0_0_2;
    result3 += M4(0.00021190871, -0.042746156, -0.030960731, 0.06514171, -0.10543752, 0.21028413, -0.036737762, -0.048700392, 0.19830872, -0.25285006, -0.06475734, 0.10322019, -0.09114066, 0.20382152, 0.08563496, -0.09164714) * inp_0_1_2;
    result3 += M4(-0.058079075, -0.03865406, 0.0064869225, -0.032026198, 0.13808912, 0.22743082, -0.059201412, -0.03113683, -0.021443525, -0.03331121, 0.0018668503, 0.057641014, -0.0005846562, -0.0019212161, -0.025801457, -0.06293029) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.01776135, 0.07710543, 0.03514524, -0.030046435, 0.04100834, 0.028798917, -0.065358475, 0.08173218, 0.04033098, -0.11496746, -0.070881404, 0.05202133, 0.059193544, 0.046130102, -0.03222146, -0.009930782) * inp_1_0_0;
    result0 += M4(0.14177266, 0.08219854, -0.14864558, -0.030148907, -0.17445746, 0.342936, 0.31044587, 0.15661964, -0.12880147, -0.1975405, 0.11548973, 0.055768218, 0.13817102, 0.054733273, -0.22413103, 0.039325967) * inp_1_1_0;
    result0 += M4(0.1251826, 0.124204926, 0.06681704, 0.04663295, 0.10919153, 0.14520065, 0.016620755, -0.07474584, -0.15937321, -0.17458892, -0.1762939, 0.070525326, 0.023419432, -0.019834463, 0.014172222, 0.004409607) * inp_1_2_0;
    result0 += M4(-0.012197528, 0.052302193, 0.11542105, 0.03083706, 0.0020025063, 0.05328141, 0.008674883, 0.006032078, 0.01961356, -0.021934332, -0.08521692, -0.0319216, -0.09103112, -0.096737854, -0.024824094, -0.09553679) * inp_1_0_1;
    result0 += M4(0.33667964, 0.22676973, 0.03936264, 0.07342912, 0.33987027, 0.052711617, 0.3328283, 0.01734097, 0.3479887, -0.26156935, 0.34229368, -0.06869431, 0.62460494, -0.41840175, -0.03744438, 0.22019282) * inp_1_1_1;
    result0 += M4(0.02655685, 0.09362705, 0.020059396, -0.09655155, -0.064436935, 0.01417414, 0.051678322, -0.07774763, -0.008259067, -0.019934127, 0.019577332, 0.03677093, -0.072417736, -0.052567642, 0.06600364, -0.026829414) * inp_1_2_1;
    result0 += M4(0.013821604, -0.009031127, 0.006362216, -0.0436504, -0.013801591, 0.05217327, 0.0034212987, -0.028078292, -0.03567641, 0.020108208, -0.0157998, 0.0052367477, -0.0034139706, -0.05797457, 0.19783422, 0.015718808) * inp_1_0_2;
    result0 += M4(0.13748583, 0.005506993, 0.15535042, 0.08659634, 0.19275485, -0.03454659, 0.023281036, 0.044051483, 0.06967145, 0.07840082, 0.11423018, -0.020273423, -0.011014202, -0.20890705, 0.054294012, -0.0072048614) * inp_1_1_2;
    result0 += M4(0.056315817, -0.0458745, -0.036127046, -0.01565889, -0.0037325467, 0.017836533, 0.07541291, -0.007489617, -0.07142601, -0.008392579, -0.026200583, -0.013198101, 0.024612125, 0.028830314, -0.094622776, -0.017522464) * inp_1_2_2;
    result1 += M4(-0.099370845, 0.0010656574, -0.054588128, -0.07285746, 0.19768362, 0.12577154, -0.1775535, 0.03357289, 0.21418867, 0.09165308, -0.06198693, 0.019266063, -0.05570097, 0.07733418, -0.14151831, 0.014477789) * inp_1_0_0;
    result1 += M4(-0.04654411, 0.01591498, 0.059414987, -0.1782786, -0.015190666, -0.06986638, -0.18359396, -0.01903927, 0.19653225, 0.19939947, -0.1759111, -0.06971473, -0.07478783, 0.01496665, 0.2923012, -0.10100542) * inp_1_1_0;
    result1 += M4(-0.091393806, 0.003938344, -0.060384925, -0.18052791, -0.086715214, 0.10716847, 0.21886921, -0.08453073, 0.13263358, 0.0816291, 0.22463295, -0.056078564, 0.024596645, 0.027010988, -0.009972533, -0.07992388) * inp_1_2_0;
    result1 += M4(-0.17786162, 0.09801505, 0.14534202, 0.08284101, 0.0012188372, 0.07076454, 0.032898698, -0.056638375, 0.042865694, 0.03120019, -0.066512585, 0.03309959, -0.054849345, -0.056732956, 0.14219372, -0.034695618) * inp_1_0_1;
    result1 += M4(-0.34625262, -0.072253935, -0.13701601, 0.35399634, -0.0076447404, 0.18095694, -0.1789729, 0.055998277, 0.13313265, 0.34125876, 0.31886563, 0.32201546, -0.08407397, 0.316876, 0.2625171, -0.23815288) * inp_1_1_1;
    result1 += M4(-0.11142226, -0.20677643, -0.07994627, -0.13794412, 0.058374003, 0.02733494, 0.14064586, 0.27201667, 0.06499278, 0.053623125, 0.101773866, 0.20222859, -0.048360545, -0.24359748, -0.26819783, 0.09317584) * inp_1_2_1;
    result1 += M4(-0.090279765, -0.03001954, -0.023884805, -0.030350182, -0.059231676, -0.023537142, 0.0005725373, -0.070656836, -0.017988399, 0.0075324904, 0.035922125, -0.01693938, 0.057492997, 0.07485823, 0.09958452, 0.029159818) * inp_1_0_2;
    result1 += M4(-0.03468043, -0.032927576, 0.006791484, 0.088090174, -0.01148269, 0.16398671, 0.051571198, -0.024152545, 0.046273958, 0.09520162, -0.045009788, -0.09113163, -0.21151094, -0.19505142, 0.10017355, 0.07553142) * inp_1_1_2;
    result1 += M4(-0.07736724, -0.043254897, 0.04228024, -0.014924323, 0.04120038, 0.020741973, -0.0006921136, 0.19227593, 0.05463102, -0.000837174, -0.022317173, 0.0060510873, -0.0070397, -0.027641552, -0.07006189, -0.20907412) * inp_1_2_2;
    result2 += M4(-0.084778644, 0.05517566, 0.11077784, -0.046850596, 0.17126602, 0.031406622, 0.036444787, -0.06306361, 0.13116165, -0.07258278, 0.08699734, 0.035938658, -0.02453646, -0.047744703, 0.051332183, -0.06049485) * inp_1_0_0;
    result2 += M4(0.09246502, -0.11044944, -0.023126435, 0.04736494, -0.29417998, 0.22106482, -0.00356951, -0.10685819, 0.18362483, -0.082776226, -0.02235146, -0.27997056, 0.08043577, -0.06629757, -0.09685935, -0.016715145) * inp_1_1_0;
    result2 += M4(-0.17755987, -0.04312482, 0.060009412, -0.00024031514, -0.031465363, -0.012472243, 0.062872805, -0.032787915, 0.20736927, 0.086086325, 0.019307714, -0.085659035, 0.050149713, -0.0021273245, -0.05076962, -0.032277633) * inp_1_2_0;
    result2 += M4(-0.038462542, 0.0737997, 0.060617976, 0.16737866, 0.10331554, -0.020593127, 0.048313253, 0.12350063, 0.10290757, -0.014333114, 0.0019066675, -0.09629437, 0.079954594, -0.021265913, 0.00260673, 0.015315824) * inp_1_0_1;
    result2 += M4(0.22902742, -0.034011245, 0.14599149, -0.012649624, -0.105800085, 0.12771408, 0.089082524, -0.13775969, -0.1476908, 0.10055755, -0.13610733, -0.08237825, 0.41723382, -0.12001071, -0.032880757, -0.24221161) * inp_1_1_1;
    result2 += M4(-0.16071053, -0.067174844, -0.011867094, -0.050381552, 0.062019486, -0.026613943, 0.011809417, 0.009542609, 0.04974987, -0.014430233, 0.03193076, 0.014722477, -0.11642781, -0.011120674, 0.109734885, 0.085195616) * inp_1_2_1;
    result2 += M4(-0.062111944, -0.027631596, 0.07852063, 0.011442025, -0.051988736, -0.0041649905, 0.00647245, -0.06284018, 0.0065454757, 0.010588465, 0.0010202639, 0.012281495, 0.009822318, -0.008353763, 0.041914903, 0.07946115) * inp_1_0_2;
    result2 += M4(-0.024604212, 0.03739424, 0.063695244, -0.100988604, -0.010784363, 0.029762398, 0.10144261, 0.11420689, -0.053155717, -0.02111638, 0.023936152, 0.043182295, 0.04165573, 0.11551215, 0.15520188, -0.24446078) * inp_1_1_2;
    result2 += M4(-0.03366478, 0.028035434, -0.03927747, -0.038765762, 0.05608763, -0.019387638, -0.058806956, 0.06416944, 0.052425746, -0.004856075, 0.027950965, 0.051613953, -0.02069615, 0.04543409, -0.06283395, -0.11215357) * inp_1_2_2;
    result3 += M4(0.02781027, -0.059687037, 0.0372393, -0.041610003, -0.11670721, 0.02575361, -0.080286115, -0.033367872, -0.15552492, -0.053174254, -0.02323899, 0.09095588, 0.06136891, 0.05116899, 0.031480428, -0.020583456) * inp_1_0_0;
    result3 += M4(0.27118912, 0.010894228, 0.009817207, -0.10845246, -0.4871116, 0.18391319, 0.04635233, 0.07776155, -0.34581605, 0.1828794, -0.10344556, 0.081923775, 0.30180094, -0.088023625, 0.00681677, -0.06912481) * inp_1_1_0;
    result3 += M4(-0.060880147, 0.0059017134, -0.012678397, 0.0054781754, -0.35611427, -0.10669069, -0.081959404, -0.21536675, -0.14628848, -0.02500653, -0.101033896, 0.1521359, 0.033822116, -0.03407249, 0.0046771443, -0.023489714) * inp_1_2_0;
    result3 += M4(0.15501848, 0.05371227, 0.033712428, -0.026668545, -0.10069922, -0.033542562, -0.020725751, -0.027928002, -0.14541692, -0.24409278, 0.04245869, 0.06471467, 0.097394794, -0.28557512, 0.03552184, -0.030207232) * inp_1_0_1;
    result3 += M4(0.6409757, -0.27403444, -0.040952154, -0.1301613, -0.7020033, 0.1302306, -0.12791947, -0.012016164, -0.41636297, -0.100867145, 0.19133663, 0.19934909, 0.6948234, -0.16031888, 0.057852026, 0.0005773627) * inp_1_1_1;
    result3 += M4(0.42637357, 0.10567087, 0.07153848, -0.0761974, -0.0153368935, 0.12157823, 0.04716034, -0.21053232, -0.13112633, -0.033582132, 0.015594705, -0.0037479748, 0.29193848, 0.16523422, 0.09513236, 0.082501926) * inp_1_2_1;
    result3 += M4(0.026196804, -0.050217092, 0.007506237, -0.0041811224, -0.02610149, 0.039008483, -0.027705995, -0.040552933, -0.00949176, 0.016823158, -0.0041277837, -0.005526483, 0.09582885, 0.12674701, 0.00021701015, -0.013356815) * inp_1_0_2;
    result3 += M4(0.12836753, 0.04812153, -0.010738427, 0.040804695, -0.29111126, -0.08833793, -0.021335222, 0.044846904, -0.17310353, 0.15634908, -0.06168674, -0.086484015, 0.51437914, -0.13746683, 0.043748964, 0.11390943) * inp_1_1_2;
    result3 += M4(0.043792725, 0.048854444, 0.010514979, -0.00810878, 0.005634084, 0.027356898, 0.021061443, -0.01769727, -0.050594024, -0.020689044, -0.0043166997, -0.022511628, -0.07372619, -0.06553444, -0.03456283, 0.0147286495) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.017813463, -0.04793815, -0.042932667, 0.0747869, 0.009791741, 0.08706097, -0.08657386, -0.036259122, -0.05202823, 0.073142044, 0.1805227, -0.0030576563, 0.018827368, 0.051329974, 0.0448413, -0.043221246) * inp_2_0_0;
    result0 += M4(-0.03637161, -0.009856492, 0.047347132, 0.041160144, -0.027353147, -0.00822571, -0.039108142, -0.06105216, -0.17518191, -0.020154275, -0.047928344, 0.1557153, 0.05212489, 0.008639316, -0.12638581, 0.064019404) * inp_2_1_0;
    result0 += M4(-0.048758276, 0.03344863, 0.03802305, 0.044528875, -0.04550813, 0.040199507, 0.05077797, 0.0794135, 0.012489737, -0.025070425, -0.024301216, -0.033219803, 0.20952527, 0.035656583, -0.052664373, -0.024280038) * inp_2_2_0;
    result0 += M4(-0.07856113, -0.00041936024, 0.08793199, -0.009564685, -0.025677938, -0.010688988, -0.016239177, 0.012671077, -0.67393434, 0.13812977, 0.099781446, -0.6227351, 0.090168916, -0.13011332, -0.046139367, -0.054098915) * inp_2_0_1;
    result0 += M4(0.04777051, -0.21009102, 0.11343897, 0.014503188, -0.031906255, -0.0072885724, 0.021159058, 0.010736331, -0.040248845, 0.15221117, -0.10505013, 0.21693419, 0.030055953, 0.27135575, -0.12720695, 0.029589621) * inp_2_1_1;
    result0 += M4(-0.0009878064, -0.048942752, 0.028179644, -0.038791295, 0.041763455, 0.020319428, -0.07493366, 0.008335784, -0.034176625, 0.012755184, 0.078650765, 0.025774773, -0.024805775, 0.19510958, 0.1993417, 0.00054230733) * inp_2_2_1;
    result0 += M4(-0.01793944, 0.0657911, -0.027463878, 0.005005542, 0.0030398099, -0.014829956, 0.0768755, 0.07119834, -0.6874794, 0.053441934, -0.72781515, -0.27907866, -0.023071313, 0.0077271853, 0.012385394, 0.07535448) * inp_2_0_2;
    result0 += M4(-0.08240897, 0.018477863, -0.04770018, -0.03331874, -0.056366187, 0.040136565, 0.04037767, -0.050617296, 0.15497486, -0.103542596, 0.06152436, 0.14742048, 0.20939247, -0.02024606, 0.16818002, 0.028485456) * inp_2_1_2;
    result0 += M4(-0.06768019, 0.032649085, -0.08004755, -0.007058886, 0.07471988, 0.02961424, -0.017628789, -0.02613959, 0.031684373, -0.010718505, -0.05942134, 0.030955367, 0.15903865, 0.004153111, 0.03506826, 0.015873235) * inp_2_2_2;
    result1 += M4(0.088763416, 0.043450117, -0.042208895, 0.03006019, 0.062538035, 0.0791141, 0.016218098, -0.041334387, -0.003172939, -0.07146827, 0.016779684, -0.44230416, -0.1422577, -0.09367659, -0.016382013, -0.19813895) * inp_2_0_0;
    result1 += M4(0.05293563, 0.0861056, -0.18524218, -0.03876443, -0.060941756, 0.0062949294, -0.015191743, -0.04086274, 0.08279719, 0.07892077, -0.03639124, 0.23367968, -0.06299343, 0.026654325, 0.21776643, -0.214683) * inp_2_1_0;
    result1 += M4(0.06078219, 0.02079721, -0.064883225, -0.025905391, 0.0760438, -0.08448592, -0.027195036, 0.081349626, -0.020447647, -0.019754374, 0.032137226, 0.085733585, -0.0653775, 0.022605715, 0.0672724, 0.09029716) * inp_2_2_0;
    result1 += M4(0.082433015, 0.02211172, 0.019729966, -0.013630387, 0.0034149, 0.082011715, 0.004879741, -0.08083805, 0.0912091, -0.33066586, 0.08630388, -0.892992, 0.05850389, 0.075533226, 0.0024230361, 0.3862318) * inp_2_0_1;
    result1 += M4(0.08393974, -0.19524947, 0.09485628, -0.23498331, -0.081238374, -0.05234889, 0.0072413953, -0.028252447, 0.031504206, 0.27150375, -0.26112846, -0.10479288, 0.045720376, 0.29450795, -0.024422893, 0.76423264) * inp_2_1_1;
    result1 += M4(-0.046278868, 0.04811365, -0.040871643, 0.038595427, -0.04571963, -0.09135264, -0.079950325, 0.07629226, 0.05822576, 0.03175275, -0.02144592, 0.09145587, -0.13061571, 0.07641231, -0.16198583, 0.01035799) * inp_2_2_1;
    result1 += M4(-0.07047695, 0.018231072, 0.012837432, -0.04178433, 0.039096177, -0.010540711, -0.09128916, 0.008898016, -0.19431368, -0.43200657, -0.14885741, -1.1954384, 0.0557548, -0.1001318, -0.050792944, -0.04315171) * inp_2_0_2;
    result1 += M4(0.15859868, -0.12007462, -0.075749196, -0.20224011, 0.010392534, -0.06722905, 0.044028692, -0.064058855, 0.041315716, 0.1050869, 0.014917554, 0.0055401833, -0.16501644, 0.27718234, 0.14843743, 0.31475234) * inp_2_1_2;
    result1 += M4(-0.026523648, 0.02355754, -0.007977999, -0.06663647, -0.04491085, -0.0335415, 0.0047166767, -0.039182536, -0.026958352, -0.03822947, 0.055717904, -0.073009655, -0.24391347, -0.016564652, 0.14983594, 0.21888912) * inp_2_2_2;
    result2 += M4(0.013114469, -0.02862372, 0.033437707, 0.054886088, -0.025813498, 0.0021087285, 0.0620251, -0.008260772, 0.029272903, -0.12784252, 0.3168467, 0.04791607, -0.21847223, -0.026078284, 0.1274362, -0.06450085) * inp_2_0_0;
    result2 += M4(0.14707816, 0.034823295, 0.07343755, -0.043494605, -0.088403404, -0.051022515, 0.0701765, 0.06686401, 0.0047465535, 0.055733338, 0.11310639, -0.033443928, 0.07547021, 0.02770046, 0.00026294962, -0.11795778) * inp_2_1_0;
    result2 += M4(0.03530519, -0.017402375, 0.059048455, 0.042770337, -0.025279313, -0.07585453, 0.063082896, 0.086829126, 0.011469716, 0.011568321, -0.10863118, 0.026443688, -0.11899811, -0.043814406, -0.07328578, 0.08138591) * inp_2_2_0;
    result2 += M4(0.08661237, 0.038717516, 0.0050218124, 0.047965452, 0.081756406, -0.029920187, -0.04638753, -0.043904714, 0.070684865, -0.31218347, 0.36114457, -0.0059302966, -0.047465682, 0.049425256, -0.047830567, 0.07926213) * inp_2_0_1;
    result2 += M4(-0.14785846, -0.011279995, 0.08662354, -0.15549405, 0.053578753, 0.027031776, 0.09445028, 0.08201202, -0.13186227, -0.086762145, -0.34999225, 0.34190986, 0.52763295, 0.1434245, -0.09473255, -0.088395916) * inp_2_1_1;
    result2 += M4(0.054052852, 0.053694867, 0.043056555, 0.032593336, -0.03118578, 0.0800035, -0.087338775, -0.081618056, 0.040173106, 0.0010247035, 0.04137744, -0.02017962, 0.05336577, -0.00075409876, 0.07936893, -0.159505) * inp_2_2_1;
    result2 += M4(0.025873095, 0.025556915, 0.050673645, 0.042196266, 0.02447764, -0.055840712, 0.0026796272, 0.026987812, -0.18750976, -0.3232659, 0.100774676, 0.2266663, -0.033783574, -0.025258658, -0.017273063, 0.033366606) * inp_2_0_2;
    result2 += M4(0.1190841, 0.006898512, -0.03085852, 0.14369713, -0.056835216, 0.0847671, -0.040584788, 0.042673644, -0.1960618, -0.0068122037, 0.07224573, -0.30905735, -0.030433571, 0.0014052045, 0.12538329, 0.17964509) * inp_2_1_2;
    result2 += M4(-0.014516971, -0.016547492, -0.04420099, 0.038845383, 0.08290894, -0.019051705, 0.040906895, -0.055128288, -0.040848, -0.0030925767, 0.024578895, -0.007146725, -0.11249559, -0.0027636227, -0.05233993, -0.15168808) * inp_2_2_2;
    result3 += M4(0.03660573, 0.0031022714, 0.032011528, 0.079853676, 0.07747021, -0.07859299, -0.016504535, -0.08252184, -0.23343338, 0.082893685, -0.042844314, 0.309698, -0.0024979494, 0.055304583, -0.019229215, -0.031086877) * inp_2_0_0;
    result3 += M4(0.055846725, 0.0058933976, 0.10118798, 0.0004004831, 0.08472974, -0.08284561, -0.058568418, 0.04163657, -0.057907075, -0.00034428405, -0.0644561, 0.14905865, 0.11068563, -0.10387012, 0.12881392, -0.02656683) * inp_2_1_0;
    result3 += M4(0.04735901, -0.043138772, -0.020206576, 0.013733835, -0.023334058, -0.050030652, 0.09673713, 0.048604604, 0.015444484, 0.012293702, 0.044730786, -0.0277429, -0.044918254, 0.0064786435, 0.057791047, -0.06874169) * inp_2_2_0;
    result3 += M4(0.03862185, -0.006521556, 0.055207096, -0.057504136, -0.077702, -0.005086312, -0.034770947, 0.07235225, -0.7594087, -0.5085093, 0.041024152, 0.3753456, -0.013084716, 0.07739643, 0.033927716, -0.06360324) * inp_2_0_1;
    result3 += M4(-0.112280704, -0.12633091, 0.0094951745, 0.14168493, -0.08095, 0.01714977, 0.047932178, 0.040780194, 0.19622657, -0.08482382, -0.2433364, 0.18106343, 0.17145841, 0.2543935, -0.2624616, 0.101628095) * inp_2_1_1;
    result3 += M4(-0.11721489, 0.03144819, 0.05491431, 0.06028447, 0.091004044, 0.024273138, -0.010317998, 0.03882514, -0.024078662, -0.024147902, -0.036953356, 0.004580726, 0.05602077, 0.083605684, -0.07039757, -0.11775763) * inp_2_2_1;
    result3 += M4(-0.0012869248, -0.033857796, -0.020168405, -0.005539334, 0.022411775, -0.03740613, -0.053964134, -0.016919518, 0.14329237, 0.15422675, -0.081960455, -0.08244612, -0.018134987, -0.029786335, -0.06069396, 0.018905222) * inp_2_0_2;
    result3 += M4(0.023445234, -0.10478164, -0.023061093, -0.048764013, -0.032385193, -0.083952576, -0.073999785, -0.056234345, -0.02834462, -0.11982698, 0.026662739, 0.38134405, -0.17198424, -0.24910668, 0.10007131, 0.043430284) * inp_2_1_2;
    result3 += M4(-0.02672387, -0.049424764, -0.0015696574, -0.03156579, -0.043210957, -0.07480349, -0.06039121, 0.09902273, -0.009074483, 0.032628786, -0.013800664, 0.06187661, 0.1299938, 0.18058664, 0.07784386, 0.002023343) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.10092099, 0.06463398, -0.11154959, 0.02090312, 0.1393104, -0.016808754, -0.16083938, 0.093964055, -0.026783237, 0.03517635, 0.009861202, -0.04304621, -0.0030722823, -0.038861927, -0.07359414, 0.046365615) * inp_3_0_0;
    result0 += M4(-0.17339528, 0.05582069, 0.17949012, -0.0030098595, -0.25145787, -0.24083106, 0.2212401, 0.057450134, 0.14669263, 0.17611644, -0.08648036, 0.008100524, -0.15124957, -0.14211628, 0.1541319, 0.004033809) * inp_3_1_0;
    result0 += M4(-0.027935114, 0.12585145, 0.12113121, -0.0036662936, -0.08190777, -0.15029737, -0.10297139, -0.034853444, -0.0088741975, 0.10870479, 0.10111431, 0.034960855, 0.04662373, -0.012372223, -0.054527964, 0.020908589) * inp_3_2_0;
    result0 += M4(-0.005816784, 0.1490261, 0.3059015, -0.0040872414, 0.18447272, -0.224275, 0.16085705, -0.06900146, -0.18162037, 0.21679454, -0.16623707, 0.0021661106, -0.10286924, -0.009790333, 0.07702978, 0.0497087) * inp_3_0_1;
    result0 += M4(0.25699976, -0.5213252, 0.1597262, -0.0043705623, -0.3362448, -0.6409549, -0.42464575, -0.2525716, 0.3497329, 0.5041278, 0.2558977, 0.19702376, -0.34557387, -0.10259506, -0.14619167, 0.1858911) * inp_3_1_1;
    result0 += M4(-0.15522769, -0.106900476, -0.26218566, 0.04934072, -0.16962846, -0.04147327, 0.032805998, 0.09300779, 0.11460959, 0.05119074, -0.014018599, -0.050666016, -0.24589531, -0.66621345, -0.030009095, -0.23058861) * inp_3_2_1;
    result0 += M4(-0.032774597, -0.025272366, -0.056786627, -0.06569198, -0.20127954, -0.21460053, 0.2132585, 0.09159793, 0.11961905, 0.07177343, -0.22412929, -0.037641175, -0.013577108, 0.00974756, -0.078544624, 0.009151312) * inp_3_0_2;
    result0 += M4(0.12792607, -0.050376307, 0.082964875, -0.01771303, -0.11848394, -0.14938562, -0.24476565, -0.012079839, 0.15303893, 0.058205456, 0.16511239, -0.020954141, -0.1048239, 0.009438764, 0.097509876, 0.025980443) * inp_3_1_2;
    result0 += M4(-0.027403992, -0.019848086, 0.11473485, -0.015968189, 0.2012112, -0.06371938, 0.142852, 0.06907077, -0.071342334, 0.03157066, 0.045533445, -0.0068226685, 0.0029239706, 0.081410244, -0.22800265, -0.044108316) * inp_3_2_2;
    result1 += M4(0.06428799, 0.1484074, -0.073103674, 0.07869897, 0.0354483, 0.05682581, -0.025480088, 0.1777145, -0.030763278, -0.013608884, 0.017885908, 0.020555992, 0.032598667, -0.05856077, 0.05761358, -0.066594966) * inp_3_0_0;
    result1 += M4(0.025866656, -0.12548943, -0.2172085, 0.006066187, 0.18328944, -0.029522996, -0.28446597, 0.11565068, 0.031481422, 0.088956855, 0.15563455, -0.00301443, 0.15140022, -0.03994692, 0.21138111, 0.11769518) * inp_3_1_0;
    result1 += M4(-0.027856698, -0.029066907, -0.10169802, -0.19100817, 0.09917721, -0.074418984, -0.022259563, 0.15011099, 0.018177252, 0.10028733, -0.009997302, -0.07521878, 0.15465243, 0.16891402, 0.053786863, 0.14490497) * inp_3_2_0;
    result1 += M4(0.008803935, 0.025920045, 0.0024091403, -0.32475784, 0.33255136, -0.004101846, -0.16310163, 0.007793363, -0.23315631, -0.039448034, 0.1833595, -0.06117504, 0.095250584, -0.01338446, 0.08026364, 0.04504753) * inp_3_0_1;
    result1 += M4(-0.19631542, -0.19716546, 0.0631782, -0.64117056, 0.73969346, 0.18893754, 0.18741857, 0.20691374, -0.66008943, -0.13779764, 0.07331578, -0.48536652, 0.46017194, -0.00023268416, -0.032007188, -0.8540525) * inp_3_1_1;
    result1 += M4(0.07978711, -0.05821262, 0.08981543, -0.33467937, -0.02590629, 0.055717733, -0.09727529, -0.07984736, -0.123849556, -0.048050944, 0.022461243, -0.010335977, 0.45526594, -0.28135362, 0.012717722, -0.09771631) * inp_3_2_1;
    result1 += M4(-0.15526444, 0.102026746, 0.06868001, -0.12627351, 0.26333317, 0.008036853, 0.25371397, -0.12906556, -0.1798253, -0.06469181, -0.14831665, 0.2129852, -0.012630122, 0.01715024, -0.0076181004, 0.0787222) * inp_3_0_2;
    result1 += M4(0.063985646, -0.044675626, 0.010757081, -0.07706641, 0.095852226, -0.06908745, -0.17117517, -0.06024725, -0.07375298, 0.15330473, 0.06431364, 0.30662024, 0.20494808, 0.13810585, 0.10313538, -0.06464013) * inp_3_1_2;
    result1 += M4(0.20771179, 0.14161846, -0.026910363, -0.042701434, -0.08218057, 0.032890048, 0.10182597, 0.13850068, 0.08734892, 0.093031555, -0.04411808, 0.08581241, -0.047483116, -0.22910434, -0.11638942, -0.05893647) * inp_3_2_2;
    result2 += M4(0.074742995, 0.026695956, 0.18901478, 0.04292969, 0.07054957, -0.018026773, -0.056858156, 0.08392795, 0.008249825, 0.03405954, -0.049248986, -0.009834235, -0.0015020419, -0.017582214, 0.0040152385, 0.042436384) * inp_3_0_0;
    result2 += M4(-0.011498168, 0.0041114283, -0.16260086, 0.029691268, 0.011327279, 0.061592713, -0.060095374, -0.054449916, 0.13271175, -0.033843394, 0.09618683, 0.10320158, 0.03218471, 0.035174843, -0.16782533, 0.17312299) * inp_3_1_0;
    result2 += M4(-0.035684172, -0.011173775, 0.17139553, -0.025588866, 0.13101053, 0.031164795, -0.075676985, 0.07240608, -0.0010149522, -0.011086753, 0.1411183, -0.050568886, 0.14138007, -0.019387227, -0.0975012, 0.018994924) * inp_3_2_0;
    result2 += M4(-0.014869235, -0.12637727, 0.18759902, -0.070613906, -0.07666683, -0.12054303, 0.11599334, -0.08867385, 0.14349213, 0.061648685, -0.07014125, -0.026333248, 0.06983919, 0.033780012, -0.15472613, -0.10277248) * inp_3_0_1;
    result2 += M4(-0.33913857, -0.07819424, 0.30149937, -0.3474237, 0.41698474, 0.1419372, 0.6490918, 0.025253244, -0.39350936, -0.1178556, -0.38658857, -0.2886483, -0.3655453, 0.089190654, -0.048644774, -0.31594104) * inp_3_1_1;
    result2 += M4(0.0062332256, -0.011385481, -0.03931114, -0.0064606387, 0.11081316, 0.105245695, 0.2167429, -0.2786526, -0.059067775, -0.04555592, -0.2180966, 0.11366822, 0.18524116, 0.037019335, 0.08989713, 0.23085569) * inp_3_2_1;
    result2 += M4(-0.07920199, 0.0020857402, 0.06835843, -0.044073917, -0.03872801, -0.047683317, -0.1481882, 0.193224, 0.08034783, 0.07822119, 0.08805391, -0.11207779, 0.1262462, 0.023860402, 0.017203279, 0.04772194) * inp_3_0_2;
    result2 += M4(0.06082878, 0.03207628, 0.089808844, -0.11968585, 0.15162745, -0.02447447, -0.18953627, 0.110225946, 0.013064637, 0.014206007, 0.012559552, -0.018784702, 0.2610289, 0.070381135, -0.1178496, 0.27741185) * inp_3_1_2;
    result2 += M4(0.086972535, -0.016285308, -0.013642776, 0.18640459, -0.083466895, 0.028839277, 0.03632035, -0.17248675, 0.07482922, -0.018154638, -0.009025769, 0.10944693, -0.006922886, 0.054541644, -0.10472634, -0.019450434) * inp_3_2_2;
    result3 += M4(0.010601441, -0.039999068, -0.07662768, -0.0028272916, 0.026405023, 0.11030994, 0.01739565, 0.105250895, 0.058056872, 0.012253056, 0.02853941, -0.07074468, 0.044114117, -0.040546533, -0.02666498, 0.03506644) * inp_3_0_0;
    result3 += M4(0.31290582, -0.011269274, 0.016402086, -0.0110755805, -0.06042326, -0.09570512, 0.08678218, 0.080301985, -0.069284655, 0.07054806, -0.07101953, -0.0344181, -0.29353967, -0.07575496, -0.031148745, 0.09794672) * inp_3_1_0;
    result3 += M4(-0.093560435, 0.051678784, -0.031518344, 0.0062944884, 0.09634829, 0.047890004, 0.06834282, 0.021406678, -0.11935647, -0.065959446, -0.116215855, -0.045391954, -0.19753738, -0.090666786, 0.0075213136, -0.058705945) * inp_3_2_0;
    result3 += M4(-0.29250604, 0.0003407835, -0.035510983, -0.114940725, -0.17249866, 0.16309139, -0.09343626, -0.12600434, 0.23525803, -0.07677205, -0.035291743, 0.00767376, 0.055745717, -0.03699258, -0.021687226, 0.11507294) * inp_3_0_1;
    result3 += M4(-0.0963264, -0.20390283, 0.111920394, -0.08847897, -0.4844537, 0.76164526, -0.3055895, 0.1862958, 0.29779348, -0.49930966, 0.24652468, -0.10256787, 0.13753526, -0.1660937, 0.13443011, -0.019774677) * inp_3_1_1;
    result3 += M4(0.14959364, -0.0020552808, -0.039555095, 0.112607546, -0.101190835, 0.06791811, -0.22368656, 0.08786087, 0.16404451, 0.052399896, 0.09657969, -0.11025826, 0.19699751, -0.13832244, 0.113843784, 0.095364355) * inp_3_2_1;
    result3 += M4(0.052454576, 0.04313334, 0.04811474, -0.08029025, 0.1616022, 0.24373193, -0.062483106, 0.012532104, -0.08678477, -0.41530567, 0.0818969, 0.044784337, -0.015852727, -0.19281176, 0.043987766, 0.08482087) * inp_3_0_2;
    result3 += M4(-0.11496898, 0.04715107, -0.07353328, 0.06186689, -0.09446362, 0.010243027, 0.015134885, 0.1067979, 0.013292477, -0.06285665, 0.08969037, -0.022941813, 0.08260057, -0.04871453, 0.020703353, -0.12714902) * inp_3_1_2;
    result3 += M4(-0.16828226, -0.18562397, -0.040053695, 0.03749779, -0.006463254, 0.07535438, -0.006108012, 0.14990857, -0.0629113, -0.11080153, 0.0006294317, -0.06531614, -0.001128122, -0.0025371313, -0.04467591, -0.16424249) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.07644417, 0.0764535, 0.08171897, 0.077129886);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10529828, -0.05811938, -0.01898429, -0.01923283, -0.0012433345, -0.0072903777, -0.020238897, -0.023865413, 0.0041789887, 0.023661466, -0.0046999874, 0.009856361, 0.14770097, 0.10178967, 0.07008394, 0.07871527) * inp_0_0_0;
    result0 += M4(-0.17522457, -0.23215716, -0.0053384085, 0.006415567, 0.0004389795, 0.011656147, -0.08049261, -0.00732229, -0.045218028, -0.13900258, 0.077197686, 0.026610704, 0.021885749, 0.13201588, 0.056884173, 0.013749109) * inp_0_1_0;
    result0 += M4(0.0015429767, -0.044918872, -0.0027252366, -0.019350782, -0.05384963, -0.052140076, -0.031907093, -0.06399701, -0.04504324, 0.023678688, -0.019235445, 0.0485739, 0.08750439, 0.0445806, 0.06035644, 0.041608207) * inp_0_2_0;
    result0 += M4(0.19134405, -0.02900725, 0.014663449, -0.00033847368, 0.066096745, -0.08550966, 0.15333393, -0.04796819, 0.0062412713, 0.035435047, 0.05714416, 0.021882722, 0.17275053, 0.11062424, 0.16475768, 0.11211114) * inp_0_0_1;
    result0 += M4(0.07308737, 0.20844293, -0.11060585, -0.12868032, -0.2263868, 0.1440639, -0.12172624, 0.29588002, -0.12947376, -0.015977422, -0.14491312, -0.10986447, 0.19458063, 0.1905609, 0.14763169, 0.22407253) * inp_0_1_1;
    result0 += M4(0.01384632, 0.10186219, 0.07333312, 0.041819107, 0.025164284, -0.113003954, 0.033819497, -0.11944516, 0.00558096, -0.038918007, -0.041266147, 0.062306274, 0.14995435, 0.1806264, 0.14603359, 0.21718386) * inp_0_2_1;
    result0 += M4(-0.012681634, 0.010948489, 0.023911815, -0.013786948, -0.013068492, -0.0006649859, -0.030901376, -0.021071065, 0.045020096, 0.015781472, 0.049172893, 0.02894582, 0.10279159, 0.02669443, 0.18377729, 0.008598905) * inp_0_0_2;
    result0 += M4(-0.0084346635, -0.043671228, 0.11389245, 0.07567943, 0.08962242, 0.034817386, 0.079538, -0.023198402, 0.021931194, 0.034706067, -0.11060698, 0.05073113, 0.04022887, 0.06673206, 0.06628707, 0.17444749) * inp_0_1_2;
    result0 += M4(-0.012255579, -0.007635222, -0.017450837, 0.052089464, 0.057138707, 0.05703135, 0.062108103, 0.019433253, 0.020148292, 0.025244012, 0.0020717205, -0.07318629, 0.05886839, 0.119703025, 0.071688406, 0.10849537) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.09150222, -0.03835122, -0.062165543, -0.061679877, -0.019340027, -0.055537447, -0.0065217144, -0.019805973, -0.0600625, 0.012066741, 0.008046297, -0.0013791153, 0.03138727, 0.05545613, 0.008067642, 0.0030002717) * inp_1_0_0;
    result0 += M4(0.026400773, -0.14514339, -0.14133584, -0.03210176, 0.13052219, 0.11528684, 0.11891669, 0.013301561, 0.06398564, -0.055635683, 0.008733177, 0.01939886, 0.030526236, -0.04553709, 0.033062167, 0.019606806) * inp_1_1_0;
    result0 += M4(-0.06899783, 0.052859712, -0.014153462, -0.025447665, -0.011950126, 0.10927973, -0.010749314, 0.099402755, -0.04291046, 0.05879763, -0.014749025, 0.029119628, 0.0128286835, -0.023927135, 0.0054322905, -0.014929442) * inp_1_2_0;
    result0 += M4(-0.0072485157, -0.10799528, 0.052185617, -0.052755997, -0.14651339, -0.051285695, -0.1774777, -0.14641537, 0.13221511, -0.0040498506, -0.027276445, 0.0099786045, -0.020909587, 0.0056230337, 0.089173, 0.04443497) * inp_1_0_1;
    result0 += M4(0.18219177, 0.062653154, 0.21916528, 0.053683426, 0.08466314, 0.11623176, -0.118572034, -0.020157697, -0.026209617, 0.039664056, 0.0010582473, -0.040140588, 0.09945013, 0.010574554, -0.0075494125, 0.09618507) * inp_1_1_1;
    result0 += M4(0.039248694, 0.11257987, -0.00032685426, 0.07620964, -0.015593095, -0.011245786, -0.038422957, -0.12707122, 0.028215755, -0.06441442, -0.0020395922, 0.032974962, 0.012326374, 0.023374412, 0.0135577265, -0.017562509) * inp_1_2_1;
    result0 += M4(-0.033998895, -0.007538212, -0.058578454, -0.007830474, -0.05960241, -0.03784438, -0.06577584, -3.338536e-05, 0.009995026, -0.0051809032, 0.012528919, -0.0326389, -0.022403544, -0.007471333, -0.059546866, -0.019756066) * inp_1_0_2;
    result0 += M4(0.025368128, 0.062435772, 0.08147882, -0.019001024, 0.003853815, -0.035108887, 0.13741219, 0.0575284, -0.012439665, 0.010819926, 0.011754511, -0.051954508, -0.05696936, -0.03383599, -0.05282287, -0.12232772) * inp_1_1_2;
    result0 += M4(0.026004564, -0.013255051, 0.016586682, 0.041721497, -0.01247005, -0.017587272, 0.009093805, 0.09152425, 0.03847467, -5.3787186e-05, 0.033067513, -0.08069218, -0.013892136, -0.031914186, -0.006308174, -0.0054754093) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.03250337, 0.041916013, 0.020912338, 0.03987632, -0.11619695, -0.0785229, -0.032102402, -0.043805916, 0.032249752, 0.06723813, 0.006730268, 0.003502897, 0.10836306, -0.024613852, 0.004623763, -0.00027196744) * inp_2_0_0;
    result0 += M4(-0.1358842, -0.040007457, 0.024522176, 0.0037899895, -0.13867113, -0.05260169, 0.029055247, 0.022537926, 0.022015799, -0.06526595, 0.037185084, 0.0060469387, -0.10935916, 0.09115709, 0.025232764, -0.03235573) * inp_2_1_0;
    result0 += M4(-0.0005975019, -0.111712135, -0.01414673, -0.03433735, 0.05199131, 0.10110568, 0.030593159, 0.057333168, 0.036123, 0.03005051, 0.019706223, 0.0203951, -0.0050642197, 0.056916315, -0.004325024, 0.06607578) * inp_2_2_0;
    result0 += M4(0.031184759, 0.08083424, 0.015264653, 0.0809175, -0.2189077, -0.016528742, -0.25895217, -0.03877422, -0.029894045, 0.017671889, 0.041776028, 0.09747457, 0.024458315, -0.01662171, 0.06789386, -0.061672833) * inp_2_0_1;
    result0 += M4(-0.08252098, -0.22379638, -0.29589155, -0.2683296, -0.43648347, -0.36962944, -0.24438034, -0.22140028, -0.01843013, -0.19318993, -0.17523627, -0.19127725, -0.037894435, -0.09676495, -0.030341618, 0.04457825) * inp_2_1_1;
    result0 += M4(-0.123336494, -0.04698015, -0.061496083, -0.06463912, 0.39896062, 0.059442353, 0.42045507, 0.08379421, 0.022403182, 0.003327252, 0.050530743, -0.0035294406, 0.022412455, 0.015203623, 0.06467953, 0.080866784) * inp_2_2_1;
    result0 += M4(0.03235925, 0.008638425, 0.0883075, 0.023163665, -0.0616314, -0.014358253, -0.12100969, 0.023754416, -0.0019016746, 0.0010681689, 0.009837192, 0.014108761, -0.013654328, 0.009812066, -0.047641948, -0.0146279065) * inp_2_0_2;
    result0 += M4(0.020796038, -0.036498122, 0.13252164, 0.008480042, 0.08251135, 0.040950786, -0.11215237, -0.10214717, 0.020887151, 0.067022115, 0.033371937, -0.10593237, -0.015694845, -0.044949036, -0.078735664, -0.060782112) * inp_2_1_2;
    result0 += M4(-0.001882331, 0.038486164, -0.011052431, 0.0034476505, 0.1155062, 0.13554527, 0.14054662, 0.107369356, 0.0029833757, -0.002217948, 0.016271427, 0.038934898, 0.006487694, 0.027315306, 0.0021014316, 0.013265848) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03489236, 0.0023977119, -0.04303182, -0.01979962, -0.010152599, 0.028488684, 0.004979718, 0.0060943016, 0.014709055, 0.013207897, 0.016523639, 0.0028399215, -0.10507719, -0.0617849, -0.032436702, -0.048041143) * inp_3_0_0;
    result0 += M4(-0.013180592, -0.05785585, 0.03951811, 0.0145748975, 0.05826279, 0.0056363344, -0.028074188, -0.014649656, -0.042053502, -0.07371489, -0.06832295, -0.04760066, -0.0645857, -0.08826547, 0.021194438, 0.027149575) * inp_3_1_0;
    result0 += M4(0.0020040486, 0.052123897, -0.004065888, 0.033787847, -0.09407647, 0.03071616, -0.03225545, 0.015060861, 0.028962504, 0.054114822, 0.028738903, 0.032732334, -0.06742242, -0.091362044, -0.047106963, -0.033833332) * inp_3_2_0;
    result0 += M4(-0.020274198, -0.055939727, 0.05057027, 0.002103732, -0.046993405, 0.024957294, -0.050672192, 0.06428765, 0.021139622, -0.03877777, 0.02422513, 0.020306367, -0.049034975, 0.0062387683, -0.07838256, 0.025961181) * inp_3_0_1;
    result0 += M4(0.15666127, 0.2514011, -0.19243647, -0.049564425, 0.090897605, -0.2024546, 0.12236862, -0.15893465, -0.483817, -0.38893327, -0.40594536, -0.36166027, 0.3392386, 0.32922012, 0.34751886, 0.25218478) * inp_3_1_1;
    result0 += M4(0.026737988, -0.0026259548, 0.045341793, -0.044784006, -0.04720273, 0.1085903, -0.09311074, 0.05150263, 0.024335999, -0.036065575, -0.0058758757, -0.011971539, -0.118883245, -0.12780732, -0.1023972, -0.14648455) * inp_3_2_1;
    result0 += M4(-0.04861207, -0.016801398, -0.05772315, -0.0132313, 0.0003286831, 0.009198975, 0.0069238394, 0.0056263153, 0.13271306, 0.061560664, 0.16892767, 0.011640594, -0.02330701, 0.010114927, -0.05471274, 0.013445352) * inp_3_0_2;
    result0 += M4(-0.009388379, -0.04753431, 0.094464526, 0.028806, 0.051484033, 0.011241267, 0.038607232, -0.08496904, 0.19287747, 0.196368, -0.023444964, 0.09423621, 0.14161438, 0.05801811, 0.08249781, -0.019174568) * inp_3_1_2;
    result0 += M4(-0.022881297, -0.021876708, -0.024685776, 0.008764952, 0.007522377, 0.017316712, 0.016382053, 0.08242098, 0.108618006, 0.17751996, 0.10512275, 0.1463052, -0.02383699, -0.0029284968, -0.045611296, -0.035204932) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DN (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
