// MIT License

// Copyright (c) 2024 Joao Chrisostomo, Kacper MichajÅ‚ow

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F16 DN (Conv2D)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared F inp[1][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(1, 1);
            inp[0][y][x] = F(LUMA_mul * texelFetch(LUMA_raw, input_base + ivec2(0, 0), 0).x);
        }
    }

    barrier();
    V4 result0 = V4(0.0026916282, -0.010493626, -0.013976763, -0.04752591);
    V4 result1 = V4(-0.02681304, -0.005257314, 0.0011722919, 0.0015774964);
    V4 result2 = V4(0.03269372, -0.001394327, -0.00628964, -0.0037231727);
    V4 result3 = V4(0.0018483001, 0.008835337, 0.011977616, -0.061575476);
    const F inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const F inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const F inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const F inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const F inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const F inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const F inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const F inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const F inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += V4(-0.030245915, -0.12632306, 0.018117694, 0.041977208) * inp_0_0_0;
    result0 += V4(0.03633881, 0.1558672, 0.1007188, 0.123167224) * inp_0_1_0;
    result0 += V4(-0.009442033, 0.111330576, -0.07654473, 0.062441237) * inp_0_2_0;
    result0 += V4(-0.014118553, 0.056639556, -0.014963695, 0.16580673) * inp_0_0_1;
    result0 += V4(-0.0488774, -0.07256989, -0.3481973, 0.26726723) * inp_0_1_1;
    result0 += V4(-0.22135931, -0.13042797, 0.07809148, 0.111752495) * inp_0_2_1;
    result0 += V4(0.027065834, 0.14383465, 0.0027740172, 0.09451079) * inp_0_0_2;
    result0 += V4(0.09846776, -0.10125013, 0.19657826, -0.0029986561) * inp_0_1_2;
    result0 += V4(0.16346744, -0.012615293, 0.045150813, 0.089092545) * inp_0_2_2;
    result1 += V4(0.07630724, -0.055395264, -0.10660381, 0.017253269) * inp_0_0_0;
    result1 += V4(-0.056338675, -0.030475454, 0.0054453877, -0.1894104) * inp_0_1_0;
    result1 += V4(0.03181705, 0.11075187, 0.04820776, 0.12321209) * inp_0_2_0;
    result1 += V4(-0.044293195, 0.077827334, 0.11074238, -0.032433797) * inp_0_0_1;
    result1 += V4(0.10361179, -0.15630218, 0.12917143, 0.15755115) * inp_0_1_1;
    result1 += V4(-0.11628086, 0.2403923, -0.18586509, -0.10136499) * inp_0_2_1;
    result1 += V4(0.046537906, -0.01281228, 0.012528848, 0.023410153) * inp_0_0_2;
    result1 += V4(0.08499797, -0.22540301, -0.09534406, 0.034350272) * inp_0_1_2;
    result1 += V4(-0.07213311, 0.051632017, 0.085283004, -0.033441186) * inp_0_2_2;
    result2 += V4(-0.056975383, 0.11143215, -0.07936573, -0.05217471) * inp_0_0_0;
    result2 += V4(0.07595414, -0.05470911, 0.12298734, 0.00057176105) * inp_0_1_0;
    result2 += V4(0.06423624, 0.0007269639, 0.031717867, 0.001329489) * inp_0_2_0;
    result2 += V4(-0.17319863, 0.2594401, 0.29622218, 0.14570713) * inp_0_0_1;
    result2 += V4(-0.27115986, -0.6892996, -0.29722416, -0.06040213) * inp_0_1_1;
    result2 += V4(0.12619007, 0.108280845, -0.06341973, -0.039979137) * inp_0_2_1;
    result2 += V4(0.04072959, 0.12421435, -0.086873956, -0.012190874) * inp_0_0_2;
    result2 += V4(0.18873149, 0.061471872, 0.054624666, 0.14126918) * inp_0_1_2;
    result2 += V4(-0.14135243, 0.005968747, 0.023562571, -0.11567726) * inp_0_2_2;
    result3 += V4(0.05669661, -0.12279634, 0.21870062, -0.09511349) * inp_0_0_0;
    result3 += V4(-0.15418912, 0.15689757, 0.34480965, 0.16209508) * inp_0_1_0;
    result3 += V4(-0.008858307, -0.008855714, 0.059176672, 0.062359408) * inp_0_2_0;
    result3 += V4(0.034271, -0.033158362, 0.021415666, -0.19225772) * inp_0_0_1;
    result3 += V4(0.015126656, -0.1412199, -0.40413567, 0.0031586015) * inp_0_1_1;
    result3 += V4(0.048603147, 0.13062689, -0.17134534, 0.20000578) * inp_0_2_1;
    result3 += V4(-0.057706233, 0.15233815, -0.05292826, -0.07461908) * inp_0_0_2;
    result3 += V4(0.08759252, -0.07359764, -0.15636072, 0.018108211) * inp_0_1_2;
    result3 += V4(-0.021059139, -0.068048306, -0.021743303, 0.1535762) * inp_0_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-1-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d
//!SAVE conv2d_1
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.01522351, 0.01040348, 0.08933033, 0.017609943);
    V4 result1 = V4(0.0330573, -0.0048944512, -0.007361099, 0.014677205);
    V4 result2 = V4(0.012876026, 0.032151587, 0.0060996492, 0.013778046);
    V4 result3 = V4(0.0135426195, 0.0047529293, 0.0035640697, -0.015401677);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.08812889, 0.37336728, -0.009290322, 0.011198433, 0.052506942, 0.04178183, 0.07747233, -0.024248216, -0.28496104, 0.25674212, -0.05615878, -0.07683316, 0.007270467, -0.05824244, -0.121903636, 0.028877487) * inp_0_0_0;
    result0 += M4(-0.26191434, 0.16134451, 0.021802898, 0.032954577, 0.59372526, 0.27171952, 0.010261149, 0.08803143, -0.60022986, -0.46512434, -0.052654844, -0.10734173, -0.33594817, 0.08955727, 0.036254834, 0.10547116) * inp_0_1_0;
    result0 += M4(0.29936662, 0.032092746, 0.050481975, -0.0077983756, 0.10506, -0.194895, 0.2061653, -0.10937918, -0.27511254, 0.097862646, -0.057033334, 0.04435057, -0.071838744, -0.01597583, -0.087333806, -0.052894395) * inp_0_2_0;
    result0 += M4(-0.1991975, -0.15348583, -0.019982828, -0.13580668, -0.2206408, -0.14735003, 0.19363208, -0.15364178, 0.21059665, 0.10832599, 0.0066496264, 0.012611252, 0.03817671, 0.08311597, -0.01619587, 0.029177336) * inp_0_0_1;
    result0 += M4(-0.034953266, -0.15781738, -0.032901358, -0.09368146, -0.4225749, 0.24534298, 0.07376592, -0.034545537, -0.4428008, 0.59172505, 0.0073190914, -0.36459103, 0.03898746, 0.035349607, 0.10073094, 0.119299114) * inp_0_1_1;
    result0 += M4(-0.34536085, -0.010304413, -0.06831558, -0.06006595, -0.39687428, -0.15613112, -0.055417746, -0.01829395, 0.19283515, 0.13923874, 0.08919567, -0.12861188, -0.044343505, 0.066258, 0.055171166, 0.03934896) * inp_0_2_1;
    result0 += M4(0.0341445, 0.06239458, 0.006886809, 0.120879576, -0.04060088, -0.07455072, -0.0514117, 0.2293765, 0.25789955, -0.20777723, 0.059088144, -0.07869035, -0.04268508, -0.049398534, -0.106561586, -0.015398563) * inp_0_0_2;
    result0 += M4(0.049336854, 0.03930203, -0.057885606, 0.12070962, 0.09172606, 0.142694, -0.06853452, 0.44890383, 0.27294657, -0.11800137, -0.19511852, 0.8003675, 0.0068228045, -0.034981754, -0.056250915, 0.025999859) * inp_0_1_2;
    result0 += M4(-0.13697377, -0.10233413, -0.0037264128, 0.019616311, 0.182881, -0.15109186, -0.124159686, -0.1213167, 0.07441115, -0.087080546, 0.06814321, -0.09244447, 0.04016239, -0.06282535, 0.04254957, -0.070294194) * inp_0_2_2;
    result1 += M4(-0.10740755, -0.020094812, 0.05865554, 0.16601624, -0.073206306, -0.040069785, 0.01356059, 0.04654686, 0.060976192, -0.0443667, -0.0070226477, 0.007832562, 0.078506626, -0.069839075, -0.058247995, -0.11084153) * inp_0_0_0;
    result1 += M4(0.09614451, -0.067914516, 0.0626799, -0.07047899, -0.091920644, 0.09985766, 0.11018352, 0.036359746, -0.09543198, 0.030130474, 0.018051255, 0.0015319654, 0.13393123, -0.05519219, -0.10792983, -0.045563377) * inp_0_1_0;
    result1 += M4(0.12981574, 0.01641294, 0.008126449, -0.07717602, -0.121369466, 0.30433565, 0.037913006, -0.041180152, 0.037789464, 0.093817525, -0.12147022, 0.1034156, -0.107756175, -0.03499941, -0.05520695, 0.13928878) * inp_0_2_0;
    result1 += M4(-0.05506679, 0.24363588, -0.08267619, 0.3505127, -0.06315132, -0.080022566, 0.13624638, 0.105162464, -0.080273844, 0.29314765, 0.021871407, 0.12448212, 0.06519513, -0.0581429, -0.03727346, -0.1021189) * inp_0_0_1;
    result1 += M4(0.1073984, -0.18195386, 0.2371673, -0.04351386, 0.19897623, -0.21277638, -0.060591258, -0.07562327, -0.1841526, 0.1415479, 0.8941584, -0.05982233, 0.16718453, 0.06506817, -0.1063319, -0.081514634) * inp_0_1_1;
    result1 += M4(0.107584484, -0.18218271, -0.031084077, -0.11089321, -0.04566374, -0.19997111, 0.22341262, -0.08386633, 0.36605173, -0.120963074, 0.114332676, 0.055275466, -0.19916861, 0.087057106, -0.026381863, 0.024156654) * inp_0_2_1;
    result1 += M4(-0.007311785, -0.05345872, 0.014938653, -0.18384579, 0.14493349, -0.49597508, -0.1280777, 0.064022176, 0.097767904, 0.03353615, -0.07664107, 0.1669453, -0.011642455, -0.06242274, 0.10950104, -0.0331007) * inp_0_0_2;
    result1 += M4(0.08983261, -0.11924484, -0.14163503, -0.03605172, 0.16689287, 0.016799338, -0.51259863, -0.2941549, -0.045922685, -0.4319139, -0.6224475, -0.1436378, 0.079476565, 0.032182515, 0.078584395, 0.060880627) * inp_0_1_2;
    result1 += M4(0.20525539, -0.13699329, -0.019600067, -0.041574843, 0.02213494, 0.008655551, -0.011921226, -0.054280665, 0.029253356, -0.1164441, -0.12283575, -0.10550465, -0.13532864, -0.11128354, 0.06549376, 0.08939043) * inp_0_2_2;
    result2 += M4(-0.22780752, -0.098884895, -0.46872935, -0.802522, 0.0017791297, -0.0061765, 0.06000112, -0.4064517, -0.19742694, -0.1980444, 0.30973658, -0.30481362, 0.0072998945, -0.06984142, 0.027806748, 0.02880368) * inp_0_0_0;
    result2 += M4(0.05770456, 0.0532735, 0.05058132, -0.08060272, 0.04079865, 0.013014429, 0.091898374, -0.13951942, 0.071369365, 0.07317555, 0.04126734, -0.48199558, 0.05243469, 0.10520672, -0.05019238, -0.098919295) * inp_0_1_0;
    result2 += M4(0.08389113, 0.16395213, -0.15475836, -0.25205588, 0.025973732, 0.058525, 0.11062391, -0.5542028, -0.03628835, 0.18348756, -0.2962031, -0.22318809, -0.054461554, -0.1669338, -0.09765056, -0.026522048) * inp_0_2_0;
    result2 += M4(-0.099754736, -0.12902318, 0.50959563, -0.13417415, -0.056771096, -0.1346596, 0.38343152, -0.16720398, -0.054442286, -0.13525587, -0.45129028, 0.36399332, 0.06715085, 0.08783647, -0.03388829, 0.08467966) * inp_0_0_1;
    result2 += M4(-0.13691829, 0.043324437, 0.10988332, 0.13186347, -0.078857124, 0.1190098, 0.12788041, 0.10625239, -0.45689854, -0.18598635, 0.108294845, 0.13151228, 0.212066, 0.086512715, 0.11072353, 0.06663779) * inp_0_1_1;
    result2 += M4(-0.1955316, 0.05181156, 0.20419905, -0.0851796, -0.055349145, 0.33808517, -0.038840026, 0.12565933, -0.0659693, 0.27873936, -0.05913192, 0.1789256, 0.0891719, -0.043600038, 0.083046265, 0.14436446) * inp_0_2_1;
    result2 += M4(-0.13519421, -0.015447197, -0.15597029, 0.082838446, 0.09643947, -0.089054, -0.3318647, 0.42966542, 0.011162798, 0.03912964, 0.43536377, -0.07030362, -0.06277135, -0.01547797, -0.005009475, -0.08006287) * inp_0_0_2;
    result2 += M4(0.10981584, -0.05366624, 0.03283464, 0.13683891, 0.44293422, 0.07052306, -0.19001682, 0.122376926, 0.4930334, -0.0056977277, 0.010954245, 0.008045756, -0.18848853, 0.10593348, -0.023765558, -0.14148138) * inp_0_1_2;
    result2 += M4(0.04935107, 0.12537444, -0.089508064, -0.02430234, -0.09154656, 0.045279935, -0.08667055, 0.038334932, 0.037235912, -0.070249245, -0.13823922, -0.017289413, -0.0672071, -0.0850289, -0.032547493, -0.053622775) * inp_0_2_2;
    result3 += M4(0.14707914, 0.11366692, 0.2375033, -0.11752563, 0.06891616, -0.015797503, 0.21451326, 0.11266845, 0.011275088, -0.13666953, -0.08784581, -0.011787446, -0.028723205, -0.04407293, -0.008682206, 0.14845423) * inp_0_0_0;
    result3 += M4(-0.14791986, -0.06936174, -0.1066867, -0.042811822, 0.011322691, 0.04031951, -0.07412398, 0.05805475, 0.12243375, -0.10461599, -0.2901214, 0.053920094, -0.009367156, 0.05779088, -0.009775122, -0.04495951) * inp_0_1_0;
    result3 += M4(-0.1848399, 0.058759913, 0.021341113, 0.040024456, -0.035494566, -0.08912977, 0.1380313, 0.06590331, -0.20010726, -0.24498026, 0.0615718, 0.0672856, 0.005167579, 0.056583624, -0.014241466, -0.085223064) * inp_0_2_0;
    result3 += M4(0.18949369, 0.009574538, -0.30100644, 0.14060564, 0.13008767, -0.06244005, -0.07040321, 0.14025432, 0.0964272, -0.2491654, 0.1419375, -0.442548, -0.14122152, -0.11375111, 0.022467207, 0.09754045) * inp_0_0_1;
    result3 += M4(-0.08370461, -0.072005264, -0.036946137, -0.027686018, -0.29919693, 0.04834214, -0.09525816, 0.115176365, 0.44944704, 0.0071345037, 0.3608915, 0.23449925, -0.028144617, 0.09737571, -0.054365456, 0.02032413) * inp_0_1_1;
    result3 += M4(-0.030021403, 0.025306098, -0.08193444, 0.052433193, -0.3208553, -0.16471581, -0.30784777, 0.012739213, -0.3616939, -0.39043367, 0.034324866, 0.021110296, 0.12705174, -0.11018775, -0.09752836, -0.021410588) * inp_0_2_1;
    result3 += M4(0.034145784, 0.025574572, -0.0810354, 0.025087683, 0.05558435, 0.4309238, 0.35001102, 0.0575335, -0.13846238, 0.021441102, 0.055142716, -0.012454152, -0.073068276, -0.047142476, -0.038096365, 0.04287148) * inp_0_0_2;
    result3 += M4(0.0007081952, -0.24810068, 0.10681221, -0.07733989, 0.032592714, 0.15137582, -0.4528035, -0.12820923, -0.01090832, 0.76624936, -0.22200266, 0.10465244, 0.012130291, 0.11387203, 0.000859325, -0.0073138587) * inp_0_1_2;
    result3 += M4(-0.0924363, 0.024354767, -0.3377236, 0.021691782, 0.12670238, -0.09127115, -0.088870205, -0.22497265, -0.07113556, 0.22588365, -0.23287666, 0.0052324175, 0.03683688, -0.016324313, -0.025406664, -0.008662281) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.764696, -0.0009163504, -0.0509628, 0.06159159, -0.21681425, 0.13358071, 0.20684431, -0.020030718, -0.76075244, 0.3217058, -0.030193554, -0.07451321, -0.37587723, 0.835423, 0.005816026, 0.06161966) * inp_1_0_0;
    result0 += M4(-0.35999054, 0.07916181, 0.07567418, -0.0018412366, 0.624503, -0.3738918, -0.017891219, -0.20967904, 0.8086066, -0.05589084, 0.010225728, -0.0067862165, -0.27834085, -0.19864714, -0.12898815, 0.035156157) * inp_1_1_0;
    result0 += M4(0.22549424, 0.2216869, 0.02595001, 0.01787212, 0.18518813, -0.043333333, 0.0297208, 0.043624014, -0.3460654, -0.44520524, 0.045966752, 0.14680766, 0.08643402, -0.32468525, -0.10649475, 0.06496739) * inp_1_2_0;
    result0 += M4(-0.32854652, -0.07596913, 0.06013165, -0.0575659, -0.09421899, 0.05402874, -0.14020523, 0.029423563, -0.058971494, -0.21620367, -0.03940768, 0.16190404, -0.26623365, 0.55329704, 0.14543433, 0.21250515) * inp_1_0_1;
    result0 += M4(0.17030658, -0.3901646, 0.08001346, 0.097793326, -0.101461984, 0.26033568, 0.02699098, 0.06331948, 0.05145499, 0.33858344, 0.14415632, 0.0038291467, 0.82560396, -0.7469031, -0.18382135, 0.25891653) * inp_1_1_1;
    result0 += M4(-0.16242422, 0.06688912, -0.11001387, -0.13945508, -0.222166, -0.031325158, -0.12485531, 0.100275576, -0.17453538, 0.20614406, -0.08273953, -0.15231316, 0.3928969, 0.43316835, -0.077896945, 0.12541774) * inp_1_2_1;
    result0 += M4(0.07076516, 0.14306523, -0.019189471, 0.14383492, 0.1000236, -0.11610088, -0.06530967, 0.05683402, 0.26816326, 0.1551721, -0.21113828, -0.17295158, 0.0683958, 0.15066779, -0.23198801, 0.16090862) * inp_1_0_2;
    result0 += M4(0.06855401, -0.06293201, 0.113971286, -0.14707784, 0.065928824, 0.007679716, -0.013711474, 0.15762451, -0.0147456275, 0.044259902, 0.033915, 0.14155212, -0.16963765, -0.08554253, 0.22798109, -0.81150943) * inp_1_1_2;
    result0 += M4(-0.11826148, 0.1754187, -0.18198194, 0.0021947117, 0.10517773, -0.02393263, -0.05625555, -0.1292012, 0.24352692, -0.42552832, 0.107964315, -0.06444446, -0.0035779492, -0.44107425, 0.013122113, -0.100001) * inp_1_2_2;
    result1 += M4(-0.29438454, -0.13348314, 0.01693206, -0.01704385, 0.25131705, 0.39115033, 0.02842411, 0.16559583, 0.05344146, 0.1225147, 0.19910108, -0.11470877, 0.011626996, -0.113987654, -0.3573405, -0.18682684) * inp_1_0_0;
    result1 += M4(0.10711509, 0.04169351, -0.05426536, -0.028778667, -0.21915512, 0.10194964, 0.14202204, -0.08465418, 0.100312606, -0.10941008, 0.106884085, 0.2324278, 0.11325073, -0.2079836, -0.025496949, 0.02549029) * inp_1_1_0;
    result1 += M4(0.056405384, 0.12054996, 0.10237699, -0.068184994, -0.03953107, -0.06899289, 0.1092076, -0.01794216, -0.16314626, 0.25362244, -0.17001513, 0.07859398, 0.10110148, -0.1700747, -0.06538739, 0.0049874303) * inp_1_2_0;
    result1 += M4(-0.024800062, -0.57190335, 0.056090098, -0.39392278, 0.13311791, 0.42095944, 0.0048020645, 0.47058427, -0.05256723, -0.13440987, -0.1058459, 0.054200605, -0.23520823, -0.48356405, -0.096326515, -0.5329098) * inp_1_0_1;
    result1 += M4(0.3571261, 0.059222326, -0.14454934, 0.17345388, -0.27691606, 0.0366311, -0.13355984, -0.28743708, 0.12920739, -0.2094205, -0.40640035, -0.23954783, 0.3500702, 0.07734358, -0.20667093, 0.15351024) * inp_1_1_1;
    result1 += M4(0.2485604, 0.06498823, 0.14414129, -0.0064361175, -0.122288845, 0.087434, 0.005137411, -0.13157627, -0.18418735, -0.22921377, 0.1343638, 0.1266007, 0.16521323, 0.009074638, -0.17973231, -0.06938702) * inp_1_2_1;
    result1 += M4(-0.13977084, -0.47416577, -0.03664429, -0.22461122, 0.29770043, 0.44592112, -0.15488198, 0.90570474, -0.23422891, -0.16066167, 0.043965735, -0.10505742, 0.083405636, 0.06839217, -0.035669606, 0.43580344) * inp_1_0_2;
    result1 += M4(0.12915349, -0.007237564, 0.18503323, 0.1947707, -0.1461544, -0.019328704, -0.35741854, -0.16850641, 0.24863802, 0.30439785, 0.047981177, -0.26998165, -0.039200764, 0.67262036, 0.89635015, 0.14459088) * inp_1_1_2;
    result1 += M4(0.14772484, -0.06959658, -0.18748985, -0.11331162, -0.22131431, 0.11687109, -0.01558439, 0.0026573609, -0.010670641, 0.0891481, 0.22215633, 0.014458365, -0.25083822, -0.043892585, 0.16421455, 0.11026599) * inp_1_2_2;
    result2 += M4(-0.048988722, 0.06359734, 0.5866642, -0.5083123, 0.19585276, 0.1375092, -0.18677966, 0.7764035, -0.1894801, -0.13524996, -0.88145643, -0.3284349, -0.08196536, -0.015009675, 0.5569587, -0.48274362) * inp_1_0_0;
    result2 += M4(-0.019014252, 0.12674583, 0.1227418, -0.09917982, -0.11293683, -0.26211023, 0.017261604, -0.094076835, -0.16268782, 0.17238937, 0.164984, 0.115414925, -0.15537001, 0.005192529, -0.054531407, -0.23154978) * inp_1_1_0;
    result2 += M4(0.0037768101, 0.038847264, 0.31306964, -0.036853917, 0.001968417, 0.01099305, 0.11161474, 0.029994149, 0.22613683, -0.3074896, -0.110634744, 0.07985939, -0.12860629, 0.09602031, -0.12748893, 0.40577158) * inp_1_2_0;
    result2 += M4(-0.35417533, 0.021284677, -0.23465197, -0.3718916, 0.24268965, 0.045162193, 0.001023525, 0.49790838, -0.033198345, -0.11786874, 1.2071989, -0.15231377, -0.4991044, -0.0510483, 0.7621981, 0.32413876) * inp_1_0_1;
    result2 += M4(-0.05392974, 0.23093128, -0.3851276, -0.18729681, -0.036707018, -0.27217934, 0.0014229101, 0.06302211, 0.52671593, 0.13998437, 0.23900299, -0.0012923065, 0.231672, 0.14439656, -0.29734704, -0.3778271) * inp_1_1_1;
    result2 += M4(-0.04813605, -0.07592398, -0.19557029, -0.0132611925, 0.11552678, 0.14385946, 0.079549454, -0.055665128, 0.07448312, 0.12751256, 0.0745217, -0.088725165, -0.14577553, -0.02088887, -0.08462409, 0.27206293) * inp_1_2_1;
    result2 += M4(-0.06076788, -0.15241848, 0.09717371, -0.25646195, 0.28313088, -0.0807756, -0.051702786, 0.5177217, -0.122821264, -0.08428618, -1.0011698, 0.26049906, 0.7692765, -0.48913717, -0.7964744, -0.35200593) * inp_1_0_2;
    result2 += M4(0.18469149, -0.0059320736, -0.036058113, 0.15680139, 0.19289848, -0.16980264, -0.16700645, 0.17050104, -0.11534239, 0.027267147, 0.11259722, 0.099638075, -0.42392328, 0.2341852, 0.027541852, 0.10632412) * inp_1_1_2;
    result2 += M4(0.030633997, -0.023148369, -0.07093536, 0.10932015, -0.059880454, -0.062166356, -0.010540282, -0.02047687, -0.18045998, 0.10443789, 0.1949813, -0.015937556, -0.0790168, 0.029698689, -0.055540454, 0.14063174) * inp_1_2_2;
    result3 += M4(-0.005264686, 0.19245002, 0.06736414, 0.21080773, 0.024520919, -0.15005422, -0.11376583, -0.2583418, -0.033653077, 0.23194563, 0.357776, -0.029944004, -0.059276458, -0.014546113, -0.7576528, 0.23170294) * inp_1_0_0;
    result3 += M4(0.09078089, 0.11626669, -0.13412537, 0.04043106, 0.11128033, -0.089904584, -0.035909925, 0.1276355, 0.16376834, 0.04215496, 0.36737418, -0.10606502, 0.025655888, 0.12850614, -0.0062865545, -0.06715879) * inp_1_1_0;
    result3 += M4(-0.10888432, -0.0150239, -0.11808551, 0.07484714, -0.14426762, -0.033165798, 0.0435519, 0.026279332, 0.22297719, -0.08065903, -0.089710824, 0.0063046203, -0.04290065, -0.28577727, 0.5085406, 0.02541914) * inp_1_2_0;
    result3 += M4(0.0044001644, 0.42026365, 0.02583511, 0.30442774, 0.070697084, -0.29690772, 0.15607068, -0.7099172, 0.16473559, 0.07634631, -0.5346014, 0.5570981, -0.12381444, 0.06984019, -0.58441466, 0.59354544) * inp_1_0_1;
    result3 += M4(-0.39500847, -0.007896212, -0.29333243, -0.06657853, 0.5582861, 0.075488314, 0.11666612, 0.27532542, -0.56717265, 0.05740687, -0.1331087, -0.15118557, -0.7590999, -0.038639095, -0.37543917, -0.5219939) * inp_1_1_1;
    result3 += M4(0.11045023, 0.04688843, 0.105490685, 0.04127031, -0.16551954, -0.079482034, -0.0346238, 0.067831844, -0.004720539, -0.022538736, -0.0538218, 0.01744001, 0.3936516, -0.12971653, 0.3639571, -0.14180207) * inp_1_2_1;
    result3 += M4(0.023798883, 0.25950885, -0.002988912, -0.055467606, -0.09743465, -0.27512845, 0.025176533, -0.060325976, -0.07915317, 0.07121331, 0.22890924, -0.15917353, 0.06077974, 0.25039595, 0.24249351, -0.06671049) * inp_1_0_2;
    result3 += M4(-0.047251724, -0.08892604, -0.07748835, -0.081145465, 0.16321073, 0.054007612, -0.1719862, 0.06489986, 0.021278655, -0.049456254, 0.048243742, -0.16598725, 0.2315083, -0.12360208, 0.45839208, 0.10529215) * inp_1_1_2;
    result3 += M4(0.06318619, 0.06661025, 0.25076425, 0.0982046, -0.016442543, -0.048625104, -0.10388759, 0.007652757, 0.113738194, -0.16398834, -0.1399571, -0.035397697, 0.030102855, 0.38828135, 0.3475633, -0.05807468) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.04381449, -0.062257797, -0.072138175, 0.027265275, -0.14252394, 0.31757164, 0.019340917, -0.06304928, 0.3138823, 0.3477007, -0.000614808, -0.05693768, 0.8026308, 0.109235026, -0.0117075965, -0.009361034) * inp_2_0_0;
    result0 += M4(-0.64396536, -0.149253, -0.08288275, 0.04179865, -0.027676139, -0.43125597, -0.036192954, -0.04858309, -0.004300863, -0.35529307, 0.08980339, 0.012200912, -1.0492053, -0.17608488, 0.06571367, 0.053422805) * inp_2_1_0;
    result0 += M4(-0.24321756, 0.08688239, 0.114777535, 0.011560876, -0.18050997, 0.28018326, 0.023734521, -0.0147432145, -0.6420937, -0.15298353, -0.17408094, 0.061559442, 0.39436027, 0.060168065, 0.06802895, 0.0076421774) * inp_2_2_0;
    result0 += M4(0.060530353, 0.16428396, -0.04407732, -0.07013554, 0.17711966, -0.029023025, -0.09645508, -0.036686797, 0.08133445, -0.42114908, 0.14241247, -0.14707312, -0.18809158, 0.020360878, 0.18640211, -0.062531136) * inp_2_0_1;
    result0 += M4(-0.1622823, 0.40333062, 0.07056449, -0.32821637, -0.050045002, 0.1314246, 0.21995904, -0.56462944, -0.12884872, 0.67943734, 0.11710971, -0.37540346, 0.22597629, 0.24481584, -0.20623226, -0.17473108) * inp_2_1_1;
    result0 += M4(-0.04101074, 0.14176817, 0.08761351, -0.027718337, 0.16514544, -0.0879637, -0.06625412, -0.08632105, -0.013329948, -0.1660871, -0.07447577, 0.16015787, -0.06009491, 0.12401857, -0.05342926, -0.025739795) * inp_2_2_1;
    result0 += M4(0.17935658, 0.002240637, -0.24113032, 0.12162568, -0.01298519, -0.032744143, 0.0039547607, 0.039166886, -0.016624317, 0.05394362, 0.013613924, 0.057942986, -0.09034012, 0.071143545, -0.054190457, 0.16636074) * inp_2_0_2;
    result0 += M4(-0.36197814, 0.071705796, -0.2149543, 0.6726284, -0.21172667, 0.1866885, 0.114167035, 0.35924166, 0.052327022, 0.08080033, -0.1991864, 0.4713726, 0.08840064, -0.20662142, 0.108665906, -0.040112216) * inp_2_1_2;
    result0 += M4(0.09652521, -0.13776086, -0.083842225, -0.033245727, -0.08287911, 0.09553066, 0.09340544, 0.16278161, 0.19752689, -0.04322812, -0.10440659, -0.066941835, -0.027998464, -0.16057613, -0.048193395, 0.013963336) * inp_2_2_2;
    result1 += M4(-0.04217101, -0.14747986, -0.21098734, -0.111156255, 0.22801541, 0.3276486, 0.07715567, 0.10244447, -0.118882954, 0.061083347, 0.05858105, 0.086454436, -0.14439115, -0.062389065, -0.177325, 0.12037603) * inp_2_0_0;
    result1 += M4(-0.10366304, 0.20264599, 0.10587192, 0.060624387, 0.07989507, 0.0424457, 0.21368967, -0.05570318, 0.09465406, -0.023188265, -0.0986834, -0.058050808, 0.11253662, 0.16713531, -0.08426447, -0.047543135) * inp_2_1_0;
    result1 += M4(0.04125496, -0.021165738, -0.094561346, 0.034588363, -0.077322245, 0.16549194, -0.057477195, -0.03834223, -0.18791188, -0.24198718, 0.10699552, 0.03608702, -0.10829034, -0.13546231, 0.11514036, -0.07516041) * inp_2_2_0;
    result1 += M4(0.07725699, 0.15426369, 0.015405384, -0.17803973, 0.18496625, 0.27092683, -0.016672958, -0.1016272, -0.117804535, 0.13660932, 0.032568786, 0.3857658, 0.036278613, 0.06724245, 0.10573596, -0.3700788) * inp_2_0_1;
    result1 += M4(-0.11799702, 0.42568588, 0.79178643, -0.027166288, -0.117038116, -0.11995596, 0.83922744, -0.07549648, 0.1306859, 0.11115122, 0.30277216, -0.32765073, 0.1414154, -0.021887682, 0.37711796, 0.32618332) * inp_2_1_1;
    result1 += M4(0.34287876, -0.053281132, 0.025031397, 0.10574109, -0.35417268, -0.028869962, 0.18225075, -0.09480116, -0.22859214, 0.25313124, 0.2249294, 0.2180353, -0.12666328, -0.09814559, -0.11173935, 0.044948105) * inp_2_2_1;
    result1 += M4(0.2058777, -0.11957998, -0.14613003, 0.53424037, 0.1493711, 0.45168465, -0.18085298, 0.63843924, -0.16118641, -0.18568935, -0.10754185, -0.048821, 0.07336469, -0.37312037, -0.054561693, -0.14718175) * inp_2_0_2;
    result1 += M4(-0.17279641, -0.24786961, -0.39705637, 0.026818179, 0.09520996, -0.1747898, -0.52543527, -0.167672, 0.5048772, -0.029378526, -0.50983876, -0.56186944, 0.079226404, 0.32926798, -0.1113845, -0.26329553) * inp_2_1_2;
    result1 += M4(0.2759236, -0.22831038, 0.008025032, 0.11396433, -0.29954603, -0.10848584, -0.13525614, 0.01132339, -0.23771363, -0.31204715, -0.118165575, 0.0075010937, -0.12542789, 0.104481146, 0.0415959, 0.1382986) * inp_2_2_2;
    result2 += M4(-0.11920308, -0.025401099, 0.36896384, -0.13112475, -0.007930607, 0.11353582, 0.11495647, -0.21920086, -0.030491175, -0.018781956, 0.41262862, 0.066287905, -0.006933988, 0.010862098, 0.8455016, -0.5799106) * inp_2_0_0;
    result2 += M4(0.1558999, -0.09925185, 0.29120025, -0.84429425, 0.03201618, -0.057792004, 0.0058341133, -0.28618032, 0.11432485, -0.2502444, -0.44545534, 0.40330666, 0.12361365, 0.086095706, -0.403492, 0.19410738) * inp_2_1_0;
    result2 += M4(0.02092569, 0.0005446229, -0.22635007, -0.14097495, -0.09981943, -0.011211762, -0.07221891, 0.018346973, -0.06910095, 0.11215005, -0.35146183, -0.64948136, -0.025010686, -0.026647136, -0.104699604, -0.14881036) * inp_2_2_0;
    result2 += M4(0.0050591924, -0.099069126, -0.21828414, 0.541244, -0.12358662, 0.021494469, -0.20012836, 0.519786, -0.16298115, 0.0054340935, 0.44559786, -0.013058905, -0.07416073, 0.004472341, -0.13815597, -0.24295732) * inp_2_0_1;
    result2 += M4(-0.34078187, -0.22410037, 0.06148422, 0.007201663, -0.45615533, -0.56756836, -0.16910091, -0.08894707, -0.32410192, -0.676591, 0.14550066, -0.08946435, -0.11385014, -0.022579195, 0.29080772, -0.172788) * inp_2_1_1;
    result2 += M4(-0.18756917, -0.08193456, -0.0020855868, -0.07085287, 0.01641895, 0.6149975, 0.21435997, 0.0658361, 0.18958357, 1.0515547, 0.37383488, -0.08412871, 0.13371491, 0.059848353, -0.08783404, 0.11418451) * inp_2_2_1;
    result2 += M4(0.16585991, -0.13145523, 0.2565488, 0.053609543, 0.24605173, 0.029316591, 0.10393349, 0.29449576, 0.021009315, -0.17824948, -0.07235426, 0.32018936, 0.1343809, -0.0357569, -0.37864712, 0.52287734) * inp_2_0_2;
    result2 += M4(0.1832622, -0.009590398, -0.14323077, -0.008632921, 0.29129896, -0.18530507, -0.094908476, 0.11563341, 0.48725846, 0.11572514, -0.53363127, 0.11811378, -0.0027220985, -0.1292109, -0.11924886, 0.17030017) * inp_2_1_2;
    result2 += M4(-0.050452214, -0.066022515, -0.17025888, -0.193704, 0.08082489, -0.08515765, -0.092279375, 0.112999275, -0.21790546, -0.070130326, 0.0014416061, -0.03332232, -0.19370101, 0.12829748, -0.025429917, 0.11219176) * inp_2_2_2;
    result3 += M4(0.02771233, -0.15400614, -0.6605357, -0.08519921, 0.019053014, -0.13771342, -0.30550024, -0.28070962, 0.13428724, 0.0170551, 0.14613211, -0.057140704, 0.1234394, -0.045501128, -0.06545746, -0.030397024) * inp_2_0_0;
    result3 += M4(0.1665399, -0.074886695, -0.16237609, 0.018030206, 0.22233298, -0.04105946, -0.17315076, 0.20270765, 0.12589411, -0.094164886, 0.373554, -0.1712777, 0.058483846, 0.012709996, -0.13984701, -0.06042329) * inp_2_1_0;
    result3 += M4(-0.015802428, 0.110464536, 0.21792853, 0.02916842, -0.17446813, -0.06616804, -0.055496383, 0.09492247, -0.23727018, 0.092013754, -0.36236247, -0.08414634, -0.16898601, -0.09681055, -0.13504675, 0.071384355) * inp_2_2_0;
    result3 += M4(0.02671439, -0.13188101, -0.067963436, -0.8232764, 0.09141793, -0.11409124, -0.11035122, -0.4549725, -0.053983036, -0.0663555, 0.26060173, -0.30783117, -0.122688636, 0.3447833, -0.10799207, 0.19001758) * inp_2_0_1;
    result3 += M4(0.43904817, 0.03118577, 0.17618951, 0.11245145, 0.4471083, -0.36716124, 0.38476762, 0.7187352, 0.46396235, 0.14982153, 0.52802783, 1.044711, -0.16966473, 0.016449401, 0.00030701823, 0.1322017) * inp_2_1_1;
    result3 += M4(-0.06688691, -0.11634732, -0.09204282, 0.100894935, -0.784577, 0.03680716, -0.22540031, -0.060632005, -0.91909635, 0.24595477, 0.048412528, -0.039725088, -0.3034051, 0.25453436, 0.099224776, -0.09465382) * inp_2_2_1;
    result3 += M4(-0.0054005594, -0.14956087, 0.099435724, -0.21881975, 0.04224568, -0.2857155, -0.005925121, -0.18619527, 0.051529966, 0.052546043, -0.0136268865, -0.016100358, 0.14398263, 0.0067130616, 0.29506472, -0.11113723) * inp_2_0_2;
    result3 += M4(0.13408948, 0.31962928, -0.027280224, 0.13289629, 0.1813824, 0.31278896, -0.20577273, 0.23493423, 0.08325475, 0.43520406, -0.5069626, -0.30740035, 0.24693556, 0.13779236, -0.16002363, -0.086733885) * inp_2_1_2;
    result3 += M4(0.05347803, 0.1303037, -0.07801372, -0.11732523, -0.19321384, -0.13576618, -0.19402467, 0.062676035, 0.34312925, -0.20875646, -0.4003767, 0.017729435, 0.06204095, -0.32520258, 0.28244564, 0.16048986) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.3626383, 0.104663774, 0.0795049, -0.022576302, 0.59778833, -0.54975563, 0.13652168, 0.037106488, 0.08088719, -0.0052658375, 0.037337944, 0.0033992936, 0.015581265, 0.1629334, -0.009730482, -0.012286446) * inp_3_0_0;
    result0 += M4(-0.29527062, -0.24545482, -0.065411605, 0.01849551, -0.32506883, 0.47811416, 0.011305223, 0.07476647, 0.20765166, -0.11225003, -0.03640437, -0.034362648, 0.07072979, -0.10853301, 0.02342373, -0.007193021) * inp_3_1_0;
    result0 += M4(0.28899178, 0.074258864, -0.05305266, -0.015164706, 0.34770566, -0.13114953, 0.22000913, -0.20352785, -0.08313009, 0.059167027, -0.0168558, 0.02553937, 0.2739865, -0.052959945, 0.059441205, -0.0047959047) * inp_3_2_0;
    result0 += M4(-0.008372095, 0.190244, 0.039432954, 0.010323292, 0.1676214, -0.20259379, -0.085130215, -0.07276181, -0.24441057, -0.039223365, 0.0027494126, -0.0353608, 0.008790284, -0.038331237, -0.04475576, -0.056358583) * inp_3_0_1;
    result0 += M4(0.18131624, -0.031916037, 0.014654273, -0.0032676435, -0.4355172, 0.42498472, 0.08408506, 0.058375567, -0.42672846, 0.33838123, 0.068515666, 0.0038559404, -0.22155213, 0.05421365, 0.059564196, 0.07384906) * inp_3_1_1;
    result0 += M4(0.106005974, 0.12428851, -0.12552303, 0.054776493, -0.36981046, -0.20874298, -0.07482989, -0.11494647, 0.02755077, 0.05357384, -0.024479369, 0.13096394, -0.16643083, 0.102989405, 0.07405111, -0.021378977) * inp_3_2_1;
    result0 += M4(-0.115852244, 0.015833477, -0.024410695, 0.042649668, -0.10882751, 0.11923828, 0.10363064, -0.041090444, -0.094587885, -0.17316991, -0.08962975, 0.2703027, -0.07469872, 0.09321072, 0.00861022, 0.11432426) * inp_3_0_2;
    result0 += M4(0.011831653, -0.023502173, 0.06588325, -0.5519566, 0.077709004, 0.098262735, -0.027476761, 0.3486728, 0.29452887, 0.006733941, -0.12745565, 1.3484492, -0.019324271, 0.06549049, -0.051237047, 0.3650435) * inp_3_1_2;
    result0 += M4(-0.046704788, -0.043346643, -0.04961315, -0.10144078, 0.047768284, 0.0943697, -0.034554522, -0.058779046, -0.21618529, 0.012109455, -0.029340388, 0.22843945, -0.08750374, 0.017346228, -0.14877944, 0.18851063) * inp_3_2_2;
    result1 += M4(0.06291855, -0.035188768, 0.02507541, 0.033728275, -0.04508488, -0.06897688, 0.062175218, 0.07063541, -0.09524763, 0.14912029, 0.078458995, 0.08219742, 0.039091248, 0.050674517, 0.048006766, -0.0011474164) * inp_3_0_0;
    result1 += M4(-0.1195521, -0.05320792, -0.11744081, 0.013545466, 0.06602298, 0.09603476, 0.07323779, 0.098797, 0.056113075, -0.1884093, -0.08014669, -0.03491413, -0.2627141, -0.027986845, -0.0060691647, 0.04264986) * inp_3_1_0;
    result1 += M4(-0.16921155, -0.105173916, 0.038848933, -0.010269739, -0.2065839, 0.14082614, 0.12964623, -0.13222188, 0.07874671, -0.07198462, 0.00039984306, -0.03373804, 0.19963561, -0.03983655, -0.055395413, -0.07172096) * inp_3_2_0;
    result1 += M4(-0.0009316614, 0.060903456, -0.053362112, -0.0171473, 0.28595123, -0.04778768, 0.1849873, -0.27423114, -0.26828688, 0.1309396, -0.011403783, 0.268579, 0.18065713, 0.41162458, 0.0040548495, 0.43684238) * inp_3_0_1;
    result1 += M4(0.0015572978, 0.025235169, 0.041721564, 0.09794931, -0.09566163, -0.04758996, 0.018223278, 0.12713483, 0.018161438, -0.022312174, -0.11244185, -0.18293573, -0.33968177, 0.018563734, -0.0075676674, 0.05180782) * inp_3_1_1;
    result1 += M4(-0.037833776, -0.0074886433, 0.0043649795, -0.042758796, -0.11634394, -0.29230607, 0.10934569, -0.060052987, 0.056310542, -0.029004779, 0.027023723, -0.08735358, 0.44815114, -0.011456373, 0.055603687, 0.007588223) * inp_3_2_1;
    result1 += M4(0.22943252, 0.31102934, 0.009020622, -0.019976847, 0.024121273, 0.29606342, -0.16531336, 0.430793, 0.027828157, -0.82784516, -0.21440245, 0.25005004, 0.14278698, 0.11485379, -0.104026094, 0.3951045) * inp_3_0_2;
    result1 += M4(-0.07057615, 0.23978405, 0.44165507, 0.07451786, -0.18967994, -0.08743688, -0.41442406, -0.28106126, 0.55585545, -0.5888522, -0.9628125, -0.19954397, -0.29753467, -0.15771322, -0.1252007, -0.030875864) * inp_3_1_2;
    result1 += M4(-0.31896514, 0.053566474, 0.079374805, 0.013057688, 0.046652626, 0.08205315, -0.055331267, 0.020055477, 0.09226851, -0.2773003, -0.20663017, -0.06122928, 0.23289107, -0.181022, -0.0840906, -0.03541288) * inp_3_2_2;
    result2 += M4(0.068336435, 0.063306004, 0.34835014, 0.18436185, 0.12653479, 0.17394015, 0.5342213, 0.20451269, 0.031010324, 0.010241661, -0.19144942, 0.3033478, -0.020496527, 0.032265525, 0.004042808, 0.38088349) * inp_3_0_0;
    result2 += M4(0.08568473, -0.13513431, -0.055549767, -0.25076723, -0.11431894, -0.0021654726, 0.23321213, -0.35152403, -0.08440009, -0.06280608, 0.056558196, 0.11049984, -0.0030234351, -0.17578457, -0.012098641, 0.009138095) * inp_3_1_0;
    result2 += M4(0.023503052, 0.315976, 0.14334035, 0.18862998, 0.029579965, -0.11608463, 0.21159868, -0.37984335, 0.01666414, 0.13915227, 0.019232726, -0.035497006, 0.11997473, 0.09423965, 0.01093178, -0.14552987) * inp_3_2_0;
    result2 += M4(0.00394477, 0.01447368, -0.29020768, 0.024403572, 0.104992725, 0.2331776, -0.7741139, 0.09068179, 0.06514146, -0.12750098, 0.051713813, -0.058316883, 0.013029522, 0.10180678, -0.010562848, -0.036484096) * inp_3_0_1;
    result2 += M4(-0.11968342, -0.19144984, -0.26864946, -0.42133746, 0.1610638, -0.3301039, 0.12186071, 0.1524015, -0.12689176, 0.07439318, -0.021084182, 0.024218386, 0.053602543, -0.34201097, 0.013667467, 0.08696542) * inp_3_1_1;
    result2 += M4(-0.068847224, 0.012979636, 0.023578255, -0.07218908, -0.07891341, 0.0031822473, -0.31195503, 0.2294479, 0.11502064, 0.21412624, 0.13602649, -0.22549653, -0.13449748, -0.13895854, -0.11367532, 0.03863602) * inp_3_2_1;
    result2 += M4(0.049540613, 0.002164186, -0.13331501, 0.26138297, -0.073589824, 0.0670585, 0.38995862, 0.49411458, 0.10896798, -0.078945525, 0.18142554, -0.11198544, 0.09941123, -0.016956897, 0.13636357, 0.06970115) * inp_3_0_2;
    result2 += M4(-0.36852312, -0.13117969, -0.0322901, 0.17187051, 0.2561393, -0.0635938, -0.58080256, -0.14939508, 0.6197961, 0.16595261, 0.018579464, 0.06087123, 0.16058289, -0.14525235, 0.15305589, -0.007295811) * inp_3_1_2;
    result2 += M4(-0.35160592, -0.05580218, 0.10911232, 0.119191356, -0.06886222, 0.03742888, 0.24933717, -0.10208604, 0.20622523, -0.105086826, -0.1563702, -0.023108749, 0.121829435, 0.17767033, -0.031064384, -0.055755652) * inp_3_2_2;
    result3 += M4(-0.0012373568, -0.04901639, -0.21700008, 0.034262016, -0.093411505, -0.16922121, 0.17575496, 0.1423983, 0.016402738, -0.020079, 0.0774038, -0.09940522, -0.018426724, -0.05439721, -0.055018485, -0.11028089) * inp_3_0_0;
    result3 += M4(0.051108424, -0.05957864, 0.05237504, 0.031406034, -0.044714678, -0.062319044, -0.35222265, 0.16062042, -0.035266552, 0.07148344, 0.15162332, 0.07676165, 0.18032734, 0.009384014, -0.106145374, 0.011650012) * inp_3_1_0;
    result3 += M4(-0.15172647, 0.039350335, -0.083265305, -0.010710233, -0.12462597, 0.11699002, -0.1132231, 0.180476, -0.04669381, -0.042207792, -0.09294952, -0.019879485, 0.08411537, 0.045673456, -0.056849983, 0.007445216) * inp_3_2_0;
    result3 += M4(-0.0258038, 0.23274249, 0.27855876, -0.008718245, -0.050982546, 0.11869256, 0.19785494, -0.40618706, 0.13658364, -0.08200343, 0.0151117835, -0.209588, 0.08281353, -0.07353398, 0.046973314, -0.33918896) * inp_3_0_1;
    result3 += M4(0.1691461, -0.0010751883, -0.089917965, 0.19503978, 0.5448511, 0.04230042, 0.117847845, -0.052531708, 0.11252549, 0.1240987, 0.24307011, 0.19881558, 0.11178112, 0.0048339567, -0.031472765, -0.55861247) * inp_3_1_1;
    result3 += M4(-0.12550217, 0.12775637, 0.21313958, 0.045707535, -0.12807879, 0.011019719, -0.019094124, 0.03890698, -0.33290064, 0.037562024, -0.28590548, 0.14915097, 0.16093642, 0.084624425, 0.25243634, 0.012886567) * inp_3_2_1;
    result3 += M4(0.052193854, -0.24485298, -0.20228283, -0.1469173, 0.0006674448, -0.27917156, 0.21430656, -0.09873708, 0.0007345727, 0.31431282, -0.19640619, -0.056372765, 0.09458643, -0.12256613, -0.15016524, -0.12829201) * inp_3_0_2;
    result3 += M4(0.06995824, -0.5962695, 0.21904486, -0.11357548, -0.100916505, 0.10464667, -0.45334092, 0.06068545, 0.1135628, 0.5486751, -0.36758298, 0.10008418, 0.095374525, 0.075955674, 0.022465419, -0.019136634) * inp_3_1_2;
    result3 += M4(-0.14429764, -0.1123123, 0.21230212, 0.0868054, 0.015654065, -0.11382637, 0.22340447, 0.05884419, -0.18779746, 0.099927366, -0.24045803, -0.025438292, -0.028460573, 0.13578604, -0.061289113, 0.06803881) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-2-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_1
//!SAVE conv2d_2
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_1_mul * texelFetch(conv2d_1_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.028625997, -0.014698465, 0.008828438, 0.02279652);
    V4 result1 = V4(0.0217111, 0.050875694, -0.015462814, 0.031512685);
    V4 result2 = V4(0.025180964, 0.04895714, -0.0036560537, 0.0126348715);
    V4 result3 = V4(-0.02068599, -0.015889417, 0.024744343, 0.011978146);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.027868943, 0.11452335, -0.06385583, 0.009556097, 0.021757098, 0.002755746, -0.028365104, -0.017432513, -0.123387985, 0.40892607, -0.0646028, -0.057144996, -0.024297485, -0.10892457, 0.012474454, -0.07885928) * inp_0_0_0;
    result0 += M4(-0.0508902, -0.1734707, 0.04165839, 0.01781601, -0.04070384, -0.090887, -0.058931075, -0.017707005, 0.17709392, -0.21473208, -0.008871021, -0.08402611, -0.18206821, 0.37878498, 0.06783865, 0.17357938) * inp_0_1_0;
    result0 += M4(0.07869475, 0.1074404, 0.056844328, -0.012288748, -0.11700687, 0.11100053, -0.028782774, -0.020299686, 0.041434042, -0.07790963, -0.042976953, 0.06321558, 0.009118164, 0.06669776, 0.10231123, -0.02293521) * inp_0_2_0;
    result0 += M4(0.03782649, -0.23490278, 0.124401964, -0.006195016, 0.041621827, -0.05129058, 0.017229317, 0.006114735, 0.13055487, 0.1931761, 0.07293562, 0.0967779, 0.01201255, -0.10888743, -0.0318641, -0.07631546) * inp_0_0_1;
    result0 += M4(-0.14936031, 0.32470322, -0.24658635, -0.09578816, -0.054041438, 0.04542387, 0.04249623, 0.059800092, -0.05659637, -0.103557445, 0.0020748654, 0.090653636, -0.59931225, 0.07682613, -0.24871765, -0.032386117) * inp_0_1_1;
    result0 += M4(0.029030852, -0.09637664, 0.0867522, 0.0841198, -0.06601652, 0.24765866, 0.01820817, 0.053084284, -0.12816323, -0.05819281, -0.000701714, -0.04682149, -0.5954978, 0.04400402, 0.078994155, 0.08191672) * inp_0_2_1;
    result0 += M4(0.08093427, -0.21840473, 0.10096879, 0.011180224, -0.0049724593, 0.021717364, 0.047155175, 0.03253282, 0.0264172, 0.05211558, -0.042946372, -0.11882075, 0.032058988, -0.28366038, 0.06395847, -0.017383778) * inp_0_0_2;
    result0 += M4(0.37575206, -0.22606331, 0.42897847, 0.49819544, 0.01112284, 0.15194327, 0.13490248, 0.036093954, -0.30270866, -0.09146403, -0.1846297, -0.09274027, 0.03732371, 0.04912707, 0.043222945, 0.016799195) * inp_0_1_2;
    result0 += M4(-0.4369682, 0.035511367, -0.40176907, -0.1326194, 0.05033912, 0.0058771847, 0.013871208, -0.017850516, 0.1994218, 0.089314155, 0.09145616, 0.030335298, -0.32693806, 0.046766743, 0.013328917, 0.012191888) * inp_0_2_2;
    result1 += M4(0.10923836, -0.06558425, 0.0149127925, 0.039516192, 0.09323117, 0.11137096, 0.022577018, -0.02827756, -0.15195087, -0.047058024, 0.018923044, -0.04894153, -0.33643237, -0.18144459, 0.005855112, 0.34068516) * inp_0_0_0;
    result1 += M4(-0.1118999, -0.10585547, 0.026449643, -0.042633776, 0.04573638, 0.09793666, 0.10408048, 0.01979293, 0.16785643, -0.21441498, 0.14910544, -0.05411156, -1.2536558, -0.6565316, 0.075611696, -0.10594915) * inp_0_1_0;
    result1 += M4(0.06458688, 0.18657827, -0.06065215, 0.064326204, 0.12518872, 0.017203666, -0.03011816, 0.09578248, -0.038581517, 0.33803973, -0.06977199, 0.24634688, -0.10683709, -0.29650024, -0.23063517, 0.09083014) * inp_0_2_0;
    result1 += M4(-0.09502078, -0.03483714, -0.16267703, 0.1628448, 0.112196684, 0.24972816, 0.051586617, -0.026699403, 0.060010917, -0.22795187, 0.12357254, -0.07319747, -0.13531938, -0.046068855, -0.054179564, 0.065507576) * inp_0_0_1;
    result1 += M4(-0.049014807, 0.120711125, 0.4308587, -0.17804943, 0.10932899, 0.29586494, 0.12862228, -0.0049386807, -0.0017882892, -0.10477948, -0.5679497, -0.618836, -0.59602195, -0.3739149, 0.21165937, 0.43348083) * inp_0_1_1;
    result1 += M4(0.15146273, -0.123982154, -0.2487128, 0.06731572, 0.11772635, 0.36153513, 0.058895864, -0.07370521, 0.074683085, 0.39440474, 0.23570354, 0.33005762, -0.16228992, -0.26656434, 0.06424421, 0.0059872386) * inp_0_2_1;
    result1 += M4(-0.14482918, -0.27984548, 0.18692335, 0.31141728, 0.1415752, 0.18212225, 0.08750099, 0.0023870198, -0.16406065, -0.04866305, -0.047261976, 0.024317501, -0.017797109, 0.0009677087, -0.08902697, 0.017018555) * inp_0_0_2;
    result1 += M4(-0.38038403, -0.18486138, -0.8016439, -1.0757312, 0.07359896, 0.049784586, 0.060884703, 0.037241098, 0.1720602, -0.18415324, 0.08424283, -0.080828704, -0.17906621, -0.060050763, -0.0005218289, -0.32568103) * inp_0_1_2;
    result1 += M4(-0.3062237, 0.75722635, 0.34758073, -0.08824517, 0.15864277, 0.34727928, 0.07241594, -0.012908363, 0.002111199, -0.13664512, 0.055554803, 0.045227274, 0.13835299, -0.15867127, 0.0038830196, 0.114834175) * inp_0_2_2;
    result2 += M4(-0.02234572, -0.057673212, -0.032942973, -0.08139665, 0.00435431, -0.031406797, 0.10610719, 0.13574558, -0.1311029, 0.064909175, -0.15314151, 0.036764383, 0.08732676, 0.16822308, -0.0978778, -0.40635526) * inp_0_0_0;
    result2 += M4(0.03133189, 0.04663858, -0.0088453945, 0.02192233, -0.034390796, -0.034792066, 0.21119931, 0.019497037, 0.075090766, -0.03410345, 0.03306409, -0.003666397, 0.06709319, 0.02723828, -0.20613763, -0.10780509) * inp_0_1_0;
    result2 += M4(0.07723138, -0.02136144, 0.05382905, 0.0086913435, -0.14398123, -0.047109906, 0.004624304, -0.031876475, 0.043963533, -0.16480099, -0.13940033, 0.09381376, 0.16101946, 0.04924866, -0.07121216, -0.23045519) * inp_0_2_0;
    result2 += M4(0.27480015, 0.08255007, -0.01498143, 0.021985373, -0.026503785, -0.072018765, 0.0925182, 0.2012284, -0.15604332, -0.12401057, -0.21959633, 0.049005218, 0.1808886, 0.07767506, -0.39214575, -0.16596618) * inp_0_0_1;
    result2 += M4(0.032075725, -0.3094376, 0.16498086, -0.03860005, -0.18365441, 0.0030476593, 0.070289165, 0.13751143, 0.014962839, -0.2099051, -0.38091087, -0.21247795, 0.13676938, -0.30862835, -2.2318628, -0.25403345) * inp_0_1_1;
    result2 += M4(-0.25644878, 0.115323335, -0.12059456, -0.02232419, -0.043276597, -0.21344212, 0.22578722, 0.12173116, -0.10632673, 0.24258488, -0.2533556, 0.05240535, 0.20747183, 0.07102208, 0.21415068, -0.28911415) * inp_0_2_1;
    result2 += M4(-0.10748918, -0.24227236, -0.059126824, -0.5074421, -0.0070958403, -0.15148579, 0.15458746, 0.20752357, 0.3017698, 0.07316501, -0.10860194, 0.2098672, -0.16854867, 0.062303428, -0.016052058, -0.029189076) * inp_0_0_2;
    result2 += M4(0.2398784, 1.3446325, -0.11731327, -0.37297252, -0.279841, -0.09593803, -0.020676097, 0.40064466, -0.11789062, -0.32067433, 1.0521126, -0.29086807, 0.10723073, -0.17183267, -0.32277918, -0.35448748) * inp_0_1_2;
    result2 += M4(0.11750467, -0.50306594, -0.20674904, -0.2508708, 0.06262314, -0.24693182, 0.23199017, 0.32217145, -0.015021708, 0.090651184, 0.1996571, 0.06979023, 0.059958544, 0.016384568, -0.085550666, -0.16104917) * inp_0_2_2;
    result3 += M4(0.0172687, 0.031202385, -0.04141688, 0.04096531, 0.009618714, -0.015682561, -0.017765544, 0.030407034, -0.04158375, -0.013526678, -0.04619829, 0.022231605, -0.014038074, 0.013970736, -0.074742325, -0.015017643) * inp_0_0_0;
    result3 += M4(0.010319827, -0.049154017, 0.027455732, -0.017626008, -0.0057885596, 0.01031636, -0.015998125, 0.1576123, 0.06753302, 0.012556397, -0.027349342, -0.014259217, 0.076368384, -0.18294011, 0.009654551, -0.16112255) * inp_0_1_0;
    result3 += M4(-0.015003224, -0.05864858, 0.023009157, -0.027999284, -0.0031706397, -0.027248323, 0.007952072, 0.10921552, -0.12945414, 0.04889787, 0.01881196, 0.04773009, 0.15691581, 0.1294, 0.051098257, 0.08936405) * inp_0_2_0;
    result3 += M4(0.0013829583, 0.18245319, -0.07265145, 0.008999042, 0.028126601, -0.018466977, 0.02406401, 0.04563606, 0.019298185, 0.17137074, 0.0054681688, -0.084473014, -0.096483596, 0.15637502, -0.02699456, -0.053790778) * inp_0_0_1;
    result3 += M4(0.2664102, -0.07075037, 0.10675515, 0.13371412, -0.06438863, -0.06864127, 0.096822165, 0.30794132, 0.19306672, 0.013474386, -0.033019554, 0.019342793, -0.21961956, 0.35921174, 0.45862773, -0.25097004) * inp_0_1_1;
    result3 += M4(-0.24145496, -0.013857055, -0.03755296, -0.16273408, 0.038719907, 0.012138548, 0.0378954, 0.1535347, 0.1854188, -0.019990573, -0.16628388, 0.095837526, -0.21917003, 0.2424943, 0.04563313, 0.098089926) * inp_0_2_1;
    result3 += M4(-0.2239419, -0.9037706, -0.005674463, -0.47508985, 0.020426176, -0.34467864, 0.057954907, 0.1003775, -0.0437695, -2.9549606, -0.09371319, 0.06488722, -0.02989942, 0.19523455, 0.035511307, 0.15100895) * inp_0_0_2;
    result3 += M4(0.26313585, -0.78336084, 0.053496875, 1.1084462, 0.015324355, -0.819819, 0.081437744, 0.2784782, -0.051295653, -3.0908039, -0.010445678, -0.16489321, -0.03567561, 0.15699965, -0.0052735102, -0.12560901) * inp_0_1_2;
    result3 += M4(0.1379186, -0.07368583, -0.16373588, 0.10713579, 0.072091915, -0.33622232, -0.034987334, 0.16721022, 0.03501422, -2.3811967, 0.15445265, -0.13675466, -0.08614097, 0.27359894, -0.05522809, 0.106003426) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.009637485, 0.08477444, -0.03502911, -0.00029883967, -0.035475865, 0.027649157, 0.06658036, 0.017601447, 0.13252135, -0.40389746, -0.05351292, 0.021102222, -0.0111624, 0.012470019, 0.0033018903, -0.0019321659) * inp_1_0_0;
    result0 += M4(0.10768867, 0.019895453, -0.044021595, 0.086397186, -0.087628484, 0.5274399, -0.0011437464, 0.07595233, -0.08982038, -0.53487337, -0.09549895, -0.011226532, 0.006620899, 0.11190098, -0.041944418, -0.10274968) * inp_1_1_0;
    result0 += M4(0.08643967, -0.04339804, -0.029433895, 0.006127416, -0.032722443, 0.14390466, 0.10303199, 0.0343313, 0.14061356, -0.08054761, 0.023003533, 0.044889603, 0.13614637, -0.0011364383, 0.093007855, 0.049280565) * inp_1_2_0;
    result0 += M4(-0.028136093, -0.01674584, 0.057783574, -0.032551628, -0.15197094, 0.09124048, 0.0026746779, 0.026656115, 0.030121492, -0.2706518, -0.015393765, 0.09329498, 0.16183087, 0.057970673, -0.04329557, -0.01630232) * inp_1_0_1;
    result0 += M4(0.19243312, 0.21963727, -0.0321318, -0.11746895, -0.034558475, 0.09081794, -0.026291788, 0.05979042, 0.28156835, 0.17349656, 0.75684357, 0.27776465, 0.065533265, -0.39975178, 0.03703748, 0.059562404) * inp_1_1_1;
    result0 += M4(-0.338621, -0.020079846, -0.0620562, -0.07726056, -0.66114855, 0.048573695, 0.077138685, -0.041067936, 0.43786806, -0.08886481, -0.04554452, -0.05182971, 0.40797985, -0.34773636, -0.07352562, 0.0019446654) * inp_1_2_1;
    result0 += M4(-0.114347026, -0.008728374, 0.06968463, -0.0129403, -0.03338006, 0.0072688446, 0.0011274164, -0.03367107, -0.028858317, 0.025789488, 0.030496994, 0.05314321, -0.0651365, -0.108839646, 0.043928064, 0.04068203) * inp_1_0_2;
    result0 += M4(-0.11253075, -0.020958701, 0.17154662, 0.11569202, -0.035123374, 0.019756116, -0.040285397, -0.010743303, 0.21544418, -0.009573301, -0.032822132, 0.014608185, -0.077345856, -0.015475578, 0.07685538, 0.010632821) * inp_1_1_2;
    result0 += M4(0.27557465, 0.071059376, 0.02312315, 0.054582786, -0.09210857, 0.10904671, -0.032184254, -0.027895994, 0.010060899, -0.12794392, -0.026434986, 0.003434295, 0.09024264, -0.05576528, -0.0015372974, 0.022691652) * inp_1_2_2;
    result1 += M4(0.34903198, 0.19556884, -0.2337821, -0.11840409, 0.031889174, -0.025781674, -0.018585484, 0.11591866, 0.015456971, -0.15905872, -0.06065424, -0.2717197, 0.042763896, -0.0041591385, -0.017365867, -0.06854273) * inp_1_0_0;
    result1 += M4(-0.022016773, -0.09240998, 0.044785634, -0.4069048, -0.017777868, 0.09540165, 0.13274738, 0.13693966, -0.30643243, -0.44771147, 0.15301484, 0.19017547, 0.17038725, -0.030068377, 0.05062266, -0.45856702) * inp_1_1_0;
    result1 += M4(0.115175284, 0.048717942, -0.017626848, -0.1366166, 0.2367976, -0.28419572, -0.1941016, 0.22485264, -0.14533383, -0.56656533, 0.13673542, -0.43309993, -0.20151292, -0.3367648, -0.13433334, 0.028712638) * inp_1_2_0;
    result1 += M4(-0.07847607, 0.3300261, -0.09363373, 0.17789109, -0.055590734, -0.04523049, -0.027572302, 0.07437624, -0.3901779, 0.14018594, -0.020674363, 0.009904225, 0.13044469, -0.007249648, -0.061070587, -0.03812186) * inp_1_0_1;
    result1 += M4(0.17835397, 0.022343053, 0.14230436, -0.5610255, 0.14948341, 0.00369506, -0.21545, 0.17335229, -0.4161722, -0.3000662, 0.36628202, -0.06547483, -0.10252977, 0.013165623, -0.040288184, 0.19531459) * inp_1_1_1;
    result1 += M4(-0.15776676, -0.11777712, -0.021155411, 0.4673007, -0.05068016, 0.14927994, 0.07944188, 0.84769356, -0.012513684, 0.010183449, -0.20126404, -0.665069, 0.05672674, -0.4275962, -0.398841, -0.07276415) * inp_1_2_1;
    result1 += M4(0.10369658, 0.048468582, -0.12316492, 0.15226293, 7.4555384e-05, 0.00027380566, 0.00057133136, 0.049764883, -0.0095873345, 0.055057134, 0.05428667, -0.026689226, 0.0553914, 0.011769644, 0.00467582, -0.1104728) * inp_1_0_2;
    result1 += M4(-0.012554386, 0.0062390305, 0.11416027, 0.29843542, -0.0074814437, -0.12807944, -0.011163854, 0.3297084, 0.04356397, 0.017649377, -0.016713599, -0.31631684, 0.036771197, 0.030638745, 0.00497666, -0.118741915) * inp_1_1_2;
    result1 += M4(-0.058590915, 0.097960986, 0.103803195, -0.23431848, 0.07482086, -0.29080722, -0.063996665, 0.36562356, -0.07394969, 0.13216484, -0.027949762, -0.24308726, -0.012851602, -0.14889869, -0.017269425, -0.32449746) * inp_1_2_2;
    result2 += M4(-0.077494025, -0.18212175, 0.32730243, 0.074289575, 0.1057876, 0.01244985, -0.0072568925, -0.1411518, 0.07590471, -0.0114805605, 0.02387871, 0.075829394, 0.07742603, -0.07871544, -0.09752897, 0.1179583) * inp_1_0_0;
    result2 += M4(-0.019189686, 0.104054235, -0.003305334, -0.023446746, 0.09797816, -0.07236604, -0.01490115, -0.0012216046, -0.38454902, -0.060201004, 0.11486036, 0.086021535, 0.023732714, -0.14936112, -0.10314597, -0.061733086) * inp_1_1_0;
    result2 += M4(0.020944295, -0.1598323, 0.14952144, -0.082145624, 0.108136855, 0.0755209, -0.039300833, -0.03349892, -0.028102236, 0.03547628, 0.03923455, 0.0997398, -0.20618232, -0.07705724, -0.24295357, -0.003921738) * inp_1_2_0;
    result2 += M4(-0.121533126, -0.3545859, 0.47113547, -0.07323283, 0.03015193, 0.07000546, -0.030418223, -0.18938084, -0.20439985, -0.051177766, 0.3615324, -0.31478584, -0.09750347, -0.13884199, 0.0777859, 0.16771725) * inp_1_0_1;
    result2 += M4(0.16306512, -0.25893012, -0.18477818, 0.26214692, 0.5642925, 0.030120898, -0.53146183, -0.7915922, -0.09082249, 0.40452275, 0.21438703, 0.0777103, -0.16481741, -0.02611044, 0.4196019, 0.54755485) * inp_1_1_1;
    result2 += M4(-0.05338736, 0.040104162, -0.14762855, 0.054819845, 0.096035115, 0.071457304, 0.38123065, -0.3225958, -0.173666, 0.12519047, -0.162882, -0.041836563, 0.368449, 0.109250374, -2.7827137, 0.29540455) * inp_1_2_1;
    result2 += M4(0.13168046, -0.118411325, 0.016619079, -0.17542283, 0.12538444, -0.011681143, -0.09144297, -0.19798611, -0.13045481, -0.022904048, -0.18175349, -0.045957938, 0.048993766, -0.00998165, 0.034871645, 0.026374424) * inp_1_0_2;
    result2 += M4(0.06044823, 0.15445872, 0.3533232, -0.059309423, 0.044126403, 0.05731178, 0.14390153, -0.6034925, -0.03456021, 0.11580428, -1.4067779, 0.2685029, -0.14326778, -0.15282151, -0.18915673, 0.29205847) * inp_1_1_2;
    result2 += M4(-0.00075705786, 0.1044628, -0.07003688, -0.020506894, 0.1361282, -0.047599565, -2.1678479, -0.34034404, -0.08741327, 0.02679291, 0.16271977, -0.004262278, -0.1350965, -0.09375563, 0.17351794, 0.30181396) * inp_1_2_2;
    result3 += M4(0.009156961, -0.10505519, -0.10780317, -0.19999395, -0.001478932, 0.014119211, 0.038639463, 0.017780691, 0.008037938, -0.016424691, 0.032396667, -0.084869914, -0.0485954, -0.09678017, -0.03225878, -0.0021239952) * inp_1_0_0;
    result3 += M4(0.20983565, 0.06296508, 0.0310388, -0.08491113, -0.047110263, 0.042282756, -0.008865068, -0.059044965, 0.027307978, 0.08359834, -0.05288469, -0.14194992, 0.02955265, 0.28107506, 0.04615474, 0.08773784) * inp_1_1_0;
    result3 += M4(-0.38665417, 0.09075651, -0.0042643873, -0.07251834, -0.21455137, -0.027674153, 0.10204321, -0.012021754, -0.60864407, -0.041934416, 0.02675586, -0.1539074, -0.33508888, -0.18204327, -0.014455145, -0.10919672) * inp_1_2_0;
    result3 += M4(0.097386055, -0.48996323, 0.15330018, -0.18043323, 0.02002834, -0.20922671, 0.016380792, 0.0042406246, -0.015278314, -0.6783917, 0.049322024, -0.022672692, 0.03368348, 0.36879528, -0.023463638, -0.034087766) * inp_1_0_1;
    result3 += M4(0.5394568, 0.25551015, 0.1830298, -0.27543965, 0.016003134, 0.21605588, 0.020826643, 0.059316143, -0.099162795, -0.8830086, -0.25368953, -0.026176425, 0.12002315, 0.3292403, -0.04323558, 0.06907007) * inp_1_1_1;
    result3 += M4(-0.042812012, -0.13843471, 0.02257585, 0.04784236, 0.017745085, -0.09309797, 0.004444542, 0.017556036, -0.040281143, -0.8830733, 0.053380866, -0.18766825, -0.0718011, -0.9352091, -0.041077923, -0.20306522) * inp_1_2_1;
    result3 += M4(-0.07221904, 0.494756, -0.0015895384, -0.10926306, 0.0048856614, -0.40074915, -0.009546972, 0.007630662, 0.016151778, 0.092801765, 0.06346203, -0.014685669, 0.0042942134, -0.27884617, 0.07751233, 0.075600736) * inp_1_0_2;
    result3 += M4(0.2173658, -1.0928233, 0.003668565, 0.11807132, -0.040448114, -0.86273044, 0.042901397, -0.03839178, 0.035384424, 0.3726464, -0.029339641, -0.026375268, -0.032745346, -1.8531574, 0.078183234, 0.059618425) * inp_1_1_2;
    result3 += M4(0.059748575, -0.0685063, -0.06481841, 0.007058262, -0.060023054, 0.23050852, -0.058148496, 0.02908905, 0.037246007, -1.6594133, 0.008404458, -0.015739553, -0.037722066, -2.1984217, 0.036179904, 0.07388148) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.06256234, 0.09336718, 0.052410472, 0.081957094, -0.13375898, -0.04213811, 0.14849785, -0.09764176, -0.03834539, -0.06378939, -0.0106658405, -0.008024876, 0.028415343, -0.11798774, -0.020806774, 0.022163874) * inp_2_0_0;
    result0 += M4(0.11955119, -0.21733446, -0.0038305982, 0.03962281, -0.2884818, 0.2664035, -0.16938974, -0.149354, 0.0008266395, -0.09600397, -0.002006244, 0.027092624, 0.0102362335, -0.0674585, 0.031302527, 0.0011139993) * inp_2_1_0;
    result0 += M4(-0.045857195, 0.21917932, -0.06011441, -0.033715863, -0.024999734, -0.0021261652, 0.026708608, -0.024950642, -0.014723751, -0.054806676, 0.025421254, 0.03912421, 0.057486873, -0.14967087, -0.0022118017, 0.0132225705) * inp_2_2_0;
    result0 += M4(0.024635538, 0.28005388, 0.065541536, 0.03174634, 0.14252262, 0.10703483, -0.11795241, 0.6353801, -0.03177538, 0.01231206, 0.0027846275, -0.0038106202, 0.051446013, -0.17075253, -0.016188856, 0.044462603) * inp_2_0_1;
    result0 += M4(0.5703174, -0.2550943, 0.21234137, 0.085288204, 0.18610576, -0.36115623, 0.18440191, 0.15559274, -0.11174711, 0.15406486, -0.04503758, -0.021922242, 0.052124858, -0.34347543, 0.011435448, 0.039451648) * inp_2_1_1;
    result0 += M4(0.5341433, -0.02128754, -0.032824054, 0.017977811, 0.05555021, -0.032880113, -0.017223703, 0.03890355, -0.00037359906, 0.20474598, 0.03293757, 0.02922493, 0.21473785, -0.30040497, -0.023672218, -0.009969688) * inp_2_2_1;
    result0 += M4(-0.050239697, 0.16368958, -0.09803463, 0.035964772, 0.11709492, 0.018895093, 0.26624498, 0.1437621, 0.0363861, 0.09432732, 0.03494952, -0.005729291, 0.071530476, -0.023420183, 0.0826663, 0.075198166) * inp_2_0_2;
    result0 += M4(-0.1544193, -0.10752226, 0.06006575, 0.0008603333, -0.10234919, -0.12663533, 0.045528647, -0.07325969, 0.14761971, 0.08037899, -0.01213652, -0.013438959, 0.07086203, -0.22959006, 0.25505677, 0.1140838) * inp_2_1_2;
    result0 += M4(0.3887983, -0.041644245, -0.006535209, 0.014314881, -0.021721348, 0.018397044, 0.0619397, 0.0005155427, -0.07951013, 0.03126137, 0.011624896, -0.005938437, 0.50593114, -0.08387697, 0.03333684, 0.014147047) * inp_2_2_2;
    result1 += M4(-0.07519128, -0.021231042, 0.06899635, -0.091411255, 0.16787533, -0.26283512, -0.04984201, 0.3643303, -0.06441931, 0.009943692, 0.041622546, -0.028931985, 0.090379514, 0.0628157, 0.016177393, -0.060605407) * inp_2_0_0;
    result1 += M4(-0.3671425, -0.38376546, 0.26122126, 0.1118076, -0.26051044, 0.50974524, 0.04289981, 0.41438478, 0.0019746888, 0.07325388, 0.052604463, -0.02258879, -0.026002988, -0.07799307, -0.0003638358, 0.011656653) * inp_2_1_0;
    result1 += M4(0.005433826, 0.027673313, 0.02100021, 0.22754699, 0.094656, -0.11473358, 0.005534445, 0.25131798, 0.07709222, 0.2488708, 0.090292, 0.07777206, 0.010568726, -0.038517557, -0.007767251, -0.062094636) * inp_2_2_0;
    result1 += M4(0.16381465, -0.19917098, 0.051669944, -0.12219084, 0.13877176, 0.45519546, 0.30443683, -0.11693261, -0.1388632, 0.07011271, 0.058701485, 0.04998843, -0.11925796, 0.008669472, 0.09742215, -0.08934809) * inp_2_0_1;
    result1 += M4(0.3861676, 0.7057902, -0.10799121, -0.43725446, -0.017721469, -0.8937347, 0.16242151, -0.9860102, -0.03151677, 0.032306146, 0.08550294, 0.08078259, -0.02707834, 0.14270748, -0.08678409, -0.18041545) * inp_2_1_1;
    result1 += M4(0.024789961, 0.29822358, -0.013543365, 0.14539047, 0.008037139, 0.073771715, -0.13294566, -0.32719058, -0.16416289, 0.35532442, 0.25632188, 0.28820068, -0.19444576, -0.024157725, 0.0032135812, -0.42491934) * inp_2_2_1;
    result1 += M4(0.062149692, -0.13022651, 0.068350695, -0.09635056, -0.028443214, 0.16234443, 0.12878251, 0.6330653, -0.078347065, 0.128265, 0.020103443, 0.22948073, -0.10394647, 0.16773628, 0.08085067, -0.13175668) * inp_2_0_2;
    result1 += M4(-0.0023127173, 0.07482662, -0.045653526, 0.44606647, 0.18084963, 0.38843343, 0.0378254, -0.03708854, -0.058957513, 0.19294836, -0.016645059, 0.052738976, -0.11823572, 0.13532583, 0.121261366, -0.12749508) * inp_2_1_2;
    result1 += M4(-0.07732345, 0.084316336, -0.020210737, -0.22722305, 0.0250853, 0.0412106, 0.054894563, 0.013085244, 0.049821552, 0.31416702, 0.082082555, 0.12791634, -0.21870932, 0.14696422, -0.171311, -0.48787057) * inp_2_2_2;
    result2 += M4(0.16679655, -0.07903802, 0.0033451482, 0.15529667, -0.011335983, 0.09282985, 0.16410375, -0.009067497, 0.012510948, 0.12889212, 0.08787054, -0.11192715, -0.023028165, 0.033544455, 0.035636265, 0.06163577) * inp_2_0_0;
    result2 += M4(0.23101504, 0.24796489, 0.10640576, 0.027479071, 0.11689364, 0.042622846, 0.14034092, 0.07015206, 0.03330667, 0.12713818, 0.2310234, -0.08222649, -0.07075271, 0.020928105, -0.0029111432, 0.0353345) * inp_2_1_0;
    result2 += M4(-0.23209038, 0.12277964, 0.037074827, 0.12300431, 0.114895105, 0.10862617, -0.0827608, -0.004355138, -0.10619023, 0.18352954, 0.16441156, -0.09061252, 0.048634306, 0.023081366, 0.0070369183, 0.073941834) * inp_2_2_0;
    result2 += M4(0.07996655, -0.024805484, -0.06658645, -0.052505795, -0.22233166, -0.23410593, 0.35692054, 0.047778115, -0.056570627, 0.10026286, 0.0924029, -0.12639871, -0.18083745, 0.07313346, 0.04350429, 0.110765986) * inp_2_0_1;
    result2 += M4(-0.07358267, 0.19975929, 0.009961564, -0.18541202, -0.034623716, -0.05194462, 0.06728448, -0.13975097, -0.08580905, 0.18101227, 0.14367963, -0.10930278, -0.43928978, 0.15944575, 0.06977291, 0.020731788) * inp_2_1_1;
    result2 += M4(0.040018175, -0.066163, -0.18592164, -0.050343383, -0.05342036, -0.051360566, -0.0348177, -0.073580086, -0.13461708, 0.1286324, 0.3448949, -0.1791305, -0.2409143, 0.19882445, 0.11932554, 0.026374778) * inp_2_2_1;
    result2 += M4(0.21949504, -0.03382493, 0.09841036, -0.05260977, -0.089619346, 0.08276718, 0.51236343, -0.0058066803, -0.17702134, 0.014200049, 0.1059474, -0.04936985, -0.16395693, 0.08630716, -0.008026975, 0.02342149) * inp_2_0_2;
    result2 += M4(-0.1090208, 0.1927169, 0.26724127, -0.31428805, -0.28771156, 0.045474183, -0.40035096, -0.15524329, 0.021397678, 0.08630915, 0.093035586, -0.11028897, -0.5488327, 0.18700665, 0.14379324, 0.051099442) * inp_2_1_2;
    result2 += M4(-0.06598797, -0.036182743, -0.022839647, 0.06837824, 0.021061793, -0.048432246, 0.20832323, 0.110553496, 0.1046047, 0.20307657, -0.060055565, -0.15927728, -0.40632567, 0.11942514, 0.09621764, 0.08373673) * inp_2_2_2;
    result3 += M4(-0.061939023, -0.043827966, 0.08271766, 0.07236354, 0.040354062, -0.039054275, 0.01516309, 0.09663814, 0.05238411, 0.001815484, -0.0027262412, -0.029852003, 0.018996313, -0.0024556974, -0.0060513853, -0.036207788) * inp_2_0_0;
    result3 += M4(-0.25322446, 0.07831524, -0.03298424, 0.07867183, -0.021463776, 0.11334051, -0.026141822, 0.20294163, 0.03230531, -0.028707458, 0.030340452, -0.16545494, -0.0038064716, 0.00922717, 0.0072969454, 0.008011454) * inp_2_1_0;
    result3 += M4(-0.0723254, -0.044535495, -0.055659737, -0.089730315, 0.029251466, -0.035346188, 0.039008416, -0.014768919, 0.104857326, 0.020692525, 0.0329932, -0.022675997, -0.015568984, 0.030912872, -0.011093093, -0.012538176) * inp_2_2_0;
    result3 += M4(0.081442945, 0.2824546, 0.04959152, 0.118752375, -0.109466374, 0.042731617, 0.10874758, 0.078664795, -0.02408145, 0.027691329, -0.008596784, -0.015366678, -0.008220976, 0.012277813, 0.008892906, -0.054162454) * inp_2_0_1;
    result3 += M4(0.33405772, 0.30423093, 0.30238298, 0.18977241, 0.24321638, 0.2244445, 0.16195312, -0.03732162, -0.040702604, -0.060215563, -0.05164448, -0.08859289, -0.030661553, -0.03553266, 0.05096182, -0.0023073857) * inp_2_1_1;
    result3 += M4(0.18470238, 0.25040525, 0.034904994, -0.0773668, 0.017308429, 0.035513617, -0.004930842, -0.0010183101, 0.053860985, -0.047911428, 0.095347546, 0.02092414, 0.03347485, 0.017591173, -0.049577747, 0.01187607) * inp_2_2_1;
    result3 += M4(0.04054906, 0.0019713657, -0.04419461, -0.05565634, -0.042583104, -0.03467176, -0.04983542, 0.019816963, -0.0037964294, 0.35492924, 7.264e-05, -0.03779521, -0.033775978, -0.07528988, 0.082418054, 0.0029267527) * inp_2_0_2;
    result3 += M4(0.0040746736, -0.51681995, -0.030441206, 0.100914, 0.0549841, -0.6252755, -0.013468506, 0.10549981, 0.04102309, 0.10799771, -0.05771967, -0.12769186, -0.059607636, -0.55369407, 0.24859719, -0.08544298) * inp_2_1_2;
    result3 += M4(0.037478466, -0.41067174, 0.08278229, -0.042824578, 0.05346189, 0.071432285, 0.02345265, 0.027085721, 0.10049294, 0.881573, -0.043163706, -0.14491546, -0.055643924, -0.86965775, 0.034659598, -0.14093462) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.03128513, -0.16162935, 0.0015980063, 0.055040583, -0.029112684, 0.31298602, -0.13177198, -0.0019696036, -9.236166e-05, 0.012184471, 0.080588214, -0.027410546, 0.11390174, -0.097625785, 0.027294023, 0.02646666) * inp_3_0_0;
    result0 += M4(-0.03265137, -0.15013447, 0.05225201, 0.097302884, 0.3179757, -0.23444526, 0.11298732, -0.10749196, -0.11572909, 0.29958826, -0.036375016, -0.01382955, 0.12545583, -0.054574292, -0.10956055, 0.009499839) * inp_3_1_0;
    result0 += M4(-0.033220604, 0.0041322424, 0.005393257, 0.010581185, -0.21242283, -0.24017976, -0.17703365, -0.043486137, -0.11979807, 0.09887757, 0.023676265, 0.012075976, 0.17181396, -0.017382175, 0.061359942, -0.00011527036) * inp_3_2_0;
    result0 += M4(-0.039132595, -0.3274015, 0.24520579, -0.4213609, 0.16220933, 0.1963538, -0.023878122, -0.028654564, -0.31668186, 0.10498075, -0.01825393, 0.010035517, -0.017240405, -0.16034728, -0.009995488, -0.059601635) * inp_3_0_1;
    result0 += M4(-0.09925157, 0.35834768, 0.028550372, -0.016887989, -0.016116489, -0.1234561, 0.20479877, -0.037270915, -0.22527722, -0.023594422, 0.023496363, 0.09221728, -0.35173622, -0.05786518, 0.08759928, 0.4390527) * inp_3_1_1;
    result0 += M4(0.17780726, 0.01816232, 0.0034545278, -0.0050841155, -0.036216393, -0.016740302, -0.008492648, 0.03379725, -0.20702845, 0.19507845, 0.053293027, 0.037543666, -0.15981653, 0.21701036, -0.09400977, -0.023951786) * inp_3_2_1;
    result0 += M4(0.06656681, 0.23079248, 0.013983347, -0.1057034, 0.034956697, 0.26552007, -0.08841834, -0.016023807, -0.09517244, -0.039931424, 0.09591571, 0.017083824, -0.120247945, -0.10138713, 0.03737636, 0.03460621) * inp_3_0_2;
    result0 += M4(-0.44870493, 0.20187533, -0.02897159, 0.06573956, 0.08349521, 0.12600178, -0.06863506, -0.053816956, -0.1469464, 0.07316627, 0.05850042, 0.02100727, 0.043011952, 0.13491286, 0.0653629, 0.0338361) * inp_3_1_2;
    result0 += M4(-0.0013861877, -0.062036946, -0.038178585, 0.008721662, 0.046182856, -0.03626913, -0.13290155, -0.06236317, -0.17973062, 0.07751234, 0.016582292, -0.005084948, 0.21831459, 0.035689857, 0.05811676, 0.028255777) * inp_3_2_2;
    result1 += M4(-0.0016395608, 0.049968433, 0.0028012726, 0.057705827, 0.009208552, 0.052457906, 0.08670272, -0.11084608, 0.10367528, 0.1748922, -0.041725736, 0.025993371, 0.024624452, 0.030685738, 0.021409262, -0.0067465915) * inp_3_0_0;
    result1 += M4(0.036717888, -0.6884788, -0.023215009, -0.18682978, -0.20969278, 0.4557653, -0.25477505, -0.1461388, 0.038358763, -0.008476756, 0.033013005, 0.05740134, 0.02222894, -0.056919046, -0.106892265, -0.2851695) * inp_3_1_0;
    result1 += M4(0.018791003, 0.06593325, -0.019657733, -0.18060353, 0.010200345, -0.016365988, 0.20881836, 0.2219229, -0.03265962, 0.043663435, -0.0074238824, 0.33626646, 0.21593194, -0.6080752, -0.11433039, -0.03972981) * inp_3_2_0;
    result1 += M4(-0.006672189, -0.072619766, 0.020244068, 0.29705107, 0.023016894, -0.08939466, -0.008915563, 0.09520596, -0.0029146832, -0.032577578, 0.051374387, 0.06504518, 0.05674852, 0.046639405, -0.04499999, -0.019630259) * inp_3_0_1;
    result1 += M4(0.1598621, -0.5093263, 0.59579605, 0.03309227, 0.07387746, -0.095216945, 0.09882336, -0.08249019, 0.040445972, 0.25211182, -0.008151799, 0.043208946, -0.20005393, -0.36452237, 0.54484814, 0.08736053) * inp_3_1_1;
    result1 += M4(0.039024755, -0.16952993, 0.0073174345, -0.31982493, 0.12659977, -0.15795735, -0.11874114, 0.17946038, 0.07759339, 0.13807513, 0.0948143, 0.2877443, 0.10951875, -0.6865248, -0.08652811, -0.4172401) * inp_3_2_1;
    result1 += M4(0.13794897, -0.0990387, -0.1033844, -0.39817744, 0.041605767, 0.014314286, 0.055350512, 0.115419775, -0.017146567, 0.058813076, 0.07482477, 0.059425727, -0.02305934, -0.065455385, 0.029853974, -0.105873525) * inp_3_0_2;
    result1 += M4(0.05116042, 0.120527126, 0.37060133, -0.37208593, 0.1672972, 0.18161565, 0.039271552, -0.042093836, 0.040812675, 0.21161668, 0.0367622, 0.15450935, 0.044027783, -0.023918113, 0.08862931, -0.36945862) * inp_3_1_2;
    result1 += M4(-0.016796673, -0.0431958, -0.026854256, -0.14736226, 0.02040536, 0.2647026, 0.08854543, 0.09355141, 0.061138928, 0.14040135, 0.0634417, 0.18403694, -0.045822736, -0.36430207, -0.034636915, -0.4525315) * inp_3_2_2;
    result2 += M4(-0.062309884, -0.18052594, 0.09750207, 0.11413808, -0.25161237, -0.105180904, -0.014307273, 0.29456192, 0.06520114, 0.008472165, 0.09551446, -0.08810521, 0.008014902, 0.026578866, -0.03380502, -0.0046592806) * inp_3_0_0;
    result2 += M4(-0.070006475, -0.118042685, -0.19671203, 0.019865854, 0.13286409, 0.020693434, 0.031285632, 0.039096124, 0.18549642, -0.1200327, 0.067303635, -0.18516251, 0.04933311, -0.020659994, -0.37604317, -0.010488778) * inp_3_1_0;
    result2 += M4(-0.012399086, -0.047511395, 0.052538544, 0.0034491818, 0.030588241, -0.28306526, 0.13002236, -0.035406478, 0.09505949, -0.041241247, -0.03389446, -0.118133925, 0.050083324, -0.059147306, -0.0009876309, -0.049150147) * inp_3_2_0;
    result2 += M4(0.1645954, -0.28402096, 0.12811175, 0.14311703, 0.029493757, 0.12121372, -0.15653515, 0.0022545215, 0.09172921, -0.022605821, 0.053080007, -0.25752705, 0.038170703, 0.026565889, 0.042147778, 0.004483095) * inp_3_0_1;
    result2 += M4(0.1347265, 0.20384744, -0.09428692, 0.1506795, 0.067078866, 0.036202267, -1.4193604, 0.10326639, 0.2323136, -0.2998049, 0.0010480813, -0.12266217, 0.09765509, 0.078431375, -0.3471458, 0.12027274) * inp_3_1_1;
    result2 += M4(-0.026204128, 0.016388841, 0.08705201, 0.0629639, -0.1933335, -0.27764928, 0.014920304, 0.035482008, 0.035208173, -0.0472936, 0.057888404, -0.04045164, 0.05807548, -0.4257707, 0.06787076, 0.19187823) * inp_3_2_1;
    result2 += M4(0.26696888, -0.17628625, -0.14895365, 0.16243346, -0.066916734, -0.039698415, 0.17216924, -0.10584194, 0.12030634, -0.093239464, 0.08643895, 0.02940597, 0.08324873, 0.03014994, -0.07097387, 0.0323755) * inp_3_0_2;
    result2 += M4(0.06853353, -0.23658119, -0.12521599, 0.021703718, 0.004840805, -0.00274515, -0.07971323, -0.003272973, -0.013321862, -0.063849315, 0.461015, -0.10415124, 0.024007618, 0.0346474, -2.0866463, 0.04617027) * inp_3_1_2;
    result2 += M4(-0.003351242, 0.030464161, -0.116631694, -0.010708118, -0.12678911, 0.033925403, 0.2658085, 0.14070772, 0.13378586, -0.07954421, 0.045165516, -0.09304388, 0.18698846, -0.13770168, -0.0147192115, -0.027009675) * inp_3_2_2;
    result3 += M4(0.12430649, -0.011405051, -0.0005793892, -0.011456622, -8.859943e-05, 0.024736352, 0.02268362, -0.090656936, 0.04662068, 0.0045812787, 0.06881103, 0.005743878, -0.011513071, 0.037891056, 0.027967148, 0.013774422) * inp_3_0_0;
    result3 += M4(-0.047914047, -0.109403305, 0.023966342, -0.018681305, 0.23210256, 0.18898408, 0.12736216, 0.04390296, 0.06680775, 0.008357478, -0.012024076, -0.028385332, -0.06263599, 0.06492519, -0.029043546, 0.020487383) * inp_3_1_0;
    result3 += M4(0.06822977, -0.001905775, -0.004809035, 0.005290634, 0.016744182, -0.059550602, -0.00066029286, 0.123973295, 0.09526262, 0.048631135, 0.04572906, -0.011961877, -0.034871552, 0.008135927, -0.0026228756, -0.019740608) * inp_3_2_0;
    result3 += M4(-0.17955206, -0.13075253, 0.2606757, -0.15011877, -0.024702743, -0.13625605, -0.13941951, 0.018320782, 0.01891698, -0.105844, -0.010655759, 0.04911367, 0.03083229, 0.0150608225, 0.03795298, 0.07698912) * inp_3_0_1;
    result3 += M4(0.053166606, 0.1244312, -0.022195842, 0.44722846, -0.061691657, 0.3189434, 0.00027850858, -0.25795183, -0.053714972, 0.05150653, -0.0044882204, 0.23815174, -0.07258659, -0.23008867, -0.002082674, 0.4331544) * inp_3_1_1;
    result3 += M4(-0.12393038, -0.015265022, 0.031777147, 0.040375955, -0.1638423, -0.19760329, -0.02126388, -0.23029654, 0.186413, 0.034901816, 0.046690747, 0.037492786, -0.5925588, 0.04377754, 0.10738995, -0.236867) * inp_3_2_1;
    result3 += M4(0.0050520394, 0.1802517, -0.007600365, -0.0791895, 0.026430955, 0.20997424, -0.02768461, -0.06994177, 0.00016522133, 0.23107621, 0.023130225, 0.06040629, -0.021586511, 0.15654778, 0.022889074, 0.05594022) * inp_3_0_2;
    result3 += M4(-0.026221018, 0.77277267, 0.009161153, 0.18693995, -0.00903218, -0.8140504, -0.10056407, -0.075825326, 0.057983402, -0.874292, 0.026055874, 0.0753474, -0.037926897, -1.8150424, 0.09654554, 0.14908743) * inp_3_1_2;
    result3 += M4(0.03349337, 0.5020815, -0.028445248, -0.032165054, 0.07492107, 0.26633328, 0.0020652728, -0.15152574, -0.025977507, -0.36603886, 0.019562662, 0.040354528, -0.084822476, -2.1597304, 0.09320147, 0.027447024) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-3-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_2
//!SAVE conv2d_3
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_2_mul * texelFetch(conv2d_2_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.0039807437, 0.0015022061, 0.0048407316, -0.0021865626);
    V4 result1 = V4(-0.0030166616, 0.0026266377, 0.0067379754, 0.014211394);
    V4 result2 = V4(0.009789468, -0.0068501392, -0.0033764995, 0.003455319);
    V4 result3 = V4(-0.007628039, 0.0027479464, 0.011450568, 0.006729408);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.062049426, -0.39858785, 0.21270853, 0.13230386, 0.038730077, 0.03307563, 0.008140028, -0.023948478, 0.04698224, -0.0072985203, -0.047526743, 0.020044085, 0.017835833, 0.07589916, 0.0016742973, 0.0024338257) * inp_0_0_0;
    result0 += M4(-0.3164306, -0.53695047, 0.05371792, -0.26611692, 0.18870738, 0.050702322, -0.039743755, 0.010184671, -0.070889905, 0.029997278, -0.2126668, 0.03476975, 0.011389542, -0.32845876, 0.05300613, -0.08816492) * inp_0_1_0;
    result0 += M4(-0.22087836, -0.08034017, 0.011569266, 0.07154585, 0.12795877, -0.009055434, 0.08360771, 0.07972495, -0.10253189, 0.05166275, -0.101468295, -0.08970749, -0.044691622, -0.06332219, 0.014569669, -0.025786173) * inp_0_2_0;
    result0 += M4(-0.008998491, 0.082472, -0.3679556, -0.032116164, 0.011784995, 0.14355394, -0.10839457, 0.06865598, 0.05394117, -0.18047598, 0.048780877, 0.008526186, -0.043087225, -0.079959884, 0.05987409, 0.123059034) * inp_0_0_1;
    result0 += M4(-0.010720853, 0.2636042, -0.34471637, -0.16021058, 0.10491005, -0.2813952, 0.12365473, -0.07915903, -0.19040993, -0.036918562, 0.52697307, -0.10483123, 0.116462655, 0.26155943, 0.27897313, -0.32229263) * inp_0_1_1;
    result0 += M4(0.082935765, 0.15069328, -0.049577232, -0.054587543, -0.15006095, -0.23970199, 0.16892084, -0.21787812, 0.025125436, -0.13459192, 0.06555714, -0.06332841, -0.012028787, 0.22834526, 0.014464915, 0.28085497) * inp_0_2_1;
    result0 += M4(-0.064477034, 0.025103046, -0.111322775, -0.043192733, 0.1457952, -0.23502944, 0.24890715, 0.09849307, -0.03489802, 0.0041163536, 0.08398853, -0.06392518, -0.162307, 0.008488523, -0.12750296, 0.064940654) * inp_0_0_2;
    result0 += M4(-0.14140444, -0.015962863, 0.0408776, -0.043430768, 0.10289689, 0.1653622, -0.3518564, -0.09172569, 0.1337099, -0.027761372, 0.038088564, 0.043385677, -0.04147441, 0.027196413, -0.39768195, -0.038413074) * inp_0_1_2;
    result0 += M4(-0.099754505, -0.032243215, -0.11363331, -0.016837584, 0.11625436, 0.16588512, 0.037318558, -0.018583238, 0.0353556, 0.022508822, 0.06044551, 0.021301009, -0.11087613, -0.21390323, -0.047042105, -0.06513798) * inp_0_2_2;
    result1 += M4(0.1794369, -0.02572419, -0.065545134, -0.12075515, 0.01048562, -0.03658678, -0.015538139, 0.006748428, -0.032903925, -0.05627563, -0.055666007, -0.0952836, -0.020537358, -0.00093701977, 0.030024145, -0.18080139) * inp_0_0_0;
    result1 += M4(0.20651971, 0.0069958474, 0.002474801, 0.2759231, -0.048019648, -0.04197486, -0.037134852, -0.5257542, 0.040224135, 0.034812484, 0.019566372, 0.027470581, -0.04844073, 0.04203611, -0.00884441, -0.041990213) * inp_0_1_0;
    result1 += M4(-0.05019594, 0.019165037, -0.012516028, -0.057989966, 0.085602485, -0.0050723087, 0.010373385, -0.36922434, -0.033253048, -0.02480528, 0.032819293, -0.07831591, 0.06163619, 0.044023026, -0.0300895, 0.0723516) * inp_0_2_0;
    result1 += M4(-0.29431832, -0.04456473, -0.18067056, -0.09536941, -0.06054487, -0.073803164, -0.022222018, 0.18827726, -0.036597773, 0.10400584, -0.018544653, 0.054409906, 0.0067045055, 0.022896897, 0.0047827414, 0.039554752) * inp_0_0_1;
    result1 += M4(-0.3430569, 0.10698142, 0.035947967, -0.32857165, -0.03733068, 0.1422624, -0.12303291, -0.68603224, -0.13889606, 0.3592412, 0.100354865, -0.06400267, 0.15991306, 0.26598665, -0.054053437, -0.15903698) * inp_0_1_1;
    result1 += M4(0.0149894515, 0.039401386, 0.017551713, 0.124159224, 0.008507665, 0.051519033, -0.020079244, -0.24036808, -0.11996313, 0.08805703, 0.026688764, 0.08284375, 0.024032628, -0.020422118, -0.03436935, -0.29111886) * inp_0_2_1;
    result1 += M4(-0.012750956, 0.036363244, -0.07294272, 0.18543327, 0.15887931, -0.056743324, 0.054976985, 0.28907096, -0.08806354, 0.016828615, 0.08816455, -0.06915827, -0.06633522, -0.03216236, -0.1105702, -0.15510182) * inp_0_0_2;
    result1 += M4(0.023320343, 0.057830792, 0.0051431064, 0.042363502, -0.21649025, 0.0223622, 0.022780413, -0.15519027, -0.0010247892, 0.021277668, 0.10155864, -0.012334966, -0.085362345, -0.004344974, -0.17636614, 0.1576714) * inp_0_1_2;
    result1 += M4(0.007969893, 0.010906496, -0.036984775, 0.08668619, -0.14784107, -0.0015010664, 0.0011463715, 0.10113594, 0.048670337, -0.019251857, -0.058377728, 0.18267784, -0.115764834, 0.021618146, 0.10050273, -0.28457698) * inp_0_2_2;
    result2 += M4(-0.13645406, 0.09295843, 0.020581227, -0.023783144, -0.036010176, 0.039418217, -0.06960799, -0.10520052, -0.06494291, 0.056030836, -0.07639857, 0.018680403, 0.0796039, -0.010322128, 0.021076376, -0.03933296) * inp_0_0_0;
    result2 += M4(-0.08085265, -0.17600803, 0.034427404, -0.013058193, 0.06688832, -0.00478877, 0.02007243, 0.039346006, 0.085988835, 0.018927066, -0.12705393, 0.013654921, 0.08871844, -0.06772298, 0.09588485, 0.04418504) * inp_0_1_0;
    result2 += M4(-0.04631157, 0.06649948, 0.024455188, 0.17479822, 0.018644689, 0.09832417, 0.0104402965, 0.033774875, -0.043752134, 0.081371635, -0.026548935, -0.1548268, 0.06821971, -0.10278422, 0.008808838, -0.019876454) * inp_0_2_0;
    result2 += M4(-0.22034733, 0.450821, 0.031681683, 0.12225602, 0.084996924, -0.13125594, -0.1748776, -0.17737506, 0.08726563, -0.052699745, -0.029226653, 0.04731094, 0.088737585, -0.06716814, -0.052237913, -0.023193099) * inp_0_0_1;
    result2 += M4(-0.084617816, -0.21952651, 0.15974401, -0.14015326, -0.002123486, -0.31906766, 0.033044517, -0.2145463, 0.43556955, -0.18131533, -0.1290969, 0.06592437, -0.25455526, -0.14922749, 0.55831647, 0.08063251) * inp_0_1_1;
    result2 += M4(-0.081998385, 0.016285554, 0.075943716, 0.0402136, -0.098474964, 0.030778613, 0.06968617, -0.3290497, 0.058763828, -0.05407127, 0.076649085, 0.017041037, -0.096484624, 0.17238772, -0.078331605, 0.15308215) * inp_0_2_1;
    result2 += M4(-0.054450575, -0.07125558, 0.049917072, 0.04149095, 0.15379177, -0.23503083, -0.03040565, -0.2075181, 0.021208575, 0.10344854, -0.016692486, -0.0029569473, -0.05131987, -0.020643733, -0.014174079, 0.07628868) * inp_0_0_2;
    result2 += M4(-0.029688518, -0.08188622, 0.0014611102, 0.0072928625, -0.11431279, 0.4059154, -0.03807189, -0.0068579298, 0.0367906, -0.09816721, 0.05373537, 0.0017638889, -0.11786886, -0.21725827, -0.03597472, -0.20965622) * inp_0_1_2;
    result2 += M4(0.02106804, 0.030806152, 0.020067172, 0.07692724, -0.037144665, -0.062194586, 0.085625574, 0.001394638, 0.032311674, 0.030823225, -0.03317418, 0.063747756, -0.10947152, -0.028746245, 0.07131573, -0.12529482) * inp_0_2_2;
    result3 += M4(-0.02481053, -0.08016021, 0.030313257, 0.051829543, 0.0195502, 0.04279267, -0.05015184, 0.0017238654, 0.0011366368, -0.07766674, -0.054989845, -0.025093028, -0.0019563525, 0.048075438, 0.053153947, 0.041739732) * inp_0_0_0;
    result3 += M4(0.097903274, -0.05702366, -0.004025189, -0.048611533, -0.06448107, 0.34082782, 0.0027677007, -0.06032732, -0.00046041797, 0.114512354, 0.07929156, 0.012875544, -0.0112822745, -0.0020840727, -0.017484581, 0.05440933) * inp_0_1_0;
    result3 += M4(-0.039953955, -0.12437213, 0.03278041, 0.06999461, -0.016725414, 0.23581652, 0.007941609, -0.45345023, -0.08534399, -0.02504006, 0.0086340085, -0.44477516, 0.007324765, -0.115910776, 0.012168453, -0.01005295) * inp_0_2_0;
    result3 += M4(-0.08008725, -0.35342637, -0.045549788, -0.086015604, 0.026045593, 0.21610503, -0.04392297, -0.04147701, 0.046811298, 0.090114206, 0.093087435, 0.038719658, 0.057754498, -0.08646317, 0.0011949368, -0.02235561) * inp_0_0_1;
    result3 += M4(0.08082207, -0.26539168, 0.100878805, -0.09470501, 0.059138384, 0.46696195, -0.0023414725, 0.004073833, -0.17176609, -0.22738612, 0.11468579, 0.11273256, 0.024859998, -0.35126087, -0.2622412, -0.09281929) * inp_0_1_1;
    result3 += M4(-0.06046261, 0.079172924, 0.030028258, -0.1911652, 0.0048874877, 0.33132592, -0.03777728, 0.26136503, -0.1067835, -0.042745337, 0.06374332, 0.13221835, 0.18413073, -0.008712831, -0.04409613, -0.28887728) * inp_0_2_1;
    result3 += M4(-0.026992926, -0.070061766, 0.06626607, -0.03679562, 0.057456195, 0.15084398, -0.0020114928, 0.029662183, -0.005003612, 0.013105126, 0.020260654, -0.015614932, -0.013578841, -0.16458024, 0.00022309562, 0.04226975) * inp_0_0_2;
    result3 += M4(0.052163854, -0.089266516, 0.0023004466, -0.020560846, -0.06056214, 0.4632034, 0.0042529334, 0.04298128, 0.024932798, 0.008101242, 0.056034785, 0.06515562, -0.04409094, -0.024091344, -0.20323108, -0.055743907) * inp_0_1_2;
    result3 += M4(-0.003722916, -0.034719158, 0.03065676, -0.028596157, 0.16510601, 0.09113871, 0.066406064, 0.11872958, -0.06144523, -0.12254507, 0.005292177, -0.0029796844, -0.010963384, -0.06861374, 0.07418748, -0.014960441) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.02422819, -0.14680138, 0.027565293, 0.0401394, 0.16981338, -0.084469564, 0.04518367, 0.05149814, 0.030738745, 0.01992134, -0.0053900895, -0.02387332, 0.06543182, -0.033145, 0.041140012, 0.057988316) * inp_1_0_0;
    result0 += M4(-0.0023522286, -0.27089074, -0.003786715, 0.0237441, -0.07399776, -0.1418679, 0.012774714, -0.13597737, 0.018606909, 0.26919535, -0.091817476, 0.031298872, -0.0075259637, -0.23928377, 0.17752469, -0.23751175) * inp_1_1_0;
    result0 += M4(0.099701665, -0.3006764, -0.056652892, 0.028851427, 0.013103329, 0.04315457, -0.02478675, 0.085076965, 0.1115292, 0.12020193, 0.0067345933, 0.07401745, -0.16542912, -0.069725856, -0.051691256, -0.12955937) * inp_1_2_0;
    result0 += M4(0.059383243, -0.2385496, -0.10575098, 0.011215919, -0.15381536, -0.18243878, 0.04829386, -0.01795269, -0.045753792, 0.018145347, -0.050636485, -0.14383338, -0.1360145, 0.3755224, 0.030422311, -0.0073097083) * inp_1_0_1;
    result0 += M4(-0.25151774, -0.41350225, -0.2599339, -0.12937649, -0.3374586, -0.06303693, -0.12060175, -0.118715465, 0.5006499, -0.046051536, -0.05735288, 0.12706146, -0.10202497, 0.35582355, -0.03773941, -0.14464252) * inp_1_1_1;
    result0 += M4(0.28949174, -0.38257053, -0.12513074, 0.22077857, -0.046056572, -0.3178508, -0.055033173, -0.12599342, 0.17025015, 0.091461256, 0.0691059, 0.2579003, 0.22758918, 0.1299716, 0.077222675, -0.037156478) * inp_1_2_1;
    result0 += M4(0.084098436, 0.23980795, 0.017743189, -0.028751763, -0.21342312, 0.05884264, -0.35047293, 0.10283046, 0.23126532, 0.0258588, 0.1760277, -0.07232945, 0.029115416, -0.22574136, -0.018066905, -0.052986253) * inp_1_0_2;
    result0 += M4(-0.079366155, 0.16016985, -0.105374575, 0.079861715, -0.2787871, 0.042604517, -0.22525005, -0.1562898, -0.040983252, 0.016291682, 0.35163203, 0.07094623, 0.006109776, -0.093540594, 0.04628207, -0.38417625) * inp_1_1_2;
    result0 += M4(-0.024093915, 0.21982309, -0.08410972, -0.098047115, 0.23332003, 0.05702152, -0.2287791, -0.072956376, 0.00085741555, -0.042493124, 0.050854567, 0.12969136, -0.09483824, -0.022114469, 0.0358218, -0.010150625) * inp_1_2_2;
    result1 += M4(0.08168539, -0.028218942, -0.01334185, 0.19246042, 0.01927562, 0.03656343, -0.05738916, -9.695007e-05, 0.040392656, 0.024442138, -0.02221018, 0.11818411, 0.020480884, 0.002939596, -0.022711325, -0.03074643) * inp_1_0_0;
    result1 += M4(0.07290993, -0.018070716, -0.01647534, -0.23754524, -0.008208607, 0.0092903115, 0.0045786574, 0.23536699, -0.029681185, 0.029997727, -0.0011409193, 0.055365205, 0.019879753, -0.023081213, 0.015584676, -0.18117736) * inp_1_1_0;
    result1 += M4(0.122180276, -0.076961204, 0.0061666896, 0.1390898, -0.013222541, -0.019801304, 0.009218626, 0.023388198, -0.06939738, -0.0016818284, 0.008552061, -0.03737119, -0.27271178, 0.026481874, 0.015534975, -0.3344637) * inp_1_2_0;
    result1 += M4(-0.047369488, -0.0032404107, 0.0659628, 0.30826232, 0.0033331527, -0.012855812, -0.08433471, -0.39178365, -0.03984269, 0.09469081, 0.054727137, 0.11760247, 0.015124414, -0.06591265, -0.10129502, -0.26910597) * inp_1_0_1;
    result1 += M4(-0.19006693, 0.040400114, -0.01332534, 0.006604829, 0.071916595, -0.0231164, 0.037087344, -0.2300578, -0.20665166, 0.09110099, 0.061567195, 0.30453593, 0.53056866, 0.085469194, -0.003375704, 0.2846977) * inp_1_1_1;
    result1 += M4(-0.12285422, -0.035044666, 0.037195217, 0.13820758, 0.04544302, 0.015468664, -0.0010728318, 0.14902379, 0.036055055, 0.01585645, -0.034458134, 0.1495235, 0.19035615, 0.09037737, -0.035374843, -1.2837987) * inp_1_2_1;
    result1 += M4(-0.17675176, 0.032797422, 0.03471637, 0.062077258, -0.14414676, -0.014412624, -0.16659346, -0.16547273, 0.16962239, 0.009882111, 0.16875616, 0.037497956, -0.07595128, -0.04598494, -0.007585827, -0.17182998) * inp_1_0_2;
    result1 += M4(-0.27581424, 0.07948659, 0.0021040817, -0.27750582, -0.26691326, 0.104048066, -0.0062099663, -0.27496907, 0.44620624, -0.03006363, -0.056670118, 0.07833118, 0.14764047, -0.05850698, -0.09574171, 0.36495525) * inp_1_1_2;
    result1 += M4(-0.13122289, 0.0063558887, -0.01991434, 0.04771941, -0.06181126, 0.0092224935, 0.008863012, 0.092301324, 0.12159024, -0.039355952, -0.004030245, 0.25092122, 0.08574261, 0.0011663502, 0.02658523, -0.3368786) * inp_1_2_2;
    result2 += M4(0.052764576, -0.017805355, -0.01067065, -0.090673484, 0.08606285, 0.031128714, -0.032957304, -0.03841014, -0.081732534, 0.040974103, 0.018158292, 0.050124176, 0.15974255, -0.06847412, -0.09585877, -0.026165474) * inp_1_0_0;
    result2 += M4(-0.11939701, 0.083062224, -0.009738039, -0.0066208607, -0.040751394, 0.08256234, -0.04599471, -0.04795101, -0.090405926, -0.029557306, -0.022550376, -0.019550506, -0.15326725, 0.0755374, -0.014922464, -0.18240066) * inp_1_1_0;
    result2 += M4(-0.1004785, -0.034314003, -0.04700429, -0.08911941, -0.026952034, 0.09566718, -0.037392486, 0.12234923, -0.0042382227, -0.059346195, 0.0096013555, -0.03651452, 0.007316044, 0.012895507, 0.08253352, -0.1654853) * inp_1_2_0;
    result2 += M4(0.082824275, 0.0594708, 0.046449557, 0.041902628, -0.15207215, 0.09783853, -0.07631558, -0.112663895, -0.03953545, -0.07448466, 0.16154507, 0.045869444, 0.055517647, 0.39511773, -0.04413085, -0.046551153) * inp_1_0_1;
    result2 += M4(0.22120698, -0.032045383, -0.026615025, -0.013486572, -0.21484031, 0.1796402, 0.0965539, -0.25221154, 0.37796095, -0.041573692, 0.049409058, 0.43313, 0.13441817, -0.045332693, 0.12758154, -0.026897086) * inp_1_1_1;
    result2 += M4(-0.059645463, 0.13137364, -0.0126988785, 0.13508086, -0.07138074, 0.021228226, -0.033966467, -0.02139755, 0.0560312, 0.10581536, -0.013317302, 0.08758298, -0.022797931, 0.04536072, 0.10940794, 0.15924908) * inp_1_2_1;
    result2 += M4(-0.0717941, 0.017963007, -0.009073254, -0.052211303, -0.19299245, -0.038572297, -0.0014909203, -0.00333886, 0.031306647, -0.027066948, 0.012120565, -0.11796894, 0.0009572723, 0.008931796, -0.047284193, -0.20131956) * inp_1_0_2;
    result2 += M4(0.023177719, 0.06859105, 0.058458038, 0.11340394, -0.14561045, 0.10124619, 0.011933356, -0.1805485, 0.020234382, 0.059078857, -0.007476313, 0.012111922, -0.06450903, -0.27994817, -0.09446329, -0.2785957) * inp_1_1_2;
    result2 += M4(0.028594656, 0.012352606, 0.05667531, -0.14796208, 0.009900103, 0.0061459, -0.011517924, -0.021040566, -0.027359439, 0.054404676, -0.027262889, 0.085162215, 0.011874241, 0.10329322, 0.007357282, 0.008993538) * inp_1_2_2;
    result3 += M4(0.018989595, 0.044551585, -0.013732835, 0.03589136, 0.019275477, 0.092423424, 0.011023367, 0.103823654, -0.016734675, -0.037136722, -0.0052056923, 0.00559902, -0.013995453, 0.3919915, -0.029402977, 0.13619395) * inp_1_0_0;
    result3 += M4(-0.016612312, 0.2263923, 0.0013279369, 0.047985896, 0.09848863, -0.025187805, -0.029535733, 0.03484104, 0.040700026, 0.085454375, 0.040841438, -0.0395176, 0.07709213, 0.059211545, -0.07242682, -0.018288437) * inp_1_1_0;
    result3 += M4(0.023577383, 0.033930216, -0.03619715, -0.12292773, 0.058747932, 0.0076677143, -0.01304786, 0.16865641, -0.0071326853, 0.00731933, -0.01753573, -0.14287134, -0.021911835, 0.13175535, 0.026634395, 0.11474292) * inp_1_2_0;
    result3 += M4(-0.01795295, 0.049420346, 0.019980822, 0.017514233, -0.013829688, 0.085047886, 0.0028445183, 0.040510397, -0.0008447748, -0.075884335, 0.04123731, 0.0384837, -0.08041383, 0.28280163, -0.005122246, 0.031724215) * inp_1_0_1;
    result3 += M4(-0.028822884, -0.094199896, 0.029574743, 0.091993906, 0.06863211, -0.020220842, 0.08365284, -0.1172261, 0.04280826, -0.09478262, 0.062069703, 0.11751137, 0.16467349, 0.147823, 0.017467353, 0.1673168) * inp_1_1_1;
    result3 += M4(0.06480499, 0.21435016, 0.012601679, -0.07940425, 0.057197705, 0.07445922, -0.029990846, 0.13244763, 0.03816898, 0.09721673, 0.008716398, -0.02238455, -0.11644538, 0.22655825, 0.068484284, -0.38330173) * inp_1_2_1;
    result3 += M4(-0.027980816, 0.08254159, -0.016677441, -0.026191322, 0.02853443, -0.031856652, 0.025463486, -0.044395797, 0.010257716, 0.20508964, -0.030991795, 0.002840729, -0.03582901, 0.08365585, -0.019787671, 0.10468603) * inp_1_0_2;
    result3 += M4(-0.024192406, 0.05644688, -0.06988361, 0.101869635, 0.04036717, -0.115165494, 0.010435608, -0.0072587156, 0.057317447, 0.11704474, 0.05645539, 0.07670044, -0.015086481, 0.122139655, -0.06140366, 0.06115439) * inp_1_1_2;
    result3 += M4(-0.10023916, -0.003720393, 0.024575163, 0.02416911, 0.06942085, 0.04157676, 0.0030484358, 0.06901463, 0.0665309, -0.050980754, 0.0014607989, 0.02292141, 0.008375547, 0.010552679, 0.022694513, -0.07698545) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.099327266, -0.19734347, 0.023405205, -0.040469427, -0.069576524, 0.22698088, -0.04566923, -0.0033674156, 0.055194814, 0.00627546, -0.008859861, 0.114508875, -0.22277138, -0.19749884, 0.0017245938, 0.12298769) * inp_2_0_0;
    result0 += M4(-0.0388573, -0.26327226, 0.113536865, -0.066813774, -0.008307715, -0.118816435, 0.120480195, 0.034209367, -0.18399082, -0.23431367, -0.2863076, -0.067845166, 0.1892581, -0.14881763, -0.103426546, -0.0669462) * inp_2_1_0;
    result0 += M4(-0.13817179, -0.37468973, 0.016900744, -0.20867035, -0.011761913, -0.017002864, -0.006292662, -0.023946743, -0.14204408, -0.0951932, -0.04559549, -0.23653674, -0.17851944, -0.142207, -0.008948497, -0.20065129) * inp_2_2_0;
    result0 += M4(-0.003951891, 0.02708664, -0.07617142, -0.07112568, -0.23784754, 0.06263503, -0.020790286, 0.10582367, 0.08857507, 0.0035257293, 0.0007416646, 0.031975545, -0.004547458, 0.15789765, -0.18703988, -0.01656878) * inp_2_0_1;
    result0 += M4(-0.048488166, 0.11972365, -0.21024908, 0.16596802, -0.3003323, 0.07001591, -0.06778842, -0.081872866, -0.27112907, -0.02463912, -0.18925306, 0.078749314, 0.0012131287, -0.25476384, -0.138706, 0.014565809) * inp_2_1_1;
    result0 += M4(-0.058487114, -0.12324179, -0.15136753, -0.26990408, 0.027168142, 0.06753009, 0.02314528, -0.106557034, -0.04130206, 0.043079387, -0.016635919, 0.09452307, 0.036408383, 0.0027787439, -0.21509887, -0.014679022) * inp_2_2_1;
    result0 += M4(0.06470938, 0.09382931, 0.001429733, 0.05596829, 0.040167768, -0.025197774, 0.08278771, 0.07682609, 0.039177492, -0.035121147, 0.041961145, 0.047380373, -0.048965517, 0.027992256, 0.0066751763, 0.042648394) * inp_2_0_2;
    result0 += M4(-0.1319986, 0.07216143, -0.11966663, -0.06500753, -0.19242057, 0.1272891, 0.017585564, -0.03335141, 0.008081392, -0.021473167, 0.09772165, 0.041672938, -0.040397808, 0.1811177, -0.03292099, 0.043910217) * inp_2_1_2;
    result0 += M4(0.023326896, 0.08456682, -0.055271033, -0.16464233, 0.061092075, 0.03380567, -0.07608132, -0.10548192, 0.05617929, 0.006425671, 0.07341997, 0.008110252, -0.021986783, 0.026889643, -0.28498235, -0.01739084) * inp_2_2_2;
    result1 += M4(-0.0054910434, 0.049850788, -0.012418086, -0.42501226, 0.08051788, 0.064565234, 0.00045226482, 0.06142482, 0.058603372, -0.029737707, -0.04008918, -0.30327487, -0.013661094, 0.08219929, 0.06408824, 0.20583926) * inp_2_0_0;
    result1 += M4(0.01386307, 0.040296156, -0.037080184, -0.011900682, -0.011370014, -0.055245403, -0.013789662, 0.059091162, -0.018539904, 0.055748437, 0.026431484, -0.20345637, 0.06098167, 0.07533246, -0.018466093, -0.49846184) * inp_2_1_0;
    result1 += M4(0.14215717, -0.0075322567, 0.022035567, 0.10101473, -0.022073232, -0.00039353172, 0.004642459, 0.07000366, 0.101662666, 0.04274378, -0.01025051, 0.07205303, -0.032742802, -0.007051446, 0.0032469572, 0.41459575) * inp_2_2_0;
    result1 += M4(-0.13432045, 0.08643612, -0.04527968, -0.15709934, -0.0633394, 0.055572283, -0.005793944, 0.037603687, -0.069001935, -0.0049124844, -0.15160772, 0.067651406, 0.042040072, -0.02391203, -0.030027766, -0.23827916) * inp_2_0_1;
    result1 += M4(-0.10286922, -0.018623896, -0.091441154, -0.021702684, 0.11166207, -0.12486638, -0.061671533, -0.29582304, -0.13354819, 0.1635236, -0.04956764, -0.26587456, -0.33034664, 0.098389424, 0.0035128507, 0.402945) * inp_2_1_1;
    result1 += M4(-0.25666276, -0.005483071, 0.031562038, -0.21753776, 0.1713924, -0.007846543, -0.0077249366, -0.04968331, -0.062924154, 0.020786868, 0.043079883, 0.05772765, 0.23654993, -0.13061354, -0.045138102, -0.008953151) * inp_2_2_1;
    result1 += M4(-0.047751185, 0.052749112, -0.063641325, -0.17740998, 0.12593879, 0.023113033, -0.065466076, 0.018611616, 0.05439008, -0.010713673, -0.10765984, 0.14395106, -0.08204934, 0.05642835, -0.028548928, -0.026628383) * inp_2_0_2;
    result1 += M4(-0.14849061, -0.0026113372, -0.08211174, -0.14520265, -0.005897877, -0.05852322, -0.15389945, -0.06484486, -0.046469696, 0.04792951, 0.06437951, 0.040567964, 0.18663418, -0.057227965, 0.026593415, 0.23354125) * inp_2_1_2;
    result1 += M4(-0.059646107, 0.07005957, 0.005958349, -0.25113717, 0.042943243, -0.034557097, 0.0026986161, -0.14551023, 0.031977214, -0.035673905, 0.036540225, 0.0011481286, 0.03567503, 0.18014143, 0.023466634, 0.06177368) * inp_2_2_2;
    result2 += M4(-0.0027595342, -0.024422338, 0.0760687, -0.11447081, 0.052474506, -0.006700514, 0.0031928003, 0.07153298, -0.123820454, 0.09164884, -0.096519224, 0.017495802, -0.049461294, -0.11002713, 0.018235786, 0.045306526) * inp_2_0_0;
    result2 += M4(-0.03295749, 0.0077406974, -0.027091825, -0.11946795, -0.07272239, 0.03939693, -0.048268765, -0.016127981, -0.24481715, 0.22202404, 0.05974662, -0.13103595, -0.09597782, 0.25917208, 0.062486485, 0.2943767) * inp_2_1_0;
    result2 += M4(0.08712361, -0.10440939, 0.003173829, 0.11503994, -0.0014959474, -0.018996863, -0.017594818, 0.017653374, -0.010954605, 0.03650569, -0.0011460035, -0.14265597, 0.10800127, -0.16128315, -0.011566138, -0.27378985) * inp_2_2_0;
    result2 += M4(0.038935136, -0.004823991, 0.1062984, 0.15455575, 0.09916632, -0.13421169, -0.013511387, -0.05908325, 0.08108109, 0.19030799, 0.0034463278, 0.11592769, -0.12983847, -0.023244837, -0.039532617, 0.006293618) * inp_2_0_1;
    result2 += M4(-0.19641338, -0.03179011, 0.0715427, -0.007346958, -0.2676464, -0.00165006, -0.16531764, -0.25528014, -0.043380536, 0.24669898, 0.03290841, 0.04717181, 0.0698383, 0.1327665, 0.029068314, -0.1872724) * inp_2_1_1;
    result2 += M4(-0.07341289, -0.13866448, 0.014529885, -0.17764033, -0.059806246, 0.034720905, -0.028848208, 0.012193441, 0.08292398, 0.026603991, 0.0073691406, 0.06475809, -0.19293357, -0.078239165, -0.009785807, -0.011686099) * inp_2_2_1;
    result2 += M4(0.020221934, -0.08089104, 0.054319117, -0.033711538, 0.021431085, 0.05163715, 0.012255486, 0.05081805, -0.028603436, 0.055502065, -0.03488738, 0.016554732, 0.08229723, 0.09979829, 0.026020868, 0.09672483) * inp_2_0_2;
    result2 += M4(-0.058226325, -0.016181262, 0.041823838, 0.02160332, 0.08998086, 0.12718011, -0.03749695, 0.12383807, 0.023375737, 0.07131308, -0.035552226, 0.0514335, 0.12628563, -0.019006351, 0.024769554, 0.05725728) * inp_2_1_2;
    result2 += M4(0.0903612, -0.107122, 0.015167629, -0.1808563, -0.0055455337, -0.009582709, -0.0021704896, -0.011554842, 0.0016160302, -0.0094168745, -0.0501597, -0.005669111, 0.012586132, 0.07661975, 0.018984772, 0.019037263) * inp_2_2_2;
    result3 += M4(0.00819078, 0.034764238, 0.027763024, -0.004553247, 0.020465547, -0.006741577, 0.020717038, -0.059831604, 0.04669992, 0.38186225, -0.038989183, -0.027837224, 0.07532312, -0.20730728, 0.062976964, 0.0042113843) * inp_2_0_0;
    result3 += M4(0.028858557, -0.13480285, -0.030449048, -0.01858301, -0.00688138, -0.01933629, -0.020212045, -0.26126537, 0.1486676, 0.043251596, 0.034826975, -0.37551254, -0.03629462, 0.13745402, -0.018711133, 0.0063970936) * inp_2_1_0;
    result3 += M4(0.034310002, -0.13250735, 0.02679016, 0.18575135, 0.04493449, 0.02469072, -0.012673704, 0.06731999, 0.1138961, 0.089625284, -0.0040836902, 0.118923984, 0.10793144, -0.13120475, -0.018829433, 0.031075068) * inp_2_2_0;
    result3 += M4(-0.024595466, -0.0017760606, 0.054523665, 0.0058268444, 0.0062053646, 0.017736878, 0.09701081, 0.05083375, 0.027114684, 0.13053286, 0.017018037, -0.0068402286, -0.03362144, 0.047580075, -0.020477416, -0.06291422) * inp_2_0_1;
    result3 += M4(0.018385252, -0.27824366, 0.121290505, -0.30192474, 0.07752116, 0.15021776, -0.054546107, -0.12368976, 0.08611436, 0.3279355, 0.098094106, -0.057045855, 0.07265341, 0.36958072, 0.12825891, -0.11692188) * inp_2_1_1;
    result3 += M4(-0.0069460506, -0.157952, 0.0031604923, -0.15633777, 0.1432155, -0.033575863, -0.008422914, -0.05776206, 0.1308915, 0.007576581, 0.047882363, 0.026228797, 0.040139634, -0.15765864, 0.009233674, -0.0019595814) * inp_2_2_1;
    result3 += M4(0.015145862, 0.02398443, 0.044087827, -0.034232903, 0.017915796, 0.073885806, 0.006636393, 0.018311944, -0.0012060233, 0.033087738, -0.014540136, 0.009376882, -0.0021391332, -0.09462321, 0.059797376, 0.040352132) * inp_2_0_2;
    result3 += M4(0.03502607, -0.124432296, 0.037551038, -0.1375653, -0.04015027, -0.048464037, -0.015617663, -0.060136843, 0.0547433, 0.036309794, 0.0036044142, 0.021471512, 0.054068625, -0.04840818, -0.030050062, -0.11285828) * inp_2_1_2;
    result3 += M4(-0.002470136, 0.062248696, 0.0048309835, 0.028423859, -0.033954423, 0.10323168, -0.0137014445, 0.02913103, 0.046096656, 0.054957736, -0.045987718, 0.08306834, -0.014060341, 0.010707184, 0.03672866, -0.061591994) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.41074878, -0.6560612, -0.13742319, 0.29348475, 0.32939363, -0.20080282, 0.03980241, 0.47470334, -0.014975556, 0.090164684, 0.03480443, 0.0034968737, -0.099275544, -0.28125027, 0.046038356, 0.07036577) * inp_3_0_0;
    result0 += M4(0.14656965, -0.08660067, 0.12051316, -0.13369828, 0.5944347, 0.04229577, 0.2270018, 0.059958052, 0.055276163, 0.13327406, 0.09228222, -0.13079782, -0.1283748, -0.50504684, -0.027939778, 0.11843124) * inp_3_1_0;
    result0 += M4(0.019061238, -0.24192709, 0.007810607, 0.041539095, 0.16220598, -0.23094279, 0.26351663, -0.6794416, 0.11114468, 0.09146339, -0.054014485, 0.005412056, 0.09406903, -0.06452124, 0.026061006, 0.13922963) * inp_3_2_0;
    result0 += M4(-0.65900195, -0.048059024, -0.57776344, 0.21176769, 0.07450945, 0.005210438, 0.18488085, -0.07681445, -0.05966769, 0.070960134, -0.021095982, 0.0038761222, 0.19335943, 0.18880223, 0.078663565, -0.08517117) * inp_3_0_1;
    result0 += M4(-0.34799942, 0.11373098, 0.13511474, 0.070314884, -0.07242913, -0.11526587, -0.17728819, 0.14233196, 0.081932865, -0.23138008, -0.25275892, 0.11191508, -0.48923466, 0.019239264, -0.07728984, 0.2205588) * inp_3_1_1;
    result0 += M4(-0.11023786, 0.22220083, -0.024222372, -0.114419825, -0.018821646, 0.10456057, 0.25579715, 0.008251335, -0.09372108, 0.04188927, 0.080260985, -0.1384145, 0.020756679, -0.06904558, 0.08344028, -0.037428614) * inp_3_2_1;
    result0 += M4(-0.3600747, -0.26936305, -0.680128, -0.26069018, -0.011429623, -0.044496253, 0.07854452, -0.035151597, -0.071132824, 0.02079584, -0.06717599, 0.0034060047, 0.038351156, -0.018475251, -0.1107882, -0.030924961) * inp_3_0_2;
    result0 += M4(0.021049198, -0.09288819, -0.33237645, 0.07824333, 0.014627612, 0.01776313, 0.02966517, 0.06306001, -0.032107446, -0.028274901, -0.09445414, 0.02632297, 0.071606465, -0.14692558, -0.15559229, 0.0019277065) * inp_3_1_2;
    result0 += M4(-0.024664123, -0.06070841, -0.049686354, -0.024428269, 0.08294654, -0.064942375, 0.029672407, 0.03740125, 0.025123747, 0.018347546, 0.08631778, -0.043997616, -0.029849311, 0.09310818, -0.0615309, 0.03578469) * inp_3_2_2;
    result1 += M4(-0.1752538, -0.03128072, -0.14510539, -0.72136676, 0.06004051, 0.08510166, -0.07095998, -1.7786711, 0.0438158, -0.007215253, 0.027656907, 0.018095769, -0.005573665, -0.037288256, 0.017828666, 0.2218996) * inp_3_0_0;
    result1 += M4(-0.003950033, 0.050500255, -0.030749198, 0.0015668932, -0.24113202, 0.5739776, -0.4216843, -1.2391503, -0.13278069, 0.022162013, 0.02474976, 0.0033994282, 0.10668733, -0.08179886, 0.004292341, -0.1265333) * inp_3_1_0;
    result1 += M4(0.042769223, -0.019030137, -0.003782748, 0.030886343, -0.24057709, 0.36114368, -0.10189777, -1.064039, -0.09879966, 0.042936772, 0.0012874287, 0.007107673, 0.0007532437, -0.027436696, -0.008890416, -0.069381334) * inp_3_2_0;
    result1 += M4(-0.19618231, -0.18089996, -0.2080111, -0.94424903, -0.018430976, -0.049888607, 0.3495503, -0.2297311, 0.03851883, -0.1451864, 0.01454262, -0.1167672, 0.0019806412, -0.04195211, -0.00482211, -0.10489196) * inp_3_0_1;
    result1 += M4(0.14048095, 0.060174387, -0.06352926, -0.28895274, 0.04862359, 0.12894207, 0.5842529, 0.27391353, 0.4442962, -0.29583353, 0.09160262, 0.10724792, -0.37576133, 0.069910094, 0.0038650262, -0.38750172) * inp_3_1_1;
    result1 += M4(-0.03666219, 0.060569376, 0.0037997128, -0.12470422, -0.053927515, 0.033694327, 0.15127723, 0.080312096, 0.06517571, 0.012838294, -0.056040708, 0.04839202, -0.046745982, 0.015111196, 0.011642635, 0.12695031) * inp_3_2_1;
    result1 += M4(-0.9382354, -0.48538202, -0.54601693, -0.52123606, 0.084090985, -0.08331105, 0.035044357, 0.15112181, 0.0017259672, -0.012008782, -0.098775364, -0.086329795, -0.017747398, -0.045133457, -0.08333078, 0.19569336) * inp_3_0_2;
    result1 += M4(-0.24391162, -0.1679897, 0.015046827, 0.118739255, 0.0036020845, 0.023301095, 0.05322611, -0.026369998, -0.19758277, 0.1038051, 0.09166692, -0.00821887, -0.34713197, -0.14091161, 0.11960879, -0.15376836) * inp_3_1_2;
    result1 += M4(-0.047379166, -0.04589414, 0.02718076, -0.08285677, 0.03595562, -0.051000185, -0.007803629, 0.102241814, 0.11566397, 0.018665371, -0.0387774, -0.052288253, -0.044806216, 0.012299229, -0.011642172, -0.022385485) * inp_3_2_2;
    result2 += M4(-0.15522207, 0.14109464, -0.061927285, -0.2648044, 0.38328058, 0.5501015, 0.10448884, -1.0293124, 0.062177107, -0.05910474, 0.0016810908, -0.048897434, 0.040000595, -0.08098454, -0.084125236, 0.011227211) * inp_3_0_0;
    result2 += M4(0.27743214, -0.081270345, -0.05254908, -0.04215418, 0.77716327, -0.15268365, 0.22016044, -0.6743554, -0.03547691, -0.035388216, 0.2373116, -0.124518834, 0.04458579, 0.14857656, -0.051122658, 0.18305269) * inp_3_1_0;
    result2 += M4(0.023122838, 0.0062525775, -0.005992477, 0.10617869, 0.6189647, -0.029696388, -0.08688762, -0.03317041, 0.081258744, -0.0301916, 0.0985255, 0.11362513, 0.026077153, 0.06273083, -0.03324968, 0.09973884) * inp_3_2_0;
    result2 += M4(-0.6498066, 0.8978234, 0.01673967, -0.57132083, 0.025279606, -0.09262979, 0.0026448958, -0.10082531, -0.056576382, 0.06446163, -0.037441295, -0.049337905, -0.07957065, 0.2840675, -0.0243401, -0.00513194) * inp_3_0_1;
    result2 += M4(-0.21583357, 0.21288532, 0.0099999895, -0.10298651, 0.0039111073, 0.21601617, 0.135507, 0.106306374, -0.32592902, -0.24916239, 0.24517779, -0.1504304, -0.1540968, 0.0935746, -0.031572223, -0.4072166) * inp_3_1_1;
    result2 += M4(-0.14282054, 0.008821332, 0.082306765, -0.046019863, 0.17726004, 0.0018189502, -0.10103967, 0.062282518, 0.1301058, 0.032101586, -0.08430842, -0.04637765, -0.0064993836, -0.04278486, 0.016775753, 0.0005130251) * inp_3_2_1;
    result2 += M4(-0.8354453, 0.12410678, -0.054182805, -0.11263036, -0.027941834, 0.025390657, -0.047217622, -0.043551482, -0.047955133, -0.0050871274, -0.0009823921, 0.023474133, 0.022688651, -0.15185742, -0.016726624, -0.026889661) * inp_3_0_2;
    result2 += M4(-0.15218607, -0.0073022516, -0.103263065, 0.033523887, 0.016939195, 0.039715845, -0.020146016, 0.037102275, 0.028242426, 0.038436633, 0.08699673, 0.03656606, -0.12567554, 0.10683149, -0.09267857, -0.025277501) * inp_3_1_2;
    result2 += M4(0.049896505, -0.048874315, -0.04950157, -0.10487306, 0.015855726, -0.036359906, -0.005129448, 0.051802255, 0.041865256, 0.00014228515, -0.042861614, -0.029913919, 0.10184127, -0.037172575, -0.016470494, 0.020836761) * inp_3_2_2;
    result3 += M4(0.11147687, -0.048308298, -0.026725795, 0.18492013, 0.09950558, -1.0188718, 0.11381956, 0.16960846, 0.022032533, 0.06590306, 0.026961092, -0.0028670584, 8.385333e-05, 0.034429416, -0.03595208, 0.030835612) * inp_3_0_0;
    result3 += M4(0.14456372, -0.15247007, -0.028162768, 0.18180141, 0.35511777, 0.011000227, 0.22492628, 0.36317134, -0.07175533, -0.09640046, -0.02624125, 0.021133611, -0.012426644, -0.10681104, -0.035216916, 0.09581804) * inp_3_1_0;
    result3 += M4(0.031940218, -0.0026068776, 0.001655053, 0.13526416, 0.26054323, -0.1267611, 0.06923638, 0.31261295, -0.06312689, -0.04166142, 0.05215589, 0.23690574, 0.014603409, 0.08221708, -0.0059500905, 0.15521646) * inp_3_2_0;
    result3 += M4(0.16264111, -2.080607, 0.14136802, -0.5787656, 0.09156351, -0.47700125, 0.28203326, 0.018794162, -0.05449484, 0.02041477, -0.0799752, -0.006478309, -0.06416145, 0.11281988, -0.04660575, -0.071263924) * inp_3_0_1;
    result3 += M4(0.36247545, -0.10003288, -0.021551218, 0.28545564, 0.37407774, -0.61746866, 0.601787, 0.12145874, 0.23908179, 0.20614253, 0.25599447, 0.002764586, -0.008943836, -0.30796817, 0.043682773, -0.08101227) * inp_3_1_1;
    result3 += M4(0.014055784, -0.0560541, 0.04522626, -0.14294171, 0.2654144, -0.56291354, 0.019868493, 0.051417954, -0.121674076, -0.08880243, -0.032932073, -0.030392, -0.003756682, 0.044993225, 0.023333278, -0.14025061) * inp_3_2_1;
    result3 += M4(-0.13705789, -0.45960066, 0.13810506, -0.20126878, -0.0042647524, -0.012837793, 0.017352475, 0.01572488, -0.028980542, -0.10468951, 0.004465595, 0.0068063224, 0.006015592, 0.077645935, -0.01924843, -0.050874453) * inp_3_0_2;
    result3 += M4(0.13235734, 0.15181194, -0.056376584, -0.003907792, 0.0454918, -0.05125595, -0.019908907, 0.04962993, 0.067714304, 0.030853473, 0.05395702, -0.0024840974, -0.07353605, 0.059263006, -0.045539584, -0.09127876) * inp_3_1_2;
    result3 += M4(-0.0030549986, 0.09554559, -0.04865595, 0.061510716, -0.059801664, 0.10475263, -0.032751236, 0.013435435, -0.0771544, 0.040932607, -0.032938477, -0.01067756, -0.0020567144, -0.024069214, 0.0053758244, -0.056656078) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-4-ReLU)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_3
//!SAVE conv2d_4
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_3_mul * texelFetch(conv2d_3_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(-0.004760819, -0.0060301544, -0.0050231577, -0.00045999946);
    V4 result1 = V4(-0.0010294986, -0.0040597385, -0.0051982556, -0.010785493);
    V4 result2 = V4(0.008123249, -0.07941355, -0.0076336293, 0.0050524296);
    V4 result3 = V4(0.009014596, 0.004650505, -0.004099887, -0.0008668175);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0027570063, -0.113197915, -0.012744174, 0.03966345, -0.0005040071, -0.0020369315, 0.02176865, -0.029826911, -0.025564004, -0.05819292, 0.010562815, -0.07545537, 0.0072143395, 0.097503185, -0.026487261, 0.016522514) * inp_0_0_0;
    result0 += M4(-0.017613523, -0.00575974, -0.03734023, 0.117889315, -0.004584592, 0.042551205, 0.035041977, -0.0037986068, 0.045438815, 0.13561055, 0.046323966, -0.15271126, 0.008997955, -0.093032025, -0.0003126643, -0.010079061) * inp_0_1_0;
    result0 += M4(0.013784122, -0.001894201, -0.00073557935, -0.021481259, 0.001522155, -0.00072762626, -0.006799335, -0.0053642425, -0.027762085, -0.063813455, 0.04271968, 0.015042898, 0.001275903, 0.016588561, -0.046115004, 0.022836087) * inp_0_2_0;
    result0 += M4(0.053341918, 0.10130319, -0.08020087, 0.0536902, -0.006314842, -0.16137218, -0.07407972, 0.05174571, -0.00912912, -0.064098, 0.0038836657, 0.020017631, 0.026068458, 0.4296546, -0.042750377, 0.02252344) * inp_0_0_1;
    result0 += M4(0.058525857, 0.012758684, 0.3047895, 0.14103617, -0.055846754, -0.036242753, -0.27004603, 0.10965106, 0.086114675, -0.07786662, 0.1188499, -0.113340735, 0.007281259, 8.8245906e-05, -0.19348057, -0.11424528) * inp_0_1_1;
    result0 += M4(0.0037374718, 0.01339798, -0.10861925, 0.06550221, 0.009884693, -0.0008394005, 0.03373739, 0.0012031129, 0.009191873, -0.04880075, 0.03854267, -0.02627261, 0.004122967, 0.05410077, 0.08515615, -0.093750365) * inp_0_2_1;
    result0 += M4(-0.050241414, -0.025292322, 0.01811145, -0.0040264623, -0.004257907, -0.0017015523, 0.05782948, -0.0036224194, 0.013424455, -0.13557799, 0.006967336, 0.0071826917, 0.08460786, 0.27570358, 8.7994704e-05, -0.110597715) * inp_0_0_2;
    result0 += M4(-0.005039968, 0.041032813, -0.055642106, 0.025935983, 0.18857767, -0.04551758, 0.1493488, 0.032434136, -0.066283375, -0.124412075, -0.0016374977, 0.071507424, -0.02552058, -0.1291281, 0.07320162, 0.0032114442) * inp_0_1_2;
    result0 += M4(-0.025476476, -0.054505967, -0.07671523, -0.014613941, -0.0109128365, -0.019282598, 0.017539788, 0.009034073, 0.0023440283, -0.020866768, -0.013301521, 0.05427359, 0.014684959, 0.058199976, -0.026044667, 0.05226787) * inp_0_2_2;
    result1 += M4(-0.013099121, -0.05357071, -0.008039392, -0.024099728, -0.0117103625, 0.016282968, 0.010755078, 0.04198359, -0.042957336, 0.039105035, 0.028514476, 0.04001337, 0.052942842, -0.007091072, 0.0084563885, -0.07698645) * inp_0_0_0;
    result1 += M4(0.02122371, -0.046264295, -0.012312426, -0.049964443, 0.017129917, 0.027800657, -0.02385431, 0.049401455, -0.06130542, 0.05291209, -0.009786454, 0.042881105, -0.04659932, -0.0062250094, -0.057298593, 0.1329808) * inp_0_1_0;
    result1 += M4(-0.019926248, 0.0060938247, -0.02804148, 0.017544705, 0.010215199, 0.010793922, 0.009693621, 0.041128248, 0.034976788, 0.022511378, 0.006075287, 0.05568325, -0.033130396, -0.00016668161, 0.025392173, 0.016941719) * inp_0_2_0;
    result1 += M4(0.043634202, 0.01140747, -0.0016839487, -0.010212932, -0.017397316, -0.061777353, 0.009261426, -0.07303485, 0.010769864, 0.058475103, -0.033344068, 0.018130153, 0.12165511, 0.02454554, 0.10333603, -0.03149026) * inp_0_0_1;
    result1 += M4(0.16680332, 0.10886251, 0.11613194, 0.23294006, -0.2986178, 0.0993938, -0.025565788, -0.27448285, 0.03948158, 0.27937546, 0.011942281, 0.41076767, 0.09881664, -0.04725872, -0.07136656, -0.23809458) * inp_0_1_1;
    result1 += M4(-0.02617538, 0.015262331, -0.015481618, 0.08267641, 0.0055053383, -0.06380939, -0.011695959, -0.017256208, -0.060675655, 0.0066437544, -0.03534979, 0.03217869, -0.04916881, 0.030542966, 0.0607469, 0.041434947) * inp_0_2_1;
    result1 += M4(-0.004410801, 0.02146545, -0.14320308, 0.013323903, 0.012507258, 0.07184926, -0.150428, 0.14072375, 0.007015452, 0.016065339, -0.04873521, 0.031523723, 0.17702357, 0.07024306, 0.05219571, 0.061928898) * inp_0_0_2;
    result1 += M4(-0.042501733, -0.13745376, 0.20047185, -0.1274962, 0.17010738, 0.19934739, 0.027263895, 0.2852434, -0.015934153, -0.2830826, -0.03678322, 0.050287355, -0.07802346, -0.15967527, -0.24844185, -0.08823411) * inp_0_1_2;
    result1 += M4(-0.017391177, 0.039352417, -0.060084235, 0.007226834, -0.016087271, 0.13434419, -0.04702679, 0.31372315, -0.014384661, -0.020436672, 0.009650719, -0.0045349123, 0.0011670071, -0.04715407, 0.023705935, -0.06320327) * inp_0_2_2;
    result2 += M4(-0.01628725, -0.013438359, 0.023833286, 0.027556578, -0.0056253634, 0.049077887, 0.011670382, -0.019582245, 0.026370678, 0.05749909, 0.02845634, -0.0029567939, -0.013244086, -0.028927185, -0.018836368, -0.066542156) * inp_0_0_0;
    result2 += M4(-0.0036363453, -0.0742306, 0.018063447, -0.10515204, -0.007845628, -0.10810551, -0.027738914, -0.005505837, -0.023739206, 0.018690262, 0.03587266, 0.072678365, -0.0016831199, 0.0193781, -0.020934692, -0.051692113) * inp_0_1_0;
    result2 += M4(-0.031336524, -0.10046596, -0.027532695, 0.0020000944, -0.0068745525, 0.06824589, 0.01975859, 0.018198367, -0.0029479414, -0.019766122, -0.01616741, -0.03944213, 0.005324395, -0.091041595, 0.022727292, -0.030592997) * inp_0_2_0;
    result2 += M4(-0.033011265, -0.013295872, -0.0001258794, -0.038263716, -0.03201569, 0.034783617, 0.006168354, 0.059042856, -0.005788276, -0.025577337, -0.037995823, -0.012944846, -0.035531174, 0.05987536, -0.02867254, -0.16804144) * inp_0_0_1;
    result2 += M4(-0.13314869, 0.040920332, -0.11170179, -0.0738203, -0.022032384, 0.047597572, 0.042592324, -0.051696464, -0.3090297, -0.04216491, -0.0849631, -0.12996218, -0.03689353, 0.041612122, 0.21204454, 0.27756268) * inp_0_1_1;
    result2 += M4(-0.057185683, -0.015888505, -0.05982229, 0.02471432, 0.021532282, -0.049765456, -0.20650305, -0.011853151, -0.046409875, -0.01958343, -0.054369695, -0.03452859, -0.018593123, -0.07388649, -0.090191394, 0.044094205) * inp_0_2_1;
    result2 += M4(-0.027429521, -0.09964044, -0.003865764, 0.00013189725, 0.065912105, -0.101827845, 0.0025772098, -0.042323135, 0.01895712, 0.04922936, -0.019496735, -0.01480657, 0.027433189, -0.017341437, 0.01851049, -0.019388186) * inp_0_0_2;
    result2 += M4(-0.15410276, 0.017723408, -0.01491231, 0.0236133, 0.067616776, -0.07312661, -0.030885635, 0.022326618, -0.012140465, -0.01353332, 0.020057233, 0.00041272893, 0.051775537, -0.0554113, -0.037833624, 0.017387863) * inp_0_1_2;
    result2 += M4(-0.03799435, -0.039369382, -0.012367689, -0.019536937, -0.0017949305, 0.06999211, 0.05019379, -0.0053730058, -0.013315205, 0.010817597, 0.021948392, -0.0017529791, 0.04039024, -0.04060727, 0.09607828, -0.0052866954) * inp_0_2_2;
    result3 += M4(0.0060720895, -0.024861466, 0.03750945, 0.0035047268, -0.012489607, 0.003891226, 0.005738804, -0.006900025, -0.010635297, 0.049847823, -0.1466294, -0.059956573, 0.0028371378, 0.09233563, 0.106267035, 0.19102876) * inp_0_0_0;
    result3 += M4(-0.014461791, 0.11994311, 0.029844288, 0.11923951, 0.015445541, 0.03192173, -0.022103088, -0.045478597, 0.053041704, -0.114689656, 0.158905, -0.017977402, -0.034633074, 0.19540729, 0.12305302, 0.030753192) * inp_0_1_0;
    result3 += M4(0.016071862, -0.15119797, -0.021907328, -0.0016442393, 0.010624501, 0.053733088, 0.03514007, -0.023397852, -0.014543572, -0.138774, -0.034020234, -0.044323582, -0.02285893, 0.065971464, -0.057767544, -0.012787001) * inp_0_2_0;
    result3 += M4(0.048354663, -0.1285785, 0.11282679, 0.4184077, 0.07729407, -0.039965514, 0.055893887, -0.22130169, 0.060986258, -0.12523837, 0.07281512, 0.17859219, -0.060271833, -0.0057900785, 0.2030729, -0.026219474) * inp_0_0_1;
    result3 += M4(-0.017451523, 0.30108464, 0.026777804, 0.057886846, 0.022712551, 0.115570396, -0.07545172, 0.019017816, -0.05126926, -0.24343328, -0.06858999, -0.13247235, 0.058977205, -0.2218481, 0.36881843, 0.11737341) * inp_0_1_1;
    result3 += M4(0.0133137945, -0.027983341, 0.041508418, 0.03005884, 0.003591495, 0.038851254, 0.024623357, -0.088588074, -0.01608005, 0.08889109, 0.013351312, -0.021927776, 0.01450683, 0.15106286, -0.017735014, 0.027098266) * inp_0_2_1;
    result3 += M4(-0.033036336, -0.18729675, 0.04236371, 0.20162757, -0.047570024, 0.06863384, -0.08032096, -0.019154387, -0.015045803, -0.045289453, 0.031099798, -0.008991201, -0.034452338, 0.088667415, -0.032441035, 0.06701367) * inp_0_0_2;
    result3 += M4(0.014795587, 0.096461065, -0.008687749, 0.1228955, -0.08527437, -0.1228737, -0.011133591, -0.105081566, -0.0016210478, 0.015771238, -0.027420964, -0.06901074, -0.028081477, 0.09647445, 0.05041168, -0.07959955) * inp_0_1_2;
    result3 += M4(-0.020466581, 0.0819417, -0.0005764135, 0.007306305, -0.039644077, -0.02059158, 0.0064376337, -0.004523914, -0.0024685252, 0.058229007, 0.0036364773, -0.029401254, -0.010860249, 0.071520194, -0.0391814, -0.010229197) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.0066530686, -0.217329, 0.018638883, -0.023517214, 0.018706935, 0.011361639, -0.056077447, 0.07688227, 0.009983274, 0.20847869, -0.08264526, 0.02979259, 0.036832478, 0.16683696, 0.029075667, -0.015749192) * inp_1_0_0;
    result0 += M4(0.0368688, -0.17563891, 0.25061426, 0.01883199, -0.10525319, -0.07359741, -0.08758653, 0.14309096, -0.25172204, 0.19057775, 0.003602676, -0.3098492, -0.024928655, 0.045899257, 0.010130581, -0.007200812) * inp_1_1_0;
    result0 += M4(-0.035230085, 0.03412511, -0.010209193, 0.060209174, 0.032275368, 0.09616587, -0.05878426, -0.002336201, -0.07904502, 0.007380144, -0.027378287, 0.1849886, 0.030986562, 0.054659076, -0.090903826, -0.05555021) * inp_1_2_0;
    result0 += M4(0.013332581, -0.2359555, -0.021701911, 0.025316171, 0.02433632, -0.151336, -0.08616499, 0.05682785, -0.0075133545, -0.31469727, 0.019014064, 0.016369767, -0.03553463, 0.21247143, -0.021241672, -0.032026704) * inp_1_0_1;
    result0 += M4(-0.057583105, 0.18147548, -0.2309125, 0.2819461, -0.004229392, 0.07125937, -0.21774635, 0.27740067, 0.16004905, 0.24422327, -0.09405605, 0.00062328845, 0.1117599, -0.10024848, -0.08147931, -0.03533997) * inp_1_1_1;
    result0 += M4(0.065617375, 0.084123105, 0.006116422, 0.08337585, -0.07106616, 0.02236648, -0.14916319, 0.11152702, 0.14466025, 0.31023443, 0.046676505, -0.09334317, -0.0406832, 0.037195824, 0.082644135, -0.22228566) * inp_1_2_1;
    result0 += M4(-0.05075174, -0.14253132, -0.012100912, -0.05711717, -0.03465549, -0.19241337, 0.004431369, -0.03549213, 0.028105153, 0.21880521, 0.0254435, -0.0037940477, 0.036387768, 0.13446674, -0.0151355155, -0.021253578) * inp_1_0_2;
    result0 += M4(0.119936444, 0.32866636, 0.027373876, -0.03548107, 0.1125175, 0.19655491, -0.037279844, 0.01259491, 0.058088835, 0.08940992, 0.016504241, -0.023405118, -0.04280162, -0.22028987, -0.02967916, -0.029287463) * inp_1_1_2;
    result0 += M4(0.015643436, -0.063313484, 0.014414275, -0.030450268, -0.020303339, -0.024157861, -0.01311934, -0.0358071, 0.0076268516, -0.043001123, -0.007032225, 0.028397884, 0.042230643, 0.043277834, -0.013673061, -0.029375138) * inp_1_2_2;
    result1 += M4(0.030664168, 0.007810114, 0.014872706, 0.12825641, -0.045265265, 0.004192814, 0.017235141, 0.029767934, 0.011613868, -0.106178455, -0.04500172, -0.011606436, -0.0057945633, -0.036025103, 0.0062423013, 0.03596546) * inp_1_0_0;
    result1 += M4(0.31332472, -0.1011503, -0.00055912154, 0.16142109, -0.020593366, -0.061400894, 0.017000232, -0.22100584, -0.18292116, -0.22251955, 0.14661445, -0.29107037, 0.03423077, -0.034439795, 0.06543069, -0.10663645) * inp_1_1_0;
    result1 += M4(-0.009957957, 0.03657671, 0.0012539431, 0.1521189, -0.098161496, -0.0035481856, 0.014369678, -0.027012704, 0.135008, 0.07393577, 0.28409386, -0.36901116, -0.023539081, -0.031169025, 0.0020077038, -0.1510347) * inp_1_2_0;
    result1 += M4(-0.016844386, -0.015228089, 0.061798554, -0.029424, -0.048145406, -0.03983176, -0.0062343567, -0.005676267, -0.005370543, -0.14717466, -0.100080274, -0.029611861, -0.07186409, 0.022272374, 0.084790014, -0.071436) * inp_1_0_1;
    result1 += M4(-0.22793466, 0.058871463, 0.07202135, -0.30173865, -0.12637188, -0.17948236, 0.10013989, -0.055156052, -0.124573104, -0.47908533, 0.35049003, -0.34474632, 0.2647842, 0.04685769, -0.064279206, 0.08558742) * inp_1_1_1;
    result1 += M4(0.020316603, 0.023465246, 0.053601757, -0.0809698, -0.020233905, -0.012164525, 0.05131135, 0.051602032, -0.013066083, -0.15865895, 0.078803666, 0.17729251, -0.06810655, -0.057404593, 0.023475956, -0.03199583) * inp_1_2_1;
    result1 += M4(0.011387224, 0.03654079, -0.0047210613, 0.017564029, -0.0009619125, 0.012333986, -0.042906255, 0.02261239, 0.05640217, 0.085781835, -0.064754725, -0.0058962316, 0.010401921, -0.054466996, -0.023153247, -0.027083678) * inp_1_0_2;
    result1 += M4(-0.025114933, 0.26444522, 0.0557251, 0.07837555, -0.019846184, -0.0061205886, 0.12844832, -0.037930127, -0.022230292, 0.19688809, 0.10701532, 0.11307022, -0.06850113, -0.18860513, -0.013064574, -0.052126937) * inp_1_1_2;
    result1 += M4(0.018927248, 0.08008563, -0.046781164, -0.006244363, -0.013167868, 0.055499487, -0.06355111, -0.0014452132, -0.021913847, -0.026572326, 0.047517955, -0.0066149104, 0.011680317, -0.0098649785, 0.09708724, -0.010113285) * inp_1_2_2;
    result2 += M4(-0.0047897953, -0.10036785, -0.011247956, -0.023092665, -0.01818963, -0.10499049, 0.02053392, 0.07814569, -0.014553305, 0.023455955, -0.037892092, -0.027094875, -0.0030509483, 0.025132628, -0.0072989515, -0.0007063251) * inp_1_0_0;
    result2 += M4(0.018050306, -0.026452975, 0.012786621, -0.12807165, -0.018793233, -0.09976585, -0.030839546, -0.061748546, -0.044417314, -0.026598182, -0.08335691, 0.16797855, -0.013792916, -0.0053874245, 0.06284129, -0.013215491) * inp_1_1_0;
    result2 += M4(-0.030425454, -0.03421929, 0.31891, -0.02655289, -0.03226821, -0.04597926, -0.2198706, 0.011780392, 0.013510413, 0.068002984, -0.052599765, -0.2644927, -0.008299686, 0.053870603, 0.087727964, 0.047683205) * inp_1_2_0;
    result2 += M4(-0.030842882, -0.000682662, 0.011150311, 0.0072271167, 0.033329014, -0.06188026, -0.0006522426, 0.037014548, -0.0111495415, -0.07885621, 0.018093731, 0.0056118886, -0.019585678, -0.008038459, 0.00843295, 0.003907287) * inp_1_0_1;
    result2 += M4(0.03249357, -0.083053, 0.023438325, 0.14405386, 0.33059725, -0.08005884, -0.071949184, 0.17143892, 0.056456096, 0.040417254, -0.010446603, 0.09525217, 0.05207092, -0.054872032, 0.025621865, 0.09566838) * inp_1_1_1;
    result2 += M4(0.05172516, -0.088627174, 0.120669216, 0.009503402, 0.11633913, -0.10624652, 0.27336937, 0.077227935, -0.0145303365, 0.032209862, 0.014301905, -0.00969094, -0.026576808, 0.0060096597, -0.0040318817, 0.00840193) * inp_1_2_1;
    result2 += M4(-0.0044824486, -0.03642671, -0.004654066, 0.0011448837, 0.032497823, -0.084305346, -0.005459148, 0.009832477, 0.03759835, -0.08560662, -0.008755708, -0.025816947, 0.04234282, 0.052457325, -0.00954738, 0.007048054) * inp_1_0_2;
    result2 += M4(-0.0048457957, -0.035289586, -0.014462437, 0.011170555, 0.059088062, -0.041649923, -0.009745454, 0.028031446, -0.035396226, -0.045888606, 0.0067982813, -0.016880646, 0.15227284, 0.026985772, 0.0025601564, -0.033128448) * inp_1_1_2;
    result2 += M4(-0.0069633108, -0.098056756, 0.0022254772, -0.005490217, 0.06014772, 0.022609346, 0.01867867, 0.004705427, -0.0021452587, -0.01692275, 0.018796314, 0.02261869, 0.08274084, 0.039416946, 0.012200737, -0.022691133) * inp_1_2_2;
    result3 += M4(0.00033334835, -0.23863326, -0.014395672, 0.047899343, 0.044162583, -0.072905995, 0.04575051, -0.103689715, -0.0016098226, -0.30062118, 0.16467863, 0.3765814, -0.04281284, 0.10038478, -0.122934625, -0.1042122) * inp_1_0_0;
    result3 += M4(0.03354851, -0.21855818, 0.04848054, -0.046930626, -0.057111647, -0.08275998, 0.0027308778, 0.1728957, -0.49174154, 0.8994288, -0.27154177, 0.031502213, 0.01268882, -0.22936796, 0.1265429, 0.065237544) * inp_1_1_0;
    result3 += M4(0.004696961, 0.08326877, -0.14526556, 0.07971342, -0.0062718615, 0.1780734, -0.12645186, -0.015502698, -0.16578206, 0.82209945, -0.12873513, -0.12570749, 0.022256685, 0.033037454, -0.050558265, -0.04612732) * inp_1_2_0;
    result3 += M4(0.0046198037, 0.090661146, 0.01713902, -0.23106828, 0.015874734, -0.022182362, 0.027275551, -0.036254127, -0.043978054, -0.032848764, 0.10961276, -0.0367408, -0.047638804, 0.0752188, -0.0548985, -0.13119906) * inp_1_0_1;
    result3 += M4(0.08625528, -0.13401109, -0.1879588, 0.00053189375, 0.036394656, -0.22629407, -0.16167793, -0.08470341, -0.1623025, 0.27905008, 0.15796027, 0.13294494, -0.13317925, 0.016300732, 0.06880326, 0.067578055) * inp_1_1_1;
    result3 += M4(0.025141321, -0.023907408, 0.05398915, 0.03335167, 0.026686506, 0.020866163, 0.024524467, 0.061730593, -0.022969965, 0.29419747, -0.12157945, -0.035753697, -0.0264158, 0.03391796, -0.116502374, -0.030769384) * inp_1_2_1;
    result3 += M4(0.019094273, 0.068253845, 0.021448754, -0.07120286, 0.010278036, -0.07266542, 0.05285649, 0.06154553, 0.009109659, -0.0025474762, 0.07809057, 0.13166915, 0.0077037173, 0.03034052, 0.008501692, -0.054233465) * inp_1_0_2;
    result3 += M4(0.00061863277, -0.00012648168, -0.05320839, 0.05883524, 0.011430638, 0.121563666, -0.023381418, 0.040005624, -0.052121267, 0.070757024, 0.015155589, 0.06412837, 0.004313733, 0.03741862, 0.03996193, -0.13070866) * inp_1_1_2;
    result3 += M4(0.0020473264, -0.18575333, 0.026662005, 0.005495629, 0.00013216822, -0.13593891, -0.01616406, 0.04405188, -0.016768247, 0.1263516, 0.0022014673, -0.03283829, 0.00357952, 0.1813544, 0.015181711, -0.009916956) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.0033222474, 0.22974625, 0.022673022, -0.04541696, -0.0115618, -0.34625557, 0.016287046, 0.0070074913, 0.0043344614, 0.025671434, -0.008928357, -0.030306943, 0.006450667, -0.12827867, -0.008013259, -0.023393674) * inp_2_0_0;
    result0 += M4(0.035083804, -0.077353984, 0.08865937, -0.10666851, -0.046224758, -0.009594477, -0.12433602, 0.03228925, 0.01575875, -0.08764469, 0.0101737585, -0.020211862, 0.020673975, -0.035412047, 0.06498962, -0.10381406) * inp_2_1_0;
    result0 += M4(-0.019854387, -0.02062608, 0.00631578, 0.033647582, 0.024843957, 0.038934417, 0.056174703, -0.03314598, -0.010654871, 0.007528025, 0.0386584, -0.010543541, -0.012703839, -0.059509482, 0.013227081, -0.024801249) * inp_2_2_0;
    result0 += M4(-0.008445083, 0.32320222, 0.070364654, -0.032881837, -0.030889988, -0.20827362, -0.024253756, -0.04845953, -0.054383956, 0.08636796, 0.10967624, -0.10883414, 0.05173036, -0.02039494, -0.06437081, 0.13794056) * inp_2_0_1;
    result0 += M4(-0.15602104, -0.22066873, 0.17177716, 0.3758871, -0.002075775, -0.42094052, -0.15610063, -0.20866285, -0.06471185, 0.02109572, 0.2681093, -0.35542813, -0.026046567, 0.008885695, 0.15119998, 0.31113967) * inp_2_1_1;
    result0 += M4(0.031519577, -0.040729422, 0.084326774, -0.041138433, -0.14974995, -0.08709636, -0.10058187, -0.17563336, 0.021102646, -0.044305135, 0.22130477, -0.11910554, 0.028650358, -0.058595043, -0.04376393, 0.016591761) * inp_2_2_1;
    result0 += M4(-0.054876316, 0.34410232, -0.040805247, 0.062433377, -0.0400454, -0.50285345, -0.03701042, 0.012881481, 0.021560047, 0.111170605, -0.0005783301, 0.019753821, -0.015729276, -0.14562994, 0.027246676, -0.012397619) * inp_2_0_2;
    result0 += M4(-0.025354262, -0.033659074, 0.045649406, -0.09561379, -0.12497672, -0.2405155, 0.02629937, 0.03693528, -0.17265789, -0.08662921, 0.061199065, 0.021100618, 0.32052794, 0.036602218, 0.10277956, -0.29954624) * inp_2_1_2;
    result0 += M4(0.024398733, 0.0856672, 0.024751076, -0.08439058, -0.043255847, 0.111287124, 0.025361646, 0.063286595, -0.0019411885, -0.01071684, 0.055263143, -0.087158926, -0.0026262992, 0.01434185, -0.089832544, -0.004566431) * inp_2_2_2;
    result1 += M4(-0.024016837, 0.026733749, -0.019165117, 0.054036707, 0.037494823, 0.035745405, 0.02977755, 0.016240286, -0.0055970284, 0.021018738, -0.004231739, -0.020271402, 0.0017286513, -0.0072088316, 0.0074925465, 0.028145578) * inp_2_0_0;
    result1 += M4(0.047204416, 0.0022116837, -0.051451296, 0.21146433, -0.19597791, -0.08697389, 0.026243463, -0.6102037, 0.004446552, -0.016998349, 0.0132735465, 0.054766066, 0.061821945, -0.0047591426, -0.007604827, 0.07351526) * inp_2_1_0;
    result1 += M4(0.0019361542, -0.022848336, -0.019938204, 0.033702698, 0.09898115, -0.013775722, 0.045851663, -0.019594874, 0.005420363, 0.0028720663, 0.005444947, -0.021393267, 0.00086782366, 0.021497337, 0.023156827, -0.02391817) * inp_2_2_0;
    result1 += M4(-0.029646892, -0.041762386, -0.016434291, -0.10897074, -0.026330646, -0.48117638, 0.053485412, -0.00908382, 0.013675911, -0.029772362, 0.011656118, -0.055577267, 0.09326687, -0.16884957, -0.033219222, 0.02533363) * inp_2_0_1;
    result1 += M4(0.2767797, -0.19237667, -0.0702608, -0.08873314, -0.22760063, -0.50779283, -0.17605504, -0.75653565, 0.06608683, 0.023535324, -0.06940357, -0.08694531, -0.044111814, -0.09243531, -0.0698734, -0.07792413) * inp_2_1_1;
    result1 += M4(-0.057504106, -0.09494027, 0.00067869626, -0.040766865, -0.040914364, -0.37871256, 0.011416415, -0.5003469, -0.049496725, 0.118302904, 0.11133436, 0.12491766, 0.070362315, -0.06596905, -0.019696638, -0.17664355) * inp_2_2_1;
    result1 += M4(-0.008636906, 0.2914004, 0.11526875, 0.07959941, -0.04495864, -0.0021910698, 0.0026364198, 0.053756718, 0.018937651, -0.029807733, 0.06526814, -0.042998802, 0.07406453, 0.034456883, -0.11368564, -0.0076966137) * inp_2_0_2;
    result1 += M4(0.047012307, 0.44449624, 0.033397302, -0.12532789, -0.0024772852, -0.28208888, -0.12870497, -0.052726064, 0.0077765197, -0.1928682, -0.03582557, -0.044575658, -0.030057661, 0.4069919, 0.28704572, -0.012793621) * inp_2_1_2;
    result1 += M4(0.0075691063, 0.09742978, 0.080796584, -0.08267629, 0.031865653, -0.07730967, -0.15473798, 0.11647882, -0.01553655, -0.04372836, 0.15209176, -0.108650714, 0.0056746607, 0.0028925247, -0.033069927, -0.018692667) * inp_2_2_2;
    result2 += M4(0.02862293, -0.09823402, -0.01837389, -0.06760193, -0.00553957, -0.10784085, -0.02006659, -0.0058688964, 0.005748444, -0.018991377, -0.019352423, -0.02434804, -0.0010340877, -0.013532097, -0.013050011, 0.010146649) * inp_2_0_0;
    result2 += M4(-0.024012065, -0.04099959, -0.09551069, 0.0035672835, -0.008913167, -0.07841717, -0.035949554, -0.08352555, 0.035443842, -0.078915305, -0.02169626, 0.03299994, -0.0156113645, -0.060249418, 0.052155938, 0.05872999) * inp_2_1_0;
    result2 += M4(-0.007412904, -0.03128258, 0.036671057, -0.036731318, 0.017777588, -0.08218367, -0.52793074, -0.08328312, 0.02622707, -0.04769999, 0.023870435, -0.032916278, -0.0018439208, 0.06061825, 0.0256716, 0.027512379) * inp_2_2_0;
    result2 += M4(-0.053110853, -0.051738568, -0.0027785155, -0.09555864, -0.017570755, -0.099464536, -0.011488574, -0.030137997, -0.0037839303, -0.06941386, -0.0168176, -0.02525678, 0.065540925, -0.06424758, -0.008216939, -0.12797603) * inp_2_0_1;
    result2 += M4(-0.07572871, -0.013132313, 0.13778448, -0.25178638, -0.07805208, 0.06468458, 0.029950995, -0.1140382, -0.02612689, -0.039289504, 0.110944755, 0.09562513, 0.017431566, -0.097177304, 0.0042284788, -0.1005035) * inp_2_1_1;
    result2 += M4(-0.09636945, 0.054313883, 0.0050928793, -0.052458804, -0.1038303, -0.0154872, -0.68376935, -0.007971309, -0.15450633, -0.08063931, -0.3537055, -0.10701385, 0.075818196, -0.055242382, 0.39878604, -0.004507491) * inp_2_2_1;
    result2 += M4(-0.08976147, -0.052938238, 0.013946038, 0.019532235, -0.032904893, -0.10750146, -0.0063206516, -0.00512954, -0.02330049, -0.09927322, 0.0055138636, -0.017926924, -0.03217295, -0.012713745, 0.0050951494, 0.042375986) * inp_2_0_2;
    result2 += M4(-0.20118462, -0.11215834, -0.0697265, -0.025195861, -0.08471823, -0.09895239, -0.02801423, -0.005673463, -0.17079967, 0.016023336, 0.03350144, -0.11489893, -0.1484962, 0.009976625, -0.03325834, -0.08973356) * inp_2_1_2;
    result2 += M4(0.0003927601, -0.08823675, -0.079415224, 0.019334512, -0.0952645, -0.083411045, 0.0043889005, 0.008641296, 0.08874592, -0.000833505, -0.041314296, 0.03920029, 0.041074734, -0.0055209864, 0.027515613, 0.018719986) * inp_2_2_2;
    result3 += M4(-0.033765554, 0.17040335, -0.087058015, 0.093634225, 0.008462361, 0.07477928, 0.050187673, -0.24935335, -0.031931747, 0.08439917, -0.07567705, 0.047349695, -0.026840944, -0.2937676, 0.0036105528, -0.01653228) * inp_2_0_0;
    result3 += M4(-0.057416726, -0.03211583, 0.1256865, 0.017820913, -0.013889479, -0.5501795, -0.2040311, -0.13902353, -0.011709373, -0.13222341, 0.05157129, -0.03895586, 0.013235041, 0.14671953, 0.024103587, -0.1308103) * inp_2_1_0;
    result3 += M4(-0.019907322, -0.04661546, -0.031078838, 0.023048485, -0.028736629, -0.23819898, -0.055639345, 0.11400349, -0.009865392, 0.023334632, -0.079176605, -0.022780996, 0.0038496584, 0.10515507, 0.037062842, 0.0021612688) * inp_2_2_0;
    result3 += M4(-0.13909765, 0.026176337, -0.17545655, -0.14502108, -0.0421222, -0.04746261, -0.0960089, 0.023082439, -0.057031482, 0.06920353, -0.037072334, -0.14970899, 0.026122365, -0.15122576, 0.12838839, 0.16917647) * inp_2_0_1;
    result3 += M4(-0.18376064, 0.121201284, 0.25849375, -0.022307597, -0.07610796, -0.24880286, -0.3562105, -0.36450085, -0.30283207, -0.13658293, 0.026432512, -0.041931488, -0.023101257, 0.456504, -0.043947063, -0.08527529) * inp_2_1_1;
    result3 += M4(-0.019939499, -0.02702706, -0.041008294, -0.02582496, -0.020212892, -0.4328962, 0.1544509, -0.032464586, -0.07120657, 0.049230125, -0.112990126, -0.041562285, -0.0009221533, -0.19165725, 0.009676835, 0.009391296) * inp_2_2_1;
    result3 += M4(0.005467752, 0.20600618, -0.13783833, 0.05458638, 0.0042146915, 0.06653613, -0.019607745, -0.25865406, -0.028200699, 0.049861316, -0.073989905, -0.030832682, 0.027816525, -0.034470312, 0.0035278362, -0.1075841) * inp_2_0_2;
    result3 += M4(0.012456666, -0.20354815, 0.063413024, -0.096022844, -0.0140879555, 0.06475801, 0.044357024, 0.10885601, -0.039233163, -0.025043173, 0.08158027, -0.088711046, -0.081156015, 0.105659485, -0.046929147, 0.05250863) * inp_2_1_2;
    result3 += M4(0.008538003, 0.05761565, 0.01552758, -0.021991774, -0.014359743, 0.08284482, -0.03488247, -0.07448919, -0.002910524, 0.20710404, 0.0009088759, -0.06478459, 0.010256142, -0.19195098, 0.000948177, 0.006109119) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.03201557, 0.13340913, 0.062447555, -0.10120724, 0.0027400532, -0.14522381, -0.008395661, -0.019491468, -0.023169646, -0.16526084, 0.018744374, 0.02213976, -0.022751993, 0.34970114, -0.07576935, 0.008042294) * inp_3_0_0;
    result0 += M4(-0.0034077326, 0.16564049, -0.031784154, 0.026795534, 0.0018408031, 0.034695193, 0.03402272, -0.012379562, 0.0064400304, -0.10893476, 0.029748024, 0.042721704, 0.022501597, -0.2672996, -0.03983842, 0.06908572) * inp_3_1_0;
    result0 += M4(0.019782871, -0.030366052, -0.013860117, -0.030520007, 0.023513528, 0.131013, 0.005018479, 0.01191143, 0.03475468, 0.028634638, -0.08846571, -0.04644373, -0.05277657, 0.05241248, -0.018380744, 0.014767499) * inp_3_2_0;
    result0 += M4(0.08302676, -0.85493904, 0.004504407, 0.0016512703, -0.092163414, -0.23121867, 0.037674632, -0.034049645, 0.01840765, -0.12468963, -0.008538604, 0.027297052, 0.059421755, -0.060625978, 0.037369248, -0.1520115) * inp_3_0_1;
    result0 += M4(0.028231699, 0.024949564, 0.051981766, -0.1411094, -0.17052673, -0.08443962, -0.11562397, -0.09734714, 0.19828597, -0.085768476, -0.058039006, 0.14444666, 0.097029135, -0.035699297, 0.05635384, -0.023290958) * inp_3_1_1;
    result0 += M4(0.022315845, 0.041546427, 0.000104469174, 0.0917544, -0.03289266, 0.028536782, -0.038303927, 0.07140262, -0.03417207, -0.1326775, -0.076191284, 0.06795065, 0.051055133, -0.08161235, 0.052573085, -0.014606775) * inp_3_2_1;
    result0 += M4(0.0776924, -0.37714702, -0.013108034, -0.0432639, 0.10987814, -0.13477471, 0.015799047, 0.042240374, -0.010466477, -0.08439847, -0.0015440868, 0.0070473277, -0.45050716, 0.2249663, -0.09679233, -0.19979955) * inp_3_0_2;
    result0 += M4(0.029677538, 0.16135179, 0.013360437, 0.0033456013, -0.24450608, -0.15291052, -0.006134636, -0.0058092196, -0.10131916, -0.013369453, -0.04545492, 0.038655344, -0.22842982, -0.14197466, -0.041439943, 0.088498384) * inp_3_1_2;
    result0 += M4(-0.036017004, -0.0050367885, 0.011664055, -0.044505343, 0.023123205, 0.051325787, 0.07884911, -0.013976508, -0.02504672, -0.047033306, -0.026754787, 0.022022756, -0.0026763661, 0.039283216, -0.019942774, -0.03098257) * inp_3_2_2;
    result1 += M4(-0.04801386, 0.13992408, -0.02847201, 0.25832668, -0.0536719, 0.08486337, -0.005165189, 0.011469833, 0.050896887, -0.06944887, -0.00053250586, -0.11216774, -0.07394397, 0.044650275, -0.0017869759, -0.16209263) * inp_3_0_0;
    result1 += M4(0.039273947, 0.08445333, -0.010538873, 0.11663822, 0.08876845, -0.061715417, -0.036292937, -0.083659075, 0.13107766, -0.05608962, -0.006464208, -0.19811685, 0.02252293, -0.09943998, -0.010807755, -0.06507348) * inp_3_1_0;
    result1 += M4(-0.020352498, -0.034740694, -0.025537264, -0.01774418, 0.044050403, 0.045798913, -0.012110971, 0.14907828, 0.04537484, 0.010195202, -0.07289543, -0.07687958, 0.010264166, -0.06457307, 0.06473976, -0.13893919) * inp_3_2_0;
    result1 += M4(0.03024159, -0.11961714, -0.065534994, -0.030906301, 0.104448155, -0.006576698, -0.102248125, 0.06923955, 0.015912, 0.09504658, 0.068314716, 0.044600245, 0.03485729, 0.29348844, -0.0220231, 0.4803734) * inp_3_0_1;
    result1 += M4(-0.3304034, 0.022966633, 0.008436833, -0.06403774, -0.3903545, 0.11660822, 0.22897334, -0.09872889, 0.26473242, 0.098256364, -0.17848277, 0.26194152, 0.13142563, 0.24090944, 0.02472869, 0.45512676) * inp_3_1_1;
    result1 += M4(0.0344965, 0.008354868, -0.033356566, 0.010015568, 0.07463864, -0.09807576, -0.014033683, -0.29681844, 0.053614315, -0.1427563, -0.18184869, -0.05015116, 0.0002511769, 0.21210387, 0.029534202, 0.32015678) * inp_3_2_1;
    result1 += M4(-0.09108409, 0.1392584, 0.07321459, -0.0824565, -0.03088493, -0.053167123, 0.012833782, -0.053477906, -0.04472861, -0.16635305, 0.006042715, -0.04031494, -0.10470215, -0.7581975, -0.23797463, -0.83576214) * inp_3_0_2;
    result1 += M4(0.024251075, 0.02490692, 0.16884392, -0.049350385, 0.051118653, -0.15696712, -0.308652, 0.09356323, 0.03838266, -0.15928574, -0.17986956, 0.00040513615, 0.15320998, -0.2717711, -0.15370138, -0.3863072) * inp_3_1_2;
    result1 += M4(-0.0140633285, 0.048881967, 0.0052796663, 0.102326974, -0.00065382896, 0.106717706, 0.073954105, -0.049080368, 0.04972669, -0.038418785, -0.1362592, -0.013020623, -0.036948968, -0.14736202, 0.0022509873, -0.26819968) * inp_3_2_2;
    result2 += M4(0.017830951, -0.070242256, -0.022694096, 0.039512362, 0.0027740004, -0.036119357, 0.0068897023, 0.04446537, 0.013110712, -0.018294774, 0.007703076, -0.004175877, 0.0071934857, -0.09526231, -0.012015193, 0.012957643) * inp_3_0_0;
    result2 += M4(0.010420641, -0.074609935, 0.053191938, 0.018792726, 0.0036282646, 0.03976906, 0.014779039, 0.012898617, -0.035891887, 0.006524145, -0.026327517, 0.057649557, 0.014201376, 0.0423163, -0.022339523, 0.026447456) * inp_3_1_0;
    result2 += M4(0.018776074, -0.06875081, 0.06609177, 0.031524327, -0.0023053056, 0.068443865, -0.09518483, 0.020171333, 0.03113128, -0.016438898, 0.17058817, 0.11432748, -0.01306, -0.03248899, 0.10026192, -0.025177253) * inp_3_2_0;
    result2 += M4(0.054198015, -0.014152458, -0.03720545, 0.039863188, 0.033150207, -0.10725786, -0.015251726, 0.010826148, 0.0060773287, -0.012723527, 0.0065527135, 0.034645494, 0.011507051, -0.0430684, -0.080909915, 0.019892177) * inp_3_0_1;
    result2 += M4(-0.16314939, -0.048697412, 0.28997406, -0.094441846, 0.031272482, 0.023377772, 0.0108514475, 0.11258611, 0.0037813222, 0.051942986, 0.060686283, -0.1486764, 0.06083224, 0.02348958, 0.1624938, 0.17438038) * inp_3_1_1;
    result2 += M4(-0.002581725, -0.07082115, -0.12316857, -0.061534967, 0.047469303, 0.009212118, -0.26803416, -0.019846778, 0.08258256, 0.044165395, -0.14794701, 0.11207409, -0.017757298, 0.055681065, -0.14626631, 0.022783237) * inp_3_2_1;
    result2 += M4(-0.039128907, -0.07789122, -0.0020102353, 0.015815502, 0.029768601, 0.072917014, 0.010853345, -0.0021346193, 0.01725263, 0.018771935, 0.010855178, 0.024903156, 0.04874005, -0.081641465, 0.058557596, -0.037573185) * inp_3_0_2;
    result2 += M4(0.03071, -0.022922873, 0.08420868, 0.013614979, 0.087877825, -0.03965546, 0.014105799, 0.014922518, 0.13762121, 0.019147405, -0.017828772, 0.035900574, 0.14014031, 0.020986648, 0.095810175, -0.014574004) * inp_3_1_2;
    result2 += M4(-0.002984916, 0.002586479, -0.034341138, 0.0027825139, 0.028094329, -0.10692184, -0.0025365662, 0.0034056678, -0.11615028, 0.00077504944, -0.04916576, -0.04338847, 0.007516606, 0.078460015, 0.12631765, 0.02218475) * inp_3_2_2;
    result3 += M4(-0.011332949, 0.20237233, -0.121123046, -0.06401311, 0.01929555, -0.0099687, -0.050286215, -0.018157419, 0.012808342, -0.025152573, -0.054871928, -0.113013476, 0.00072321977, -0.060458764, 0.086961225, -0.20217298) * inp_3_0_0;
    result3 += M4(0.04843685, -0.0744092, -0.0697145, -0.12488006, 0.01701521, -0.068369105, -0.03845862, -0.037279353, 0.15423055, -0.36943334, 0.2879829, -0.048494473, -0.0022193133, 0.30534405, 0.21795744, 0.20510288) * inp_3_1_0;
    result3 += M4(0.024474757, -0.05653412, 0.00031297078, -0.0124599, 0.013143078, -0.043205388, 0.07899579, 0.03254047, 0.064111695, -0.1516695, 0.062551, 0.009251936, -0.006281729, 0.27751723, -0.054172575, 0.009826928) * inp_3_2_0;
    result3 += M4(-0.10393063, 0.187143, -0.15678628, -0.042171113, 0.0014232709, -0.0019809806, 0.088981904, -0.060447346, 0.09589615, -0.018081304, -0.055749897, -0.038868703, -0.08291632, 0.09657741, -0.03194813, -0.4158355) * inp_3_0_1;
    result3 += M4(-0.03914265, -0.15226069, -0.5551357, -0.09057068, 0.07771869, -0.4143578, -0.060357895, 0.10479519, 0.2735706, -0.20615768, 0.20724766, 0.0876528, -0.03677256, 0.044905495, 0.34350193, 0.06499997) * inp_3_1_1;
    result3 += M4(-0.02272986, -0.21627691, 0.04493449, -0.0020243202, 0.012550122, -0.11176691, -0.10107321, 0.015782401, 0.077286944, -0.2254488, 0.17751344, 0.048856292, -0.018594366, -0.067451075, -0.04069584, 0.030333783) * inp_3_2_1;
    result3 += M4(0.028752819, -0.0020223365, -0.0052907243, -0.22738001, -0.022945827, 0.12986086, -0.009405253, -0.05763633, -0.0028688791, 0.018159263, -0.023944614, -0.05422878, -0.032780197, -0.28156188, -0.21124066, -0.1402306) * inp_3_0_2;
    result3 += M4(0.01763392, 0.10903979, -0.03979861, 0.047467265, 0.005591195, -0.072744265, 0.07417683, -0.025243634, 0.026858954, -0.15921402, -0.033398878, 0.078855045, -0.02948955, -0.11667498, 0.16163638, -0.06824367) * inp_3_1_2;
    result3 += M4(0.012582654, -0.07362237, 0.013265203, 0.006186472, 0.012759884, 0.06320353, -0.038751382, 0.031438947, 0.0026026848, -0.1527381, -0.022114098, -0.0210639, 0.00520017, 0.2672204, -0.0038113256, -0.015326277) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), max(result0, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 0), max(result1, V4(0.0)));
    imageStore(out_image, output_base + ivec2(0, 1), max(result2, V4(0.0)));
    imageStore(out_image, output_base + ivec2(1, 1), max(result3, V4(0.0)));
}

//!DESC ArtCNN C4F16 DN (Conv2D-5)
//!COMPUTE 24 32 12 16
//!HOOK LUMA
//!BIND conv2d_4
//!SAVE conv2d_5
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_4_mul * texelFetch(conv2d_4_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.002866587, -0.0033458504, 0.014179668, -0.011737125);
    V4 result1 = V4(0.0057239495, 0.007147517, -0.003767212, -0.0062684133);
    V4 result2 = V4(0.011686251, 0.006521203, 0.006009304, 0.0020147474);
    V4 result3 = V4(-0.0026802411, 0.0011860996, 0.03029557, -0.02114008);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.15459265, -0.25392023, -0.12058604, 0.05453608, -0.033497006, 0.03626636, 0.046153393, -0.07829959, 0.115361564, 0.015989497, -0.110366665, 0.07391499, -0.13953444, -0.054902453, 0.1055823, -0.10351582) * inp_0_0_0;
    result0 += M4(-0.47307074, -0.88494754, -0.059730258, -0.4070079, 0.04695519, 0.014449314, 0.09917686, -0.075719394, -0.05302145, -0.042291768, 0.0063021383, 0.010224882, -0.05220724, 0.03036529, 0.035748377, 0.017739192) * inp_0_1_0;
    result0 += M4(0.55503875, -0.33829853, -0.51851803, -0.38424796, 0.1629171, 0.14110103, 0.10574213, -0.19774036, -0.034040753, -0.07272255, -0.03932921, 0.017886957, 0.036820773, 0.04161201, 0.02955591, 0.0029933627) * inp_0_2_0;
    result0 += M4(-0.011367565, 0.08310669, 0.08102328, 0.08612393, 0.008395676, 0.12190523, 0.077496804, -0.011878914, -0.059234425, -0.10040194, 0.0023511604, -0.10000528, 0.06813886, 0.031798646, -0.10178606, 0.022638263) * inp_0_0_1;
    result0 += M4(0.121678226, 0.10844642, 0.17016025, 0.24951962, 0.09099478, 0.11704313, 0.33746323, 0.18658811, 0.26020357, -0.6524875, -0.04493802, -0.14151554, -0.5218843, 0.5833949, -0.14811145, 0.038042456) * inp_0_1_1;
    result0 += M4(0.10704493, -0.041700095, -0.10413629, 0.03053042, -0.18454224, 0.31210217, -0.09179314, -0.012738937, -0.18353774, -0.12713677, 0.019100284, 0.087459594, 0.18452327, 0.14767212, 0.00859044, -0.114608355) * inp_0_2_1;
    result0 += M4(0.01584938, -0.008459095, -0.03413025, -0.007396072, -0.004939306, 0.056783438, 0.042001657, -0.0675991, -0.040749136, -0.05605476, 0.12898798, -0.00024299684, -0.05159792, 0.009969338, -0.10637775, -0.037444565) * inp_0_0_2;
    result0 += M4(0.12773311, -0.12905765, 0.24329539, 0.03708903, 0.1720837, 0.06047587, -0.21415226, -0.021789948, -0.004151911, -0.06854361, 0.033376437, 0.06857418, -0.28172198, 0.0839602, -0.37435773, -0.031012433) * inp_0_1_2;
    result0 += M4(-0.026953094, 0.024049586, -0.07393631, -0.0040222383, -0.14737295, 0.09495001, 0.061867453, -0.03131675, 0.13450249, -0.015057963, -0.007579651, 0.019734677, -0.24239941, 0.049651828, -0.07739799, -0.020575967) * inp_0_2_2;
    result1 += M4(0.3928805, 0.09655099, -0.0047814255, 0.3429247, -0.07593972, -0.05407084, 0.0065231742, 0.04395668, 0.02205534, 0.10877789, -0.022025155, 0.062160447, -0.054536987, -0.15643123, 0.12200727, 0.0013082708) * inp_0_0_0;
    result1 += M4(-0.32323512, -0.4518018, -0.119422704, 1.6838998, -0.20242143, -0.08631107, -0.07756187, -0.040894233, 0.08048632, 0.024726002, -0.071361504, 0.014795653, 0.010239537, -0.010544307, 0.04507325, 0.08636994) * inp_0_1_0;
    result1 += M4(-0.75685084, -0.23561448, 0.5646807, 0.4648538, -0.20120436, -0.108092554, -0.2667549, -0.019968163, 0.032964904, -0.030451244, -0.021524616, 0.09378528, -0.03894391, 0.0047651036, -0.019139754, 0.037136722) * inp_0_2_0;
    result1 += M4(0.07849613, 0.00042947003, 0.0298884, 0.03934387, -0.1298942, -0.030223636, -0.03954313, -0.12329322, 0.06625531, -0.0036617739, 0.06516771, 0.013494858, -0.0051526264, -0.073036596, -0.1543624, 0.05443432) * inp_0_0_1;
    result1 += M4(0.21854804, -0.00920175, -0.25139898, -0.06982469, -0.017901422, 0.017469464, 0.027939424, 0.023189282, 0.44646323, 0.16152628, 0.030908924, -0.08481201, -0.2891736, -0.21617763, -0.13790554, 0.20215921) * inp_0_1_1;
    result1 += M4(0.07219086, -0.1690301, 0.108773485, 0.14491202, -0.45799106, -0.11641087, 0.006982389, -0.30151698, 0.037674658, -0.11453538, -0.19732067, 0.029543202, 0.036431324, 0.056563176, 0.079245575, 0.09439188) * inp_0_2_1;
    result1 += M4(-0.0041247383, 0.017551798, -0.014093684, -0.015725637, -0.076355524, -0.011067446, -0.0061889794, -0.071795575, 0.012852045, 0.070477575, 0.15932383, -0.026804348, 0.07787197, -0.14098093, -0.11958897, -0.05038842) * inp_0_0_2;
    result1 += M4(-0.011652763, 0.07085467, 0.1428199, 0.20399147, -0.11973094, -0.17548044, -0.35688278, -0.17734845, 0.03705385, -0.17519876, -0.048096545, -0.035816148, 0.053853042, 0.0063303527, -0.02852333, -0.2031263) * inp_0_1_2;
    result1 += M4(0.040778197, -0.024152696, -0.053374704, -0.048393976, -0.102396674, -0.026690895, 0.11141055, -0.15180625, -0.0373156, 0.009596912, 0.053572033, -0.04070272, 0.12004336, -0.03358951, -0.08913292, -0.07323822) * inp_0_2_2;
    result2 += M4(0.21844576, -0.034113936, -0.2994405, 0.10275246, -0.010667028, 0.025741244, -0.060672347, 0.01903853, 0.04571926, -0.060537197, 0.053027533, -0.038230192, 0.030429482, 0.01564793, -0.17063494, 0.058637455) * inp_0_0_0;
    result2 += M4(-0.42556608, 0.4102268, -1.2095312, -0.3967547, -0.3653064, 0.02757048, 0.02367286, 0.01883243, 0.042347018, -0.017225048, -0.07568853, -0.03296527, -0.038988505, 0.050440177, 0.110255435, 0.043346882) * inp_0_1_0;
    result2 += M4(-0.5086124, 0.090753414, -0.62710196, -0.11832389, -0.37161273, -0.046321284, 0.10916391, 0.034855787, 0.06023875, -0.00061252253, 0.030696407, 0.012605085, -0.06690238, -0.0043387697, -0.030681785, 0.0012471761) * inp_0_2_0;
    result2 += M4(0.074374095, -0.02630998, 0.026555201, 0.039721478, -0.107347, -0.010301103, 0.035258096, 0.04333903, 0.1712987, -0.06606856, 0.02259042, -0.041023817, -0.17861462, 0.008346617, -0.1094184, -0.014823158) * inp_0_0_1;
    result2 += M4(-0.04669025, -0.10997624, -0.20897347, -0.15493008, -0.40026462, -0.16919583, 0.079473525, 0.31404832, 0.40047, -0.08263301, -0.13525636, -0.1981287, -0.52970207, 0.19600818, -0.03719237, 0.35303605) * inp_0_1_1;
    result2 += M4(-0.1360488, -0.003000955, 0.01638437, 0.041460253, -0.33796862, 0.026243623, -0.32020134, -0.053562794, 0.033996534, 0.07246617, 0.045865227, -0.09412318, -0.10088177, -0.09175084, -0.05986584, 0.22209345) * inp_0_2_1;
    result2 += M4(0.010430782, 0.0071849963, 0.0063440115, 0.04047593, -0.05337116, -0.023393072, -0.01747467, -0.04494223, 0.028012704, -0.044455364, 0.032190904, 0.14749947, -0.0037737146, -0.01955226, -0.08930807, -0.14090465) * inp_0_0_2;
    result2 += M4(0.052992344, 0.09434201, 0.043483265, -0.10776292, -0.16174655, -0.036144923, 0.1272897, -0.10626996, 0.12819302, 0.0756925, 0.07458421, 0.017130151, -0.12458065, -0.124904856, -0.22343455, -0.08555618) * inp_0_1_2;
    result2 += M4(0.015674438, -0.01761026, -0.057949197, -0.0055464557, -0.112726234, -0.042375777, 0.22535443, 0.04219468, -0.07403459, 0.026344785, -0.05965139, -0.09016725, 0.10176079, -0.014636886, 0.030210987, 0.16325697) * inp_0_2_2;
    result3 += M4(-0.0028233454, 0.38419586, -0.1146896, -0.19877036, 0.018490784, 0.07566229, -0.013505385, -0.038736977, -0.0066771177, -0.00042980153, -0.038266424, 0.04962493, 0.0090686465, -0.04967441, 0.05220694, 0.025436128) * inp_0_0_0;
    result3 += M4(-0.23315734, 0.82099444, 0.15853311, -0.23056792, 0.17536317, 0.20533027, -0.06270064, -0.13827758, 0.16855635, -0.02523016, 0.047812015, 0.030370962, -0.27493387, -0.023285937, -0.09003796, 0.03220883) * inp_0_1_0;
    result3 += M4(-0.016775496, 0.4461425, 0.22953698, -0.06648688, -0.14214832, 0.05529787, 0.048926085, -0.11282258, 0.074197225, 0.06923121, -0.028137026, 0.0015349364, -0.053477418, 0.00923751, 0.038639687, 0.005945731) * inp_0_2_0;
    result3 += M4(-0.037699576, 0.013579444, -0.049117338, 0.12454724, 0.027623784, 0.13025461, -0.0040360177, -0.032622725, 0.029226989, -0.17856543, -0.010123451, 0.052721523, -0.0674896, 0.19160399, 0.008964597, 0.017290926) * inp_0_0_1;
    result3 += M4(0.14293122, -0.102518745, -0.23597686, -0.021070654, -0.18124415, 0.614616, -0.071859755, -0.08719334, 0.39097238, 0.13930337, -0.04269661, 0.20788518, -0.5508664, -0.056881476, 0.057813853, -0.09672305) * inp_0_1_1;
    result3 += M4(-0.13323571, 0.07713712, 0.016479615, 0.09990057, 0.2263453, 0.26424736, -0.064544745, -0.24006248, 0.11440238, 0.037953172, -0.08120413, 0.19793908, -0.2622202, -0.14300637, 0.13601759, -0.15436077) * inp_0_2_1;
    result3 += M4(0.0007131931, 0.039886694, 0.021326408, -0.007570426, 0.023160636, 0.12665613, -0.012060679, -0.07379891, 0.073457785, 0.08058372, -0.003263351, 0.054809175, -0.038183253, -0.056554783, -0.028129002, -0.042868488) * inp_0_0_2;
    result3 += M4(0.00812877, -0.019809647, -0.026255801, 0.036058303, -0.06557966, 0.20796303, -0.04935974, -0.02391782, 0.19155787, -0.2469862, -0.07289176, 0.14574178, -0.10686267, 0.20042862, 0.08511044, -0.06738191) * inp_0_1_2;
    result3 += M4(-0.06934702, -0.04154257, 0.0007640148, -0.022355888, 0.16781016, 0.21785413, -0.042976443, -0.0047301655, -0.019393114, -0.026247205, -0.008456064, 0.070196584, -0.00040716765, 0.032343153, -0.038215943, -0.038027454) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.035467967, 0.08593426, 0.031844698, -0.025282336, 0.056262642, 0.05689653, -0.10076873, 0.086910255, 0.052357122, -0.10328418, -0.051329296, 0.04838816, 0.063112386, 0.045811858, -0.04826607, -0.004696759) * inp_1_0_0;
    result0 += M4(0.15138374, 0.07458341, -0.10184929, -0.008988102, -0.14745526, 0.34633917, 0.3206941, 0.1418077, -0.13991655, -0.22730106, 0.08449704, 0.08238824, 0.16062701, 0.030485991, -0.2315784, 0.03685676) * inp_1_1_0;
    result0 += M4(0.12471986, 0.1281563, 0.09130577, 0.054135017, 0.09729787, 0.1263959, 0.015979124, -0.06497655, -0.13020404, -0.15479077, -0.20206033, 0.07196104, 0.017079923, -0.03245708, 0.014813001, -0.004686733) * inp_1_2_0;
    result0 += M4(-0.007013068, 0.058122396, 0.08869861, 0.029054606, 0.0015217297, 0.052335877, 0.047626335, 0.00028117895, 0.0029357083, -0.031036295, -0.075128146, -0.042754594, -0.099864736, -0.10815843, -0.04156244, -0.078756765) * inp_1_0_1;
    result0 += M4(0.31684026, 0.25366777, 0.04640758, 0.08325597, 0.35641044, -0.0074400827, 0.34731218, 0.0136479065, 0.28981698, -0.23256503, 0.3351889, -0.050811835, 0.6086157, -0.4586357, -0.10136711, 0.21987951) * inp_1_1_1;
    result0 += M4(0.0052453144, 0.11993453, 0.034586556, -0.10588447, -0.06139747, -0.008099026, 0.042963795, -0.0719692, 0.0129779745, 0.0019113603, 0.011709761, 0.039691005, -0.06827296, -0.065944746, 0.036600422, -0.037425473) * inp_1_2_1;
    result0 += M4(0.0071123643, 0.0043683574, 0.0032798452, -0.059526097, -0.03461459, 0.05817135, 9.686108e-05, -0.029883474, -0.035793193, 0.017236788, -0.0064689964, 0.0074873427, -0.0014540425, -0.07234586, 0.17835768, 0.03068528) * inp_1_0_2;
    result0 += M4(0.13314047, 0.011229288, 0.113985755, 0.09728245, 0.17678729, -0.01799561, -0.008792721, 0.041340385, 0.054236464, 0.078488894, 0.095738195, -0.013861958, 0.003739909, -0.2299365, 0.07052349, -0.0068631736) * inp_1_1_2;
    result0 += M4(0.07942941, -0.028618053, -0.013080765, -0.018973446, -0.0011820303, 0.02684968, 0.06607472, 0.0032449937, -0.08098225, 0.013273685, -0.012586278, -0.010136417, 0.03705174, -0.008393209, -0.06316601, -0.01543043) * inp_1_2_2;
    result1 += M4(-0.09508372, -0.015055639, -0.057288993, -0.09661696, 0.17073567, 0.13681683, -0.21684524, 0.09557192, 0.20911121, 0.07684038, -0.058239523, 0.019789653, -0.029885953, 0.08871603, -0.114009194, 0.041059658) * inp_1_0_0;
    result1 += M4(-0.027868597, 0.020471508, -0.009209202, -0.24541658, -0.07641534, -0.07961679, -0.043639116, -0.059313603, 0.20876415, 0.21132253, -0.19541839, -0.007190689, -0.06598849, 0.01904894, 0.2773619, -0.16113451) * inp_1_1_0;
    result1 += M4(-0.084250025, 0.020054884, -0.09201098, -0.2190101, -0.08035446, 0.09932209, 0.21428244, -0.05928069, 0.1361078, 0.06851621, 0.20923884, -0.03498731, 0.048399784, 0.021561576, -0.039621994, -0.07668812) * inp_1_2_0;
    result1 += M4(-0.16143201, 0.08409678, 0.14485048, 0.0765313, -0.020831015, 0.05078655, 0.03846642, -0.03746896, 0.0544129, 0.030968007, -0.078252815, 0.066818826, -0.072582826, -0.051849477, 0.21001536, -0.0066294284) * inp_1_0_1;
    result1 += M4(-0.36189002, -0.083582796, -0.12978664, 0.3987879, -0.03340561, 0.16399461, -0.14753234, -0.029209884, 0.16321144, 0.329855, 0.3166772, 0.3689543, -0.123379745, 0.32799447, 0.27141988, -0.25007355) * inp_1_1_1;
    result1 += M4(-0.10912713, -0.20107302, -0.089608654, -0.110856846, 0.06008896, 0.04485242, 0.11869382, 0.27836996, 0.04995047, 0.056896396, 0.092350684, 0.19411391, -0.05074674, -0.2244588, -0.21841086, 0.09425331) * inp_1_2_1;
    result1 += M4(-0.07631223, -0.042851027, -0.024352854, -0.032869823, -0.04126492, -0.023332603, 0.00879221, -0.08520348, -0.008956201, 0.004527333, 0.031450476, -0.042829905, 0.042151034, 0.062170513, 0.096829675, 0.044672564) * inp_1_0_2;
    result1 += M4(-0.032926317, -0.015831552, -0.022454003, 0.07472064, -0.013851736, 0.154511, 0.059119597, -0.05679395, 0.06509151, 0.088009, -0.038946666, -0.094957665, -0.18862413, -0.19004881, 0.10233836, 0.06026974) * inp_1_1_2;
    result1 += M4(-0.050243646, -0.05555119, 0.015583545, -0.004235316, 0.040186804, 0.029052969, -0.024485542, 0.17706703, 0.03902315, 0.010405753, -0.017790666, -0.0049822065, 0.031295568, -0.01976782, -0.028262252, -0.1752303) * inp_1_2_2;
    result2 += M4(-0.082594536, 0.058307055, 0.10561804, -0.039322592, 0.15472433, 0.023958994, 0.023058001, -0.07686844, 0.15044753, -0.069515415, 0.049136054, 0.06271265, -0.042331856, -0.037852, 0.038043525, -0.07807374) * inp_1_0_0;
    result2 += M4(0.06584026, -0.098116755, -0.0674816, 0.06890476, -0.27132192, 0.26041406, 0.005191458, -0.056974825, 0.18009369, -0.10902972, -0.01790849, -0.16300078, 0.09101969, -0.07802933, -0.06857136, -0.0019214267) * inp_1_1_0;
    result2 += M4(-0.18046546, -0.05046695, 0.041812345, -0.021210507, -0.031313933, -0.023759784, 0.11308771, -0.038726315, 0.19871977, 0.08190275, 0.012013125, -0.02512437, 0.06589492, -0.0071818572, -0.039283596, -0.011976077) * inp_1_2_0;
    result2 += M4(-0.05063922, 0.057439607, 0.04954011, 0.15724498, 0.1209977, 0.016516179, 0.01764542, 0.09899903, 0.08426138, -0.025624981, 0.006124673, -0.12142331, 0.06910826, -0.019144095, -0.025298499, 0.01800684) * inp_1_0_1;
    result2 += M4(0.22513795, -0.052534457, 0.15486765, 0.027190214, -0.09193623, 0.1451904, 0.06274977, -0.09389581, -0.2039931, 0.06329009, -0.16536812, -0.11769193, 0.4222713, -0.13385609, 0.019018818, -0.2222388) * inp_1_1_1;
    result2 += M4(-0.17037544, -0.06962206, -0.002326248, -0.03770236, 0.07777861, -0.023424862, 0.048729476, -0.0003868277, 0.034446333, -0.018745096, 0.021259496, 0.025413048, -0.11714831, -0.012187497, 0.09794992, 0.06880137) * inp_1_2_1;
    result2 += M4(-0.0492782, -0.017618764, 0.046088077, -0.022758067, -0.043586016, -0.00056146295, -0.00048312554, -0.07656642, 0.0059578046, 0.002282338, 0.010095012, 0.031916007, 0.008960646, -0.003334225, 0.021287603, 0.063955605) * inp_1_0_2;
    result2 += M4(-0.052220438, 0.029123252, 0.08716752, -0.090217575, -0.023996029, 0.02231038, 0.07067697, 0.1690398, -0.05770466, -0.024559217, 0.012626448, 0.051042255, 0.062268324, 0.09507809, 0.16123614, -0.22960915) * inp_1_1_2;
    result2 += M4(-0.03232283, 0.022947324, -0.008068554, -0.04795858, 0.053065, -0.024658617, -0.048397984, 0.057985, 0.04330857, -0.012499097, 0.030314542, 0.06393006, -0.017711438, 0.05193879, -0.04640698, -0.11348676) * inp_1_2_2;
    result3 += M4(0.060071826, -0.031565074, 0.019956956, -0.039553683, -0.13088566, 0.006212005, -0.032299977, -0.029273815, -0.13809273, -0.025709921, -0.027668763, 0.09394185, 0.058515545, 0.08736215, 0.043138083, -0.03885865) * inp_1_0_0;
    result3 += M4(0.27269223, -0.010105562, 0.031800956, -0.09718249, -0.516838, 0.17528622, 0.050872933, 0.07581871, -0.30329642, 0.20327668, -0.13867906, 0.09150627, 0.32278225, -0.10872309, 0.039437145, -0.05089242) * inp_1_1_0;
    result3 += M4(-0.056277286, 2.5873353e-05, -0.010347566, -0.011472522, -0.33013922, -0.11141159, -0.08226075, -0.2132159, -0.12175242, -0.018883493, -0.1128978, 0.13852924, 0.037136216, -0.025005702, 0.013442335, -0.01893758) * inp_1_2_0;
    result3 += M4(0.14590096, 0.061269544, 0.05131383, -0.03427934, -0.112517424, -0.053327207, -0.020331293, -0.02821728, -0.17960782, -0.24387716, 0.045533355, 0.06234682, 0.06046556, -0.2736054, 0.032115288, -0.04092406) * inp_1_0_1;
    result3 += M4(0.60829, -0.28908023, -0.04602858, -0.14952058, -0.71151966, 0.12777723, -0.12141601, 0.004072593, -0.45496842, -0.10271031, 0.17393728, 0.17299059, 0.6940745, -0.10703837, 0.071552195, -0.023848448) * inp_1_1_1;
    result3 += M4(0.3827128, 0.10794119, 0.054135494, -0.10548705, -0.00773883, 0.110130645, 0.034165718, -0.23736043, -0.13094918, -0.0503023, 0.019566925, 0.019062359, 0.28620946, 0.115277305, 0.10113906, 0.08233183) * inp_1_2_1;
    result3 += M4(0.004233798, -0.036057625, 0.001957046, -0.007092681, -0.035033353, 0.026277103, -0.03184833, -0.040502273, -0.03187681, 0.0075260755, -0.014257625, 0.015937028, 0.11074216, 0.12001577, -0.0016975824, -0.00556801) * inp_1_0_2;
    result3 += M4(0.11328964, 0.030397616, -0.015944377, 0.024256421, -0.32644466, -0.1060633, -0.02029706, 0.03559406, -0.17203341, 0.15692379, -0.072183125, -0.06833317, 0.5097442, -0.13375181, 0.06255885, 0.095546) * inp_1_1_2;
    result3 += M4(0.019134369, 0.033819776, 0.008128951, -0.005623854, 0.008607061, 0.038823795, 0.0077432385, -0.026554488, -0.036933616, -0.00087704026, -0.008317129, -0.028533798, -0.06151283, -0.061343525, -0.026855884, 0.034054674) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.011858181, -0.029296203, -0.019801797, 0.05553674, 0.0095589105, 0.08519833, -0.08471122, -0.0353278, -0.055430096, 0.09830851, 0.20206505, 0.024529919, 0.025717082, 0.026538085, 0.06419451, -0.02304009) * inp_2_0_0;
    result0 += M4(-0.03593321, -0.024557592, 0.066190176, 0.03177667, -0.026887486, -0.0079928795, -0.03817682, -0.059189513, -0.15113875, -0.004586099, -0.063463666, 0.14605583, 0.05829242, 0.0068320734, -0.12836125, 0.07098523) * inp_2_1_0;
    result0 += M4(-0.016489753, 0.050069217, 0.023299934, 0.043734923, -0.04457681, 0.039268184, 0.04984665, 0.07755086, 0.017777497, -0.030997364, -0.031212369, -0.035047986, 0.23912473, 0.01600342, -0.08847802, -0.012012905) * inp_2_2_0;
    result0 += M4(-0.09124945, 0.005165486, 0.07332632, -0.017945893, -0.025212277, -0.010456157, -0.015773516, 0.012438246, -0.6795255, 0.1299937, 0.09068793, -0.59325594, 0.054795343, -0.14259101, -0.087138645, -0.033120386) * inp_2_0_1;
    result0 += M4(0.061024673, -0.18378544, 0.09115769, 0.007856392, -0.030974932, -0.0070557417, 0.020693397, 0.010503501, -0.054374907, 0.15155272, -0.09962252, 0.21913391, 0.014575802, 0.26656547, -0.1269834, 0.039320935) * inp_2_1_1;
    result0 += M4(0.0016167869, -0.04794504, 0.013250493, -0.04780154, 0.040832132, 0.019853767, -0.07307102, 0.008102953, -0.038265735, 0.0061458633, 0.0946133, 0.023624964, -0.05316113, 0.19180083, 0.16078813, 0.0068296418) * inp_2_2_1;
    result0 += M4(-0.02461026, 0.06331252, -0.011145404, 0.0020205833, 0.0029816022, -0.014364295, 0.075012855, 0.06933569, -0.6752064, 0.042269476, -0.73958755, -0.26610807, -0.0068229153, 0.006611231, -0.0369257, 0.09256581) * inp_2_0_2;
    result0 += M4(-0.08957845, 0.01664524, -0.010055664, -0.034591656, -0.055191446, 0.039205242, 0.039446346, -0.049685974, 0.151897, -0.09930764, 0.036482897, 0.14310618, 0.18426998, -0.002959155, 0.16253473, 0.03612931) * inp_2_1_2;
    result0 += M4(-0.053522963, 0.019680025, -0.060599472, -0.0053157047, 0.07285724, 0.028682917, -0.017163128, -0.02567393, 0.03394327, -0.016419629, -0.057644714, 0.023492109, 0.13189137, 0.013194416, -0.01316546, 0.026765808) * inp_2_2_2;
    result1 += M4(0.041271437, 0.03467053, -0.015196132, 0.04025352, 0.06067539, 0.07725146, 0.015752437, -0.040403064, 0.01348098, -0.034615014, 0.069358245, -0.44247574, -0.09392723, -0.061646007, -0.03237641, -0.1968839) * inp_2_0_0;
    result1 += M4(0.06898234, 0.06370262, -0.18122049, -0.05323553, -0.05907911, 0.006178514, -0.014726082, -0.039931417, 0.09562953, 0.07286594, -0.004113856, 0.2490888, -0.042954564, 0.010913481, 0.23373865, -0.21646777) * inp_2_1_0;
    result1 += M4(0.062015634, 0.018674683, -0.036260575, -0.0035706921, 0.074181154, -0.08262327, -0.026729375, 0.07948698, -0.01712665, -0.012828866, 0.020432267, 0.107973516, -0.07424003, 0.035741653, 0.09637155, 0.07033673) * inp_2_2_0;
    result1 += M4(0.0556449, 0.036288615, 0.020128638, -0.0025127607, 0.0033566924, 0.08014907, 0.0047633257, -0.0789754, 0.16122495, -0.36894798, 0.018838495, -0.89497524, 0.10439738, 0.04997921, -0.017498573, 0.29937705) * inp_2_0_1;
    result1 += M4(0.07370546, -0.18927139, 0.11160272, -0.21698564, -0.07937573, -0.051417567, 0.0070085647, -0.0276304, 0.047358774, 0.26738673, -0.30908194, -0.14088084, 0.046694156, 0.27887997, -0.045663085, 0.69306004) * inp_2_1_1;
    result1 += M4(-0.039186727, 0.055122063, -0.03674041, -0.005542447, -0.04478831, -0.08949, -0.07808768, 0.07442962, 0.052891318, 0.026555728, -0.04761673, 0.057905763, -0.104333624, 0.07399395, -0.16820854, 0.012914112) * inp_2_2_1;
    result1 += M4(-0.08076656, 0.028911727, 0.043724936, -0.050550424, 0.038164854, -0.01030788, -0.08942652, 0.008665185, -0.22767642, -0.4156235, -0.09027771, -1.2132524, 0.02700917, -0.11601842, -0.09475682, -0.06859489) * inp_2_0_2;
    result1 += M4(0.15153205, -0.10569028, -0.04977606, -0.15439135, 0.010159703, -0.0653664, 0.04309737, -0.06219621, 0.03989883, 0.10853335, 0.024207678, 0.0150682535, -0.17473426, 0.26704615, 0.11972119, 0.32091418) * inp_2_1_2;
    result1 += M4(-0.032802425, 0.0335635, 0.0011496148, -0.06209351, -0.043979526, -0.032610178, 0.0046002613, -0.038251214, -0.012420256, -0.048900302, 0.061938494, -0.043791488, -0.24601859, -0.04394358, 0.116186395, 0.19101828) * inp_2_2_2;
    result2 += M4(0.0250887, -0.014400861, 0.009449762, 0.013167937, -0.025347836, 0.0020505209, 0.060162455, -0.008027941, 0.032035414, -0.14586824, 0.3328682, 0.03900159, -0.20904331, -0.03140709, 0.16369893, -0.06027078) * inp_2_0_0;
    result2 += M4(0.15331072, 0.050795764, 0.062422942, -0.040502854, -0.08654076, -0.050091192, 0.06831385, 0.06500137, 0.0028292146, 0.051948957, 0.11656342, -0.004901704, 0.07832842, 0.01523071, 0.037198696, -0.08310648) * inp_2_1_0;
    result2 += M4(0.037854325, -0.021431, 0.06046786, 0.05405345, -0.024813652, -0.07399189, 0.06122025, 0.08496648, 0.00556341, 0.015137323, -0.10482995, 0.020142961, -0.105031095, -0.04865371, -0.11419681, 0.05390209) * inp_2_2_0;
    result2 += M4(0.098218285, 0.04334235, 0.0060241674, 0.0555646, 0.07989376, -0.028988864, -0.04545621, -0.04297339, 0.035370387, -0.34773302, 0.35787517, -0.07181699, -0.07166445, 0.06800251, -0.031538308, 0.09757338) * inp_2_0_1;
    result2 += M4(-0.12669432, 0.0013152536, 0.076209374, -0.17732467, 0.05264743, 0.026566114, 0.092587635, 0.080149375, -0.14194998, -0.09176222, -0.34998906, 0.33100843, 0.5021631, 0.117423706, -0.12501866, -0.062443063) * inp_2_1_1;
    result2 += M4(0.06294216, 0.04336878, 0.04976702, 0.022768402, -0.030254457, 0.078140855, -0.08547613, -0.07975541, 0.027841192, 0.0031954232, 0.025227157, -0.0075864373, 0.059029512, -0.011626909, 0.08012993, -0.20040545) * inp_2_2_1;
    result2 += M4(0.005301804, 0.022259971, 0.05543242, 0.027110996, 0.024011979, -0.05490939, 0.0026214195, 0.02652215, -0.19331513, -0.27250198, 0.068319514, 0.29506674, -0.044551395, -0.01602305, 0.04066157, 0.12605678) * inp_2_0_2;
    result2 += M4(0.11403995, 0.007266235, -0.037939217, 0.120710656, -0.05542596, 0.08290446, -0.039653465, 0.04174232, -0.19354254, -0.00434905, 0.08272776, -0.25042012, -0.038429942, -0.002886078, 0.111691594, 0.18775806) * inp_2_1_2;
    result2 += M4(-0.021062305, -0.011212286, -0.029250093, 0.016518964, 0.0810463, -0.018586043, 0.039975572, -0.054196965, -0.045176737, 0.002395745, 0.023854665, -0.0028054693, -0.122785576, -0.024348544, -0.07871824, -0.12812853) * inp_2_2_2;
    result3 += M4(0.0361645, -0.0049362755, 0.035860483, 0.074185565, 0.07560757, -0.07673035, -0.016038874, -0.080659196, -0.28076783, 0.0067528174, -0.05811537, 0.29669872, -0.020524813, 0.07124068, -0.02668242, -0.029730763) * inp_2_0_0;
    result3 += M4(0.06372207, -0.0010838283, 0.112398684, 0.010981956, 0.08286709, -0.08098297, -0.056705773, 0.04070525, -0.060423397, 0.005110747, -0.07863737, 0.16360372, 0.09361585, -0.08510986, 0.13034555, -0.0048323725) * inp_2_1_0;
    result3 += M4(0.013898281, -0.047120742, -0.009213615, -0.0169873, -0.022868397, -0.04909933, 0.09487449, 0.04767328, 0.009460779, 0.020644322, 0.04946931, -0.023499126, -0.056742337, 0.003546565, 0.055134162, -0.055905353) * inp_2_2_0;
    result3 += M4(0.055943653, -0.037721165, 0.07013551, -0.04550696, -0.075839356, -0.0049698967, -0.033839624, 0.07048961, -0.71826774, -0.5063421, 0.018841004, 0.3918141, -0.027836625, 0.052342452, 0.018897453, -0.07122579) * inp_2_0_1;
    result3 += M4(-0.11189305, -0.12385308, 0.017092824, 0.12221074, -0.079087354, 0.01668411, 0.047000855, 0.03984887, 0.19490433, -0.08931799, -0.24180645, 0.17697048, 0.17382988, 0.21880272, -0.26149502, 0.093715645) * inp_2_1_1;
    result3 += M4(-0.11250017, 0.01479145, 0.045973703, 0.058496915, 0.0891414, 0.023807477, -0.010085167, 0.037893817, -0.034687154, -0.037074544, -0.05421641, 0.010650706, 0.0340979, 0.07224364, -0.08114881, -0.13366038) * inp_2_2_1;
    result3 += M4(-0.00797745, -0.019590706, -0.013856993, -0.010751752, 0.021946114, -0.03647481, -0.05303281, -0.016453857, 0.104851715, 0.14392006, -0.10932842, -0.048131976, -0.015320925, -0.027559867, -0.079454325, 0.04812239) * inp_2_0_2;
    result3 += M4(0.0202679, -0.08486918, -0.034693602, -0.06132288, -0.03145387, -0.08208993, -0.07213714, -0.055125523, -0.017032707, -0.11027695, 0.004993931, 0.38143075, -0.15753235, -0.25745744, 0.09630586, 0.06589788) * inp_2_1_2;
    result3 += M4(-0.014955876, -0.038068652, 0.010564268, -0.024684193, -0.042279635, -0.07294084, -0.058528565, 0.097160086, 0.002815902, 0.04004727, -0.014267468, 0.06197307, 0.16076893, 0.15841185, 0.08160427, -0.0015780751) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.043287404, 0.048760384, -0.071469314, 0.02031733, 0.117660835, 0.011103125, -0.14674412, 0.06998979, -0.037725914, 0.0201403, 0.009572671, -0.05874283, -0.0067272177, -0.03343432, -0.05866256, 0.034139544) * inp_3_0_0;
    result0 += M4(-0.18412682, 0.051190834, 0.17678873, -0.008867919, -0.2596969, -0.2457149, 0.19610526, 0.04950957, 0.132086, 0.15959805, -0.10604138, -0.005611244, -0.14776574, -0.15007387, 0.15126397, 0.062196285) * inp_3_1_0;
    result0 += M4(-0.035368025, 0.12607174, 0.13282727, -0.009967054, -0.08002026, -0.14864859, -0.121548235, -0.04324688, -0.014498845, 0.1067885, 0.09490913, 0.010799746, 0.008972506, -0.023726702, -0.08655872, 0.070534304) * inp_3_2_0;
    result0 += M4(-0.011737393, 0.12396942, 0.26451707, -0.01136985, 0.15934539, -0.22976714, 0.14431871, -0.07138376, -0.1899584, 0.23060484, -0.14913425, -0.008725224, -0.101921596, -0.034963354, 0.054512322, 0.04231168) * inp_3_0_1;
    result0 += M4(0.24141778, -0.4799755, 0.20840845, -0.00900156, -0.3384223, -0.6328437, -0.41557017, -0.2667586, 0.28020096, 0.5337138, 0.29336837, 0.16571859, -0.3307255, -0.06875187, -0.14320664, 0.15482065) * inp_3_1_1;
    result0 += M4(-0.18143983, -0.10669316, -0.23014377, 0.04337319, -0.19681525, -0.056820024, 0.048011146, 0.078476146, 0.0981806, 0.039880138, 0.011964159, -0.059060384, -0.20673726, -0.6874083, 0.04040268, -0.24905327) * inp_3_2_1;
    result0 += M4(-0.048765663, -0.021160718, -0.11079795, -0.060343456, -0.22035804, -0.19062588, 0.20921536, 0.11280855, 0.11992532, 0.05445751, -0.22392601, -0.039976787, 0.01557394, 0.017640078, -0.04297792, 0.0009837071) * inp_3_0_2;
    result0 += M4(0.06349883, -0.030242255, 0.07317533, -0.023066152, -0.09779945, -0.16863324, -0.3502974, 0.0031932886, 0.14617112, 0.025402052, 0.14701371, -0.033940397, -0.123026185, 0.0074330657, 0.11432463, 0.025354782) * inp_3_1_2;
    result0 += M4(0.036990043, -0.012262718, 0.09778483, -0.020709725, 0.19002587, -0.081895806, 0.08836962, 0.050216675, -0.10009247, 0.025849476, 0.023991365, -0.02086954, 0.049383383, 0.07830872, -0.21387973, -0.080664724) * inp_3_2_2;
    result1 += M4(0.04999602, 0.103797406, -0.08508477, 0.08151373, 0.029446855, 0.03835896, -0.041831855, 0.18474388, -0.033718675, -0.02505476, 0.011441286, 0.002411147, 0.028700655, -0.04733375, 0.06441743, -0.040035274) * inp_3_0_0;
    result1 += M4(0.051670376, -0.1266921, -0.21431465, 0.012928685, 0.16198756, -0.02238975, -0.21467882, 0.11933102, 0.037496652, 0.06601283, 0.1629316, 0.02579248, 0.16411175, -0.022838814, 0.20826244, 0.110837966) * inp_3_1_0;
    result1 += M4(-0.051247418, -0.0196595, -0.11115685, -0.18836151, 0.08878061, -0.061668176, 0.01665239, 0.16511841, 0.0017217394, 0.100834765, -0.009116179, -0.037124537, 0.17639717, 0.1585823, 0.17553847, 0.2036495) * inp_3_2_0;
    result1 += M4(-0.0067416853, 0.038452443, -0.05116672, -0.32286277, 0.32215294, -0.005193835, -0.212689, -0.016992249, -0.24518083, -0.07084583, 0.1765246, -0.09429943, 0.09321528, -0.015604349, 0.10905197, 0.047449492) * inp_3_0_1;
    result1 += M4(-0.24097037, -0.23957463, 0.11705195, -0.61567664, 0.7408586, 0.16975605, 0.1675235, 0.2006026, -0.67412114, -0.14823367, 0.09074335, -0.47251943, 0.42683867, -0.019214991, -0.095143214, -0.8002591) * inp_3_1_1;
    result1 += M4(0.06046998, -0.036394764, 0.15399534, -0.32421887, -0.019432388, 0.06089828, -0.10952547, -0.09196401, -0.13366675, -0.03920692, 0.073097296, -0.00709356, 0.43020707, -0.32257453, 0.010937928, -0.20251514) * inp_3_2_1;
    result1 += M4(-0.12942626, 0.068050385, 0.08534917, -0.11025389, 0.26144215, 0.042832572, 0.3084806, -0.13474497, -0.17958215, -0.06098744, -0.16033481, 0.15659058, -0.038186233, 0.014922278, -0.009663542, 0.10682263) * inp_3_0_2;
    result1 += M4(0.010601761, -0.0048734136, 0.02454223, -0.09770064, 0.112241544, -0.073855884, -0.1743388, -0.04441826, -0.06606551, 0.15888245, 0.05548775, 0.28644693, 0.23571806, 0.13629648, 0.068504974, -0.042915594) * inp_3_1_2;
    result1 += M4(0.21749568, 0.08945477, -0.014283547, 0.004185846, -0.072557926, 0.025220854, 0.095942624, 0.10117697, 0.08085691, 0.08078751, -0.027129412, 0.0012778654, -0.025755428, -0.2359237, -0.15956125, -0.1232635) * inp_3_2_2;
    result2 += M4(0.055805396, 0.05248034, 0.1780841, 0.014749892, 0.09544224, -0.016958226, -0.063166656, 0.043198515, 0.010520642, 0.028201165, -0.049181696, -0.0011028793, 0.012352428, -0.016597448, 0.023328172, 0.059898276) * inp_3_0_0;
    result2 += M4(-0.0036710682, 0.003234466, -0.15267265, 0.044324588, 0.031132827, 0.063523635, -0.06563996, -0.036505185, 0.14097238, -0.024208695, 0.1011188, 0.11469869, 0.015366137, 0.0489515, -0.16345164, 0.16461737) * inp_3_1_0;
    result2 += M4(-0.034240462, -0.0035862913, 0.19302747, -0.04660245, 0.14622137, 0.035249665, -0.0760277, 0.08570809, -0.015898125, -0.0013497527, 0.16665111, -0.069261596, 0.09856204, -0.02378191, -0.014101508, 0.066429295) * inp_3_2_0;
    result2 += M4(-0.0066867596, -0.08841239, 0.16588718, -0.034564212, -0.07844767, -0.13007084, 0.10925329, -0.058911376, 0.14456843, 0.06273752, -0.08767865, 0.002650614, 0.055786666, 0.006568688, -0.12980567, -0.05282845) * inp_3_0_1;
    result2 += M4(-0.32747388, -0.07286059, 0.29378706, -0.2834437, 0.4235762, 0.16039543, 0.63974947, -0.014735804, -0.39662293, -0.07939968, -0.4003021, -0.33490685, -0.39772084, 0.11692422, -0.060785092, -0.39661634) * inp_3_1_1;
    result2 += M4(0.004648677, -0.007997327, -0.05727491, 0.003228851, 0.077179156, 0.10887425, 0.19246994, -0.27252752, -0.030547174, -0.036716282, -0.17806363, 0.10054079, 0.17773929, 0.06911377, 0.050408095, 0.16995278) * inp_3_2_1;
    result2 += M4(-0.094939016, 0.02134658, 0.02957148, -0.05047967, -0.04075034, -0.047285352, -0.12910996, 0.21917589, 0.106108055, 0.07504343, 0.088592075, -0.11543257, 0.08186881, 0.022965403, 0.018542292, 0.02067445) * inp_3_0_2;
    result2 += M4(0.057042114, -0.0052603893, 0.09672668, -0.07965907, 0.19382468, -0.029163318, -0.14864978, 0.116390824, 0.034246057, 0.03974611, 0.021064037, 0.022122402, 0.2428128, 0.051831648, -0.1239775, 0.29432017) * inp_3_1_2;
    result2 += M4(0.10198423, -0.009626405, -0.0023621265, 0.16966921, -0.090421766, 0.03736895, 0.029535992, -0.18590237, 0.071830966, -0.022610556, -0.0031601563, 0.15509154, 0.01907777, 0.069002055, -0.098447464, -0.046552453) * inp_3_2_2;
    result3 += M4(0.016839994, -0.08716319, -0.05556995, -0.0011256546, 0.011472033, 0.085286535, 0.017453054, 0.105410144, 0.043183967, 0.009548696, 0.02298619, -0.082964525, 0.01631508, -0.06313222, -0.027888754, 0.059221983) * inp_3_0_0;
    result3 += M4(0.31491345, 0.0039804615, 0.02113037, -0.015055462, -0.08909478, -0.09261686, 0.07020213, 0.08125521, -0.09148445, 0.06584459, -0.084021315, -0.03940222, -0.2852066, -0.10736492, -0.009822196, 0.13104352) * inp_3_1_0;
    result3 += M4(-0.08005157, 0.018738637, 0.018970191, 0.03203193, 0.06750843, 0.05266979, 0.06800737, 0.016857183, -0.14841712, -0.08076108, -0.084905185, -0.028618991, -0.23261505, -0.088036, -0.011660309, 0.0009369725) * inp_3_2_0;
    result3 += M4(-0.29710186, -0.025654096, -0.01058723, -0.12669675, -0.15738386, 0.16158997, -0.07906782, -0.12400013, 0.18669006, -0.07753865, -0.047280952, 0.02868026, 0.063142516, -0.05629464, -0.011736555, 0.12773028) * inp_3_0_1;
    result3 += M4(-0.119017266, -0.19171521, 0.1561031, -0.13021684, -0.53610474, 0.7605021, -0.28742808, 0.18393637, 0.26989326, -0.50065833, 0.26910752, -0.09660113, 0.120091975, -0.19736601, 0.17881645, -0.0351812) * inp_3_1_1;
    result3 += M4(0.14895214, 0.019412884, -0.034278277, 0.09171973, -0.1152992, 0.06705835, -0.21497215, 0.1002552, 0.17285246, 0.057878632, 0.120114736, -0.0945182, 0.15167218, -0.13409393, 0.14436139, 0.12535405) * inp_3_2_1;
    result3 += M4(0.018619914, 0.041088674, 0.04188418, -0.10760875, 0.13630536, 0.24131957, -0.070466176, -0.0006698254, -0.055912916, -0.3899128, 0.08304681, 0.057900626, -0.020893073, -0.17323487, 0.057794467, 0.09649172) * inp_3_0_2;
    result3 += M4(-0.10386446, 0.02613014, -0.037898544, 0.008981631, -0.11656029, 0.034521207, 0.018561564, 0.12500449, 0.021188233, -0.049789295, 0.09999121, -0.0054028123, 0.10870487, -0.06105236, 0.053980425, -0.14112397) * inp_3_1_2;
    result3 += M4(-0.18041247, -0.18256077, -0.030214043, 0.020031964, -0.014337624, 0.0738739, 0.0027302369, 0.14248504, -0.050299436, -0.10383994, 0.007691707, -0.094269425, -0.004412414, -0.00075372035, -0.05974495, -0.18242222) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(2, 2);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
    imageStore(out_image, output_base + ivec2(1, 0), result1);
    imageStore(out_image, output_base + ivec2(0, 1), result2);
    imageStore(out_image, output_base + ivec2(1, 1), result3);
}

//!DESC ArtCNN C4F16 DN (Conv2D-6)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d
//!BIND conv2d_5
//!SAVE conv2d_6
//!WIDTH LUMA.w 1.0 *
//!HEIGHT LUMA.h 1.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

const ivec2 ksize = ivec2(3, 3);
const ivec2 offset = ksize / 2;
const ivec2 wg_size = ivec2(gl_WorkGroupSize);
const ivec2 isize = wg_size + ksize - 1;
shared V4 inp[4][isize.y][isize.x];
void hook() {
    const uvec2 local_xy = gl_LocalInvocationID.xy;
    ivec2 base = ivec2(gl_WorkGroupID) * wg_size;
    for (uint y = local_xy.y; y < isize.y; y += wg_size.y) {
        for (uint x = local_xy.x; x < isize.x; x += wg_size.x) {
            const ivec2 input_base = (base + ivec2(x,y) - offset) * ivec2(2, 2);
            inp[0][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 0), 0));
            inp[1][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 0), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 0), 0));
            inp[2][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(0, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(0, 1), 0));
            inp[3][y][x] = V4(conv2d_5_mul * texelFetch(conv2d_5_raw, input_base + ivec2(1, 1), 0) + conv2d_mul * texelFetch(conv2d_raw, input_base + ivec2(1, 1), 0));
        }
    }

    barrier();
    V4 result0 = V4(0.07421663, 0.07493784, 0.0806106, 0.07631211);
    const V4 inp_0_0_0 = inp[0][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_0_1_0 = inp[0][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_0_2_0 = inp[0][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_0_0_1 = inp[0][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_0_1_1 = inp[0][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_0_2_1 = inp[0][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_0_0_2 = inp[0][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_0_1_2 = inp[0][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_0_2_2 = inp[0][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.10716288, -0.068947256, -0.008750472, -0.011012393, -0.0033368692, -0.012341346, -0.010535838, -0.010095446, 0.00089508545, 0.013362243, -0.0065038856, 0.010217119, 0.14445281, 0.10283455, 0.07128408, 0.07681606) * inp_0_0_0;
    result0 += M4(-0.20476943, -0.25874776, 0.00018845807, 0.01504863, -0.010863687, 0.006169253, -0.07307544, -0.006633797, -0.06088408, -0.16903102, 0.071020044, 0.034729272, 0.021941083, 0.1318585, 0.059462603, 0.01324463) * inp_0_1_0;
    result0 += M4(-0.010851845, -0.05499956, -0.0042885556, -0.014106001, -0.058318835, -0.06413054, -0.034151495, -0.07072347, -0.05301765, 0.012862666, -0.02097067, 0.04828104, 0.08669866, 0.046223648, 0.05990263, 0.04126762) * inp_0_2_0;
    result0 += M4(0.18555169, -0.024908094, 0.0075775445, -0.011908073, 0.072503224, -0.07429913, 0.1438838, -0.053025696, 0.013742391, 0.0368062, 0.076255694, 0.026526332, 0.1718912, 0.11138979, 0.16120826, 0.111160226) * inp_0_0_1;
    result0 += M4(0.050555367, 0.22584534, -0.12080386, -0.13943452, -0.23498084, 0.15216896, -0.1358505, 0.31816298, -0.16362841, -0.012595355, -0.14749175, -0.11193212, 0.19505829, 0.19012618, 0.14492938, 0.22290294) * inp_0_1_1;
    result0 += M4(0.01666262, 0.10695392, 0.07320461, 0.047085308, 0.019374892, -0.11099169, 0.03442096, -0.11267009, 0.0003592672, -0.038565848, -0.036452483, 0.06383391, 0.14973162, 0.17851132, 0.14186591, 0.2169489) * inp_0_2_1;
    result0 += M4(-0.008336587, 0.0064892806, 0.007488336, -0.011263778, 0.00095282577, 0.0023300098, -0.0070210127, -0.006775738, 0.040153522, 0.016249854, 0.047954626, 0.035323475, 0.102599956, 0.028306289, 0.18267211, 0.009541344) * inp_0_0_2;
    result0 += M4(-0.0010454446, -0.026226873, 0.11354801, 0.072299674, 0.07467487, 0.038757727, 0.0866877, -0.022449521, 0.020130927, 0.028309446, -0.12692502, 0.045514714, 0.041682303, 0.06721889, 0.066451594, 0.17130302) * inp_0_1_2;
    result0 += M4(-0.0066039436, -0.00030553862, -0.012742352, 0.052381203, 0.055158313, 0.062718816, 0.06403241, 0.012970409, 0.011117967, 0.020759113, -0.0052760416, -0.075667776, 0.05976429, 0.11640557, 0.07021818, 0.10934791) * inp_0_2_2;
    const V4 inp_1_0_0 = inp[1][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_1_1_0 = inp[1][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_1_2_0 = inp[1][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_1_0_1 = inp[1][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_1_1_1 = inp[1][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_1_2_1 = inp[1][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_1_0_2 = inp[1][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_1_1_2 = inp[1][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_1_2_2 = inp[1][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.104631156, -0.03999155, -0.059239052, -0.05269401, 0.002860531, -0.053912774, -0.029102594, -0.02466091, -0.056232177, 0.003852527, 0.0034210016, 0.00026335646, 0.031866822, 0.05235428, 0.010790337, 0.006326384) * inp_1_0_0;
    result0 += M4(0.029438803, -0.16430351, -0.12734604, -0.021283276, 0.15573177, 0.14340107, 0.11199305, 0.00015915596, 0.09252979, -0.057866067, 0.008835792, 0.011212673, 0.029877914, -0.054340206, 0.027641943, 0.0143096) * inp_1_1_0;
    result0 += M4(-0.07345989, 0.049962718, -0.023625737, -0.021690195, -0.0068639386, 0.12099786, -0.013046353, 0.095156856, -0.044595588, 0.060127474, -0.015152593, 0.03204343, 0.008949172, -0.026473556, 0.0032346454, -0.010582602) * inp_1_2_0;
    result0 += M4(-0.003913342, -0.10704118, 0.048732024, -0.049671963, -0.16894254, -0.051393114, -0.17654607, -0.14321811, 0.12546088, 0.0009154119, -0.030195948, 0.0070079723, -0.026606709, 0.010066558, 0.08811873, 0.041792773) * inp_1_0_1;
    result0 += M4(0.18745185, 0.061017536, 0.22797301, 0.04091138, 0.09835244, 0.11219658, -0.11596029, -0.038745295, -0.0376965, 0.03991628, -0.012293913, -0.037575148, 0.12259802, -0.008583166, -0.024066133, 0.116447605) * inp_1_1_1;
    result0 += M4(0.036876377, 0.11872672, 0.008532905, 0.062123038, -0.017236365, -0.01908343, -0.03894612, -0.12316167, 0.022081742, -0.071488924, -0.014481171, 0.029505674, 0.0235623, 0.024492903, 0.014966615, -0.015915336) * inp_1_2_1;
    result0 += M4(-0.030437425, -0.0056403046, -0.058494274, -0.0074813077, -0.062272098, -0.039921258, -0.07194748, 0.0012662077, 0.007978081, -0.0019213061, 0.014311505, -0.030689666, -0.023286369, -0.008309235, -0.05397295, -0.027064133) * inp_1_0_2;
    result0 += M4(0.0205205, 0.07171276, 0.07510533, -0.0063895085, 0.014049251, -0.03030369, 0.15117739, 0.075466156, -0.0190797, 0.0075296345, 0.032854967, -0.06415879, -0.0712394, -0.048271623, -0.06758488, -0.1375978) * inp_1_1_2;
    result0 += M4(0.02253104, -0.013725085, 0.01747022, 0.041707665, -0.009702918, -0.017690571, 0.007067565, 0.07799981, 0.034444652, 0.00017268516, 0.036070414, -0.07510297, -0.0076842685, -0.03197916, -2.7114735e-05, -0.0140415365) * inp_1_2_2;
    const V4 inp_2_0_0 = inp[2][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_2_1_0 = inp[2][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_2_2_0 = inp[2][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_2_0_1 = inp[2][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_2_1_1 = inp[2][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_2_2_1 = inp[2][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_2_0_2 = inp[2][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_2_1_2 = inp[2][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_2_2_2 = inp[2][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(0.015387893, 0.036709152, 0.02351724, 0.031814527, -0.13285588, -0.08301443, -0.042616386, -0.05019872, 0.029605586, 0.06303494, 0.006540677, 0.0044899615, 0.11244565, -0.0134213315, 0.00322406, 0.0021594388) * inp_2_0_0;
    result0 += M4(-0.15324573, -0.04528886, 0.030262355, 0.009008321, -0.16077067, -0.0695872, 0.034249507, 0.014822328, 0.020492047, -0.0642081, 0.030180145, 0.0033688406, -0.12424251, 0.08196074, 0.028516212, -0.023671037) * inp_2_1_0;
    result0 += M4(-0.0072176266, -0.118081, -0.009279967, -0.030525789, 0.05198218, 0.08201939, 0.03759587, 0.050365843, 0.036454417, 0.029750688, 0.024016665, 0.027146677, -0.006281285, 0.06517837, -0.005892409, 0.0618326) * inp_2_2_0;
    result0 += M4(0.033131696, 0.07712949, 0.009754529, 0.0833648, -0.22252798, -0.022952192, -0.26456812, -0.045171946, -0.026092064, 0.016197542, 0.04947942, 0.09858833, 0.03100151, -0.026082505, 0.07722737, -0.06254548) * inp_2_0_1;
    result0 += M4(-0.0824417, -0.22080298, -0.29094097, -0.2758037, -0.4468648, -0.3795069, -0.2474412, -0.22356816, -0.0018963598, -0.20769496, -0.19329302, -0.2053712, -0.019443912, -0.09721709, -0.022826262, 0.022490017) * inp_2_1_1;
    result0 += M4(-0.12351723, -0.050103195, -0.06626012, -0.06694365, 0.38629702, 0.053848755, 0.40567282, 0.06991434, 0.024025625, 0.0011614598, 0.04365397, 0.0022805228, 0.025714757, 0.0072915424, 0.05505917, 0.08127462) * inp_2_2_1;
    result0 += M4(0.03099798, 0.008450759, 0.08692196, 0.026782205, -0.06971718, -0.020322355, -0.13229486, 0.022575531, 0.004487302, 0.0049953735, 0.02257373, 0.010974489, -0.014670039, 0.0036537773, -0.04409724, -0.010078363) * inp_2_0_2;
    result0 += M4(0.021426508, -0.033648767, 0.12940228, 0.0087228175, 0.07891858, 0.036335655, -0.119801044, -0.11276875, 0.018670484, 0.07340937, 0.048237577, -0.09362818, -0.018294076, -0.04197086, -0.071470864, -0.053655267) * inp_2_1_2;
    result0 += M4(3.6223235e-05, 0.03969322, -0.008104444, -0.0019630517, 0.11081331, 0.1269407, 0.13166304, 0.08924674, 0.0043941336, -0.0045179953, 0.015670542, 0.048879974, 0.0068830163, 0.025318028, -0.0032241852, 0.013229178) * inp_2_2_2;
    const V4 inp_3_0_0 = inp[3][local_xy.y + 0][local_xy.x + 0];
    const V4 inp_3_1_0 = inp[3][local_xy.y + 0][local_xy.x + 1];
    const V4 inp_3_2_0 = inp[3][local_xy.y + 0][local_xy.x + 2];
    const V4 inp_3_0_1 = inp[3][local_xy.y + 1][local_xy.x + 0];
    const V4 inp_3_1_1 = inp[3][local_xy.y + 1][local_xy.x + 1];
    const V4 inp_3_2_1 = inp[3][local_xy.y + 1][local_xy.x + 2];
    const V4 inp_3_0_2 = inp[3][local_xy.y + 2][local_xy.x + 0];
    const V4 inp_3_1_2 = inp[3][local_xy.y + 2][local_xy.x + 1];
    const V4 inp_3_2_2 = inp[3][local_xy.y + 2][local_xy.x + 2];
    result0 += M4(-0.042217325, 0.000631339, -0.0353286, -0.01565368, -0.014200698, 0.022119427, 0.004915207, -0.002578486, 0.019636162, 0.013911138, 0.015202513, 0.0047545955, -0.10897138, -0.060902134, -0.037713796, -0.04631917) * inp_3_0_0;
    result0 += M4(-0.0005391366, -0.055437263, 0.039299157, 0.018106516, 0.038067482, 0.0039073727, -0.014577192, -0.0030214034, -0.03203877, -0.06620358, -0.07140623, -0.051037796, -0.06741558, -0.08842794, 0.025180671, 0.022844583) * inp_3_1_0;
    result0 += M4(0.007423891, 0.044852987, -0.0005139994, 0.028719334, -0.09495671, 0.02535174, -0.030777613, 0.027403757, 0.031342894, 0.053266086, 0.02789994, 0.033499673, -0.07101104, -0.09262134, -0.045750786, -0.03208686) * inp_3_2_0;
    result0 += M4(-0.021778386, -0.054697193, 0.05287269, -0.00019153315, -0.04779669, 0.028877132, -0.066525444, 0.069434024, 0.023056643, -0.040802266, 0.016947363, 0.017583998, -0.048755288, 0.0049270247, -0.08335355, 0.025543319) * inp_3_0_1;
    result0 += M4(0.1371379, 0.25773904, -0.22134885, -0.0472289, 0.087093204, -0.21800694, 0.1285792, -0.16660596, -0.47862437, -0.38794738, -0.40602535, -0.3563427, 0.33316118, 0.32532895, 0.34804332, 0.24639386) * inp_3_1_1;
    result0 += M4(0.031829577, -0.005110884, 0.045759264, -0.055074673, -0.053080227, 0.1139561, -0.0926092, 0.059412163, 0.023838542, -0.037758656, -0.0043808944, -0.018954609, -0.116416045, -0.12565233, -0.100227244, -0.14254597) * inp_3_2_1;
    result0 += M4(-0.043340877, -0.017166894, -0.06410823, -0.01043648, 0.0020963494, 0.012010811, 0.0144696245, 0.0025433637, 0.12937918, 0.066236995, 0.16709995, 0.010551064, -0.025395466, 0.009360752, -0.05543381, 0.009958283) * inp_3_0_2;
    result0 += M4(-0.0070597464, -0.03708742, 0.10303362, 0.038238913, 0.0460899, 0.0057170913, 0.022528006, -0.08839629, 0.19124682, 0.20292574, -0.02664479, 0.08453931, 0.14004987, 0.056628995, 0.082808755, -0.02288909) * inp_3_1_2;
    result0 += M4(-0.026518166, -0.03199456, -0.025115436, 0.0016449963, 0.014896311, 0.028490756, 0.02124016, 0.074430004, 0.1065279, 0.17897913, 0.098460965, 0.1455483, -0.02204647, 0.0022956736, -0.04402624, -0.032603715) * inp_3_2_2;
    const ivec2 output_base = ivec2(gl_GlobalInvocationID) * ivec2(1, 1);
    imageStore(out_image, output_base + ivec2(0, 0), result0);
}

//!DESC ArtCNN C4F16 DN (Depth-To-Space)
//!COMPUTE 12 16 12 16
//!HOOK LUMA
//!BIND conv2d_6
//!WIDTH LUMA.w 2.0 *
//!HEIGHT LUMA.h 2.0 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif

void hook() {
    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_pos * conv2d_6_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    result.x = conv2d_6_tex((vec2(0.5) - f0) * conv2d_6_pt + conv2d_6_pos)[i0.y * 2 + i0.x];
    imageStore(out_image, ivec2(gl_GlobalInvocationID), clamp(result, 0.0, 1.0));
}
