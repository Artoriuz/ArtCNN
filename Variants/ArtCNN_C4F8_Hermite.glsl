// MIT License

// Copyright (c) 2024 João Chrisóstomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 Hermite (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.08205636, -0.13994527, -0.025312426, 0.09432302, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(0.17009756, 0.24432428, 0.13683078, -0.25734013, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(0.103555515, 0.026559286, -0.10153606, 0.10109197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(0.02359571, -0.12850042, 0.21596017, -0.32654133, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(0.35387355, -0.033533532, 0.37571475, 0.74789387, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(0.11240317, 0.2066013, -0.20933838, -0.21803294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(0.035477582, -0.12143326, -0.1557, 0.07251285, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(0.025651969, -0.0019073855, 0.12375313, -0.07964148, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(-0.16806947, 0.006630651, 0.13718703, -0.06390117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(-0.019445555, -0.014302039, -0.05831114, -0.022837723);
    return result;
}

//!DESC ArtCNN C4F8 Hermite (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.13744418, 0.20461655, -0.026604002, -0.16423218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(-0.09446683, -0.08079229, 0.26847, 0.11193679, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(-0.12753074, 0.043991897, 0.03254271, -0.010775679, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(0.28710097, -0.116806515, -0.09216673, 0.12696269, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(0.41074097, -0.19333166, 0.19188769, 0.24966328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(-0.045849867, 0.220258, -0.0028880106, 0.14624321, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(0.1107257, 0.23748346, -0.15324846, -0.023860503, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(-0.40756324, -0.268322, 0.032249767, -0.07337949, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(-0.010443548, -0.013967106, -0.220289, 0.008840105, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(0.021093043, -0.009663981, -0.029398402, -0.010145264);
    return result;
}

//!DESC ArtCNN C4F8 Hermite (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.04251758, 0.03857738, 0.01648838, -0.038190015, -0.16658594, 0.38497278, -0.102543026, -0.09842963, -0.0503362, 0.24687536, -0.23387413, 0.019888971, -0.102989025, -0.13131392, -0.06005235, -0.061853882) * go_0(-1.0, -1.0);
    result += mat4(-0.008754512, -0.07367108, -0.25984594, 0.16601165, -0.37076202, -0.1356355, -0.09701977, -0.02014274, 0.19000037, 0.0668421, -0.15633048, 0.015263431, -0.0830942, -0.30011162, 0.062586315, 0.4447835) * go_0(-1.0, 0.0);
    result += mat4(0.25478092, 0.008428565, 0.12642655, -0.20816924, -0.089266725, 0.011166597, -0.038639452, 0.011329862, 0.13271599, -0.2221028, 0.14179246, 0.078308664, -0.13593528, -0.17132613, 0.12064036, 0.43114558) * go_0(-1.0, 1.0);
    result += mat4(-0.1443374, 0.084626034, -0.04118773, 0.044989597, 0.20178942, 0.46539795, -0.085351735, 0.33262154, 0.1662711, -0.18851931, 0.13229635, -0.02442808, -0.22281502, -0.74591255, 0.13597338, 0.16356595) * go_0(0.0, -1.0);
    result += mat4(0.30693308, 0.063838124, 0.23407492, -0.034154307, 0.10025591, 0.012614843, 0.44874263, 0.13489765, 0.41381785, 0.18412401, -0.57992494, -0.04214836, 0.7094512, 0.4080563, -1.4722463, -0.5587675) * go_0(0.0, 0.0);
    result += mat4(0.39610136, 0.031133581, 0.33133575, -0.011006583, -0.18957555, -0.08315983, 0.29911596, 0.3472407, 0.031128729, 0.0017129799, -0.026228117, -0.47137222, -0.12712277, 0.17357253, 0.8056958, 0.11518695) * go_0(0.0, 1.0);
    result += mat4(-0.05800337, -0.020478856, -0.21407305, -0.095501766, -0.035115972, 0.1937857, -0.13946865, -0.09556385, 0.096822746, -0.39512298, -0.0419553, 0.0123728905, 0.021136452, -0.018623976, 0.004689303, 0.0009842279) * go_0(1.0, -1.0);
    result += mat4(-0.01641106, 0.18845661, 0.020049062, -0.077336796, -0.11903761, -0.3201216, 0.16959524, -0.33675262, -0.119081795, -0.056771144, -0.08458639, 0.112618275, 0.5247987, 0.37442297, 0.12755099, 0.26452237) * go_0(1.0, 0.0);
    result += mat4(0.018218018, -0.25102013, 0.01711021, -0.03311199, 0.03653618, 0.3744249, 0.19546886, 0.08243441, -0.029094143, 0.42120358, 0.19594543, 0.02561891, 0.3036432, 0.23248048, 0.08522029, 0.05773126) * go_0(1.0, 1.0);
    result += mat4(-0.022307493, -0.22270308, -0.015972592, 0.15588355, -0.07376889, -0.17620303, -0.15611987, 0.23017277, 0.017551007, -0.6364641, 0.11038525, 0.3363268, 0.0122927, 0.04620111, -0.06495805, 0.039816715) * go_1(-1.0, -1.0);
    result += mat4(0.20079698, -0.689226, 0.14023349, 0.6697903, 0.023520974, -0.34408703, 0.07815957, -0.090119414, 0.20379205, -0.5050338, 0.2834871, 0.37670377, -0.17652519, -0.14189507, 0.018891059, -0.0432238) * go_1(-1.0, 0.0);
    result += mat4(-0.086477034, -0.095344566, -0.24148878, -0.11377935, 0.124647774, -0.0016252334, -0.1648664, -0.39506948, -0.18441051, -0.17238916, -0.13420346, 0.40593654, 0.08255566, -0.24308951, -0.072804295, -0.068817504) * go_1(-1.0, 1.0);
    result += mat4(-0.16906384, -0.21978828, -0.1944141, 0.11781405, -0.20347781, 0.5791068, 0.120756626, 0.08035613, -0.20501047, -0.22320816, -0.10011099, -0.15093562, -0.03633782, 0.04909078, 0.06061498, 0.059710912) * go_1(0.0, -1.0);
    result += mat4(0.6012046, 0.5671106, -0.53704506, 0.068481095, 0.018201921, -0.44004142, 1.0949116, -0.52106476, 0.20101777, 0.08548821, -0.3778574, 0.1317174, 0.033384867, 0.2828861, 0.048662495, 0.04341064) * go_1(0.0, 0.0);
    result += mat4(0.31130108, -0.21121752, 0.69073147, -0.6072776, -0.3028114, -0.057677228, 0.33480227, 0.27480087, -0.06933756, 0.59414655, -0.594177, 0.046530105, 0.022032972, 0.040327452, 0.37210768, 0.016834265) * go_1(0.0, 1.0);
    result += mat4(0.15870565, -0.122207426, 0.023916407, 0.087003455, 0.016556742, 0.09284015, 0.043191765, -0.008523208, -0.024145326, -0.171258, 0.13246527, 0.07763694, 0.014074155, 0.21743868, -0.019767247, 0.018244278) * go_1(1.0, -1.0);
    result += mat4(-0.02903597, 0.08640868, -0.28610894, -0.052702725, -0.0727946, 0.056536667, 0.1376921, -0.017103048, 0.036259346, 0.052944914, -0.059841298, -0.27353817, 0.08422895, 0.11220107, -0.023817962, 0.21679413) * go_1(1.0, 0.0);
    result += mat4(-0.11661555, 0.04606095, 0.12307583, 0.31111073, -0.056203235, 0.17577125, -0.14691116, -0.18001753, -0.28647915, -0.20419303, 0.017289396, -0.02008542, 0.11859444, 0.07316241, -0.011246329, 0.29887563) * go_1(1.0, 1.0);
    result += vec4(0.07418567, -0.031957146, -0.031979065, 0.08044896);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.04510835, -0.09418282, -0.0112581765, -0.09508642, -0.04705202, 0.16207364, -0.028728297, 0.31481797, 0.109427355, 0.095964395, 0.0011207771, 0.201123, -0.097528495, -0.3103073, -0.21749605, 0.2837403) * go_0(-1.0, -1.0);
    result += mat4(0.04375673, -0.048658602, -0.073427506, -0.059205864, -0.11386699, -0.040435307, -0.07011016, -0.053412154, -0.07356941, 0.16590142, -0.07597502, -0.23193409, -0.18371487, -0.53757787, -0.176052, 0.11029818) * go_0(-1.0, 0.0);
    result += mat4(0.056269158, -0.25305837, 0.07712971, 0.14017081, -0.040626835, 0.18658681, 0.12086564, -0.19158386, 0.005296284, 0.07089868, 0.030319085, 0.103169434, 0.2150511, 0.1596452, 0.009558568, 0.06872688) * go_0(-1.0, 1.0);
    result += mat4(0.09409978, 0.18553938, -0.08340537, 0.22100113, 0.22233936, 0.43476653, -0.15719329, 0.26452142, -0.055730317, -0.18499506, 0.055071674, -0.6624592, -0.2684248, -0.85905594, 0.18584828, -0.91485816) * go_0(0.0, -1.0);
    result += mat4(0.10875152, -0.012107558, -0.21191764, 0.15941656, -0.16252218, -0.13917945, -0.082712986, -0.35747656, 0.45248744, 0.061844364, -0.24299853, 0.17539813, 0.56209743, 0.46151882, -0.7836409, 0.49668464) * go_0(0.0, 0.0);
    result += mat4(0.22313334, 0.09989751, -0.14849511, 0.12044441, 0.13481845, 0.42824832, -0.07431131, -0.4234984, -0.13851252, 0.032302186, -0.028212404, -0.0051959367, 0.24827425, 0.69651073, -0.1723608, -0.45195124) * go_0(0.0, 1.0);
    result += mat4(-0.12697814, -0.053364664, -0.07207439, 0.19515498, -0.07871158, 0.22880131, 0.107822105, 0.16726656, 0.120013386, 0.04935759, 0.17040205, -0.060762394, 0.013780498, -0.09611207, -0.13307583, 0.07745282) * go_0(1.0, -1.0);
    result += mat4(-0.0075705666, -0.090070546, 0.117654674, -0.026424702, -0.06741962, -0.040930208, -0.25196457, 0.2377995, 0.014343395, 0.04399853, 0.31976458, -0.14416894, -0.37582362, 0.39539897, 1.5091652, -0.5096842) * go_0(1.0, 0.0);
    result += mat4(0.095211774, -0.25238943, 0.0042530387, 0.14691634, 0.025548883, 0.23249573, 0.1692623, -0.036931485, -0.07355961, 0.25496906, 0.17712149, -0.28234842, 0.08881287, -0.31769305, 0.076796986, 0.093013704) * go_0(1.0, 1.0);
    result += mat4(-0.1384663, -0.311976, 0.041523322, -0.07777407, -0.016038394, -0.13353668, 0.14113186, 0.064652056, -0.20028305, -0.5304361, 0.07324772, -0.5543675, 0.1566685, 0.16804013, 0.026428234, 0.07184682) * go_1(-1.0, -1.0);
    result += mat4(-0.20282787, -1.1895914, 0.28228772, -0.7585528, -0.13561897, -0.26383638, 0.058932625, -0.43185478, 0.12321149, -0.582768, 0.08114634, -0.17728834, -0.0043666405, -0.16070914, -0.056699183, -0.31213605) * go_1(-1.0, 0.0);
    result += mat4(0.10183407, 0.106513746, -0.073035955, 0.20685361, 0.01598245, 0.114319764, -0.11077072, 0.3375588, -0.1141134, -0.30581966, -0.017091177, -0.00979327, -0.0286182, 0.1262431, -0.046327516, -0.046657957) * go_1(-1.0, 1.0);
    result += mat4(-0.13439743, -0.5672526, -0.10634086, -0.039336655, 0.072674535, 0.4030133, -0.5938709, 0.6690413, 0.053258706, -0.44483927, -0.10409086, 0.057843734, 0.19697216, 0.042891268, 0.0041799154, 0.20554781) * go_1(0.0, -1.0);
    result += mat4(0.5475163, 0.071571864, -1.1310644, 0.43106416, -0.30959782, 0.13961068, -0.20570228, -0.107306354, -0.00020539793, -0.2174863, -0.2596344, -0.043219227, 0.049926236, 0.07571334, -0.039118025, 0.079778716) * go_1(0.0, 0.0);
    result += mat4(0.08912465, 0.48622477, -0.02124873, 0.26656577, -0.0919709, -0.06829453, 0.24583808, 0.33356103, -0.02112514, 0.21853268, -0.14717945, 0.07504837, 0.042617943, -0.01372303, -0.039483726, -0.30369076) * go_1(0.0, 1.0);
    result += mat4(-0.057917174, -0.1567722, 0.08882551, -0.260672, 0.058335792, 0.2514475, 0.28135127, -0.13410494, -0.056877453, -0.0057568657, -0.07177017, 0.023337692, -0.051641133, 0.15556335, 0.28894633, 0.11910971) * go_1(1.0, -1.0);
    result += mat4(-0.01057018, 0.46815097, 0.11260106, -0.1642343, 0.08531242, -0.33070895, -0.22046985, 0.015067735, 0.43677878, 0.24358258, -0.47951275, 0.1841809, 0.041467704, -0.056277584, 0.16032296, 0.11524997) * go_1(1.0, 0.0);
    result += mat4(-0.20651461, 0.028196743, 0.34531388, -0.2187595, -0.04441848, -0.17510732, -0.23116456, -0.018598352, -0.17405908, -0.27086008, -0.02159575, 0.0018183831, 0.12955356, 0.08647366, 0.10262693, 0.015837178) * go_1(1.0, 1.0);
    result += vec4(0.038335484, -0.008326437, -0.012014696, -0.070051886);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-2.587292, 0.207696, -0.09614556, -0.076781385, -1.6419007, -0.0760877, -0.05780498, 0.012406572, -1.5144017, -0.21983272, 0.043948136, 0.04429802, -1.8268645, 0.05533124, 0.051060077, 0.10007779) * go_0(-1.0, -1.0);
    result += mat4(0.3148384, -0.13244627, -0.06494461, -0.038268104, -0.2731117, 0.12381228, -0.13332139, 0.0745936, -0.15027843, -0.05092464, 0.009502189, 0.034084473, -0.100714326, 0.0076353992, 0.026443776, -0.049481273) * go_0(-1.0, 0.0);
    result += mat4(-0.25612405, 0.1850085, -0.0033750257, -0.016515018, 0.018335704, -0.064083695, 0.057231475, -0.05507251, 0.09227158, 0.01592806, -0.04263882, 0.028565278, -0.017532691, 0.013550907, 0.011081694, 0.043799184) * go_0(-1.0, 1.0);
    result += mat4(0.035281677, 0.027131774, 0.0059065283, 0.1229755, -0.031171927, -0.0750279, 0.042739164, 0.2617305, -0.31777772, -1.06125, 0.024732307, -0.31429532, -0.045383643, -0.10487484, -0.022218391, 0.20852733) * go_0(0.0, -1.0);
    result += mat4(0.17442755, -0.32874298, 0.8345526, 0.2883572, -0.05661132, 0.33447155, 0.023442294, -0.05021687, -0.18563175, -0.96312684, -0.03551822, 0.022209357, 0.31231892, 0.66241485, 0.03551376, 0.021147944) * go_0(0.0, 0.0);
    result += mat4(0.13423061, 0.07983839, -0.031441968, -0.04126418, -0.015227998, 0.14270289, 0.05277383, -0.023858108, -0.0026625518, -0.0982328, 0.02411199, 0.024006886, -0.04528203, -0.08200265, -0.071099624, 0.04004874) * go_0(0.0, 1.0);
    result += mat4(-0.007880884, 0.16026005, -0.035218224, -0.22835368, 0.058380913, -0.09252011, 0.019649869, 0.2962914, -0.039419163, 0.009396063, -0.032810967, -0.59781736, -0.1381413, -0.2517796, 0.008192793, -0.19573851) * go_0(1.0, -1.0);
    result += mat4(0.17437004, 0.23390289, -0.09059915, 0.5324636, -0.065361075, -0.11744315, 0.016403254, 0.0642712, 0.0020561398, 0.016667666, -0.03927333, 0.04842486, 0.023363573, -0.2349522, -0.001068695, 0.1180652) * go_0(1.0, 0.0);
    result += mat4(0.0017230167, 0.13219358, 0.17879084, 0.05739839, 0.05768837, -0.012051006, -0.07060546, 0.030315498, 0.03468198, 0.058056917, -0.018223504, 0.09712453, 0.049921256, 0.004615853, 0.054458596, -0.05120027) * go_0(1.0, 1.0);
    result += mat4(-2.803833, -0.113569535, 0.04346517, 0.1104718, -1.6176277, 0.00011370396, 0.047039967, -0.028562862, -2.554768, 0.0031095464, -0.028938662, -0.062656745, 1.5644004, 0.031904634, -0.12267557, -0.019030752) * go_1(-1.0, -1.0);
    result += mat4(-0.44024372, -0.3535167, 0.019397471, -0.068693414, 0.2307155, 0.15653928, 0.12148599, -0.11227937, -0.52450716, -1.1420879, 0.016182762, 0.004273053, 0.12927563, -0.24535057, -0.24136937, -0.01255441) * go_1(-1.0, 0.0);
    result += mat4(0.14457026, -0.092711605, 0.021415902, 0.0033486201, 0.064613685, 0.010467109, -0.025502924, 0.0031200107, 0.06640791, -0.08331492, 0.06560569, -0.03461783, -0.24120073, -0.13883625, -0.048656527, 0.09139711) * go_1(-1.0, 1.0);
    result += mat4(-0.12741916, -0.07672801, 0.047117654, -0.23329735, -0.059427317, 0.033172544, -0.005369617, 0.15695737, -0.012263967, 0.09442516, 0.012063394, -0.29679456, 0.11020107, 0.16662611, -0.14620198, -0.2791072) * go_1(0.0, -1.0);
    result += mat4(0.40481305, 0.039706524, 0.44158942, -0.07283323, 0.15939686, 0.53230965, -0.12424328, 0.047151882, -0.19182794, -0.45075908, -0.05269997, -0.5213365, 0.286278, 1.38912, 0.0911445, -0.119657286) * go_1(0.0, 0.0);
    result += mat4(0.03420507, 0.228777, -0.13727427, 0.027781086, 0.028376343, 0.0128508415, -0.09861416, 0.016203545, 0.022398893, -0.02130693, 0.009971304, 0.0509878, -0.062169436, -0.02365114, -0.20022342, 0.18440345) * go_1(0.0, 1.0);
    result += mat4(-0.2378276, -0.26138553, -0.0031937824, -0.5105651, -0.08533325, -0.024232442, -0.042960685, 0.021817697, 0.05262548, -0.048430793, -0.025009569, -0.2931842, 0.068624, 0.1122374, -0.046437934, -0.45397043) * go_1(1.0, -1.0);
    result += mat4(0.0112004345, 0.106166765, 0.104832545, -0.22130279, 0.050839774, 0.06290369, -0.042562157, 0.015940705, 0.0027740446, 0.108578876, -0.026687438, -0.18688408, -0.069579445, -0.07434644, -0.06289894, 0.087472215) * go_1(1.0, 0.0);
    result += mat4(-0.034713794, -0.16478029, 0.10882658, 0.0034971049, -0.025409918, 0.017703641, 0.001343917, -0.035122883, 0.008567377, 0.025371166, -0.035525687, 0.06498703, -0.0024435578, -0.052669007, -0.024691908, 0.063731365) * go_1(1.0, 1.0);
    result += vec4(-0.025092173, -0.019476613, -0.025552342, -0.002891565);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.17606007, -0.1311284, -0.110308304, 0.0029257287, -0.09512694, -0.32940245, 0.034332443, -0.015028529, -0.18625851, 0.1959658, -0.013949688, -0.1409096, -0.12599258, 0.1419224, 0.007331451, 0.012260951) * go_0(-1.0, -1.0);
    result += mat4(0.3067037, 0.2646367, -0.10978876, 0.088515796, -0.29382268, -0.43252754, -0.3000114, 0.32922992, -0.027555088, 0.0035486093, 0.068373434, -0.071064726, 0.05133345, -0.09839675, 0.2060125, -0.05666146) * go_0(-1.0, 0.0);
    result += mat4(-0.066364296, 0.067813635, -0.18797359, 0.14141408, -0.16398893, -0.06375795, -0.15202598, -0.030400822, -0.014588656, 0.0030230521, 0.057092544, -0.018612321, 0.083178446, 0.04340978, -0.02006431, -0.017568896) * go_0(-1.0, 1.0);
    result += mat4(0.034434073, -0.062824726, -0.013893276, 0.21008605, -0.38298798, -0.1780192, 0.22403082, -0.2237422, 0.018422568, -0.17987548, 0.09991058, -0.102743834, 0.088809885, 0.09504234, 0.12191077, 0.15780368) * go_0(0.0, -1.0);
    result += mat4(0.45701772, 0.01785689, 0.2829345, -0.43440697, -0.60182273, 0.3496553, -0.31829992, -0.059036884, 0.16953425, -0.1954062, 0.53120464, 0.10531368, -0.2937547, 0.26374078, -0.068152346, 0.39700803) * go_0(0.0, 0.0);
    result += mat4(-0.558857, 0.3409284, 0.61028415, 0.20609927, -0.15591106, 0.04693087, -0.2594919, -0.20624651, -0.015511585, -0.01164995, 0.2820885, 0.012182377, -0.03596256, -0.039112873, 0.046714142, -0.10522229) * go_0(0.0, 1.0);
    result += mat4(-0.009441364, 0.30171815, 0.030234791, -0.058179468, -0.17132044, 0.24903007, 0.14033031, -0.05995051, 0.16509826, -0.43676442, -0.09543675, 0.0043891254, 0.07779907, 0.1742692, 0.12399862, 0.030804193) * go_0(1.0, -1.0);
    result += mat4(-0.14783709, -0.19581065, -0.15815698, -0.08764754, -0.11885263, 0.26847196, -0.09685865, 0.044850737, -0.13493192, -0.20279151, 0.035728373, 0.09402978, 0.23109347, 0.88679415, 0.17336558, 0.2587881) * go_0(1.0, 0.0);
    result += mat4(0.11500621, 0.114529304, -0.20582974, -0.24763015, 0.016656062, 0.14626428, 0.080067486, -0.022865305, -0.042907085, 0.022394694, 0.11164032, 0.03174237, 0.010519434, -0.13959919, 0.34554058, 0.12014581) * go_0(1.0, 1.0);
    result += mat4(-0.1752556, 0.24823262, -0.0017542801, -0.05971344, 0.15657075, 0.2372236, -0.01865491, 0.044282548, -0.19692788, 0.0040620263, -0.089780144, 0.004941407, -0.010922611, 0.06811937, 0.103295684, 0.07484505) * go_1(-1.0, -1.0);
    result += mat4(0.19138786, -0.2732256, 0.38412964, -0.32450885, 0.22375421, 0.031451654, 0.12989141, -0.035026323, 0.10603068, 0.05340135, 0.18836327, -0.18789996, 0.1742638, -0.2582588, 0.2656235, -0.13567299) * go_1(-1.0, 0.0);
    result += mat4(0.10466428, -0.23815802, 0.19466573, 0.035808112, 0.11346093, 0.13533938, 0.113694094, 0.010200375, 0.014848674, 0.03841696, 0.19771768, -0.0074864663, 0.12636529, 0.06275163, 0.17996424, -0.19051516) * go_1(-1.0, 1.0);
    result += mat4(0.47391412, -0.26357752, 0.07576801, 0.2871073, 0.34705517, 0.18283562, -0.061183013, 0.15491939, -0.10214905, -0.14388208, -0.059788145, 0.049561813, 0.13134915, -0.02263894, -0.058675822, 0.07944528) * go_1(0.0, -1.0);
    result += mat4(-0.17058612, -0.08567094, -0.49529967, -0.43015748, 0.4969145, -0.14305995, 0.21826161, 0.11518917, 0.2697399, -1.3672365, -0.07635256, -0.021474995, -0.31052026, 0.13859078, -0.03930368, 0.2737458) * go_1(0.0, 0.0);
    result += mat4(-0.086422145, 0.05478454, -0.48521516, 0.44907573, 0.30796537, -0.049318418, 0.10809204, 0.12470506, -0.2803224, -0.039371055, 0.2686966, 0.12631288, 0.16529877, -0.12619093, -0.17074631, -0.25318575) * go_1(0.0, 1.0);
    result += mat4(-0.1379527, -0.043315154, -0.003908614, 0.06767395, 0.26478964, -0.06513357, -0.0981511, 0.089780584, -0.02987217, -0.08279232, 0.024204973, -0.006541079, -0.038734656, -0.2118783, -0.101556696, 0.08456464) * go_1(1.0, -1.0);
    result += mat4(-0.06955513, -0.49330917, 0.11227815, 0.024422992, 0.19544879, 0.12926222, 0.15229799, 0.07587058, -0.0066321916, -0.24996229, -0.065971404, 0.020672502, -0.16923024, 0.68946606, 0.336896, 0.10706445) * go_1(1.0, 0.0);
    result += mat4(0.19023442, 0.2793479, -0.19889334, 0.07557221, 0.22266965, -0.20960094, -0.02201728, 0.077004276, -0.059428733, -0.025790092, -0.0762832, 0.013726104, 0.18091151, -0.27311078, 0.16543773, 0.0061356775) * go_1(1.0, 1.0);
    result += vec4(-0.031426292, -0.09548361, -0.0017254499, 0.055059385);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0201782, -0.008302069, 0.07300531, -0.039230436, 0.044268563, -0.1630434, 0.07767428, 0.033664253, 0.03566977, 0.038613163, 0.0052414257, 0.031313155, -0.010316805, -0.117415436, 0.105412565, -0.06822891) * go_0(-1.0, -1.0);
    result += mat4(-0.0055601574, -0.036302242, -0.084210746, -0.02913232, -0.05115646, 0.036766034, 0.06369643, -0.018339228, -0.25144905, 0.014369607, -0.033827573, -0.01312422, 0.17163916, 0.1362172, -0.15668751, 0.020190418) * go_0(-1.0, 0.0);
    result += mat4(0.21045381, 0.115583554, -0.12316265, 0.14689218, 0.00870881, 0.22644076, 0.18464214, -0.17399533, -0.080051005, -0.33782646, -0.12448381, 0.18133996, -0.03697871, 0.07102084, -0.23435375, 0.008081438) * go_0(-1.0, 1.0);
    result += mat4(0.02444904, 0.13762583, 0.101363294, 0.046706982, 0.12307152, -0.24203502, -0.023612682, -0.006976184, -0.29286066, -0.09163541, -0.21029717, -0.042573497, 0.008212837, 0.19666459, -0.09904113, -0.026120672) * go_0(0.0, -1.0);
    result += mat4(-0.33349183, -0.21877393, 0.23118137, 0.09964993, 0.4127531, 0.38124266, -0.12741451, 0.05245456, 0.4714568, 0.44672963, 0.33230576, 0.428172, 0.23720418, 0.037879493, 0.061990175, 0.006759339) * go_0(0.0, 0.0);
    result += mat4(0.36546746, -0.4502884, 0.17823727, -0.0098155, 0.21337312, 0.46298522, 0.0066914246, -0.00036415196, 0.10389671, -0.4347127, 0.035890207, 0.21945846, 0.24851471, 0.66469955, -0.24567127, 0.07611832) * go_0(0.0, 1.0);
    result += mat4(0.082030594, -0.08500679, 0.3475252, -0.10174879, 0.0040160543, -0.13971494, -0.08240703, -0.0750006, 0.051798157, -0.05755048, 0.028708082, 0.018853467, -0.023217646, -0.031848423, -0.09322854, 0.028988432) * go_0(1.0, -1.0);
    result += mat4(-0.21437146, -0.015265081, -1.0546324, -0.30860645, -0.12147854, 0.19560511, -0.006673683, 0.016052144, 0.041717283, -0.050257947, -0.028996686, 0.022847585, -0.052743774, -0.16594401, 0.12996331, -0.01288365) * go_0(1.0, 0.0);
    result += mat4(-1.1719673, -0.068469375, 1.0137745, -0.9986346, -0.039324082, 0.18639354, -0.06773782, 0.071020074, -0.04765844, 0.28322348, 0.16007583, -0.041120928, -0.10724598, -0.03275237, 0.0989894, -0.016619705) * go_0(1.0, 1.0);
    result += mat4(0.00917658, -0.029542722, 0.002380348, 0.04228812, -0.07917772, 0.014173502, 0.050142054, 0.04297712, 0.086119644, 0.007750858, 0.013332454, 0.028128462, -0.039983023, 0.019569287, 0.0646015, 0.0019424087) * go_1(-1.0, -1.0);
    result += mat4(0.124182716, 0.2389539, 0.09290071, -0.016981, -0.35096017, -0.04057216, 0.087329194, -0.002489513, -0.13817026, -0.08469511, -0.07417653, 0.008673504, -0.045550723, 0.1951482, 0.0452242, 0.06990705) * go_1(-1.0, 0.0);
    result += mat4(0.18138595, 0.33912688, -0.093616985, 0.22090118, -0.019372612, 0.09720976, 0.038608283, -0.05468565, -0.0067884256, -0.07501336, 0.036571216, 0.07056005, 0.10983713, 0.22475158, -0.025125595, 0.07653616) * go_1(-1.0, 1.0);
    result += mat4(0.10836577, 0.13797097, -0.11829887, 0.043987356, -0.03508718, -0.10213544, 0.091783695, -0.008376591, -0.13827725, 0.0356048, 0.017796077, 0.00094714196, -0.021788688, 0.0018869012, 0.15041493, -0.07524481) * go_1(0.0, -1.0);
    result += mat4(-0.042145047, 0.06710703, 0.744676, -0.03464165, 0.19752713, 0.109465174, 0.37764093, -0.18123184, -0.05703043, -0.7696988, 0.09777176, -0.13787156, 0.18195081, -0.14442718, 0.29503894, -0.028086279) * go_1(0.0, 0.0);
    result += mat4(0.2061045, 0.33656663, 0.107753865, 0.041172545, 0.11838078, 0.09244267, 0.19349283, -0.13943143, -0.00080102176, 0.13034467, 0.006572824, 0.027781267, 0.021039136, 0.12638582, 0.04415823, 0.151325) * go_1(0.0, 1.0);
    result += mat4(0.045463625, 0.081092656, -0.05343217, 0.016425556, -0.008834132, 0.0045046373, -0.016104246, -0.045295708, 0.068800636, 0.02648557, -0.113660984, 0.09181726, 0.061820704, 0.10860913, 0.094882816, 0.025920156) * go_1(1.0, -1.0);
    result += mat4(-0.00668801, -0.02974916, 0.07741179, -0.008016688, -0.22722861, 0.07116667, -0.032830223, -0.08998455, -0.036599163, -0.3187837, -0.06976136, -0.0036940002, -0.0014530661, 0.05680964, -0.080108084, -0.065994665) * go_1(1.0, 0.0);
    result += mat4(-0.028439555, 0.31695268, 0.070505455, 0.05127395, -0.025247023, 0.4303656, 0.016953276, 0.020615214, -0.011712856, -0.11179993, 0.012949838, 0.02271121, -0.008248262, 0.2532513, 0.15620063, 0.018370137) * go_1(1.0, 1.0);
    result += vec4(-0.0014914335, 0.0034859087, 0.008884406, 0.012986675);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.034694817, 0.025558742, -0.10384207, 0.039821114, -0.13783, -0.027782863, -0.0012794888, 0.05655168, 0.041090563, 0.006804316, -0.032302503, -0.054353334, 0.058622736, -0.09320105, 0.081916966, -0.085557655) * go_0(-1.0, -1.0);
    result += mat4(-0.041273978, -0.12910701, -0.013712797, -0.031104136, -0.01580841, 0.13224058, 0.11945072, 0.033620253, -0.09207223, 0.01157939, 0.07672754, 0.029021211, 0.28063348, 0.43028882, 0.17153342, 0.13310407) * go_0(-1.0, 0.0);
    result += mat4(0.25752774, 0.0519454, 0.15653345, -0.11532804, -0.11008921, -0.049020536, -0.12599303, -0.0143279275, -0.29404354, 0.0889726, 0.0025034526, 0.003365105, -0.47038916, 0.06445298, -0.2764146, -0.3804552) * go_0(-1.0, 1.0);
    result += mat4(-0.043408174, 0.08417274, 0.12382604, 0.011394195, -0.20902416, 0.117458776, 0.013108438, 0.10665072, -0.03841829, -0.21755685, -0.047951307, -0.0707564, 0.061192602, 0.029854745, 0.13924351, -0.055373143) * go_0(0.0, -1.0);
    result += mat4(-0.30400628, 0.0225678, -0.15126283, -0.2081215, -0.025952596, 0.3262686, 0.48532364, 0.14544946, 0.7867696, 0.13811108, 0.42660198, 0.6935234, 0.26679185, 0.5589736, 0.19956063, 0.27836007) * go_0(0.0, 0.0);
    result += mat4(-0.50982887, 0.21196409, 0.23694548, 0.11093211, -0.5853106, -0.11269259, -0.315377, -0.3493427, -0.19924201, -0.1950562, -0.51556957, -0.04568439, -0.9030295, 0.24564701, -0.086849466, -0.16027902) * go_0(0.0, 1.0);
    result += mat4(-0.06019411, 0.029966602, -0.24912393, -0.025928961, -0.20429394, 0.006109248, -0.0313558, -0.00996429, 0.04340451, -0.010060142, 0.08417966, 0.066188075, 0.09465669, -0.09313283, 0.013751845, -0.0041956175) * go_0(1.0, -1.0);
    result += mat4(-0.2982984, 0.6985699, -0.49766985, 0.4924478, 0.08768127, 0.23499936, 0.2732975, -0.051177733, -0.27874714, -0.007323996, -0.01638114, -0.00088248355, 0.19550653, 0.008930937, 0.07589076, 0.08820091) * go_0(1.0, 0.0);
    result += mat4(-1.4012523, 0.20901436, -0.4893824, -1.0358349, -0.11026022, 0.11655049, -0.028663052, -0.10385865, 0.061691627, 0.055955462, -0.02398011, -0.11618767, 0.189857, 0.034681223, -0.057959154, -0.014021021) * go_0(1.0, 1.0);
    result += mat4(-0.19821647, 0.10418766, -0.07567343, 0.06901013, 0.017390806, 0.09258834, -0.030761726, 0.13010243, 0.03544343, 0.025590003, 0.032965127, -0.10954043, 0.14058797, 0.05400179, -0.08945687, 0.065575495) * go_1(-1.0, -1.0);
    result += mat4(0.11395607, 0.123464696, 0.07987414, 0.13765424, -0.004043306, 0.06070149, 0.00932621, 0.19223842, -0.22333962, 0.03424205, 0.12408889, -0.122380234, 0.2503125, 0.097974256, 2.3200568e-05, 0.13544115) * go_1(-1.0, 0.0);
    result += mat4(0.101400115, 0.19225307, 0.08759082, 0.014395802, 0.01787856, -0.004438338, -0.077439405, -0.001450458, -0.080579124, 0.010793353, -0.12629724, 0.039285775, 0.10149213, -0.06126094, -0.10772784, -0.10137242) * go_1(-1.0, 1.0);
    result += mat4(-0.14071797, 0.13198966, -0.002337745, 0.021211436, 0.020983927, 0.0024385636, -0.0483394, 0.06398723, 0.10146578, -0.321711, 0.061262254, -0.113176845, 0.11284716, -0.15858413, 0.13826206, -0.09931368) * go_1(0.0, -1.0);
    result += mat4(-0.17986453, 0.11028348, -0.36858076, 0.38867438, -0.23487788, -0.025224816, -0.05533469, -0.21698494, 0.019493846, -0.16297035, 0.24185225, 0.5290826, -0.20336874, 0.27835858, 0.29687887, 0.07474273) * go_1(0.0, 0.0);
    result += mat4(-0.364402, 0.21215229, 0.20094103, -0.06645881, -0.01616286, -0.07458844, -0.1134172, -0.13594115, 0.27536687, 0.03392972, 0.0646226, -0.044748597, -0.69003654, -0.0030421577, -0.42670086, -0.17079915) * go_1(0.0, 1.0);
    result += mat4(0.10155377, 0.05504972, 0.08436047, 0.018950833, 0.17181924, 0.008225482, -0.11711934, 0.043465517, 0.05804467, -0.062482726, 0.11911814, -0.026418712, 0.0899648, 0.009125249, -0.017842235, -0.015459581) * go_1(1.0, -1.0);
    result += mat4(-0.13196328, 0.067539334, 0.057692606, 0.062555134, 0.12359832, 0.13689934, -0.09294541, 0.08208656, -0.14243981, -0.20243299, -0.018941827, -0.016173426, -0.119448334, 0.08238708, -0.17127493, 0.010767532) * go_1(1.0, 0.0);
    result += mat4(0.2688147, 0.27230048, 0.022553997, -0.012828707, 0.47159645, 0.17614464, -0.13988939, -0.04521166, 0.13901255, -0.01435417, 0.02897701, 0.013924097, 0.06691241, 0.13452546, 0.0669031, -0.024096318) * go_1(1.0, 1.0);
    result += vec4(-0.005499357, 0.013584498, -0.013314494, 0.036219195);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.020502042, -0.0040340647, 0.0969826, -0.013786733, 0.16840903, 0.008061609, 0.11298551, -0.027052643, 0.013416578, -0.00029821193, -0.25456214, -0.021185327, -0.20864096, -0.002829082, -0.24412416, -0.011094959) * go_0(-1.0, -1.0);
    result += mat4(-0.035109166, -0.030672237, -0.09864702, -0.05559411, 0.25136092, 0.05012211, 0.06108994, 0.15977535, -0.09883362, 0.0349726, 0.43763667, -0.00077672506, 0.30016243, 0.048051953, 0.41545528, -0.15269746) * go_0(-1.0, 0.0);
    result += mat4(-0.15623038, -0.054538496, -0.47855383, 0.0017540432, -0.20397516, 0.013631029, -2.040303, -0.024045596, 0.35623193, 0.027484238, -0.2811756, 0.11767181, 0.042202435, -0.025946883, -0.8114204, 0.27404514) * go_0(-1.0, 1.0);
    result += mat4(-0.3795439, 0.0019243823, -0.042986073, 0.033801775, -0.037249323, 0.025711047, 0.06607782, 0.04584674, -0.09668158, -0.0032329583, 0.057344664, 0.039501052, -0.27694744, -0.050023988, -0.048566855, -0.18635978) * go_0(0.0, -1.0);
    result += mat4(0.28179085, -0.022850554, 0.12865713, -0.21918567, 0.27626878, -0.09505798, -0.004315483, 0.43981677, 0.3446553, -0.13848744, 0.056281753, -0.22680654, 0.79161656, 0.1566716, 0.46192604, -0.027644146) * go_0(0.0, 0.0);
    result += mat4(-0.043523833, 0.050892748, -0.1546595, 0.21416104, -0.3416295, -0.055347018, 0.001478556, -0.044981074, -0.016996166, 0.15482134, 0.121766664, -0.0080762515, -0.5913116, 0.1802737, 0.122580536, -0.13966398) * go_0(0.0, 1.0);
    result += mat4(-0.2666165, 0.027112376, -0.005525653, -0.010259362, 0.32468897, -0.0059839813, -0.05660801, 0.12854701, 0.0024685368, -0.010280966, -0.008559467, -0.109897316, 0.118924044, 0.011936886, 0.046476934, -0.11012639) * go_0(1.0, -1.0);
    result += mat4(0.13385355, 0.046901304, -0.00808703, -0.067719325, -0.01149433, 0.117482975, -0.046303954, 0.1379131, 0.11729019, 0.08187183, -0.022759276, -0.035460178, -0.13908583, -0.43014994, -0.09340413, 0.0957829) * go_0(1.0, 0.0);
    result += mat4(0.025300741, -0.043003432, -0.04152339, 0.087679535, -0.13675538, 0.00020108436, 0.021677203, 0.0064524044, -0.017285215, 0.17218217, -0.08022757, 0.09507763, 0.08441973, -0.17320931, -0.055612627, 0.14386399) * go_0(1.0, 1.0);
    result += mat4(-0.11416955, -0.013472731, -0.068305396, 0.15951055, -0.2467421, 0.023017023, -0.2276068, 0.0031473993, 0.10715336, 0.0043092486, -0.057831723, 0.16409318, 0.0005178744, -0.0096855825, 0.2175032, 0.029403059) * go_1(-1.0, -1.0);
    result += mat4(-0.21172276, -0.056550413, 0.042157296, -0.14963318, -0.5439267, -0.008853151, -0.27321762, 0.07444504, -0.07208578, 0.0024331156, -0.079317, 0.10617832, 0.21793981, -0.03938532, -0.26151925, -0.13353303) * go_1(-1.0, 0.0);
    result += mat4(0.08726212, -0.0046587544, -0.68987375, 0.03982195, 0.2843358, 0.06571875, -1.5151964, -0.35152885, 0.103754364, -0.0287004, 0.03182017, 0.13177781, -0.38301206, -0.08483682, -0.47552234, -0.098821394) * go_1(-1.0, 1.0);
    result += mat4(-0.07464172, -0.011886527, -0.27730563, 0.2894519, -0.6550956, 0.018159404, -0.08080394, 0.102124594, -0.17710315, 0.019824877, 0.08381998, 0.38275355, -0.24469525, 0.02497803, 0.16672789, 0.01627845) * go_1(0.0, -1.0);
    result += mat4(-0.42528906, 0.15017705, -0.034441747, -0.20132774, -0.23149984, -0.055069245, 0.13447572, -0.4919055, -0.6939812, 0.03159067, -0.06332827, -0.18882586, 0.636726, 0.00672765, -0.11170384, 0.6185225) * go_1(0.0, 0.0);
    result += mat4(0.19687471, 0.041692417, -0.0012580593, 0.033455882, 0.1686611, -0.122437686, -0.040651597, -0.102561526, 0.19797528, 0.059635878, 0.0045459666, 0.23548287, -0.42694068, 0.06416479, -0.14032826, -0.32579383) * go_1(0.0, 1.0);
    result += mat4(-0.033659782, 0.08610625, 0.07888687, -0.023510177, -0.40528885, -0.04207729, 0.03752717, -0.10052445, 0.2604088, -0.032494556, 0.037730817, 0.100912325, -0.049146213, -0.024445934, -0.06451859, 0.02467076) * go_1(1.0, -1.0);
    result += mat4(-0.02961735, 0.06552022, 0.020770757, -0.0036574288, -0.03242739, -0.13520141, 0.051821813, -0.120775, -0.17374901, 0.22261328, -0.021282634, 0.124450505, 0.098934524, 0.22902344, 0.04319042, 0.05665038) * go_1(1.0, 0.0);
    result += mat4(0.08944593, 0.07082941, 0.04675997, -0.0256533, 0.15800253, -0.0023869413, -0.014376895, -0.020258285, -0.029587613, 0.011778336, -0.0010420525, 0.1103093, -0.24387592, -0.037650593, 0.037959192, -0.118421584) * go_1(1.0, 1.0);
    result += vec4(-0.038328096, -0.02331381, -0.011453041, 0.013576772);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.10675156, 0.021361316, 0.086264305, 0.036739867, -0.011029213, 0.0112844175, 0.117265336, -0.025120068, -0.42451596, 0.0011993475, -0.1690382, -0.020992579, -0.44518635, -0.06904326, -0.100361735, -0.06703297) * go_0(-1.0, -1.0);
    result += mat4(0.034688435, -0.08322962, -0.25906262, 0.33135772, -0.026356878, 0.17246874, -0.046939112, -0.10617325, 0.032627832, -0.11347865, 0.529986, -0.40028706, 0.083356, -0.108291544, 0.29362854, -0.049512215) * go_0(-1.0, 0.0);
    result += mat4(0.0037512765, -0.008170944, 0.02422144, 0.025723735, 0.012408231, -0.15049659, 0.011885188, -0.018494515, -0.033813186, 0.19687717, -0.039170563, 0.18427834, -0.044341166, 0.2432154, 0.024981515, 0.26512682) * go_0(-1.0, 1.0);
    result += mat4(0.14676416, 0.039260343, 0.08347272, 0.11457325, -0.027699703, 0.014970288, -0.23477152, 0.00959024, -0.16440251, -0.027336761, 0.06603044, -0.017092736, -0.00045196238, -0.07642885, -0.36406466, -0.021057026) * go_0(0.0, -1.0);
    result += mat4(0.039945517, -0.22523081, 0.31128132, -0.27036193, -0.020472504, 0.4072579, -0.13757007, 0.52756125, -0.030281661, -0.10150526, -0.15452936, 0.44047335, 0.13450558, 0.13624172, -0.2917204, -0.5738566) * go_0(0.0, 0.0);
    result += mat4(-0.02936549, 0.17576975, 0.17379129, -0.14244005, 0.014684057, -0.07451097, 0.03404683, -0.07367556, 0.02093767, 0.13433096, -0.037944794, 0.48853663, 0.02499169, -0.19170688, -0.007609002, 0.0042264205) * go_0(0.0, 1.0);
    result += mat4(0.117415324, 0.0019332767, 0.11534366, 0.016532246, 0.03510202, 0.021065293, 0.08391744, -0.084018216, -0.0047418764, -0.055938013, -0.042818256, 0.05688672, -0.041089717, -0.022594681, -0.017914306, -0.012073036) * go_0(1.0, -1.0);
    result += mat4(-0.0037550023, -0.029857548, 0.4213301, -0.27773115, 0.010680875, 0.056433596, 0.00039046997, -0.19269657, 0.012612375, -0.015960291, 0.12787354, -0.028375635, -0.04342382, -0.08704598, -0.13237815, 0.11238458) * go_0(1.0, 0.0);
    result += mat4(-0.010137281, 0.06575452, 0.13021705, 0.19631536, 0.0055743894, -0.009419056, -0.004962808, 0.024007954, -0.026719792, 0.036922492, 0.031438448, -0.018707657, -0.016515905, 0.09737121, -0.066575944, -0.36954096) * go_0(1.0, 1.0);
    result += mat4(-0.05813426, 0.026018647, -0.2147847, 0.11074255, 0.2274191, 0.017229337, -0.14592141, 0.12736593, -0.19912083, 0.024149833, 0.07421285, -0.08935706, 0.1611639, 0.03212678, 0.1169107, -0.012679009) * go_1(-1.0, -1.0);
    result += mat4(0.019865548, -0.111662604, 0.019030064, 0.12205082, -0.002876782, -0.06777683, 0.06523829, -0.2697745, -0.09213783, 0.04876496, 0.051480163, -0.03357458, 0.031040957, 0.06776152, -0.21134391, 0.39085528) * go_1(-1.0, 0.0);
    result += mat4(-0.022085348, 0.12519531, -0.0030082036, 0.036636934, 0.003573022, -0.3461989, -0.054177113, -0.16715734, 0.0036036149, 0.1782796, -0.061835513, 0.076808, -0.002138054, -0.21675014, 0.054425865, 0.07761184) * go_1(-1.0, 1.0);
    result += mat4(0.044967216, -0.094038576, 0.35788026, 0.053996373, 0.0015027506, 0.066865966, -0.17040914, -0.29736295, 0.012438783, -0.09857507, -0.1206957, 0.077717006, 0.1791112, -0.033009097, 0.293891, 0.053596787) * go_1(0.0, -1.0);
    result += mat4(0.017807504, -0.07717587, 0.21971104, -0.35533118, 0.044981416, -0.41356447, -0.34234297, -0.23769546, 0.043816186, 0.103582166, 0.04321989, -0.24912271, -0.03185923, 0.44561204, 0.37481582, 0.17594266) * go_1(0.0, 0.0);
    result += mat4(-0.0058055585, 0.042966932, 0.017553313, 0.08145217, 0.016338885, -0.17476887, -0.07939903, -0.19215937, -0.056734968, 0.10728322, -0.02550099, -0.09628108, 0.039637797, -0.34232903, 0.06900533, 0.033256024) * go_1(0.0, 1.0);
    result += mat4(-0.032771647, -0.011132672, -0.102999985, -0.052953247, -0.034044288, -0.04501703, -0.11761472, 0.1644671, -0.11902992, 0.046143796, -0.08030053, 0.046824805, 0.008844374, -0.0041693067, 0.063164435, -0.05217546) * go_1(1.0, -1.0);
    result += mat4(0.007920753, 0.03166441, -0.068105, 0.29051307, -0.025629155, -0.089294426, 0.13124125, -0.07644882, -0.000594612, 0.07769754, -0.07664247, -0.08289036, 0.004088715, 0.08983773, -0.04705249, 0.1454704) * go_1(1.0, 0.0);
    result += mat4(0.0176809, 0.01688842, -0.03714373, 0.027791679, -0.0015392608, 0.0053903502, 0.020729542, 0.19666694, -0.0059140734, 0.10321685, 0.0072298464, -0.0073012193, 0.009729333, -0.0676922, 0.008294551, -0.010367609) * go_1(1.0, 1.0);
    result += vec4(0.0010431415, -0.002071908, -0.024385149, -0.05022923);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 Hermite (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.017868925, -0.03020401, -0.040695522, 0.01845599, -0.21175723, 0.124782465, -0.6475525, -0.0049211774, 0.0002204065, 0.049008265, -0.01738328, 0.115470424, 0.012382245, -0.034815855, -0.044111602, 0.029962534) * go_0(-1.0, -1.0);
    result += mat4(0.061057065, -0.08313632, -0.2362021, 0.08611115, -0.384483, -0.26749524, 0.21475175, 0.10324286, 0.16571547, 0.06287051, 0.10695817, -0.0624609, 0.044375405, 0.009151528, -0.06840588, 0.009376828) * go_0(-1.0, 0.0);
    result += mat4(0.036987178, -0.013071443, 0.052236985, 0.047805477, 0.08857761, 0.15530026, -0.019060053, 0.11401296, -0.009946338, -0.005959732, -0.027562262, -0.0676568, 0.017310094, -0.028825121, -0.054143596, 0.023683216) * go_0(-1.0, 1.0);
    result += mat4(-0.0050029187, 0.016965209, 0.08751797, -0.02182417, 0.13913563, -0.13116382, 0.3117041, 0.16748415, -0.08830016, 0.08180624, -0.16311787, 0.14642319, -0.08789164, 0.13290769, -0.027803872, 0.03138399) * go_0(0.0, -1.0);
    result += mat4(-0.069848634, -0.09490782, 0.5744196, -0.38368014, 0.14577465, -0.008223737, -0.076370634, -0.018566433, 0.3499611, 0.6649341, -0.23379122, 0.34983417, 0.023377974, -0.3694202, 0.34406805, -0.6424829) * go_0(0.0, 0.0);
    result += mat4(0.0019578899, -0.069571525, -0.10254848, -0.14083463, 0.0034425072, 0.08841072, 0.011383988, -0.035034772, 0.051531754, -0.05271759, 0.012625781, -0.20184374, -0.058972377, 0.014883809, -0.05585645, -0.06613784) * go_0(0.0, 1.0);
    result += mat4(-0.0048292684, 0.0037193657, -0.037058078, 0.0005956432, -0.006620078, 0.059768986, 0.017461937, 0.03344326, -0.39708963, 1.2151145, -0.9460398, 0.19718869, 0.019620562, 0.018373504, 0.026637781, -0.013493712) * go_0(1.0, -1.0);
    result += mat4(-0.017999496, 0.012536723, -0.22321501, -0.04891701, 0.015496708, -0.073828, -0.014013987, -0.011111254, 0.1157012, 0.87825537, -0.7557704, 0.36354026, -0.07681998, -0.15496635, 0.0020185362, -0.019301908) * go_0(1.0, 0.0);
    result += mat4(-0.014782126, 0.02442046, 0.0033004172, 0.025983674, -0.012482983, -0.0009776066, -0.008060563, -0.018049033, 0.10858223, 0.12056847, 0.117513925, 0.39767364, -0.0024787309, 0.0008399611, -0.03633522, -0.041554306) * go_0(1.0, 1.0);
    result += mat4(-0.023053411, 0.053833093, 0.043510545, -0.029235637, -0.024256045, 0.1526939, 0.25104475, -0.13260585, 0.021392183, -0.011602877, 0.024446495, -0.007525676, 0.0027079545, -0.029478325, -0.07652474, 0.13975884) * go_1(-1.0, -1.0);
    result += mat4(-0.038428746, -0.059294313, 0.0015503124, -0.07136749, 0.15127203, 0.068666756, -0.0915931, 0.012807279, -0.120544024, 0.061500054, 0.16670236, -0.024010075, 0.005280272, -0.04997419, -0.08689498, 0.10102071) * go_1(-1.0, 0.0);
    result += mat4(-0.029522305, -0.1227299, -0.06924926, -0.018437723, -0.070573814, -0.010332764, 0.033575293, -0.020831883, 0.048051428, 0.039613355, 0.0072253994, -0.010258094, 0.032034762, 0.01841392, 0.01423438, -0.002954597) * go_1(-1.0, 1.0);
    result += mat4(0.038482435, -0.09795235, -0.05325178, 0.026087848, 0.17641509, -0.073881365, -0.9123181, 0.74935687, -0.02613292, 0.07969223, 0.15402676, -0.09815782, -0.02695924, -0.10114566, -0.21902525, 0.11827017) * go_1(0.0, -1.0);
    result += mat4(0.17082585, -0.007859644, 0.12156806, 0.09403444, -0.33774453, -0.019748911, 0.019374913, 0.44707403, -0.34326336, -0.3365793, -0.05290824, -0.04166058, 0.50428927, 0.64362144, -0.16133644, 0.25255525) * go_1(0.0, 0.0);
    result += mat4(-0.21057913, -0.57092893, 0.5081143, -0.155362, 0.070800155, 0.08465349, 0.28153148, -0.0154184215, -0.029613838, -0.09657243, -0.030305343, -0.08233342, -0.07152141, -0.12544721, -0.090722255, -0.10612361) * go_1(0.0, 1.0);
    result += mat4(-0.015157297, 0.036433015, 0.0098142065, -0.008251315, -0.091637075, 0.18779258, 0.28357247, -0.029927224, 0.01978925, -0.0044281315, 0.035410717, 0.011729088, -0.035468794, 0.09249174, 0.11671215, 0.00955182) * go_1(1.0, -1.0);
    result += mat4(0.0110417735, -0.014013604, 0.11865298, 0.061265547, -0.04148026, 0.72284824, 0.093156725, 0.123949654, 0.05956842, 0.043299977, -0.10505947, -0.013988239, -0.10854338, 0.0024874648, 0.005203754, -0.06360594) * go_1(1.0, 0.0);
    result += mat4(0.02860557, -0.17306004, 0.13356969, -0.07442644, 0.0074279993, 0.023680722, 0.03452107, 0.11581386, 0.003807887, 0.011357795, 0.038383324, 0.014785044, -0.0134572955, -0.0042301584, 0.083204396, 0.03359336) * go_1(1.0, 1.0);
    result += vec4(-0.002762823, -0.041161016, -0.04088761, -0.037610073);
    return result;
}

//!DESC ArtCNN C4F8 Hermite (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0060568214, 0.07710804, -0.029386943, -0.025582224, -0.0821118, -0.16353121, 0.020535197, 0.06459526, -0.12688965, -0.042847876, 0.04014271, -0.030964062, -0.038846392, 0.048636023, -0.0058999774, -0.04059458) * go_0(-1.0, -1.0);
    result += mat4(-0.1498012, 0.26165542, -0.12596484, -0.061662015, 0.19669494, -0.047552384, -0.23592405, -0.1470021, -0.017220465, 0.004238765, 0.10944121, 0.071951166, -0.06603632, 0.16397886, -0.054554548, -0.006824233) * go_0(-1.0, 0.0);
    result += mat4(-0.01735134, 0.2074086, -0.024170002, -0.038858257, -0.13171057, 0.051355943, -0.1064102, 0.031952847, 0.03112417, -0.023681529, -0.0030613767, 0.003262862, -0.025945075, 0.08969176, -0.059670266, 0.0010027334) * go_0(-1.0, 1.0);
    result += mat4(0.042903222, -0.044095095, 0.009566129, 0.040540993, -0.21259013, 0.22968557, -0.16235702, -0.0165175, -0.05716753, 0.41340736, -0.07621265, -0.095642604, -0.02122347, -0.057474785, 0.018945307, 0.06168338) * go_0(0.0, -1.0);
    result += mat4(-0.08973542, -0.8358179, 0.14540802, -0.036904443, -0.009205784, -0.20858927, 0.26021785, -0.06888085, -0.51769936, -0.41427475, 0.27742872, 0.25699195, 0.2699678, -0.51571375, 0.071797304, -0.10334494) * go_0(0.0, 0.0);
    result += mat4(0.028165763, -0.059646603, -0.022237875, -0.024257315, -0.07398355, -0.050921895, -0.018224735, 0.032733995, 0.03013771, -0.24113348, 0.33051485, -0.033806622, -0.08714203, -0.0956165, -0.11546431, -0.0049541513) * go_0(0.0, 1.0);
    result += mat4(-0.026067875, -0.008373914, 0.007273942, -0.019313075, -0.09666514, 0.06476217, -0.04445247, 0.0015646378, 0.1587287, 1.3424779, -0.12286113, 0.27445397, 0.05012582, -0.104592055, 0.10266122, 0.007277827) * go_0(1.0, -1.0);
    result += mat4(0.1855046, 0.08343452, -0.064005956, 0.056217313, 0.054739855, -0.044784725, 0.0075455364, -0.010212216, 0.09857502, 1.3018225, -0.13429223, 0.30666086, 0.008347925, -0.034778465, -0.2503731, -0.042630948) * go_0(1.0, 0.0);
    result += mat4(0.018025525, 0.072592996, -0.090254486, 0.005197404, -0.014702979, -0.012884706, -0.050296266, -0.014689204, -0.24221234, 0.5082993, 0.08655921, 0.13486485, 0.011502451, -0.07970854, -0.05519808, -0.027279837) * go_0(1.0, 1.0);
    result += mat4(0.02030455, -0.081433296, 0.04425266, 0.020419464, 0.046011563, -0.33571684, 0.1976694, 0.081546985, 0.027279252, 0.0464218, -0.016797336, 0.0017194275, 0.011156425, 0.19094332, -0.088745445, -0.03601231) * go_1(-1.0, -1.0);
    result += mat4(0.043332282, -0.019720681, 0.03728632, -0.08584505, -0.13511568, 0.012065416, 0.16497704, -0.073971145, 0.08597367, -0.27289546, 0.07928439, 0.030149203, 0.00311216, 0.09902955, -0.20461221, 0.10206015) * go_1(-1.0, 0.0);
    result += mat4(-0.025583329, 0.158116, -0.012774055, -0.089482225, 0.062071327, -0.07076653, 0.051713776, -0.0033255352, -0.04143403, -0.050482612, 0.063634954, 0.0089436965, -0.023233477, 0.01360267, 0.0001378061, -0.0069337687) * go_1(-1.0, 1.0);
    result += mat4(0.041477233, 0.13979934, -0.06165797, -0.019877326, 0.04353412, 1.4021608, -0.498822, -0.110307805, 0.06255323, -0.33313707, 0.12873228, 0.090862565, -0.23708074, 0.29487896, -0.0880627, -0.1250488) * go_1(0.0, -1.0);
    result += mat4(0.06481373, -0.008307983, -0.040407803, 0.16468725, -0.025623469, 0.107640095, 0.07377571, 0.10064841, 0.6215831, 0.54158527, -0.22644456, -0.1296003, -0.7438405, -0.09986266, -0.15417151, 0.14494461) * go_1(0.0, 0.0);
    result += mat4(0.2952008, -0.033581134, -0.46746248, -0.28889373, -0.007229993, 0.0414669, -0.0264371, -0.06613071, 0.16211618, -0.118773825, 0.23926412, -0.005551269, 0.17921644, 0.048385605, 0.119618915, 0.018023696) * go_1(0.0, 1.0);
    result += mat4(0.0014323707, -0.044793714, 0.011774899, 0.022865796, -0.3194297, -0.31906345, 0.3121147, -0.023535175, -0.08580965, 0.04528896, -0.04170508, -0.031007936, -0.16641505, -0.099665254, 0.026705645, -0.01048097) * go_1(1.0, -1.0);
    result += mat4(-0.10697121, 0.060473546, -0.03965399, -0.06734112, -0.20109247, 0.22752278, 0.21812208, 0.15389241, 0.1814785, -0.08764339, 0.35393044, 0.04908105, -0.028229516, 0.0335268, -0.22494161, 0.0061457255) * go_1(1.0, 0.0);
    result += mat4(-0.16009012, -0.42143375, 0.26508284, -0.093359336, 0.055528242, 0.1816342, 0.15896876, 0.09426365, 0.012201693, 0.02658059, 0.021092698, 0.020231627, -0.055408224, 0.018092481, -0.026464084, -0.003976568) * go_1(1.0, 1.0);
    result += vec4(-0.013923149, -0.01756276, 0.00093873055, -0.00426309);
    return result;
}

//!DESC ArtCNN C4F8 Hermite (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
#define go_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define go_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.043066867, 0.029049573, -0.09376867, -0.1562031, -0.02843086, 0.07554961, 0.06213326, -0.08176193, -0.08980193, 0.028414825, 0.06237281, 0.07104787, 0.03494503, -0.01305881, -0.054542307, -0.020771472) * go_0(-1.0, -1.0);
    result += mat4(-0.050303426, -0.15583871, -0.05774728, 0.011546293, -0.29081273, 0.021414004, -0.2951862, 0.18802613, 0.20984592, 0.030523773, 0.096779086, 0.07705983, -0.003946113, -0.1152402, 0.042350154, -0.13282236) * go_0(-1.0, 0.0);
    result += mat4(0.094534844, 0.106608115, -0.0055400017, 0.0054928525, 0.05231409, 0.023131067, -0.059764568, 0.103230305, 0.040931743, 0.016543297, 0.028866656, -0.05276187, 0.04586993, 0.07565334, -0.059922818, -0.069428824) * go_0(-1.0, 1.0);
    result += mat4(0.22583443, -0.045467474, 0.22834331, 0.10394439, 0.042958338, -0.034660324, 0.11103407, 0.16762708, -0.086315095, -0.059263308, -0.002504788, 0.046587117, 0.12330515, -0.04005577, -0.24084982, -0.28896105) * go_0(0.0, -1.0);
    result += mat4(0.22379808, 0.33401248, 0.10054229, -0.06412073, 0.23666608, -0.1255828, 0.33581573, -0.032145638, 0.2931615, 0.66788614, 0.171047, 0.44155338, 0.32710952, 0.19646205, 0.8396632, 0.62042046) * go_0(0.0, 0.0);
    result += mat4(0.08571081, 0.14777632, 0.29008463, 0.30328637, -0.19004463, -0.08251514, -0.1003371, -0.22884889, -0.027204167, -0.047322843, 0.089369394, 0.15241551, -0.052244082, -0.08311308, 0.028518157, -0.031568635) * go_0(0.0, 1.0);
    result += mat4(0.060241908, 0.2447342, -0.034615748, 0.05196052, 0.069813676, -0.051795978, -0.012870689, -0.051500984, 0.002415337, -0.09385167, -0.005047257, -0.0298953, -0.087929815, -0.07402036, -0.0019432935, -0.10711458) * go_0(1.0, -1.0);
    result += mat4(0.28319022, 0.046428103, 0.27612504, 0.20664932, 0.045062535, 0.09632187, 0.08356473, 0.031399067, 0.12652004, 0.06540945, 0.09287835, -0.034747824, -0.37186137, -0.020612186, -0.2969398, 0.11904743) * go_0(1.0, 0.0);
    result += mat4(-0.028409187, -0.032360543, 0.11572792, 0.038302127, 0.031386737, 0.038901675, 0.03186981, 0.01533119, -0.0018829633, -0.0026643288, 0.027514257, 0.037302308, 0.013479588, 0.055857234, -0.15685119, -0.0350335) * go_0(1.0, 1.0);
    result += mat4(0.12934422, -0.010649049, -0.032125354, -0.15222898, -0.115651414, -0.06324404, 0.035476144, 0.07469963, -0.08399413, -0.19513766, -0.083912365, -0.0067761317, -0.13814135, -0.07372992, -0.04830044, 0.18976305) * go_1(-1.0, -1.0);
    result += mat4(-0.34095654, -0.28000596, -0.16801539, -0.14616449, -0.028226497, -0.027559046, 0.019258106, -0.055854205, -0.0005153978, -0.00037748035, 0.12803592, -0.1643473, -0.021836823, -0.119334586, 0.24760978, -0.10261088) * go_1(-1.0, 0.0);
    result += mat4(0.12953675, 0.13466057, -0.08509814, 0.03931454, 0.03970345, 0.0269198, -0.03890972, -0.009955241, 0.0049741915, 0.0027881833, -0.05556814, -0.055628438, -0.062067088, -0.087602966, 0.06194399, -0.09220777) * go_1(-1.0, 1.0);
    result += mat4(-0.16191298, 0.006723561, -0.016305747, 0.022775711, 0.03797157, 0.17487739, 0.045774903, 0.116321534, 0.10490233, 0.38151112, -0.024983965, 0.012000472, 0.34519258, 0.1426501, 0.009991481, -0.076595366) * go_1(0.0, -1.0);
    result += mat4(0.28285518, 0.30528438, 0.24211931, 0.3744525, -0.33384046, -0.039828576, -0.14849015, 0.17082877, 0.15430932, -0.016490757, 0.20686522, 0.46510664, 0.1472067, 0.18763918, 0.091974616, 0.037165858) * go_1(0.0, 0.0);
    result += mat4(-0.09134723, 0.041447286, 0.041272454, 0.07509759, 0.079851605, 0.037349302, -0.16544268, -0.11957028, -0.11637205, -0.16312099, 0.061277464, -0.05446692, 0.19543663, 0.22760348, -0.08589498, 0.24208304) * go_1(0.0, 1.0);
    result += mat4(0.038552195, -0.12634578, -0.02197996, -0.07552302, -0.010143659, -0.03593898, 0.0112441275, 0.024463788, -0.052676987, -0.011263427, -0.0054584052, 0.04176175, -0.12323035, 0.20763773, 0.048815526, 0.14267255) * go_1(1.0, -1.0);
    result += mat4(-0.015400129, 0.064648986, 0.022962574, -0.019206088, 0.14736828, -0.18443108, 0.075526305, -0.16112784, -0.038081374, -0.11601228, -0.058754362, -0.14602537, 0.029377494, 0.22006997, -0.08243004, 0.29987612) * go_1(1.0, 0.0);
    result += mat4(0.008239237, 0.04632008, -0.025810167, 0.010205182, 0.037800405, 0.052797455, 0.0801499, -0.027886901, 0.020076945, 0.0073474026, -0.01611108, -0.011270679, -0.15880391, -0.13492176, 0.017842922, 0.07667253) * go_1(1.0, 1.0);
    result += vec4(0.066177666, 0.07390275, 0.09455006, 0.10282986);
    return result;
}

//!DESC ArtCNN C4F8 Hermite (Depth-to-Space)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!WHEN OUTPUT.w LUMA.w / 1.0 > OUTPUT.h LUMA.h / 1.0 > *
vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];

    float ar_strength = 0.5;
    vec2 pp = LUMA_pos * LUMA_size - vec2(0.5);
    vec2 fp = floor(pp);

    vec2 pix_idx[4] = {{0.5, 0.5}, {1.5, 0.5},
                       {0.5, 1.5}, {1.5, 1.5}};

    float luma_pixels[4];

    for (int i = 0; i < 4; i++) {
        luma_pixels[i] = LUMA_tex(vec2((fp + pix_idx[i]) * LUMA_pt)).x;
    }

    float luma_min = min(min(min(luma_pixels[0], luma_pixels[1]), luma_pixels[2]), luma_pixels[3]);
    float luma_max = max(max(max(luma_pixels[0], luma_pixels[1]), luma_pixels[2]), luma_pixels[3]);

    output_pix.x = clamp(mix(output_pix.x, clamp(output_pix.x, luma_min, luma_max), ar_strength), 0.0, 1.0);
    return output_pix;
}
