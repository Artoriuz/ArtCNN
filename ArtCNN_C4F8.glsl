// MIT License

// Copyright (c) 2024 João Chrisóstomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.047025636, -0.15655357, -0.07800172, 0.04846237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(0.19130924, 0.22806223, 0.14190473, -0.255979, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(0.07246544, 0.017497879, -0.13670516, 0.14824575, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(0.042756233, -0.08654048, 0.22134373, -0.29144746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(0.4420332, -0.052514553, 0.44904983, 0.822445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(0.12440267, 0.30302322, -0.19418238, -0.26604155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(-0.0067582545, -0.15302932, -0.18365729, 0.061425924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(0.057288796, -0.013039625, 0.14458881, -0.07690692, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(-0.16682856, 0.012790011, 0.12998343, -0.10252946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(-0.045822952, -0.048274506, -0.12621896, -0.059548873);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.059100922, 0.21475647, 0.009488643, -0.20036983, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(-0.03539392, 0.008323852, 0.3288524, -0.016255386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(-0.13621068, 0.019224487, 0.047590088, -0.010191679, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(0.13903342, 0.00040353046, -0.04518194, 0.037381064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(0.40020227, -0.15155175, 0.12171713, 0.22752438, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(-0.009808371, 0.12738547, -0.03684245, 0.13949777, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(0.053913802, 0.114389345, -0.16949806, -0.061756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(-0.39618945, -0.25714087, -0.014996082, -0.18674189, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(0.041420944, -0.018122066, -0.22302052, 0.028941665, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(0.025140159, -0.05600559, -0.033868145, -0.0038820724);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.060687404, 0.084871836, 0.0059285387, -0.12626933, -0.124776505, 0.29541823, 0.006529455, -0.058503293, -0.05096368, 0.2484138, -0.057182033, 0.036394473, -0.09344075, 0.15993768, -0.022102727, 0.12630941) * go_0(-1.0, -1.0);
    result += mat4(-0.06494095, -0.12378538, -0.24877888, 0.16462263, -0.3933048, -0.36100504, 0.094319634, -0.1821292, 0.089313366, 0.14782974, -0.22002989, 0.07494689, -0.27350354, -0.18740726, -0.13471822, 0.25502348) * go_0(-1.0, 0.0);
    result += mat4(0.21785587, 0.052767575, 0.19294795, -0.35846114, 0.03803388, -0.17957042, 0.07104389, -0.0918045, 0.10432407, -0.5196116, 0.19705378, 0.238054, -0.055606287, -0.048333347, 0.1359895, 0.24348806) * go_0(-1.0, 1.0);
    result += mat4(-0.10170606, 0.07514954, -0.05755685, -0.03660458, 0.15518887, 0.7335126, -0.019728916, 0.17023084, 0.0864201, -0.08749355, 0.095953144, 0.050377343, -0.096660964, -0.7842735, -0.006152586, 0.15840079) * go_0(0.0, -1.0);
    result += mat4(0.35622212, 0.06443098, 0.25430018, 0.0069114277, -0.09558283, 0.4029101, 0.562389, 0.19895205, 0.45735782, 0.25757134, -0.72227436, -0.08646869, 0.53777736, -0.08432626, -1.5801952, -0.7220676) * go_0(0.0, 0.0);
    result += mat4(0.41651583, 0.11811817, 0.43936628, -0.10120809, -0.1927014, -0.3777312, 0.39736167, 0.4774425, -0.0029999495, 0.043134484, -0.10876717, -0.29426137, -0.14864479, -0.07445531, 0.89804745, 0.62740827) * go_0(0.0, 1.0);
    result += mat4(-0.04095508, 0.060165223, -0.17857577, -0.097761214, 0.12046627, 0.20240866, -0.12167578, -0.24437295, -0.03479827, -0.704023, -0.034557674, -0.033543747, -0.025731903, -0.42353246, -0.041415725, -0.20587003) * go_0(1.0, -1.0);
    result += mat4(0.030382888, 0.23004451, 0.0039629904, -0.010932658, -0.18371968, -0.4584628, 0.2298746, -0.4643468, -0.11755328, -0.24092579, -0.11965411, 0.2328593, 0.33309916, 0.37325588, 0.1494923, 0.44881496) * go_0(1.0, 0.0);
    result += mat4(0.032799497, -0.15968125, 0.05724065, -0.008412908, -0.025813151, 0.6946896, 0.18767893, 0.16619645, 0.04335741, 0.23281996, 0.020927664, -0.27996713, 0.0709119, 0.94507974, 0.10764341, 0.012300173) * go_0(1.0, 1.0);
    result += mat4(-0.124306604, -0.35334706, -0.019439118, 0.06011903, 0.03682844, 0.09830363, -0.0858654, 0.123016246, -0.017854594, -0.32623085, 0.12419535, -0.106851086, 0.10705369, 0.14623457, -0.04323777, 0.12483751) * go_1(-1.0, -1.0);
    result += mat4(0.13283084, -0.6806207, -0.013200915, 0.44840226, -0.28101417, -0.32971898, 0.04316429, 0.11308439, 0.081009455, -0.2802502, 0.38814038, 0.027740525, -0.17247897, -0.36417958, 0.12659366, -0.30064175) * go_1(-1.0, 0.0);
    result += mat4(-0.049211487, -0.8427436, -0.06618044, 0.0022294628, -0.0068410416, -0.55739856, -0.32589826, -0.053134155, -0.12026777, -0.18708636, -0.33362332, 0.542239, -0.07261708, -0.10140193, -0.0674477, -0.18234417) * go_1(-1.0, 1.0);
    result += mat4(-0.31124696, -0.4094508, -0.38534683, -0.0486469, -0.31590945, 0.7193157, 0.13763581, -0.067464165, -0.39516422, -0.13813725, -0.27521014, -0.038594913, -0.19951287, -0.13744305, 0.004264364, -0.050708685) * go_1(0.0, -1.0);
    result += mat4(0.5500118, 0.78263706, -0.63169646, -0.26138243, 0.008165811, -0.6318926, 1.0013369, -0.58741957, 0.055703618, -0.094647676, -0.4597147, 0.005338374, -0.044442732, 0.59710777, 0.06790516, -0.04329144) * go_1(0.0, 0.0);
    result += mat4(0.16578269, 0.19695848, 0.80239415, -0.61354023, -0.22915447, 0.32472792, -0.18143949, -0.019368798, -0.06649398, 0.31066555, -0.5688443, 0.074691884, 0.010061555, -0.07852074, 0.3394194, 0.29378775) * go_1(0.0, 1.0);
    result += mat4(0.044859637, -0.05591626, -0.08388901, 0.2373266, 0.02858144, 0.18586041, 0.010150309, -0.11766277, 0.040243343, -0.05081452, 0.09214762, 0.31747556, -0.15985379, 0.1406654, 0.10369856, 0.050327156) * go_1(1.0, -1.0);
    result += mat4(0.039458636, 0.029499546, -0.33576635, -0.12781474, -0.2561116, 0.015097317, 0.1368652, 0.029167732, 0.11254574, -0.4641859, -0.038385574, -0.44234723, 0.022403196, -0.1463211, -0.034458157, 0.028998615) * go_1(1.0, 0.0);
    result += mat4(-0.12781073, 0.21977635, 0.2148681, 0.10852751, 0.038292177, 0.2968401, -0.22883713, -0.31503114, -0.17215884, -0.33724, -0.036344603, -0.017637335, 0.16975261, -0.21059743, -0.047187034, 0.54733455) * go_1(1.0, 1.0);
    result += vec4(0.17789787, -0.054155983, -0.05379172, 0.49586824);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.04611916, -0.047145355, -0.06323047, -0.02776834, 0.1348034, 0.103495896, -0.0035559519, 0.40730873, -0.036293373, 0.27880645, 0.0942646, 0.1792745, -0.05504144, -0.7902413, -0.17143154, 0.13531098) * go_0(-1.0, -1.0);
    result += mat4(0.095517434, 0.025847657, -0.08917887, -0.1685554, -0.1783603, -0.08753835, -0.13536009, -0.105324425, -0.13196607, 0.21814089, 0.03153533, -0.20054683, -0.0927356, -0.21590622, -0.16549893, -0.022866188) * go_0(-1.0, 0.0);
    result += mat4(-0.004402651, -0.24073014, 0.009189463, 0.14603902, -0.11106127, 0.099482775, 0.16567868, 0.013898182, 0.07366629, 0.16295213, 0.031937428, -0.020800307, 0.27647614, -0.066608585, -0.018118847, 0.13869117) * go_0(-1.0, 1.0);
    result += mat4(0.0589482, 0.17287426, -0.07041626, 0.3298022, 0.17741692, 0.7457222, -0.13586867, 0.61730814, 0.021684537, -0.3011855, 0.0060618157, -0.94042087, -0.24455386, -0.6556446, -0.124638505, -0.8908228) * go_0(0.0, -1.0);
    result += mat4(0.13151094, -0.05514584, -0.19493759, 0.043646544, -0.26650602, -0.19503315, -0.05661446, -0.5887678, 0.56736505, -0.013446614, -0.16282624, 0.08230486, 0.39503458, 0.35222605, -1.095733, 0.52721924) * go_0(0.0, 0.0);
    result += mat4(0.123619646, 0.16301858, -0.16748475, 0.16524738, 0.12524554, 0.6921292, 0.079886146, -0.72641414, -0.24431548, -0.14436641, -0.040209528, -0.2179473, 0.39616892, 0.7944256, -0.19123541, -0.35956693) * go_0(0.0, 1.0);
    result += mat4(-0.16859592, 0.0014796054, -0.058905486, 0.32556686, -0.054819014, 0.29983073, 0.11236813, 0.19769578, 0.009711695, -0.070040986, 0.09541705, -0.03440831, -0.21866249, -0.25144956, 0.026477024, 0.1876296) * go_0(1.0, -1.0);
    result += mat4(0.117361456, 0.009264104, 0.18506548, 0.039117094, -0.007417379, -0.14973754, -0.22499712, 0.183683, -0.05604171, -0.2848783, 0.55318606, -0.29233462, -0.3128528, 0.6651936, 1.6368456, -0.4313214) * go_0(1.0, 0.0);
    result += mat4(0.10431713, -0.13525388, 0.1115901, 0.24210984, 0.12452999, -0.075644806, -0.06437424, 0.052415498, -0.2463266, 0.29927567, 0.10008976, -0.15293871, -0.06758072, -0.18528493, 0.2340706, -0.042500783) * go_0(1.0, 1.0);
    result += mat4(-0.086967684, -0.5234417, -0.015640927, -0.251818, 0.3004638, 0.33085445, 0.166466, 0.31599334, -0.18025987, -0.09147053, -0.10524387, -0.29774213, 0.15023327, -0.11248737, 0.016143387, 0.119507104) * go_1(-1.0, -1.0);
    result += mat4(0.090417214, -1.4241955, 0.17944366, -1.0933886, -0.024488373, -0.5293599, 0.049702793, -0.8451699, 0.03517051, -0.54843426, 0.0111032035, 0.041582223, 0.013788297, -0.23316258, -0.00040998403, -0.5089729) * go_1(-1.0, 0.0);
    result += mat4(0.09740955, 0.07355961, 0.013115152, 0.315206, -0.19796409, 0.056336563, 0.027831525, 0.32660908, 0.15942436, -0.56357914, 0.09249519, -0.36750126, -0.16079004, -0.32274735, -0.05369852, 0.13063258) * go_1(-1.0, 1.0);
    result += mat4(-0.27024162, -0.6709107, -0.08602656, 0.03353327, -0.08310805, 0.2940582, -0.60066545, 0.83985645, 0.016637687, -0.5778703, 0.05004318, -0.251868, 0.1268735, 0.32451135, -0.15977016, 0.39443305) * go_1(0.0, -1.0);
    result += mat4(0.4113735, -0.06750932, -1.4781349, 0.62298185, -0.307538, 0.2628012, -0.114019915, -0.18393093, -0.18961191, -0.38574103, -0.4115793, -0.18482375, -0.11018499, 0.08593987, -0.21916036, 0.078693315) * go_1(0.0, 0.0);
    result += mat4(-0.35239846, 0.31583437, -0.024754975, 0.39298442, -0.05679709, -0.49320966, 0.15681084, 0.32398435, 0.004795834, 0.54450715, -0.21256381, 0.035559885, -0.23512863, 0.1936293, -0.06534342, -0.3733361) * go_1(0.0, 1.0);
    result += mat4(-0.029743478, 0.099287614, 0.16384774, -0.17731512, -0.009250374, 0.03641638, 0.2531435, -0.091025144, -0.0974073, -0.04381254, 0.0146737425, -0.06447816, -0.08950142, 0.12801424, 0.077302046, -0.03834572) * go_1(1.0, -1.0);
    result += mat4(-0.11824103, 0.32901385, 0.18666233, -0.25754628, 0.24387527, -0.016130984, -0.2651304, 0.11698305, 0.596364, 0.28677404, -0.721909, 0.48886186, 0.005793933, -0.22915082, 0.09325537, -0.036574915) * go_1(1.0, 0.0);
    result += mat4(-0.37382197, 0.36519286, 0.3217757, -0.19510323, 0.0064725056, -0.11576382, -0.21732008, -0.23789756, -0.07203642, -0.6266141, -0.020739568, -0.18612522, -0.10792812, -0.1547525, -0.042632967, 0.0025240532) * go_1(1.0, 1.0);
    result += vec4(0.0237284, -0.0026345253, -0.0051613185, -0.19652465);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.15196635, -0.111821085, -0.066963136, -0.11640634, -0.05436409, -0.026170498, 0.0067269416, 0.022953242, 0.046077736, -0.053322606, 0.041899275, 0.04139753, 0.166869, -0.025196003, -0.03337841, 0.15094459) * go_0(-1.0, -1.0);
    result += mat4(-0.2724275, -0.05062262, -0.0046435706, -0.32234725, -0.019763395, 0.040497217, -0.0212668, 0.11325441, 0.1721945, -0.13917534, 0.035933826, -0.024785692, -0.045458227, 0.23060395, -0.07131432, 0.08851717) * go_0(-1.0, 0.0);
    result += mat4(-0.4225458, 0.2502977, 0.024718357, -0.004984604, 0.30469522, -0.026143977, -0.0112705715, 0.13378449, -0.017004112, 0.019564206, -0.007893661, 0.07393925, 0.035145078, 0.00366756, -0.00044722692, -0.09946863) * go_0(-1.0, 1.0);
    result += mat4(-0.15999073, 0.32908967, 0.12642555, 0.06556412, -0.17936799, 0.1135573, 0.041713424, 0.7864839, -0.27671945, -1.010389, -0.07569218, -0.88201654, 0.072075866, 0.007646414, -0.041083843, 0.44368508) * go_0(0.0, -1.0);
    result += mat4(0.22460276, -0.255756, 0.9487186, 0.18880713, -0.05608717, 0.25842318, 0.020817291, 0.05362221, -0.21805081, -1.0173955, -0.067704365, -0.29562238, 0.11494206, 0.87248063, 0.08359578, 0.45862818) * go_0(0.0, 0.0);
    result += mat4(0.27722508, 0.4521614, -0.029396968, 0.12878613, -0.13642876, 0.1420355, 0.009587818, 0.012271735, -0.0090896, -0.04125717, -0.006182296, 0.047655277, -0.07251, -0.07768413, -0.010307198, -0.06636761) * go_0(0.0, 1.0);
    result += mat4(0.18181789, -0.04242868, -0.017035104, -0.11248855, -0.005761963, 0.07982949, 0.0020175728, -0.08153786, -0.026390161, -0.017467706, -0.046518624, -0.54578346, -0.07169803, -0.122929424, -0.01057175, -0.14102177) * go_0(1.0, -1.0);
    result += mat4(0.1932209, 0.28923115, -0.16547497, 0.27346486, 0.021017434, -0.06904344, 0.0217804, 0.24310152, 0.09795576, -0.096462, 0.007279592, 0.0060112583, -0.0061276006, -0.09024835, -0.05852537, -0.08255907) * go_0(1.0, 0.0);
    result += mat4(0.12930222, -0.090485856, 0.12904944, 0.15883984, 0.06342729, -0.04988777, -0.0037580593, -0.07423697, -0.0020688553, 0.0039012956, -0.012208705, 0.07776045, -0.019097134, -0.06149443, 0.00033039018, 0.061711427) * go_0(1.0, 1.0);
    result += mat4(-0.11012785, -0.22638959, 0.008668518, 0.37166148, -0.012962246, -0.00865905, 0.00013112907, 0.027498364, -0.06902523, -0.07377638, 0.011295686, -0.07542221, -0.008389619, 0.078278184, -0.021585165, -0.0023083957) * go_1(-1.0, -1.0);
    result += mat4(-0.5362383, -0.37439868, 0.00059371744, 0.06459703, -0.06646293, 0.116660155, -0.013819032, -0.0617266, -0.37855688, -1.1199309, -0.035151172, -0.36630592, -0.20327729, -0.08253924, -0.09273465, 0.10440717) * go_1(-1.0, 0.0);
    result += mat4(0.0025875466, 0.037808247, 0.04389046, 0.32275394, -0.13271275, 0.019083751, -0.022432111, -0.008144336, -0.082693145, -0.058054283, 0.0147800185, 0.09611273, -0.13541488, -0.20863311, -0.031449564, 0.012563498) * go_1(-1.0, 1.0);
    result += mat4(0.40075856, -0.5057349, -0.054873183, -0.2734575, 0.10896447, -0.012865841, -0.045564078, 0.27129054, -0.12080285, 0.0029253429, -0.017176311, -0.20612705, 0.17029597, 0.14159706, -0.031343527, -0.6512675) * go_1(0.0, -1.0);
    result += mat4(0.4663692, 0.17003877, 0.24568994, -0.51874846, 0.1420589, 0.44942528, -0.028968815, 0.21653533, -0.210244, -0.5868294, -0.078529745, -0.8903087, 0.49469414, 1.694238, 0.15948042, 0.7629338) * go_1(0.0, 0.0);
    result += mat4(0.21496165, 0.11394897, -7.304043e-05, -0.12688242, 0.019757587, 0.020167017, -0.018108336, -0.08296478, -0.042466905, -0.011170495, 0.01841992, 0.0056063863, 0.014157543, -0.09530016, -0.067929246, 0.09149712) * go_1(0.0, 1.0);
    result += mat4(-0.24613784, -0.17081477, 0.046599194, 0.20762335, 0.017195638, -0.082770325, 0.019406894, -0.0067727026, -0.013447229, 0.011448071, -0.0016769771, 0.023103515, 0.07207884, 0.12653975, -0.042152654, -0.48384538) * go_1(1.0, -1.0);
    result += mat4(-0.04275572, -0.14137958, 0.012834829, 0.28458515, 0.0032095897, -0.011944456, 0.043878905, 0.08824423, -0.07431322, 0.062644124, -0.0072758896, -0.057112195, 0.08823331, 0.1982546, -0.016537813, -0.009257163) * go_1(1.0, 0.0);
    result += mat4(-0.08316294, -0.051824704, -0.029761333, 0.009022442, -0.0820529, 0.112260245, 0.0054759365, -0.018583713, -0.00030103305, 0.04121267, -0.013068988, -6.786006e-05, -0.01797053, -0.007554325, -0.00650649, 0.10377135) * go_1(1.0, 1.0);
    result += vec4(-0.07753932, -0.47163886, -0.0083067035, -0.3942763);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.25212464, -0.15217069, -0.036006667, -0.03779069, -0.22539324, -0.13530654, 0.16814525, 0.1210264, -0.22932093, 0.11793296, 0.01641451, -0.088819936, 0.010714939, 0.063858, 0.035002764, 0.059073932) * go_0(-1.0, -1.0);
    result += mat4(0.35903668, -0.12497685, -0.13295512, -0.27713418, -0.3750266, -0.031359002, -0.114119045, 0.178647, -0.24545375, -0.08075203, -0.19978239, -0.039812062, -0.015347106, 0.048495654, 0.013436499, 0.09763897) * go_0(-1.0, 0.0);
    result += mat4(-0.20952633, -0.015779324, -0.10375847, 0.280102, -0.25413257, 0.10641759, 0.09927264, 0.008323927, -0.083808, 0.07095054, -0.023483736, 0.044659343, 0.11880051, -0.08174765, -0.009195578, -0.087997496) * go_0(-1.0, 1.0);
    result += mat4(0.23563503, -0.07152378, -0.030406289, -0.10721553, -0.47504088, 0.05069932, 0.10364676, 0.19154322, 0.10900451, -0.31639183, 0.33275527, -0.38641125, 0.0495089, -0.16620314, 0.15074983, -0.02019857) * go_0(0.0, -1.0);
    result += mat4(0.555193, -0.050565578, 0.28717667, -0.775627, -0.67878205, 0.3619095, -0.17523995, 0.09611727, 0.08165274, -0.4952624, 0.54951656, -0.29207617, -0.4890152, 0.38946664, -0.3416208, 0.93057203) * go_0(0.0, 0.0);
    result += mat4(-0.4381833, 0.60542697, 0.09718554, 0.80869514, -0.2553054, 0.073174514, -0.00697457, -0.08011754, 0.02848203, 0.016715987, 0.06826069, 0.024526238, 0.0073150313, -0.2088127, -0.20144936, -0.16545361) * go_0(0.0, 1.0);
    result += mat4(-0.20141424, 0.12119731, -0.019836068, 0.12973042, -0.17895888, 0.24273342, 0.10884465, 0.054440435, 0.09967995, -0.21585502, -0.10082031, -0.11008199, 0.12917992, 0.08982549, -0.013501902, 0.00447556) * go_0(1.0, -1.0);
    result += mat4(-0.27420092, -0.14423424, 0.1807875, -0.07206031, -0.19061708, 0.043181967, 0.023730148, 0.023376841, -0.0692187, -0.3557213, -0.15198977, 0.030298274, 0.1811324, 0.76390743, 0.12480209, -0.12932815) * go_0(1.0, 0.0);
    result += mat4(0.13222629, 0.21839078, -0.2740883, -0.17665564, -0.16893658, -0.027492631, 0.02830002, 0.044615418, -0.018736742, 0.03406556, 0.017346755, 0.07000392, -0.0591349, 0.0758722, 0.25405622, -0.0017075469) * go_0(1.0, 1.0);
    result += mat4(0.19205022, 0.7107292, -0.16990364, 0.15123032, 0.17206953, 0.116959885, -0.13177478, -0.018645326, -0.11788891, -0.0011940757, 0.10346874, 0.017312018, -0.1268003, 0.015307291, 0.09106331, -0.049626447) * go_1(-1.0, -1.0);
    result += mat4(0.022457346, -0.094908506, 0.073891595, -0.06184641, 0.24533267, 0.10437203, -0.10475263, -0.078025065, 0.149261, -0.063215435, 0.37370574, -0.36862117, 0.43829972, -0.11942196, 0.120404504, 0.014391321) * go_1(-1.0, 0.0);
    result += mat4(0.062016074, 0.17043282, 0.5670587, 0.061066, 0.24546441, 0.0056958767, -0.013768835, -0.0314885, 0.122123174, 0.047563385, 0.24877654, 0.09567659, 0.30768758, -0.08180346, 0.22580017, -0.04346907) * go_1(-1.0, 1.0);
    result += mat4(0.73286283, -0.3878097, 0.3908467, -0.076023534, 0.23403358, 0.058063656, -0.06069061, -0.04585033, -0.040586546, 0.107235834, -0.013875145, 0.12743518, 0.23258756, -0.13297793, -0.12227743, -0.07934424) * go_1(0.0, -1.0);
    result += mat4(-0.24166775, 0.07169506, -0.58459526, 0.82688105, 0.4002543, 0.0812954, -0.2967738, 0.109734565, 0.27639326, -1.875079, -0.0294196, -0.21618907, -0.32104287, 0.22995439, -0.41732982, 0.6353821) * go_1(0.0, 0.0);
    result += mat4(0.0478089, 0.1259732, -0.29852602, -0.013133736, 0.3523327, -0.032785553, -0.21567671, -0.083773285, -0.18053687, 0.08493583, 0.3706633, 0.10004692, 0.06632927, -0.15916117, -0.32471845, -0.17263368) * go_1(0.0, 1.0);
    result += mat4(-0.29889798, -0.046577714, -0.13838242, 0.17621252, 0.18923083, 0.07646382, -0.13685566, -0.020708604, -0.026466267, -0.019356048, 0.025305463, 0.03394765, 0.1910096, -0.23177552, -0.019528609, -0.08146932) * go_1(1.0, -1.0);
    result += mat4(-0.47453994, -0.035462894, 0.25674233, 0.1705224, 0.2538512, 0.21677707, -0.11454058, 0.0658296, 0.016161501, -0.20981939, -0.11498413, 0.040503148, -0.013123578, 0.53394973, 0.27771798, 0.08069774) * go_1(1.0, 0.0);
    result += mat4(0.25088367, -0.051097363, -0.19264819, -0.021207586, 0.38218272, -0.22241867, -0.11560275, -0.023648934, -0.016295958, 0.051092714, -0.0007818539, 0.03273663, 0.09836305, -0.17564885, 0.12542468, -0.039126694) * go_1(1.0, 1.0);
    result += vec4(0.045951013, -0.49827802, 0.0215411, -0.22255147);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.060635664, 0.04960443, 0.058184985, 0.025079986, 0.24116793, -0.05993139, 0.03373702, -0.054098032, 0.06270001, 0.07251266, -0.0044045793, 0.030215392, 0.038333848, -0.12772901, -0.031522878, -0.007315792) * go_0(-1.0, -1.0);
    result += mat4(-0.0054554264, -0.033006135, -0.042380113, -0.049127627, -0.123092234, -0.08970143, 0.017729104, 0.019010363, -0.51254094, -0.17127116, -0.140934, 0.009350742, 0.23402728, 0.14697208, -0.082003176, 0.104659446) * go_0(-1.0, 0.0);
    result += mat4(-0.041945327, 0.025660068, 0.02718237, 0.025802746, 0.024164079, 0.024647182, 0.0702237, -0.007040865, -0.17249998, -0.18915203, 0.015155025, -0.012593294, -0.029117454, -0.19332556, -0.04708478, 0.055440407) * go_0(-1.0, 1.0);
    result += mat4(-0.05342652, 0.088931374, 0.0843497, 0.010742844, 0.0237049, -0.0318925, -0.078387894, -0.06453258, -0.17219177, -0.010077629, 0.0012032624, -0.059006333, -0.01970694, -0.1557314, -0.10107713, 0.002956697) * go_0(0.0, -1.0);
    result += mat4(-0.533892, -0.25991184, 0.17360905, -0.051693257, 0.14818011, 0.2644155, -0.49242705, 0.13966183, 0.61916786, 0.7912066, 0.32367268, 0.53472805, 0.13936286, 0.16920383, -0.3420253, 0.15838008) * go_0(0.0, 0.0);
    result += mat4(-0.17812516, -0.13970701, -0.10396944, -0.02006755, 0.13898303, 0.31364664, 0.14169359, 0.102827445, 0.1924913, -0.6285587, 0.12411255, 0.097989306, 0.20406337, 0.10777032, -0.12370638, 0.07664273) * go_0(0.0, 1.0);
    result += mat4(0.24749808, 0.0503565, 0.07122836, -0.0012505699, -0.07462434, -0.08029615, -0.06519474, -0.042644616, 0.023767222, -0.092241354, -0.023881337, -0.009475882, -0.042976443, -0.06756808, 0.020214979, -0.039380018) * go_0(1.0, -1.0);
    result += mat4(0.15032104, 0.013584209, -0.04802979, -0.1603326, 0.068623595, 0.102194205, -0.1624835, 0.03330753, 2.0560336e-05, 0.060158312, 0.06573158, -0.03543376, -0.0385061, -0.047614355, -0.076353155, -0.03584902) * go_0(1.0, 0.0);
    result += mat4(0.30800205, 0.16318323, 0.10477282, 0.090247706, -0.09596211, 0.094551615, 0.013235558, -0.026507342, -0.027472286, 0.10816658, -0.029078808, -0.0068945703, -0.08195972, 0.12196762, -0.0073099, -0.042089052) * go_0(1.0, 1.0);
    result += mat4(0.039123643, 0.059684813, 0.017044237, -0.0058818995, -0.11564592, 0.059045468, 0.045142207, -0.010066564, -0.07107827, 0.018221663, 0.01790373, 0.0019219845, -0.0042510754, 0.033526108, 0.0112209525, 0.00041219773) * go_1(-1.0, -1.0);
    result += mat4(0.076426566, 0.054070167, 0.034521196, -0.0054070596, -0.40190205, -0.024793573, 0.022468692, -0.037473388, -0.34850746, -0.15122467, -0.0098926015, -0.02475446, -0.07145431, 0.07415232, -0.102769636, -0.04873614) * go_1(-1.0, 0.0);
    result += mat4(0.24571869, 0.23457304, 0.050043356, 0.02571672, 0.03969488, 0.10596775, 0.07082475, -0.043638747, -0.12898801, -0.040871184, 0.04409618, -0.025910491, 0.09142151, 0.08572656, 0.025639312, -0.030921392) * go_1(-1.0, 1.0);
    result += mat4(0.20715345, 0.13694651, 0.045508377, -0.017493755, 0.09752072, 0.09632868, 0.03331328, 0.05985248, -0.0685527, 0.10479292, 0.13193426, -0.013762139, 0.34973738, 0.13589785, 0.11502932, 0.0061945366) * go_1(0.0, -1.0);
    result += mat4(0.0037113617, -0.20711054, 0.35046563, -0.060277525, -0.049610224, -0.09341509, 0.13713966, 0.04856161, -0.111210026, -0.40206102, 0.107593425, -0.06521154, -0.2579631, -0.3453423, -0.32770255, 0.121370584) * go_1(0.0, 0.0);
    result += mat4(0.18208495, 0.048107926, 0.07201744, -0.017827515, 0.0743583, -0.0022100904, 0.08924537, -0.0011165538, -0.06059861, 0.028232258, 0.044046573, 0.020965626, -0.044913806, -0.13177368, 0.0934116, -0.07011898) * go_1(0.0, 1.0);
    result += mat4(0.08655752, 0.057737254, 0.018571751, 0.00733218, 0.022172695, -0.013408784, 0.012581209, 0.005181924, -0.046203874, 0.021051025, -0.012554197, 0.011512532, -0.05981103, 0.103950575, 0.12863953, -0.0039067185) * go_1(1.0, -1.0);
    result += mat4(0.15096553, -0.02358883, -0.044265203, -0.010912225, -0.050119024, 0.038139533, -0.1214762, -0.024023024, -0.04898661, -0.037775632, -0.015968282, 0.0144131, -0.10884557, -0.110669136, 0.046749286, -0.058674883) * go_1(1.0, 0.0);
    result += mat4(-0.0056850174, 0.23209806, 0.07235347, -0.009377555, -0.10013465, 0.21203065, 0.035689637, -0.042319473, 0.038151868, -0.04199178, -0.018944414, 0.01704159, -0.05624777, -0.051150985, 0.06317411, -0.0066370447) * go_1(1.0, 1.0);
    result += vec4(0.045671225, 0.016471004, 0.08001257, -0.04874699);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.024335902, 0.012080925, 0.002262624, -0.007240721, -0.13180836, 0.0570396, -0.07931053, -0.018311119, 0.09486385, -0.030075388, 0.054019433, -0.070956446, -0.081002116, 0.029245438, 0.11283215, 0.046648216) * go_0(-1.0, -1.0);
    result += mat4(-0.0032896164, -0.016797448, -0.005591853, 0.039273188, -0.33603722, 0.044779327, 0.001767924, -0.12211763, -0.13524023, -0.3427016, -0.09726145, -0.14970255, 0.25769448, 0.21516506, 0.12598984, 0.003856946) * go_0(-1.0, 0.0);
    result += mat4(0.015255742, 0.010546783, -0.0017910491, -0.0061377473, -0.14822006, 0.051858753, 0.022162154, -0.035968382, -0.17735279, 0.19570051, 0.02950234, 0.09898441, -0.19841084, -0.07957392, 0.03226829, -0.02310744) * go_0(-1.0, 1.0);
    result += mat4(0.1608222, -0.009849653, 0.003773946, -0.05062919, -0.09811567, 0.07893145, -0.19604388, 0.1530824, -0.056703016, 0.08606241, -0.06305274, 0.055324953, -0.14228304, 0.035457056, 0.074308276, 0.08865839) * go_0(0.0, -1.0);
    result += mat4(-0.35183892, -0.05711028, -0.045752715, 0.030459508, 0.11435352, 0.31515014, 0.21869223, 0.05120735, 0.8784886, 0.2883204, 0.71936846, 0.57492703, -0.020982299, 0.1458875, 0.113639414, -0.059646107) * go_0(0.0, 0.0);
    result += mat4(-0.05586902, -0.11507051, -0.018620899, -0.025214255, -0.86651564, -0.110619046, -0.16857757, -0.1281802, -0.495496, -0.39209932, -0.6671911, -0.08753128, -0.21913102, 0.2347393, -0.035483405, 0.021887584) * go_0(0.0, 1.0);
    result += mat4(0.78568125, 0.112444274, -0.11779581, 0.016396381, -0.013147493, -0.095926866, -0.13251734, -0.01806288, -0.038993437, -0.021082465, -0.016567288, -0.01605229, -0.08918565, -0.06665874, 0.11962012, -0.027870761) * go_0(1.0, -1.0);
    result += mat4(1.0012604, 0.29457477, -0.020358184, 0.264961, -0.040818207, 0.025435545, 0.024031939, -0.0009638481, -0.095909104, 0.086593375, -0.028528092, 0.026619673, 0.06536575, 0.009029742, 0.014925486, -0.007087897) * go_0(1.0, 0.0);
    result += mat4(0.7193784, 0.19756791, -0.19116004, 0.18286341, -0.053311594, 0.06062019, 0.0531634, -0.033402164, -0.012478541, 0.06560285, 0.102289446, 0.019465657, 0.34207523, 0.061061557, 0.0022723232, -0.0133520225) * go_0(1.0, 1.0);
    result += mat4(-0.014604686, 0.055064265, -0.035329886, 0.045815334, 0.0299087, 0.010503374, -0.093179174, 0.033200085, 0.16583967, -0.012953039, -0.062069092, 0.003673881, 0.34752926, -0.006990002, -0.037844177, -0.04982943) * go_1(-1.0, -1.0);
    result += mat4(-0.009688385, 0.19063866, 0.0005854887, 0.2254108, -0.06732486, 0.07028419, -0.022298403, 0.056967605, -0.27944878, -0.1979379, -0.041910555, -0.06942197, 0.25404587, -0.06445636, 0.030680016, 0.04017417) * go_1(-1.0, 0.0);
    result += mat4(0.06714813, 0.18687344, 0.043256927, 0.09166998, 0.25156668, -0.01454703, -0.27668226, -0.050330423, -0.01748053, -0.051965263, -0.023542155, -0.0062068906, -0.002761768, 0.02452353, -0.023941336, -0.0009759556) * go_1(-1.0, 1.0);
    result += mat4(0.07309558, 0.11664581, 0.10752278, -0.037542112, 0.12481012, 0.018101115, 0.057758838, 0.00470914, 0.041274935, -0.07608558, 0.14972164, -0.06387911, 0.10427766, 0.029494349, 0.4743711, -0.20197323) * go_1(0.0, -1.0);
    result += mat4(-0.5042586, 0.1728129, -0.14425792, 0.24855207, -0.23857743, 0.0060286033, -0.068306714, -0.1218216, -0.14533499, -0.32537726, -0.09403827, 0.10162573, -0.6438749, 0.25861457, -0.28254044, -0.17226411) * go_1(0.0, 0.0);
    result += mat4(-0.25534853, 0.2790798, -0.1055527, 0.06379201, -0.22226895, -0.17677598, -0.24763119, -0.21314444, 0.29368192, -0.0960308, -0.05863594, -0.04959478, -0.7492164, -0.055599682, -0.11929301, -0.020343183) * go_1(0.0, 1.0);
    result += mat4(0.071264625, 0.01960761, -0.017636137, 0.04621914, 0.15515012, -0.04851129, -0.109969266, 0.007636273, 0.045430638, -0.021094054, 0.012000691, 0.0033601113, 0.039050102, -0.06138317, 0.06205135, -0.018243846) * go_1(1.0, -1.0);
    result += mat4(-0.19664465, 0.1385081, 0.010833301, 0.13278015, 0.15320103, 0.015169819, -0.019941578, 0.0066487915, 0.009471843, -0.07516557, -0.037209082, 0.01494057, 0.04070845, -0.09008778, -0.0026167347, -0.08405924) * go_1(1.0, 0.0);
    result += mat4(0.25966063, 0.1680589, 0.043457538, 0.057238717, 0.30677688, 0.04077068, -0.093795285, -0.05195775, -0.0024269833, -0.08178068, 0.0012099155, -0.040139884, 0.021089798, 0.049172748, -0.118670784, 0.020133233) * go_1(1.0, 1.0);
    result += vec4(-0.0062340456, 0.032544397, -0.015096317, 0.024368035);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.003990215, 0.015024829, 0.012767146, -0.012237269, -0.040395968, -0.007891232, 0.00881386, 0.059258964, -0.010299441, 0.0021277305, -0.04179227, -0.063493334, -0.08703131, -0.0009588229, 0.028322898, 0.07892899) * go_0(-1.0, -1.0);
    result += mat4(0.029632468, -0.025810223, -0.016632352, -0.04732942, 0.14135022, 0.083566695, 0.26186353, 0.22171375, -0.09291769, 0.0042641093, 0.14548847, 0.06529108, 0.056997377, 0.0443391, -0.17632014, 0.018376404) * go_0(-1.0, 0.0);
    result += mat4(0.015204067, -0.034689385, -1.9800409, -0.05502312, -0.09944688, 0.03229896, -0.7453563, -0.11465087, 0.020952517, 0.058576733, -5.4876127, 0.049025252, -0.024589846, -0.013976382, -4.4392524, -0.0023755818) * go_0(-1.0, 1.0);
    result += mat4(-0.031290323, -0.006425991, 0.0043725558, 0.047475558, -0.10973013, -0.005225025, 0.025089996, -0.03669417, 0.062370945, -0.021350699, -0.060669836, -0.014825782, -0.7966187, 0.020075666, -0.085107744, 0.12213222) * go_0(0.0, -1.0);
    result += mat4(-0.17298096, 0.09150353, -0.03041365, 0.011112933, 0.24119668, -0.18477641, 0.046518616, 0.42964756, 0.07501885, 0.0188586, 0.20406951, 0.15724222, 0.9380203, 0.1391129, 0.35731825, -0.6166804) * go_0(0.0, 0.0);
    result += mat4(0.09215203, 0.044581085, -0.11021649, 0.12115472, -0.19435446, -0.056928456, -0.008626047, -0.18439196, -0.03326016, -0.060816012, 0.078316264, -0.04302644, -0.3058735, 0.15673608, 0.14597532, 0.088191055) * go_0(0.0, 1.0);
    result += mat4(0.061051484, 0.020134185, -0.012365131, 0.073264875, 0.19217357, -0.0039041585, -0.024568515, 0.07706792, -0.03507374, -0.010758747, 0.021298716, -0.13274315, -0.27672285, -0.0042576697, 0.0729945, -0.13318042) * go_0(1.0, -1.0);
    result += mat4(-0.14784917, -0.027111357, 0.036626074, -0.20700683, 0.076400645, 0.25127113, -0.017384058, 0.13272457, 0.0054595903, -0.06511198, -0.0449645, 0.032943755, 0.20081401, -0.32175547, -0.012226688, 0.15576307) * go_0(1.0, 0.0);
    result += mat4(0.08037437, 0.13206024, 0.03184335, 0.17658721, -0.07697986, -0.07970037, 0.008397506, -0.036791068, 0.021475172, 0.2620663, -0.048233584, 0.09205506, -0.018560331, -0.33477312, -0.032535005, -0.045442954) * go_0(1.0, 1.0);
    result += mat4(-0.10956696, -0.0013427194, -0.10412538, 0.076554745, -0.1628142, -0.021901812, -0.04045509, -0.018559888, 0.35351992, 0.03074696, 0.0110223545, 0.24411325, 0.083816, -0.0038541164, 0.022720836, -0.017047264) * go_1(-1.0, -1.0);
    result += mat4(-0.025159456, -0.011490423, -0.23686211, -0.42664856, -0.078530215, 0.027646357, -0.01788509, 0.044706088, -0.20114918, -0.07193608, -0.39125735, -0.014012296, 0.17120591, -0.03178168, -0.027725019, -0.1374072) * go_1(-1.0, 0.0);
    result += mat4(0.022428088, -0.018763214, -1.4561273, -0.04547869, 0.09874885, 0.029375294, -3.9365888, -0.06369241, 0.053619906, 0.019207602, -2.141818, 0.13984653, -0.0819615, -0.0831437, 0.85264313, 0.043965653) * go_1(-1.0, 1.0);
    result += mat4(-0.026925242, 0.010940268, -0.13103649, 0.11256205, -0.037666835, 0.0061513307, -0.083632015, 0.09372015, 0.19847052, 0.020387532, -0.09106583, 0.20462917, -0.12558459, 0.025326973, 0.06993855, -0.14401154) * go_1(0.0, -1.0);
    result += mat4(-0.16347222, 0.12848479, -0.03477997, -0.085376404, -0.27824348, -0.0005983319, 0.078117795, -0.7874976, -0.49731863, 0.030474028, -0.050598923, -0.3363546, 0.58902764, -0.03225124, 0.10312719, 0.9329825) * go_1(0.0, 0.0);
    result += mat4(0.0538927, 0.029006207, -0.011617479, 0.028502297, 0.17615421, -0.07019706, 0.014314218, 0.19822088, 0.1023861, 0.00030687207, 0.0047234986, 0.1559591, -0.37455449, 0.15697189, 0.020856386, -0.42633507) * go_1(0.0, 1.0);
    result += mat4(-0.091308974, 0.059530962, 0.04561036, -0.03811584, -0.17378175, -0.025624393, 0.026729072, -0.10173795, 0.20943746, -0.061450742, 0.015255191, 0.0771375, 0.058269814, -0.020078745, -0.016792512, 0.08879456) * go_1(1.0, -1.0);
    result += mat4(-0.07412501, 0.034997467, 0.06827442, -0.061909825, -0.065082185, -0.062967025, -0.0018021459, -0.119683124, -0.09793876, 0.059900954, -0.008855753, 0.04287687, 0.048142854, 0.13034445, -0.03479248, 0.005028278) * go_1(1.0, 0.0);
    result += mat4(0.056336556, 0.11639666, 0.011894748, 0.009258232, 0.05724343, -0.037649956, -0.02018947, 0.08799453, -0.008593322, 0.06548552, -0.02880735, 0.15265623, -0.0832293, -0.119306825, -0.014851676, -0.17681473) * go_1(1.0, 1.0);
    result += vec4(-0.028728848, -0.029015174, -0.01944777, -0.055668145);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.019432789, -0.010443137, 0.043641675, -0.014976268, 0.08222051, -0.016410269, 0.07136858, -0.0720947, -0.039827745, -0.03673741, -0.002738093, -0.058659595, -0.23851536, 0.05735517, 0.13091497, 0.13822182) * go_0(-1.0, -1.0);
    result += mat4(0.015851023, -0.06852079, -0.113410525, 0.1655752, -0.047490705, 0.30640906, 0.15051234, -0.08925564, 0.0026973325, -0.099690475, 0.20995916, -0.22722678, 0.20964095, -0.3308309, 0.07571026, 0.29307967) * go_0(-1.0, 0.0);
    result += mat4(0.005413702, 0.06925044, -0.04218817, 0.06499297, 0.014044949, -0.31359997, 0.02207687, 0.0076921615, -0.011656873, 0.13162492, 0.01973373, -0.052770767, -0.033215065, 0.3020151, 0.006860026, -0.0034417715) * go_0(-1.0, 1.0);
    result += mat4(-0.18494886, -0.0055443216, 0.08320937, 0.088393584, 0.04263472, 0.026053408, -0.31365523, 0.26590595, -0.38472936, 0.026970204, 0.016859975, -0.083369024, -0.6475042, -0.031819988, -0.040326517, -0.12680292) * go_0(0.0, -1.0);
    result += mat4(0.06564634, -0.16831686, 0.46325016, -0.32306695, 0.06719342, 0.22485822, -0.26519373, 0.5705674, 0.2898635, -0.08600566, 0.090179525, 0.7717409, 0.16839837, -0.11837558, -0.8469842, -0.71051776) * go_0(0.0, 0.0);
    result += mat4(-0.10055182, 0.31354016, 0.11519904, -0.08580751, 0.032943178, -0.06949264, 0.112572856, -0.07219923, 0.056269944, 0.10210304, -0.021017509, 0.29532188, 0.076877564, -0.11372513, 0.12087498, 0.019797003) * go_0(0.0, 1.0);
    result += mat4(0.01966493, 0.0004922424, 0.13799232, -0.05483137, 0.033971142, -0.02541328, 0.1404199, -0.27267468, -0.00046485648, 0.0028858, -0.08875479, 0.09154146, -0.14943269, -0.026737245, -0.065049335, -0.061938893) * go_0(1.0, -1.0);
    result += mat4(-0.036093887, -0.015228642, 0.13699211, -0.122380815, -0.014204534, 0.048451003, 0.08452863, -0.20175631, 0.014232825, -0.042969376, 0.19103704, -0.2767378, 0.17332275, -0.076400965, 0.17091915, 0.04400393) * go_0(1.0, 0.0);
    result += mat4(0.0075438796, -0.007654373, 0.005335654, 0.1724397, 0.015561008, -0.056449782, 0.016116261, 0.087102205, -0.05845013, 0.025565304, -0.019776259, -0.19052702, -0.054108508, 0.10950691, -0.054407995, -0.18949421) * go_0(1.0, 1.0);
    result += mat4(-0.09190371, 0.07691923, -0.20137087, 0.107098155, -0.03880387, 0.02412851, 0.022592517, -0.072373755, 0.33491766, 0.031489834, -0.15674041, 0.049353514, 0.08679512, -0.037296828, -0.052788604, 0.113099284) * go_1(-1.0, -1.0);
    result += mat4(-0.028095948, -0.13750249, 0.01969753, 0.05716668, -0.15877114, -0.0321779, 0.09825922, -0.24140202, 0.15106285, 0.07758592, -0.20825827, 0.08282264, 0.07549133, 0.11930755, -0.2450096, 0.3482202) * go_1(-1.0, 0.0);
    result += mat4(0.0065511046, 0.104205266, -0.04600445, -0.023378469, 0.0067744665, -0.07157183, -0.047195975, -0.02730402, -0.03525042, 0.3466006, -0.015541554, 0.0659092, -0.0019500378, -0.09471561, -0.03302442, -0.04614031) * go_1(-1.0, 1.0);
    result += mat4(-0.015653718, -0.0522604, 0.2781669, -0.15003932, -0.17586505, 0.07193151, -0.22254126, -0.14794843, -0.08332732, -0.08001301, -0.11354467, -0.028817767, 0.40877146, -0.006195478, 0.060955483, -0.11439733) * go_1(0.0, -1.0);
    result += mat4(-0.0924396, 0.0061784224, 0.30835748, -0.26978943, 0.03967944, -0.37161267, -0.43664625, -0.0063801957, 0.20974185, 0.2902941, 0.23840667, -0.2833855, -0.0032806045, 0.36198962, 0.51379436, -0.00092153123) * go_1(0.0, 0.0);
    result += mat4(0.0022452567, 0.0212442, 0.042065565, -0.0019850624, -0.008711421, 0.10565233, -0.1977102, 0.015833586, -0.015551359, 0.13324514, -0.114221245, 0.06470108, 0.0051774746, -0.22894165, 0.22962181, -0.048478995) * go_1(0.0, 1.0);
    result += mat4(0.023421738, 0.0026854419, -0.080706894, 0.13928768, -0.049417872, -0.029201262, -0.1912686, 0.2850122, 0.14757195, 0.013015048, -0.1891293, 0.15317541, 0.0427237, 0.00568653, 0.037788663, 0.0023729042) * go_1(1.0, -1.0);
    result += mat4(-0.03852821, 0.013153552, -0.08006551, 0.2300499, 0.034891404, -0.013792457, 0.17622858, -0.1599391, 0.011409892, 0.005506309, -0.04853043, -0.1942136, -0.028868102, 0.067313194, -0.27341366, 0.15279329) * go_1(1.0, 0.0);
    result += mat4(0.00092017616, -0.015150397, -0.043741833, 0.05161514, -0.005052389, 0.03004583, -0.024298955, -0.020657351, -0.026165856, 0.048799947, 0.08667013, -0.16119325, -0.008399703, -0.058545418, -0.072812796, 0.018336305) * go_1(1.0, 1.0);
    result += vec4(-0.030543858, -0.020618675, -0.068322405, -0.067421034);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0010148968, -0.016423712, -0.05094515, 0.0021248744, -0.17109971, -0.381418, -0.41123924, 0.30279797, 0.0126280105, 0.021137184, 0.005616122, 0.0529658, -0.03450338, 0.04955767, 0.098262206, -0.076362945) * go_0(-1.0, -1.0);
    result += mat4(0.08961553, -0.13531503, -0.3181173, 0.08573296, -0.2188285, -0.2565575, 0.2060274, -0.04351004, 0.08878782, 0.0093571, 0.035970703, -0.07100994, 0.052181605, -0.15088013, -0.26439422, -0.09457111) * go_0(-1.0, 0.0);
    result += mat4(-0.04461891, -0.007976097, 0.07874434, -0.06721141, 0.073393844, 0.1395964, -0.0050063785, -0.023691526, -0.01970493, 0.012765233, -0.023664953, -0.0103005525, -0.10081182, -0.12371531, -0.19832544, 0.031710584) * go_0(-1.0, 1.0);
    result += mat4(0.011860728, 0.04133142, 0.088388994, -0.046907917, 0.056138963, -0.15389535, 0.2852155, 0.080354355, 0.021634983, -0.1268217, -0.28393263, 0.18491164, -0.0020461567, -0.13299629, -0.21563278, 0.1888256) * go_0(0.0, -1.0);
    result += mat4(0.05863534, -0.042332742, 0.7339064, -0.30946496, 0.063904025, -0.25206715, -0.036024768, 0.060644593, 0.4697906, 0.3862709, -0.15907022, 0.36230505, 0.16150343, -0.5465262, 0.6971127, -0.6112105) * go_0(0.0, 0.0);
    result += mat4(-0.036955368, -0.042882856, -0.22093822, -0.037848994, -0.08059545, 0.10574455, 0.0743772, -0.16180274, 0.06210468, 0.04561266, 0.073652506, -0.19852918, 0.049473412, 0.121320665, -0.033870533, -0.12579426) * go_0(0.0, 1.0);
    result += mat4(-0.005232621, 0.028308244, -0.05622912, -0.011240206, 0.014590384, 0.06904453, 0.0038181848, -0.0016642913, -0.42841086, 0.39484736, 0.280791, -0.12095365, 0.0060792556, 0.15243599, 0.15820408, -0.04005615) * go_0(1.0, -1.0);
    result += mat4(-0.071368195, 0.015916979, -0.32849514, -0.05057761, 0.011764964, 0.013097334, 0.0004450176, 0.005777551, -0.38960174, 0.65851617, -0.05859251, -0.28002954, -0.13691877, -0.36459783, -0.23429666, 0.07434336) * go_0(1.0, 0.0);
    result += mat4(0.03854887, 0.041356962, -0.03211482, 0.041692812, 0.008263891, 0.0039967336, -0.10221439, 0.004023506, -0.07512068, -0.082589515, 0.17286728, 0.13652512, 0.014601233, -0.025750956, -0.15348926, 0.0061655724) * go_0(1.0, 1.0);
    result += mat4(-0.011617115, 0.00348859, -0.017987845, -0.010963234, -0.08104997, 0.28758982, 0.34196874, -0.041921925, 0.04835584, 0.046858367, 0.10848419, 0.009436247, -0.023989618, -0.0635027, -0.18675779, 0.042927586) * go_1(-1.0, -1.0);
    result += mat4(-0.004684067, -0.15856297, -0.13824642, -0.021563869, 0.106920645, -0.10837123, 0.036047507, 0.22019008, -0.04195387, 0.15681787, 0.37715015, -0.20237264, -0.033049405, -0.11489728, -0.2660771, 0.23575191) * go_1(-1.0, 0.0);
    result += mat4(0.018190067, 0.04401165, -0.10953271, -0.019115293, 0.066708915, 0.0691131, -0.017933171, -0.0065898243, -0.026306923, -0.0029015727, 0.085348, 0.0051928535, 0.024267344, 0.027571158, 0.03786418, -0.06811052) * go_1(-1.0, 1.0);
    result += mat4(-9.926389e-05, -0.21673523, -0.17474775, 0.13636601, -0.13481511, 0.36273876, -0.80878067, 0.4614156, 0.031967066, 0.31975597, 0.060300473, -0.012331141, -0.038443692, -0.25605288, 0.029721469, -0.08285579) * go_1(0.0, -1.0);
    result += mat4(0.31145874, -0.15847284, 0.046432972, 0.18020324, -0.24824902, 0.27980635, 0.011362581, 0.39428696, -0.5067573, -0.7737348, 0.025055641, -0.014109749, 0.5535588, 1.0253531, -0.46625635, 0.13529892) * go_1(0.0, 0.0);
    result += mat4(-0.3605115, -0.107078835, 0.52447015, -0.43604842, 0.07232967, 0.1893875, 0.20994222, 0.0067171506, 0.020940296, -0.14694317, -0.0325068, 0.13740858, -0.101267286, -0.055722807, 0.009319377, -0.07341007) * go_1(0.0, 1.0);
    result += mat4(0.014061426, 0.011823386, 0.06758758, 0.011420507, -0.049218018, 0.3725153, 0.28456423, -0.13541012, 0.014643197, -0.033367682, 0.08503938, 0.014526234, -0.02307449, -0.05459185, -0.17026818, 0.009166299) * go_1(1.0, -1.0);
    result += mat4(0.027133167, -0.31417346, 0.042875744, 0.1498122, 0.114701286, 0.9234629, 0.10758728, -0.09624284, 0.041083083, -0.10486011, 0.009988076, 0.063365065, 0.03409027, 0.3196065, 0.05644909, -0.09008275) * go_1(1.0, 0.0);
    result += mat4(0.06205327, -0.031224892, -0.3340197, 0.0067490516, -0.03584774, 0.008411794, 0.06867342, 0.030635005, -0.0023458512, -0.08027962, -0.053887155, -0.006123615, 0.012847878, 0.05879642, 0.18480822, 0.017404038) * go_1(1.0, 1.0);
    result += vec4(-0.017313795, -0.039121676, -0.087413624, -0.023935666);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.028347103, 0.0035170957, 0.0008385845, 0.0026646939, -0.12577128, -0.014186189, -0.070419356, 0.12498566, -0.04244646, -0.070549265, 0.017793613, 0.028885651, 0.040092777, -0.12995277, 0.027205411, 0.03990606) * go_0(-1.0, -1.0);
    result += mat4(-0.14281702, 0.40016147, -0.06333009, -0.1451062, 0.28218073, 0.032955043, -0.055374514, -0.035008408, -0.0094268, 0.10942012, 0.15623626, -0.14558843, -0.014164495, 0.27284145, -0.11218643, -0.08879518) * go_0(-1.0, 0.0);
    result += mat4(0.08850996, 0.010587699, 0.0733405, -0.030958513, -0.0764532, 0.061805546, -0.05940569, 0.02956119, -0.020160202, 0.0145257525, 0.031652525, 0.015312884, 0.042750426, 0.026303507, -0.1166387, 0.040876713) * go_0(-1.0, 1.0);
    result += mat4(0.06849038, 0.017565416, 0.035704512, 0.010002434, -0.33175948, 0.19021985, -0.085060894, -0.25934133, -0.099987105, 0.5927667, -0.042597003, -0.104574285, -0.051191114, 0.08327908, -0.056929886, -0.12578012) * go_0(0.0, -1.0);
    result += mat4(-0.034611177, -0.9585476, -0.082623646, -0.030631742, 0.14194171, -0.30428997, 0.3232856, 0.03508491, -0.43750894, -0.0065377466, 0.51471454, 0.1391484, 0.0397178, -0.6025374, -0.082470015, -0.21250391) * go_0(0.0, 0.0);
    result += mat4(0.15944912, -0.0688051, 0.04668969, 0.086216, 0.089423686, -0.095942736, -0.14930812, 0.13829342, -0.02306118, -0.09961923, 0.3553933, -0.15435027, -0.26661423, -0.086893395, -0.29384476, -0.08935388) * go_0(0.0, 1.0);
    result += mat4(0.035104282, -0.040346097, 0.018826265, 0.005158412, -0.022644784, 0.0071009495, 0.08057435, 0.041034494, 0.5820551, -0.029004103, -0.061690412, 0.35649595, -0.054860614, -0.10548481, 0.09713752, 0.07883167) * go_0(1.0, -1.0);
    result += mat4(0.17754798, 0.17013867, -0.042955033, 0.1442895, -0.033840526, 0.031532094, -0.040562056, -0.026518922, 0.97148746, -0.081357, 0.14834826, 0.62770754, 0.23631178, 0.21183854, -0.50903267, -0.11266484) * go_0(1.0, 0.0);
    result += mat4(-0.07390735, 0.049647, 0.06984166, 0.035521, 0.018873915, 0.024796344, -0.007865947, 0.009592559, 0.14218451, 0.121196754, 0.048224818, 0.04371891, 0.029375311, 0.04391188, 0.016207865, 0.0004047458) * go_0(1.0, 1.0);
    result += mat4(-0.016718041, -0.023045296, 0.028239712, 0.0016374581, 0.07710684, -0.44691354, 0.07184179, 0.33217463, 0.027554892, 0.042855557, 0.051269215, -0.064140946, -0.04779115, 0.027638068, -0.06631939, 0.04315202) * go_1(-1.0, -1.0);
    result += mat4(-0.020581251, 0.15222459, 0.03538656, -0.15672733, -0.05436037, 0.016754137, -0.17803043, -0.14726518, 0.15672585, -0.322086, 0.35566908, -0.087202944, -0.13590363, 0.18300171, -0.2924083, 0.10894787) * go_1(-1.0, 0.0);
    result += mat4(-0.06847708, 0.101098195, -0.08246834, 0.14760628, -0.040799893, -0.009301019, 0.09397966, 0.01758085, 0.010567635, -0.03567326, 0.03225086, -0.018096225, 0.021838134, 0.036830053, 0.01380208, -0.007551464) * go_1(-1.0, 1.0);
    result += mat4(-0.046026804, 0.32818893, -0.107702985, -0.10564336, -1.7736682e-05, 0.8755843, -0.017449073, -0.0019034516, 0.13155088, 0.17397857, 0.10312893, 0.123978175, -0.121730484, -0.18458633, -0.08187359, -0.06167803) * go_1(0.0, -1.0);
    result += mat4(-0.3483892, 0.51681614, -0.026810907, -0.44984165, -0.1943267, -0.0030939244, 0.5090477, 0.40468633, 1.0719944, 0.55859876, 0.09386605, -0.21934107, -1.17719, -0.19578561, -0.26970142, 0.17425874) * go_1(0.0, 0.0);
    result += mat4(0.38035095, -0.6089932, -0.3843264, 0.2756603, -0.009718923, 0.090722926, -0.047863483, 0.014379231, 0.054229222, -0.048499808, 0.18115547, -0.116732284, 0.049820036, 0.027882606, 0.05512824, 0.079101026) * go_1(0.0, 1.0);
    result += mat4(-0.03204097, 0.08883115, 0.011880242, 0.051391568, -0.030768465, -0.6194778, 0.6241767, 0.06819624, 0.025828907, 0.01614039, -0.009325984, -0.037382454, -0.017984957, -0.015149041, -0.021698454, -0.0077205915) * go_1(1.0, -1.0);
    result += mat4(0.023569498, 0.11174545, -0.18738958, -0.1751895, -0.2165403, 0.11043784, 0.0838605, 0.23758708, 0.16847785, -0.10144394, 0.20100918, 0.048623215, -0.37178487, 0.02778649, -0.10366225, -0.03151823) * go_1(1.0, 0.0);
    result += mat4(-0.12262043, 0.10441818, -0.027573789, 0.014003203, 0.08061747, 0.010369023, 0.09356161, 0.07763773, 0.09279785, -0.043822497, 0.08150473, 0.017935708, -0.14212431, 0.02253112, -0.11373206, -0.061123185) * go_1(1.0, 1.0);
    result += vec4(-0.02031257, 0.007482543, 0.009519171, 0.033704296);
    return result;
}

//!DESC ArtCNN C4F8 (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#define go_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define go_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.03908442, -0.062543295, -0.095425926, -0.13276142, 0.014167404, 0.12695546, 0.034196123, 0.02780326, -0.11448099, -0.02397509, 0.037780784, 0.044842187, 0.08273228, -6.147809e-05, -0.0140368575, -0.013835112) * go_0(-1.0, -1.0);
    result += mat4(-0.044299398, -0.11498399, 0.04719271, -0.0034220999, -0.22760734, 0.07797386, -0.19347079, 0.106880836, 0.17816073, 0.012018297, 0.10554354, 0.065782435, -0.035179373, -0.116239734, 0.004944046, -0.12960355) * go_0(-1.0, 0.0);
    result += mat4(0.051726606, 0.041232817, 0.06378016, -0.009950782, 0.0043171044, 0.018119527, -0.12358998, 0.04227968, -0.017325647, -0.022436956, 0.023817454, -0.065420106, 0.03770853, 0.051585287, -0.09700555, -0.05798701) * go_0(-1.0, 1.0);
    result += mat4(0.2664058, 0.01848048, 0.19883913, 0.117481485, 0.006952616, -0.17112325, 0.03086077, 0.018848062, -0.051079232, -0.0022145559, -0.03914387, -0.00044659356, 0.17412792, 0.017388357, -0.119164325, -0.1854503) * go_0(0.0, -1.0);
    result += mat4(0.32201228, 0.43735406, 0.17041278, 0.013833022, 0.27894437, -0.0001921497, 0.34540322, 0.039961085, 0.36558393, 0.6747851, 0.26851675, 0.49332598, 0.24827617, 0.20880398, 0.6246678, 0.5078959) * go_0(0.0, 0.0);
    result += mat4(0.109503984, 0.15367982, 0.2752269, 0.3794121, -0.14580913, -0.11006009, -0.009651892, -0.17728394, -0.00063151016, -0.034472324, 0.037759606, 0.14116053, -0.112414114, -0.08716964, -0.004954092, -0.054144118) * go_0(0.0, 1.0);
    result += mat4(0.0041149314, 0.29165626, -0.04615156, 0.057158187, 0.03875276, -0.0076078195, 0.028654514, 0.0023550738, -0.021304362, -0.029074501, -0.009154005, -0.0060848924, -0.03352373, -0.06818619, 0.004510398, -0.053627376) * go_0(1.0, -1.0);
    result += mat4(0.28407016, 0.12643632, 0.24938427, 0.29181284, -0.049745295, -0.01605572, -0.027597181, -0.018162973, 0.061414305, 0.03495272, 0.04564072, 0.03737664, -0.3556232, -0.0005774584, -0.26798278, 0.014893158) * go_0(1.0, 0.0);
    result += mat4(-0.032457963, -0.020532519, 0.0762404, 0.103060514, 0.044674423, 0.0074589956, 0.0009680372, -0.014733837, -0.0005677967, 0.014729267, 0.010132169, -0.014006898, -0.010230504, -0.012141464, -0.13136016, -0.049321845) * go_0(1.0, 1.0);
    result += mat4(0.18633424, -0.04903896, -0.05118658, -0.14038977, -0.10160281, -0.051189676, 0.034717917, 0.035476234, -0.007021675, -0.09007654, -0.030065123, 0.0067706723, -0.10205148, -0.14356413, -0.02860531, -0.015512239) * go_1(-1.0, -1.0);
    result += mat4(-0.3355268, -0.23728551, -0.049055625, -0.14137396, -0.037618004, -0.06564993, 0.00075956434, -0.034661867, -0.03846496, -0.13053773, 0.045281112, -0.18407401, -0.033712216, -0.20312017, 0.08807492, -0.09724992) * go_1(-1.0, 0.0);
    result += mat4(0.07712582, 0.09329638, -0.12344705, -0.025776686, 0.023983518, 0.007332057, -0.04661569, -0.053562608, -0.0036979981, -0.0062846644, -0.01983646, -0.034051377, -0.0440214, -0.047972236, 0.036357056, -0.10861144) * go_1(-1.0, 1.0);
    result += mat4(-0.06555031, -0.101851545, -0.019580472, -0.07750416, -0.002662074, 0.047491103, 0.0011283789, 0.05595724, 0.017880427, 0.38383955, -0.078997575, 0.00722034, 0.03327674, 0.07987814, 0.0076456964, -0.004350408) * go_1(0.0, -1.0);
    result += mat4(0.07015499, 0.27959764, 0.07578159, 0.27162075, -0.13161941, 0.095797464, 0.08737783, 0.20814909, 0.093986124, 0.021403532, 0.17237268, 0.42962557, 0.13101648, -0.057298835, 0.013499541, -0.11671367) * go_1(0.0, 0.0);
    result += mat4(-0.06517128, -0.019844037, 0.05200915, 0.05226474, 0.18209161, 0.117758706, -0.18680155, -0.10113948, -0.034044344, -0.052885324, 0.013177691, 0.009056057, 0.12409386, 0.0879838, -0.029658025, 0.08055905) * go_1(0.0, 1.0);
    result += mat4(0.0009623163, 0.009537422, -0.015897384, -0.0032931427, -0.0101249525, -0.038543716, 0.013461124, -0.013814178, -0.015503336, -0.035892557, -0.012059352, -0.007442622, -0.02993878, 0.04492791, -0.016974702, 0.0050495416) * go_1(1.0, -1.0);
    result += mat4(0.08916146, 0.0075618536, 0.09027778, 0.026278006, 0.054039966, -0.17980452, 0.030395854, -0.06563468, -0.054166764, -0.18058938, -0.042000316, -0.15769275, 0.0013393648, 0.2562011, -0.02141311, 0.22893967) * go_1(1.0, 0.0);
    result += mat4(0.04238585, 0.028709346, 0.036671977, 0.030237317, 0.037750885, 0.08621362, 0.049422447, -0.048288997, 0.026576562, 0.022975236, 0.0022620882, -0.050558887, -0.083361275, -0.03827443, -0.036541685, 0.044731703) * go_1(1.0, 1.0);
    result += vec4(0.14574598, 0.18105458, 0.1695267, 0.20072506);
    return result;
}

//!DESC ArtCNN C4F8 (Depth-to-Space)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];

    float ar_strength = 0.5;
    vec2 pp = LUMA_pos * LUMA_size - vec2(0.5);
    vec2 fp = floor(pp);

    vec2 pix_idx[4] = {{0.5, 0.5}, {1.5, 0.5},
                       {0.5, 1.5}, {1.5, 1.5}};

    float luma_pixels[4];

    for (int i = 0; i < 4; i++) {
        luma_pixels[i] = LUMA_tex(vec2((fp + pix_idx[i]) * LUMA_pt)).x;
    }

    float luma_min = min(min(min(luma_pixels[0], luma_pixels[1]), luma_pixels[2]), luma_pixels[3]);
    float luma_max = max(max(max(luma_pixels[0], luma_pixels[1]), luma_pixels[2]), luma_pixels[3]);

    output_pix.x = clamp(mix(output_pix.x, clamp(output_pix.x, luma_min, luma_max), ar_strength), 0.0, 1.0);
    return output_pix;
}
