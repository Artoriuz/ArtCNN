// MIT License

// Copyright (c) 2024 João Chrisóstomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.05641021, -0.1615453, -0.06533657, 0.096413605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(0.1842147, 0.2938016, 0.147652, -0.22436947, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(0.07949546, 0.039763954, -0.1269216, 0.12983432, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(0.04739664, -0.10706943, 0.23155588, -0.3707046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(0.42271706, 0.009869351, 0.44073802, 0.7824819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(0.12183003, 0.22918288, -0.18820816, -0.24825077, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(-0.012375349, -0.22000322, -0.1642485, 0.06789503, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(0.045476228, -0.033663496, 0.14933448, -0.08178548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(-0.1617377, 0.029577361, 0.13827337, -0.06188948, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(-0.03365639, -0.0049422677, -0.10187809, -0.025332384);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.13192047, 0.21242371, 0.015876042, -0.2220956, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
    result += mat4(-0.093137674, 0.025743123, 0.35828802, 0.019877302, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
    result += mat4(-0.11151716, -0.0069666454, -0.030113172, 0.041220527, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
    result += mat4(0.28575858, -0.06894348, -0.14861418, 0.08857051, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
    result += mat4(0.4093546, -0.20794548, 0.17989063, 0.22350916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
    result += mat4(-0.017196462, 0.22735989, 0.038709566, 0.11930359, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
    result += mat4(0.07591256, 0.20806356, -0.20350474, -0.10596579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
    result += mat4(-0.3875857, -0.27006337, 0.008213252, -0.14715825, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
    result += mat4(-0.018023906, -0.017741978, -0.21178623, -0.017038578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
    result += vec4(0.02463904, -0.020696657, -0.049187206, -0.02638021);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.068188846, 0.09153088, 0.016039083, 0.040884815, -0.06428098, 0.11249735, 0.013910588, -0.1849657, 0.042417675, 0.27129382, -0.13891089, -0.13136132, 0.006555325, 0.3090522, -0.006692064, 0.05488202) * go_0(-1.0, -1.0);
    result += mat4(-0.018828413, -0.13300593, -0.28339735, 0.2115056, -0.36265776, -0.21523954, 0.008829421, -0.27817973, 0.055740863, 0.09802446, -0.1128519, -0.13573283, -0.23713219, -0.07346599, -0.16000684, 0.3560389) * go_0(-1.0, 0.0);
    result += mat4(0.30431053, 0.17892933, 0.14770502, -0.3367367, -0.037652925, -0.033022173, -0.1229943, 0.1587872, 0.06470865, -0.44924527, 0.20515445, 0.19492549, -0.14383599, -0.046905857, -0.04846006, 0.3237567) * go_0(-1.0, 1.0);
    result += mat4(-0.19839944, 0.059800994, -0.05659022, 0.05717789, 0.08537116, 0.7636194, -0.2126941, 0.15217133, 0.22178963, -0.24322283, 0.16155231, 0.10573034, 0.033662416, -0.8416805, 0.110236995, 0.1994345) * go_0(0.0, -1.0);
    result += mat4(0.31440988, 0.01403138, 0.22791862, 0.012959191, 0.022907633, 0.14354618, 0.5621775, 0.092105806, 0.42666507, 0.19122358, -0.6673045, 0.04766846, 0.6724607, -0.016095612, -1.3671876, -0.46818635) * go_0(0.0, 0.0);
    result += mat4(0.39216998, 0.064177856, 0.39173275, -0.08485215, -0.07946626, -1.039743, 0.80876255, 0.21615773, 0.12579574, -0.059917275, -0.041584067, -0.35718852, -0.32799232, 0.18220949, 1.085458, 0.2929183) * go_0(0.0, 1.0);
    result += mat4(-0.014318227, 0.03281887, -0.1611053, -0.054111436, -0.16907823, 0.21668662, -0.06510349, -0.1282559, -0.022945197, -0.6085931, -0.11055351, 0.02414446, 0.16937113, -0.16098374, 0.032811955, -0.22977471) * go_0(1.0, -1.0);
    result += mat4(-0.04811883, 0.21244596, -0.017259723, 0.010053205, -0.18164268, -0.13858296, 0.25225455, -0.23951161, -0.0052918275, -0.19743879, -0.03329843, 0.22167335, 0.42749625, 0.3417765, 0.06384673, 0.4011078) * go_0(1.0, 0.0);
    result += mat4(-0.058733143, -0.16243523, 0.072981216, 0.08977336, 0.04104451, 0.78003746, 0.036091227, 0.21276352, 0.014268336, 0.27143195, 0.05009845, -0.16656551, -0.016896052, 1.0182425, -0.023876976, 0.09424952) * go_0(1.0, 1.0);
    result += mat4(-0.035586357, -0.005877408, -0.037775774, 0.13665222, 0.19471224, 0.0920949, -0.113918774, 0.25702178, -0.12034753, -0.19363718, 0.09433337, 0.09276933, 0.1024817, 0.177143, -0.0206683, 0.28882912) * go_1(-1.0, -1.0);
    result += mat4(0.3071017, -0.43990064, 0.14952758, 0.5993314, 0.16712704, -0.2806614, 0.20644896, 0.03408966, 0.22071688, -0.26329663, 0.2767917, 0.37057245, -0.18767051, -0.27186427, 0.08888185, -0.086858496) * go_1(-1.0, 0.0);
    result += mat4(-0.068630666, -0.49129224, -0.1578622, -0.1961578, -0.05945631, -0.28688487, -0.49066633, -0.5366959, -0.09912459, -0.2887575, -0.03714162, 0.44952542, -0.07136428, 0.11381951, -0.19453053, -0.10369535) * go_1(-1.0, 1.0);
    result += mat4(-0.25163585, -0.3798265, -0.18773937, -0.04872779, -0.26448476, 0.58871007, 0.13231188, -0.236788, -0.43626302, -0.3080443, -0.25168714, -0.056677982, -0.09632111, -0.03517355, 0.051094763, 0.03082828) * go_1(0.0, -1.0);
    result += mat4(0.57152957, 0.81942326, -0.71282953, 0.025093043, 0.082403384, -0.64653397, 0.95807505, -0.57133317, 0.059669565, -0.21018836, -0.38033995, 0.06523272, 0.023205485, 0.37323153, 0.046193585, 0.07638994) * go_1(0.0, 0.0);
    result += mat4(0.15304224, -0.091856, 0.5347424, -0.39136508, -0.11793142, 0.553772, 0.0059602275, 0.2734645, -0.113871455, 0.45032033, -0.84247524, 0.12974891, -0.08578663, -0.3407633, 0.47698867, -0.057192974) * go_1(0.0, 1.0);
    result += mat4(0.0195838, -0.21884616, -0.13496643, 0.03548063, -0.21213831, 0.37963173, -0.013001394, 0.07146958, 0.040929437, -0.15793787, 0.05394393, 0.1654519, -0.009883257, 0.115197286, 0.1408312, 0.008621028) * go_1(1.0, -1.0);
    result += mat4(0.081158, -0.28981587, -0.29080826, -0.05385573, -0.47651368, 0.14112747, 0.18013154, -0.0061048544, -0.19848123, -0.24656855, -0.15615818, -0.39408028, 0.24013995, 0.058601398, 0.012572385, 0.26679322) * go_1(1.0, 0.0);
    result += mat4(0.16535634, -0.039024353, 0.32432613, -0.048733022, -0.14363363, 0.4657784, -0.21727265, -0.054743096, -0.059588715, -0.23673107, -0.017861826, -0.028363813, 0.1966628, -0.04143221, -0.019653872, 0.34813714) * go_1(1.0, 1.0);
    result += vec4(0.08321762, -0.07336984, -0.085714415, 0.21112947);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.011364267, -0.22598293, -0.026410002, -0.13273336, -0.060925204, 0.05540533, -0.033604905, 0.12102831, 0.034303747, 0.22148864, 0.06458424, 0.3863556, 0.14255026, -0.7429974, -0.12483741, 0.16167459) * go_0(-1.0, -1.0);
    result += mat4(0.18132508, -0.042517815, -0.06560715, -0.0601683, -0.28833744, -0.17436965, -0.1479036, -0.36618105, -0.2063101, 0.16786152, -0.072735064, -0.2989076, 0.24594682, -0.07930004, -0.12620732, -0.18556681) * go_0(-1.0, 0.0);
    result += mat4(0.024841418, -0.3341501, -0.013419108, 0.038413472, 0.013478067, 0.17138447, 0.21778429, 0.27853474, 0.14980315, 0.09281231, 0.100366145, 0.14231445, 0.219415, 0.37731764, 0.088413, 0.46938238) * go_0(-1.0, 1.0);
    result += mat4(0.08587623, 0.20228934, -0.059554618, 0.2369312, 0.14592764, 0.9841778, -0.12560263, 0.70811385, -0.14275026, -0.32630327, -0.023600327, -0.75859135, -0.12666512, -0.9615301, -0.05718815, -0.7798393) * go_0(0.0, -1.0);
    result += mat4(0.21331695, -0.019442584, -0.20978238, 0.1095585, -0.2174478, -0.4566101, -0.17250502, -0.5550145, 0.5721079, 0.11888798, -0.16407056, 0.100691944, 0.7354321, 0.14178413, -0.98384297, 0.55063254) * go_0(0.0, 0.0);
    result += mat4(0.27048686, 0.14205788, -0.1676157, 0.08044629, 0.30643392, 0.30398875, 0.0210574, -0.32025367, -0.1756695, -0.22482406, -0.052076366, -0.1477537, 0.20136997, 0.90229577, 0.11288932, -0.08257658) * go_0(0.0, 1.0);
    result += mat4(-0.12355437, -0.017790798, -0.01993991, 0.2536396, 0.00250604, 0.1650001, 0.089713626, 0.15013288, -0.0022285564, -0.01951588, 0.050573044, 0.036881715, -0.13581371, 0.10744156, 0.024046576, 0.014641046) * go_0(1.0, -1.0);
    result += mat4(0.084097825, 0.038512845, 0.16341764, -0.021504883, -0.03720095, 0.029894935, -0.25728044, 0.21464998, 0.010320753, -0.18425508, 0.46861145, -0.15432149, -0.2954854, 0.8253564, 1.6426095, -0.35326758) * go_0(1.0, 0.0);
    result += mat4(0.17571752, -0.09922537, 0.11449291, 0.14096105, -0.17637895, 0.32009313, 0.010459924, 0.060748737, -0.05294201, 0.28229138, 0.13571511, -0.15794052, -0.12799169, 0.09446675, 0.20454834, -0.23595491) * go_0(1.0, 1.0);
    result += mat4(0.03353267, -0.5865779, -0.06753304, -0.20061411, 0.03453061, 0.022294428, 0.026299825, 0.08780992, -0.15692058, -0.1888938, -0.0006824638, -0.44094127, 0.062093686, -0.17493653, -0.0210136, -0.009759401) * go_1(-1.0, -1.0);
    result += mat4(0.039055627, -1.1227534, 0.2011684, -1.596073, 0.15453805, -0.57017285, -0.11305161, -1.3940005, 0.26534837, -0.4810402, 0.19368705, 0.05679811, 0.02899497, -0.06929879, -0.064716674, -0.5233614) * go_1(-1.0, 0.0);
    result += mat4(0.08799355, 0.43490237, -0.007640751, 0.4727971, -0.040673595, 0.4484875, -0.09527133, 0.48669556, -0.14917412, -0.1820996, 0.007540842, -0.438104, -0.31763864, -0.15891755, -0.13163948, 0.027711483) * go_1(-1.0, 1.0);
    result += mat4(-0.21942484, -0.5506726, -0.12166988, -0.0778024, -0.0827011, 0.59687775, -0.39999452, 0.72604036, -0.07948504, -0.5234003, -0.13036123, -0.036210533, -0.0012347022, 0.27617317, -0.07388496, 0.3298074) * go_1(0.0, -1.0);
    result += mat4(0.6156774, -0.012422398, -1.3157349, 0.575846, -0.2450333, 0.19449052, -0.25053105, 0.036819365, -0.16462867, -0.54626554, -0.46434176, -0.14286648, 0.12564103, 0.060644627, -0.11129175, 0.0042757904) * go_1(0.0, 0.0);
    result += mat4(0.09430548, 0.23639114, -0.09446271, 0.31530997, -0.21829599, -0.23676361, 0.46737513, 0.039784323, -0.07627072, 0.59054506, -0.21532068, 0.20856299, 0.078080244, 0.015219801, -0.095714234, -0.34254104) * go_1(0.0, 1.0);
    result += mat4(-0.06296367, -0.008895716, 0.11588069, -0.21158025, 0.073769294, 0.1820658, 0.3058016, 0.17402636, -0.001324585, -0.1562711, 0.11823117, -0.13203044, -0.13135819, 0.08626889, 0.15541436, 0.15780078) * go_1(1.0, -1.0);
    result += mat4(-0.061355665, 0.18224849, 0.13512115, -0.30899832, 0.23635183, 0.105834454, -0.36577392, 0.21514696, 0.24605447, 0.04379882, -0.8122288, -0.006541258, 0.21865259, 0.13159448, 0.14955027, 0.025456348) * go_1(1.0, 0.0);
    result += mat4(-0.13096818, 0.105844915, 0.3789525, -0.04156534, 0.06920738, 0.24970682, -0.28661972, 0.011326621, -0.048381038, -0.6842839, -0.13710922, -0.0042289183, 0.037753955, -0.046215158, 0.12689498, 0.08556473) * go_1(1.0, 1.0);
    result += vec4(0.0937124, -0.03813735, -0.015790615, -0.091823384);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.10925922, 0.07239288, -0.021987913, 0.010611779, -1.3779107, 0.0017856625, 0.012289622, -0.072822034, -1.5908673, 0.020741528, 0.037255947, -0.01607329, -0.8701701, 0.063948736, 0.021466868, 0.015780367) * go_0(-1.0, -1.0);
    result += mat4(0.52911764, 0.29455352, -0.023912065, -0.12785167, 0.09818652, 0.09945959, -0.05369277, 0.14586517, -0.13099979, 0.12880948, 0.030431528, 0.010136083, -0.12801291, 0.12410547, 0.10240149, 0.10800268) * go_0(-1.0, 0.0);
    result += mat4(-0.31083748, 0.32336405, -0.034316055, 0.015653996, 0.07589991, 0.0897131, -0.02427851, 0.03266163, 0.0913854, 0.03971538, -0.002345838, 0.03673578, 0.06600611, 0.12851107, 0.0023239104, 0.033255324) * go_0(-1.0, 1.0);
    result += mat4(0.21294002, 0.096525736, 0.08999665, 0.31390476, 0.08351904, 0.027684214, 0.037393577, 0.3736, -0.05416055, -0.94876367, 0.03692491, -0.75145036, -0.12987933, 0.05238148, -0.05834307, 0.16087511) * go_0(0.0, -1.0);
    result += mat4(0.2251975, -0.056929998, 0.849402, 0.5339899, 0.035589695, 0.014735473, 0.0872358, -0.15103884, -0.19521712, -1.4932314, 0.0077483943, -0.08430131, 0.09891273, 0.53206146, -0.044133957, 0.23195802) * go_0(0.0, 0.0);
    result += mat4(0.23825368, 0.5075087, 0.006585724, 0.2940611, -0.035630036, 0.0045831716, 0.03421051, 0.026387608, -0.02310589, 0.0027352383, -0.008147243, 0.020495536, 0.06569186, -0.005882603, 0.012077999, -0.03831101) * go_0(0.0, 1.0);
    result += mat4(-0.078965455, 0.06070554, -0.044884574, -0.18074717, 0.021143995, 0.03919086, 0.0132071795, -0.040907897, -0.061114486, -0.05934969, -0.029296398, -0.4255841, -0.29172102, -0.084155984, 0.027451158, -0.14186521) * go_0(1.0, -1.0);
    result += mat4(0.13543251, 0.1290722, -0.15276887, 0.09060162, -0.0130148865, 0.061276764, 0.011103105, 0.058902632, 0.051123474, 0.051020537, -0.009346037, -0.010842294, 0.025288215, -0.014562378, -0.014218891, -0.063311316) * go_0(1.0, 0.0);
    result += mat4(-0.07140601, 0.052135278, 0.10984009, -0.00831053, -0.0070540593, 0.061188135, 0.013083325, 0.031084817, 0.023475159, 0.012443946, -0.0013830347, 0.070532165, -0.0074791163, -0.08453297, 0.016075164, 0.013231399) * go_0(1.0, 1.0);
    result += mat4(-2.9053552, 0.044861723, 0.042493764, -0.095511094, -2.3029003, 0.022232236, 0.022162536, -0.01363329, -2.780828, -0.002636541, 0.015591539, 0.019614603, -0.040648825, 0.02218945, -0.029502911, 0.09111636) * go_1(-1.0, -1.0);
    result += mat4(-0.29988843, -0.5887569, 0.040109195, 0.035080295, 0.1347015, 0.09793013, 0.053791236, -0.06083191, -0.42661232, -1.2080078, -0.0023418067, -0.25780064, -0.038915824, -0.16403742, -0.10543249, 0.048336703) * go_1(-1.0, 0.0);
    result += mat4(0.015293785, -0.29691172, -0.05860659, 0.03584597, 0.0054993546, 0.021419171, 0.039156415, 0.0005448422, -0.014060477, -0.13274577, 0.03853476, 0.009411601, -0.119683444, -0.16668002, -0.034053396, -0.007437644) * go_1(-1.0, 1.0);
    result += mat4(-0.008264206, -0.33593374, 0.01077715, -0.72091067, -0.17978264, -0.06492559, -0.038960997, 0.25576952, 0.07712527, -0.012777559, 0.0018177283, -0.22214991, 0.20271027, 0.09090771, -0.013866249, -0.34065524) * go_1(0.0, -1.0);
    result += mat4(0.44793525, -0.39475155, 0.40207466, -0.058895703, 0.01917094, 0.4770274, -0.062068902, 0.21269478, -0.037703857, -1.5322415, -0.078069285, -0.4555189, 0.28047734, 1.6834264, 0.09160018, 0.48716334) * go_1(0.0, 0.0);
    result += mat4(0.11463224, -0.0019151905, -0.029677382, -0.32698393, 0.037892666, 0.23028462, -0.03781237, -0.062772594, -0.0030549625, -0.00954891, 0.026744122, -0.043631084, 0.027872205, 0.050179742, -0.04531836, 0.118358836) * go_1(0.0, 1.0);
    result += mat4(-0.48035192, -0.10442893, -0.19219387, -0.27545503, -0.050977927, 0.024377516, -0.004299588, 0.03015108, 0.023385864, -0.012071154, -0.004398384, 0.063525125, 0.12676586, 0.022837779, -0.05143245, -0.15886332) * go_1(1.0, -1.0);
    result += mat4(-0.05258569, 0.36724758, 0.016420657, 0.2899772, -0.069013044, 0.09028027, 0.01426399, 0.2692315, -0.00046765394, 0.028821882, -0.012032883, -0.021057054, -0.14345223, -0.13636321, 0.05574561, -0.09428161) * go_1(1.0, 0.0);
    result += mat4(-0.024962269, -0.10230241, 0.025417421, 0.17074811, 0.036930908, -0.07600429, -0.01653863, 0.011293934, 0.0074462476, 0.033811826, -0.017086996, 0.02681425, -0.024638314, -0.051803432, 0.021228366, -0.045794092) * go_1(1.0, 1.0);
    result += vec4(-0.0007517995, -0.08189943, 0.02045602, -0.004604582);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.39057556, -0.19909742, -0.16774273, -0.14709525, -0.29268196, -0.084465794, -0.09469055, 0.0013611658, -0.16512592, 0.06586888, -0.068333276, -0.1208158, 0.08307595, 0.087412715, -0.06278966, 0.103365146) * go_0(-1.0, -1.0);
    result += mat4(0.44973546, 0.05383373, -0.2505728, 0.1987509, -0.45856905, -0.08778062, -0.28459752, 0.19121337, -0.13310385, 0.013880965, -0.18962876, -0.11135128, -0.11662685, 0.015503091, 0.10291083, 0.110868864) * go_0(-1.0, 0.0);
    result += mat4(-0.13825673, -0.14043957, -0.48208225, 0.0065571563, -0.25438878, 0.06599337, -0.018605178, 0.07228731, -0.041861333, 0.009086641, -0.02636942, 0.042734772, -0.014287838, 0.05371582, -0.07482464, 0.03777804) * go_0(-1.0, 1.0);
    result += mat4(-0.4257502, -0.003473054, 0.031684507, 0.0076544806, -0.37561417, -0.08128553, -0.11909713, 0.079060204, 0.18826108, 0.010395445, 0.15142791, -0.9317603, 0.072790794, 0.0742255, 0.049948074, 0.14348139) * go_0(0.0, -1.0);
    result += mat4(0.2969865, 0.17028914, 0.26703152, -0.5803184, -0.6710493, 0.10081717, -0.17718603, 0.06709086, 0.16372685, -0.603421, 0.19981623, -0.518611, -0.3434207, 0.08000491, -0.04912999, 0.9439826) * go_0(0.0, 0.0);
    result += mat4(-0.50087893, -0.052340258, -0.105623074, 0.70207804, -0.4034309, -0.0055203447, -0.01864265, -0.037167713, -0.021016711, 0.01829802, 0.016533948, -0.0011203912, 0.012352622, -0.19051933, 0.0403781, -0.10170614) * go_0(0.0, 1.0);
    result += mat4(-0.07841561, 0.1409582, -0.06501852, 0.038578235, -0.16633624, 0.07980389, -0.03858939, 0.062329594, 0.094239175, -0.6303406, -0.16029099, -0.05634458, 0.032711074, 0.35636243, 0.022590384, 0.021715462) * go_0(1.0, -1.0);
    result += mat4(-0.114632934, -0.06360528, 0.01600504, -0.11451855, -0.3619275, 0.024964456, -0.048570085, -0.042694844, -0.15558232, -0.19080824, -0.09746466, -0.006686867, 0.16425003, 0.745624, 0.1015224, 0.22073181) * go_0(1.0, 0.0);
    result += mat4(0.20790519, 0.37011924, 0.07668002, -0.15050493, -0.10625747, 0.03162285, 0.013679499, 0.014491155, -0.045878086, -0.05813635, 0.017077578, 0.0021549836, 0.12084753, 0.1170865, 0.09898403, 0.018108249) * go_0(1.0, 1.0);
    result += mat4(0.18628362, 0.27512172, -0.072971925, 0.1631062, 0.050997276, 0.07566181, -0.03293133, 0.11468777, -0.26774043, 0.08560685, -0.026804281, 0.008581228, 0.016513195, 0.006449562, 0.120971024, -0.07465603) * go_1(-1.0, -1.0);
    result += mat4(-0.004263853, -0.18095905, 0.5672048, -0.6282738, 0.076919906, 0.03573065, -0.12598166, 0.16467729, 0.12646107, 0.21460246, 0.37293833, -0.70203996, 0.3443753, -0.061067205, 0.34747857, -0.28294006) * go_1(-1.0, 0.0);
    result += mat4(-0.03421335, 0.12042041, 0.40463898, 0.35070407, 0.1159577, 0.024333367, -0.023638152, 0.06419216, 0.0748634, 0.17165232, 0.12651755, 0.1350849, 0.21933146, 0.010875822, 0.2830201, -0.15180635) * go_1(-1.0, 1.0);
    result += mat4(0.7356938, 0.027443463, 0.4629247, -0.11452379, 0.23861307, 0.1832048, -0.101116285, 0.089476556, -0.1404831, 0.12790817, -0.00044942746, 0.13848273, 0.22028941, -0.2535414, 0.23237053, -0.10038761) * go_1(0.0, -1.0);
    result += mat4(0.0912507, 0.13000433, -0.45562822, -0.14026888, 0.29521537, 0.2935082, -0.063207716, 0.420039, 0.20540822, -1.4862347, 0.044907726, -0.17549735, -0.08968474, -0.24679813, -0.14277595, 0.4874267) * go_1(0.0, 0.0);
    result += mat4(-0.21639195, 0.1877658, -0.03945988, 0.31854948, 0.36826277, -0.020936264, -0.0932981, 0.02172164, -0.2022866, 0.29223242, 0.067361236, 0.07941634, 0.09018595, -0.18689837, -0.07786692, -0.08629008) * go_1(0.0, 1.0);
    result += mat4(0.021838631, -0.45491242, -0.2113452, 0.096588105, 0.08719123, 0.06611798, 0.035995238, 0.002083386, -0.0423, -0.07625698, 0.009918368, 0.034040116, 0.13215972, 0.0019176444, 0.027903652, -0.08604012) * go_1(1.0, -1.0);
    result += mat4(-0.35089022, -0.3854857, -0.06718424, 0.24948633, 0.29537535, 0.44416434, 0.10863883, 0.081503876, -0.010233393, -0.20033659, -0.026115516, 0.024423126, -0.00838728, 0.9232254, 0.2207706, -0.095001906) * go_1(1.0, 0.0);
    result += mat4(0.30369908, 0.20829873, 0.08835396, -0.14584258, 0.44220635, -0.24042842, 0.008243914, 0.04352294, -0.010227132, 0.01928504, -0.0041815313, 0.023948848, 0.20729549, -0.36251777, 0.10525374, 0.043387517) * go_1(1.0, 1.0);
    result += vec4(-0.007237143, -0.20974723, -0.04306134, -0.17410254);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.00867204, 0.010735015, -0.006211527, 0.039369006, 0.30894357, -0.11486243, 0.079766415, -0.05332988, 0.10561975, 0.0139871165, 0.076870576, -0.013971723, -0.051071122, -0.0033681532, -0.01992909, -0.011485826) * go_0(-1.0, -1.0);
    result += mat4(0.029835816, 0.028406808, -0.0037126862, -0.022533273, -0.35852665, -0.009626068, 0.100249365, -0.07295279, -0.3460771, 0.000778447, -0.09184905, 0.05080298, 0.20753461, 0.06571134, 0.13639052, -0.007754204) * go_0(-1.0, 0.0);
    result += mat4(-0.0018163628, 0.01448447, -0.0026479962, 0.0023379559, -0.03346689, 0.029829795, 0.030805612, -0.027745714, 0.04582898, -0.32700166, -0.24982, 0.062314644, -0.00031731217, -0.026533876, -0.01858486, 0.02767181) * go_0(-1.0, 1.0);
    result += mat4(0.08686557, 0.039450705, -0.068635166, 0.033408973, -0.19258656, -0.19399256, 0.00800361, -0.15369077, -0.47641802, 0.022730151, -0.10361976, -0.11662501, -0.027482318, -0.040101364, -0.07530324, -0.035869695) * go_0(0.0, -1.0);
    result += mat4(-0.33730885, -0.16814955, 0.3547702, -0.09464917, -0.37321278, 0.47573647, -0.81822455, 0.1782128, 0.5833756, 0.6535104, 0.20011303, 0.62668395, -0.10790786, 0.111395404, -0.37268883, -0.08332401) * go_0(0.0, 0.0);
    result += mat4(-0.008724795, -0.42364115, -0.31873086, -0.0030120828, 0.054016113, 0.30176702, 0.072562344, 0.031299658, 0.047873333, -0.43528867, 0.24232581, 0.0023833592, 0.021386892, 0.30702198, -0.025054976, 0.06952685) * go_0(0.0, 1.0);
    result += mat4(0.014981225, 0.06514456, 0.10367189, 0.0019865918, 0.01790131, -0.15233517, 0.08956679, -0.10745786, 0.04723288, 0.034971833, 0.008481675, 0.045781888, -0.030709628, -0.018452505, 0.0102045825, 0.010901085) * go_0(1.0, -1.0);
    result += mat4(-0.20485178, 0.14256148, -0.11052197, -0.51137227, 0.05905349, -0.175455, -0.35204458, 0.014021913, 0.057954323, -0.1258846, 0.0029933238, -0.006112899, -0.08139391, -0.10172123, 0.053466886, -0.02116691) * go_0(1.0, 0.0);
    result += mat4(-1.0477765, -2.4688878, -0.13470384, 0.22337435, -0.106456034, 0.28710288, 0.012772075, 0.016422518, -0.07331129, 0.15444142, -0.028761953, 0.0053299437, 0.0051617688, 0.004881788, 0.15638702, -0.010804361) * go_0(1.0, 1.0);
    result += mat4(-0.028188014, 0.007774721, -0.019062871, 0.0022802993, -0.1305836, -0.01984485, 0.014811737, -0.0008568353, 0.05251615, -0.018174483, 0.04014696, 0.006530964, 0.042098068, -0.029846586, 0.11411373, -0.042198) * go_1(-1.0, -1.0);
    result += mat4(0.2420624, 0.2696875, -0.09513452, 0.12711293, 0.13181278, 0.036786273, -0.04083069, -0.009594802, -0.14253816, -0.06129784, 0.05723522, -0.055885717, 0.08388485, 0.100261815, 0.11513813, 0.016061021) * go_1(-1.0, 0.0);
    result += mat4(0.188429, 0.18786827, 0.20955528, 0.040453445, 0.014893265, 0.015817784, 0.13658339, -0.0003246901, 0.03192182, -0.052920174, -0.11064415, 0.038049873, 0.042242132, 0.067605704, 0.050568465, -0.00841851) * go_1(-1.0, 1.0);
    result += mat4(0.29854938, 0.17685728, 0.033081308, 0.13648582, 0.076735824, 0.08929586, 0.1494392, 0.068684705, 0.005858586, 0.055017047, 0.059419766, -0.024029823, 0.3136987, 0.13038522, 0.0029071926, 0.03181174) * go_1(0.0, -1.0);
    result += mat4(0.39485425, -0.06318613, 0.29501542, 0.012934126, 0.066594906, 0.16585147, 0.13326654, -0.03347664, -0.081531696, -0.30282617, 0.25773942, -0.0043488164, -0.3610372, -0.19239245, -0.039647155, 0.0019148662) * go_1(0.0, 0.0);
    result += mat4(0.17751427, -0.10280753, 0.11988296, 0.038775977, -0.0072892415, -0.06256352, 0.03915442, -0.002743747, -0.12411387, 0.28224146, 0.16936877, 0.0031311484, -0.17111592, -0.29144096, -0.33285385, -0.025334088) * go_1(0.0, 1.0);
    result += mat4(0.25703838, 0.073535874, 0.03968558, 0.027152719, 0.090222806, 0.035166394, 0.076986164, 0.028462857, -0.10095866, -0.022425173, -0.115757294, -0.05720821, -0.05248081, 0.07554304, -0.058242574, 0.05643953) * go_1(1.0, -1.0);
    result += mat4(0.1628028, 0.056348495, -0.15909404, -0.06441286, 0.0012434877, 0.07209077, 0.026560416, -0.038815033, -0.13474213, -0.024580741, 0.081674, 0.07918239, -0.12653358, -0.30011573, 0.015776223, -0.0063425344) * go_1(1.0, 0.0);
    result += mat4(0.013634771, 0.28413326, 0.08919174, 0.0021553321, -0.039357904, 0.19694367, 0.03355746, -0.018733377, -0.043670855, -0.14155443, 0.078053266, 0.024793979, 0.04218863, 0.035498872, -0.10319629, -0.007729622) * go_1(1.0, 1.0);
    result += vec4(-0.011986307, -0.001700756, 0.05360318, -0.023071146);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.02688113, -0.024484262, 0.035502996, 0.038846686, -0.14176017, -0.10607753, -0.09208034, -0.076711915, 0.039916564, 0.036946367, -0.035865188, -0.022783222, 0.03796306, 0.08061911, -0.039778896, 0.070493326) * go_0(-1.0, -1.0);
    result += mat4(-0.10912443, 0.019778926, -0.13983513, 0.007568568, -0.01911898, 0.10835005, 0.0070062196, -0.15551381, -0.10988194, -0.09451547, 0.0074378126, -0.14491004, 0.394906, 0.09410194, 0.15182, 0.103079334) * go_0(-1.0, 0.0);
    result += mat4(0.18614824, -0.022577956, 0.091138154, -0.020044297, -0.101459265, -0.006385798, -0.051564053, -0.06966049, -0.57237935, 0.07624798, 0.14050242, 0.008300017, 0.14114144, 0.31488335, 0.031837944, 0.06941829) * go_0(-1.0, 1.0);
    result += mat4(0.04081332, -0.025129009, 0.12537862, -0.0076993527, -0.07506799, 0.09980754, -0.09446546, 0.1591458, -0.0048445067, 0.20366557, -0.045375228, -0.02371164, -0.12303518, 0.057617147, -0.072588496, 0.017611744) * go_0(0.0, -1.0);
    result += mat4(-0.23960851, -0.11028313, -0.18574259, -0.17678128, 0.17484161, 0.424714, 0.22015397, 0.27169, 0.6042866, -0.05287643, 0.68378955, 0.55672663, 0.00042284495, 0.52723855, 0.15210822, 0.37433627) * go_0(0.0, 0.0);
    result += mat4(-0.7423675, 0.14383712, 0.25547257, -0.06813228, -1.1292397, -0.18136862, -0.26436293, -0.16499837, -0.04442249, -0.20679367, -0.6729903, 0.053874683, -0.87764347, 0.32815456, -0.14470066, 0.061255787) * go_0(0.0, 1.0);
    result += mat4(0.021571176, -0.010279555, -0.11672481, -0.046208005, -0.051750235, 0.00091991853, -0.09230306, 0.009015068, 0.020169523, -0.022019483, 0.030326927, 0.024869507, 0.08286017, -0.08313163, 0.0942564, -0.036301903) * go_0(1.0, -1.0);
    result += mat4(0.039192382, 0.7718, -0.2310397, 0.89104015, -0.06917936, 0.084454596, 0.28236592, 0.060100887, -0.17761289, 0.048036404, 0.003172766, 0.061906103, -0.060196083, -0.0021130915, 0.14386307, -0.051778734) * go_0(1.0, 0.0);
    result += mat4(-1.3410226, -1.1158698, -0.9960789, 0.0979806, 0.28485346, -0.11127225, -0.14317417, -0.030563109, 0.25773266, -0.018262107, -0.078984976, -0.077034004, 0.3554326, 0.02901986, 0.019071007, -0.003955058) * go_0(1.0, 1.0);
    result += mat4(-0.17644407, 0.0012084892, -0.009107139, 0.023799136, 0.0061082025, 0.008090258, -0.004939215, 0.0108082425, 0.066137895, -0.041560728, -0.030317083, -0.01935636, 0.010484695, -0.038457748, 0.029985342, -0.019650334) * go_1(-1.0, -1.0);
    result += mat4(0.11887631, 0.24506795, 0.05387259, 0.19324116, 0.046438508, 0.06377251, -0.0071209217, 0.090758234, -0.04844901, -0.032407816, -0.034594253, -0.104223855, 0.09056992, 0.06962343, 0.09618292, 0.058249295) * go_1(-1.0, 0.0);
    result += mat4(-0.08581439, 0.08069363, 0.034559205, 0.09509429, -0.06818259, -0.065020256, -0.12063088, -0.019367145, -0.0142553365, 0.079429716, 0.080991775, 0.021759119, 0.18077844, -0.091651134, -0.1498437, -0.051123947) * go_1(-1.0, 1.0);
    result += mat4(0.15848312, -0.020774666, 0.1841997, -0.056076784, 0.03950287, -0.03312422, 0.07453878, -0.010822264, 0.13343188, 0.04201925, 0.052033853, 0.052826364, 0.43854234, 0.16110349, 0.38861364, -0.059820462) * go_1(0.0, -1.0);
    result += mat4(-0.79456645, 0.19605722, -0.18220553, 0.13396539, 0.09906495, 0.41493928, -0.2269269, 0.09390453, -0.27436838, -0.2875629, -0.14006944, 0.21630348, -0.88441527, 0.43342873, -0.44421384, 0.0016069415) * go_1(0.0, 0.0);
    result += mat4(-0.4372876, 0.22250326, 0.17814364, 0.02033459, -0.23651846, -0.121430665, 0.099239305, -0.15218696, 0.6987401, 0.056338325, -0.11366205, 0.08655427, -0.97480327, 0.17777166, -0.5614996, 0.026119355) * go_1(0.0, 1.0);
    result += mat4(0.043946233, -0.008878711, 0.024211299, 0.029436432, 0.07290254, -0.02769826, -0.04109611, 0.043266654, -0.10448825, 0.093224786, -0.056915604, 0.12250714, 0.21035548, -0.019446028, 0.14755304, -0.03725426) * go_1(1.0, -1.0);
    result += mat4(-0.2499757, 0.2787096, 0.006029533, 0.14363192, 0.047027566, 0.109992124, -0.07560017, 0.07314955, -0.045555368, -0.27435237, 0.08728613, -0.054973625, -0.24217679, -0.21973611, 0.16723274, -0.083467394) * go_1(1.0, 0.0);
    result += mat4(0.1854608, 0.13928317, -0.080401845, 0.025332723, 0.17891242, 0.025218066, -0.16987807, 0.00025777894, 0.1050023, -0.1223289, 0.041229136, 0.0442613, -0.18465364, 0.048323244, -0.09143292, -0.035037007) * go_1(1.0, 1.0);
    result += vec4(0.01418309, -0.012473091, -0.0347511, -0.015797168);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.033934884, -0.013389093, -0.18135305, -0.0543389, 0.18069983, -0.0049332096, 0.6945258, -0.09576111, -0.08798626, -0.008252945, -0.027999587, -0.022470172, -0.11108884, 0.02583468, -0.33674362, 0.18037002) * go_0(-1.0, -1.0);
    result += mat4(0.10865098, -0.0014304083, 0.1314546, 0.07092275, 0.23909336, 0.050693955, 0.75302124, 0.30848756, 0.027075319, 0.011265416, -0.16494949, 0.022060174, 0.1677585, -0.06317886, 0.2744151, -0.4100402) * go_0(-1.0, 0.0);
    result += mat4(-0.107074335, -0.12483778, -2.2073472, 0.062345292, -0.20695949, 0.06738014, -2.975653, -0.102877006, 0.14547375, 0.020778144, -1.174972, -0.017046051, 0.01610192, 0.036857694, -5.7517276, 0.29868737) * go_0(-1.0, 1.0);
    result += mat4(0.0262547, 0.0059146574, -0.001354555, 0.052215893, 0.31872132, 0.011983748, -0.011100827, 0.03442613, -0.16529362, -0.003185802, -0.0581603, -0.00774452, -0.6036371, -0.018193608, 0.015858112, -0.054230306) * go_0(0.0, -1.0);
    result += mat4(-0.12596527, 0.02551958, -0.0046179295, -0.35986948, 0.13481277, -0.13606073, -0.031094797, 0.282463, 0.11020172, -0.07859908, 0.08074758, -0.20424378, 0.9843347, 0.24378109, 0.2463214, -0.2932149) * go_0(0.0, 0.0);
    result += mat4(0.17195411, 0.11795669, -0.16268751, 0.36092943, -0.17562015, 0.02963433, 0.001485506, -0.10651058, 0.14592707, -0.04746555, 0.029444067, 0.1506619, -0.16833629, 0.22032522, 0.29775828, 0.48717222) * go_0(0.0, 1.0);
    result += mat4(0.04799411, 0.0056799487, -0.017415807, 0.038422048, 0.074912794, -0.008927688, -0.021977259, 0.034909304, -0.16193143, -0.031426482, 0.009244111, 0.01015412, -0.14963841, 0.0023813336, 0.015633225, 0.0015784845) * go_0(1.0, -1.0);
    result += mat4(-0.10650179, -0.0072190636, 0.050064944, 0.019601291, 0.11840884, 0.08373365, -0.033178665, 0.07269192, -0.018224863, 0.08008934, -0.041632704, -0.047175508, 0.04463006, -0.19683075, -0.030912478, 0.018024724) * go_0(1.0, 0.0);
    result += mat4(-0.025773318, 0.062278464, 0.048709955, 0.07640962, -0.03628986, -0.033844765, 0.0021351627, 0.007047108, 0.12238809, 0.12245998, -0.04463272, 0.052579314, 0.18961239, -0.44108015, -0.038955096, 0.07446588) * go_0(1.0, 1.0);
    result += mat4(0.005030042, -0.029199567, -0.35001585, 0.11850332, -0.11683911, 0.015234998, -0.26309854, 0.04881425, 0.373355, -0.005351852, -0.007942865, 0.18747708, 0.017077185, -0.026523449, 0.13482137, -0.01849463) * go_1(-1.0, -1.0);
    result += mat4(-0.14627755, -0.047636446, -0.02132284, -0.2096119, -0.071441665, 0.027839174, -0.96466273, 0.03422719, -0.20546462, 0.08741079, -0.6171538, 0.19284557, -0.10040132, -0.046884432, -0.48860028, -0.13720188) * go_1(-1.0, 0.0);
    result += mat4(0.075921595, -0.023459407, -0.6653806, 0.027750714, 0.050187945, 0.05658631, -0.6153454, -0.23532617, 0.1772542, -0.04555279, -1.1825995, 0.18716612, -0.097259216, -0.08922996, -0.39533082, -0.004784174) * go_1(-1.0, 1.0);
    result += mat4(0.30038112, 0.030684547, -0.07060523, 0.03571036, -0.2606441, 0.008721227, -0.088255905, 0.20967, 0.20314512, -0.025691887, 0.09896319, 0.52562153, -0.06957151, 0.012718185, 0.096466005, -0.14010723) * go_1(0.0, -1.0);
    result += mat4(-0.27277824, 0.10691569, -0.023238985, -0.14096338, -0.32757732, 0.044120617, 0.049004227, -0.6644084, -0.4923969, -0.21342699, 0.12791996, 0.12515107, 0.58772284, 0.021385105, 0.14341521, 0.44709978) * go_1(0.0, 0.0);
    result += mat4(0.08547907, -0.007698113, -0.019648926, 0.08365189, 0.33076584, -0.1505218, 0.0052637556, 0.25924426, 0.08507723, -0.021206977, -0.015369433, 0.16031837, -0.82950336, 0.17292656, 0.04316217, -0.6464216) * go_1(0.0, 1.0);
    result += mat4(-0.0012450214, 0.027782328, 0.03450454, -0.065964915, -0.20053405, -0.012841184, 0.011690057, -0.03886119, 0.2273179, -0.04910387, -0.0014137527, 0.10372937, 0.10250931, 0.0062366156, -0.010096963, 0.005928197) * go_1(1.0, -1.0);
    result += mat4(-0.018400712, 0.020382375, 0.041101053, -0.030401887, 0.014245606, -0.22285825, -0.010101028, -0.056114923, 0.033003356, -0.013400805, -0.018858947, 0.0743233, -0.034076113, 0.14529258, -0.010735678, 0.024435313) * go_1(1.0, 0.0);
    result += mat4(0.012115563, 0.0090895025, 0.0003119447, 0.0047172024, 0.079861425, -0.052785248, -0.013407549, 0.010236672, -0.0050524925, 0.01751895, -0.014584348, -0.0068129627, -0.1793098, 0.03927475, 0.0195936, -0.14922726) * go_1(1.0, 1.0);
    result += vec4(-0.019453334, -0.006059777, -0.005235455, 0.003979094);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.11173055, -0.0019306294, -0.01686401, -0.014814604, 0.10016709, 0.005166027, -0.07249553, -0.01060786, 0.034023732, -0.025874516, 0.10917688, 0.0018957634, -0.5364589, 0.037008546, 0.16846754, -0.0725069) * go_0(-1.0, -1.0);
    result += mat4(-0.050282747, 0.0009100684, -0.19563293, -0.022807728, 0.0025792413, 0.058710452, 0.024902316, -0.28316677, -0.01797935, 0.025869733, 0.31515706, -0.14922549, 0.15217797, -0.13874114, 0.32549965, 0.38498247) * go_0(-1.0, 0.0);
    result += mat4(0.018542686, 0.04229641, -0.1008522, 0.14595212, 0.014635097, -0.08073515, 0.053187262, 0.013139788, -0.010124972, 0.024453815, 0.019908125, 0.006161357, -0.015954837, 0.13499475, -0.03768594, -0.30373034) * go_0(-1.0, 1.0);
    result += mat4(0.013453097, -0.010016895, -0.08804333, -0.094730236, -0.027616326, -0.05292107, -0.014040553, 0.21323483, -0.04304111, -0.047741536, 0.25765428, -0.023760024, -0.13598347, 0.05776286, -0.29365402, -0.06935331) * go_0(0.0, -1.0);
    result += mat4(0.023035066, -0.05211416, 0.66085285, -0.18000412, -0.050591905, 0.4006293, -0.12525639, 0.7923379, 0.010246736, -0.033280894, -0.15681966, 0.8078933, -0.03391032, -0.24320433, -0.92012155, -0.6007331) * go_0(0.0, 0.0);
    result += mat4(-0.0073871077, 0.12759668, 0.023522299, -0.37434855, 0.0030430586, -0.27392256, 0.009650355, -0.05975257, -0.014957749, 0.2192101, 0.042664442, 0.3722546, -0.0365252, 0.5206429, -0.032510925, 0.57577926) * go_0(0.0, 1.0);
    result += mat4(-0.07513259, 0.01430014, 0.03479649, -0.02068453, 0.024421997, 0.048562396, 0.16671056, -0.14396963, -0.0043633115, -0.055741034, -0.07645187, 0.1094978, -0.09296304, -0.03868794, -0.02499317, 0.1481643) * go_0(1.0, -1.0);
    result += mat4(0.048158877, -0.058619678, -0.271053, 0.07787398, -0.00988502, 0.10422061, 0.056759715, -0.21849577, 0.020422207, -0.009930903, 0.22125556, -0.06764118, -0.0036855168, 0.023595458, 0.22118309, 0.03805695) * go_0(1.0, 0.0);
    result += mat4(-0.0038506603, 0.20651232, -0.011918241, 0.18302512, 0.018080648, -0.010402203, 0.015943924, 0.10867721, -0.019290976, 0.09169341, -0.07404874, -0.16496745, -0.024251763, 0.11253711, 0.07530897, -0.4123765) * go_0(1.0, 1.0);
    result += mat4(-0.084861666, 0.02673535, -0.07131864, 0.017291557, 0.027882813, 0.033547312, 0.13208207, 0.022275219, 0.013793737, 0.023435183, -0.082735695, -0.20600525, 0.16259107, -0.03095962, -0.15687118, 0.067646995) * go_1(-1.0, -1.0);
    result += mat4(-0.009717254, -0.053585716, -0.07066681, 0.072707616, 0.018492313, -0.0058168606, -0.017323026, -0.20336811, 0.004029837, 0.11907712, -0.019191712, -0.13014798, 0.005602817, -0.00015634114, -0.07132299, 0.19994335) * go_1(-1.0, 0.0);
    result += mat4(0.0048708436, 0.017731152, -0.0406289, -0.03737915, 0.0033458688, -0.035638034, -0.033876915, -0.10031029, -0.019644037, 0.15157971, 0.011799731, -0.031070527, -0.038786467, -0.06336574, -0.12606405, 0.26046413) * go_1(-1.0, 1.0);
    result += mat4(-0.03773753, 0.06964847, 0.2518322, -0.07302095, -0.20336173, 0.060814, -0.5241061, -0.180226, -0.053706855, -0.12276229, -0.098932356, 0.25195253, 0.30219907, 0.0031567335, 0.49138492, -0.06448888) * go_1(0.0, -1.0);
    result += mat4(0.0037956738, -0.21422535, 0.12335267, -0.34312138, 0.0051478925, -0.36327678, -0.5181519, 0.1275005, 0.04146108, 0.349634, 0.025698492, -0.14443004, 0.06991167, 0.22259241, 0.296523, -0.23882328) * go_1(0.0, 0.0);
    result += mat4(0.006494912, 0.17653103, -0.029971294, 0.02770694, -0.0053197835, 0.12343238, -0.020734679, -0.09538963, -0.009988146, 0.18449515, -0.034362476, 0.026386192, 0.04475467, -0.7761855, 0.31491292, -0.41488957) * go_1(0.0, 1.0);
    result += mat4(-0.02855984, -0.020806575, -0.15490052, 0.00013717858, -0.07407947, -0.058307167, -0.0012204957, 0.09331498, -0.07163239, 0.07159331, 0.016617034, -0.16244282, 0.038382072, 0.014211942, -0.06527198, 0.06034698) * go_1(1.0, -1.0);
    result += mat4(0.011326461, -0.038043953, -0.06574081, 0.2699178, 0.039875884, -0.0915099, 0.17610277, -0.0902536, -0.016509658, 0.09906359, 0.0063159405, -0.027432917, -0.033164524, 0.050058007, -0.006355408, 0.13541579) * go_1(1.0, 0.0);
    result += mat4(0.009309567, 0.024245966, -0.020154253, -0.029059814, 0.00094392116, 0.034321487, -0.005741497, -0.0982261, -0.0011749754, 0.062353577, 0.017293716, -0.022672644, -0.01599386, -0.25441918, -0.14002655, 0.2519203) * go_1(1.0, 1.0);
    result += vec4(-0.012502839, -0.01065871, -0.025856817, -0.04897797);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0018789696, -0.005938632, -0.0036249459, 0.007337766, -0.11760893, 0.28161767, -0.3446221, 0.21417734, 0.063831784, -0.026231987, -0.014881112, 0.0738728, 0.04012096, -0.042373538, 0.008979256, 0.0070011285) * go_0(-1.0, -1.0);
    result += mat4(0.111821696, 0.01831215, -0.34554905, 0.11535996, -0.1999149, -0.08853295, 0.266824, -0.13589713, 0.05876439, 0.067230895, 0.038819347, -0.044389114, 0.09000918, 0.10054179, -0.13251425, 0.04694937) * go_0(-1.0, 0.0);
    result += mat4(-0.028183544, -0.038607012, -0.08040374, -0.04403476, -0.02226297, -0.0011658529, 0.057785895, -0.04869889, -0.0012199933, 0.019165423, -0.03287389, 0.014673614, -0.0057589305, -0.03934856, -0.087100066, 0.04135707) * go_0(-1.0, 1.0);
    result += mat4(-0.022997897, 0.06523967, -0.061466448, 0.020355692, 0.075840965, -0.281508, 0.3784957, 0.033337343, 0.16660592, -0.011097089, -0.27272642, 0.07889478, -0.031800788, -0.014150567, -0.008406285, -0.039031997) * go_0(0.0, -1.0);
    result += mat4(-0.14900023, -0.33339968, 0.59194076, -0.33390203, 0.04918727, -0.26322812, -0.0038499495, 0.12662998, 0.52800566, 0.5745389, -0.033671588, 0.27005926, -0.015642248, -0.20058207, 0.3965153, -0.6897508) * go_0(0.0, 0.0);
    result += mat4(0.015687255, 0.19226685, 0.047212835, -0.05720033, -0.040924635, -0.11674977, -0.018208211, 0.0049824854, -0.046497457, -0.077519454, 0.072057456, -0.2001047, -0.02808486, 0.015536116, -0.11131187, -0.080211595) * go_0(0.0, 1.0);
    result += mat4(-0.008016668, -0.008603127, 0.0799122, -0.02043001, -0.002281118, 0.034219015, -0.002791049, -0.012426627, -0.020819461, 1.0124753, -0.26021212, 0.28404137, 0.0068850163, -0.002094713, -0.0017141144, 0.019475395) * go_0(1.0, -1.0);
    result += mat4(-0.056282204, -0.01766417, -0.026012765, 0.0022156874, -0.003492336, 0.06302792, 0.014493978, -0.013118874, -0.102660574, 0.12020912, -0.6530573, 0.08007956, -0.053971313, -0.67168456, -0.0102855265, 0.0811809) * go_0(1.0, 0.0);
    result += mat4(0.0044617723, 0.03556432, -0.034136284, 0.0013595561, 0.001234655, -0.020032685, -0.0020410605, 0.006753125, -0.021159455, -0.031292982, 0.102106325, 0.049395982, 0.0069154776, 0.0058529833, -0.08006555, -0.011495059) * go_0(1.0, 1.0);
    result += mat4(-0.018971901, 0.057480913, 0.05034442, -0.0255202, -0.082621574, 0.056681417, 0.52199763, 0.014295784, -0.0044540204, -0.01671085, -0.0036130024, 0.024788622, 0.026590426, 0.025871225, -0.0040960927, -0.007692606) * go_1(-1.0, -1.0);
    result += mat4(-0.04928263, -0.08448727, -0.05820459, 0.0044930526, 0.10951505, 0.042772584, 0.032195657, 0.12009829, -0.110038996, 0.053648025, 0.44598743, -0.28935927, 0.010645335, -0.03501382, -0.35693303, 0.28792268) * go_1(-1.0, 0.0);
    result += mat4(-0.08580042, 0.021889491, -0.19753982, 0.012904031, -0.01715075, 0.005348513, 0.0061083217, -0.04961162, -0.03355767, -0.034939222, 0.10709787, 0.011543845, -0.00037866356, 0.019493164, 0.0860894, -0.05257266) * go_1(-1.0, 1.0);
    result += mat4(0.028277135, -0.09172952, -0.09084412, 0.03847032, 0.011553641, 0.7452491, -1.1124119, 0.48113862, -0.014636551, 0.25274986, 0.19863696, -0.033218887, -0.051633444, -0.27638853, -0.1413803, -0.07367568) * go_1(0.0, -1.0);
    result += mat4(0.16373381, 0.140001, 0.1071817, 0.01545783, -0.23024204, -0.16242483, -0.009321219, 0.5663445, -0.2601029, -0.7258026, 0.12833552, -0.011985373, 0.6869734, 0.99748933, -0.39910644, 0.39122027) * go_1(0.0, 0.0);
    result += mat4(-0.2606772, -0.6690536, 0.67335707, -0.14695859, 0.056745924, 0.1508491, 0.23261242, 0.09252189, 0.002324141, -0.1719204, -0.089416355, 0.033765048, -0.071234226, -0.13070305, -0.040198054, -0.09452623) * go_1(0.0, 1.0);
    result += mat4(-0.012614401, 0.05153176, 0.023774343, -0.0062987646, 0.081253745, 0.38750622, 0.18794447, 0.021409897, 0.006296354, 0.006194135, -0.033830628, 0.0013548655, -0.0050571617, 0.061801847, -0.053337328, 0.007697674) * go_1(1.0, -1.0);
    result += mat4(-0.039402526, -0.30056548, 0.025744734, -0.0012998012, 0.05822161, 0.8212117, 0.10547068, -0.05082032, 0.012184342, -0.008494354, -0.14255132, 0.023696013, 0.006470623, 0.17900582, 0.054081514, -0.032673948) * go_1(1.0, 0.0);
    result += mat4(0.08162115, 0.04578197, -0.039160404, -0.05123611, -0.01223601, -0.025649782, 0.08429813, 0.003967048, 0.0015089753, -0.089105226, -0.07175521, -0.008828043, -0.044940926, 0.05800374, 0.11495334, -0.022950407) * go_1(1.0, 1.0);
    result += vec4(-0.010380489, -0.06482993, -0.0775547, -0.05283498);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define go_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.0042995154, 0.017516397, -0.017578844, 0.006559785, -0.29224914, -0.39838827, -0.018004349, 0.2922704, -0.028212857, 0.13218899, -0.06282247, -0.044694025, 0.0051648533, 0.14494611, -0.0018952655, -0.07093912) * go_0(-1.0, -1.0);
    result += mat4(-0.18806072, 0.31471923, 0.017078547, -0.11088136, 0.106450394, -0.07176615, 0.14858504, -0.14626211, -0.064919695, 0.02029406, 0.13960999, -0.027591178, -0.09383341, 0.10212506, 0.00033543768, 0.02608913) * go_0(-1.0, 0.0);
    result += mat4(0.035148494, 0.043976303, -0.014492814, -0.00414612, 0.02976135, -0.01126289, 0.019230569, -0.015605243, -0.016872661, -0.0006834031, 0.013722877, 0.01987601, -0.009959352, 0.011645263, -0.05580405, -0.003125742) * go_0(-1.0, 1.0);
    result += mat4(-0.07854643, -0.05027821, 0.06254721, -0.019536503, -0.35553288, 0.4282429, -0.10192359, -0.16436473, -0.15708756, 0.35115275, -0.090900846, -0.042015493, 0.034120634, -0.12625518, 0.047120295, 0.03945936) * go_0(0.0, -1.0);
    result += mat4(-0.25505206, -1.0535986, 0.19669032, -0.24700408, 0.0611843, -0.11279332, -0.070387505, -0.17565869, -0.32696086, -0.18583396, 0.31095555, 0.1043023, 0.1976951, -0.7450178, 0.2821299, -0.17668483) * go_0(0.0, 0.0);
    result += mat4(-0.13086194, -0.04494239, -0.26128086, -0.044161305, 0.06384485, -0.04371024, -0.011310145, -0.04009226, 0.044913914, -0.13276562, 0.2594668, -0.022063635, -0.08033267, -0.07398456, -0.04039002, -0.03512858) * go_0(0.0, 1.0);
    result += mat4(0.0022569844, -0.12019379, 0.038001966, 0.012520158, -0.12241633, -0.027048213, -0.03382156, -0.032223377, -0.1928887, 1.0396913, -0.13252999, 0.18756671, 0.0066216756, 0.030488469, 0.0012149689, 0.01775764) * go_0(1.0, -1.0);
    result += mat4(0.1646811, 0.076769486, -0.09457554, 0.04095394, 0.005094628, -0.031958755, -0.022027576, -0.0070531764, 1.129665, 0.8454284, -0.0053239088, 0.49652728, 0.22508144, 0.044623256, -0.29094273, -0.22824067) * go_0(1.0, 0.0);
    result += mat4(-0.06786565, 0.0830492, -0.0109963585, 0.015667964, 0.060586408, 0.005662017, 0.046662915, 0.030138498, -0.0386157, 0.3265393, 0.17748165, 0.20386729, -0.12436469, -0.093367785, -0.117335446, -0.106651194) * go_0(1.0, 1.0);
    result += mat4(0.04122451, -0.07637133, 0.030482374, 0.065402076, 0.22719528, -0.3721425, -0.12690352, 0.18614459, -0.060439844, -0.040910736, 0.030807534, -0.0539835, 0.07272558, 0.12560634, -0.014206387, 0.03920276) * go_1(-1.0, -1.0);
    result += mat4(0.031302795, 0.041801773, -0.07422161, -0.052183557, -0.10458104, 0.04968872, 0.033920847, -0.051653925, 0.19562188, -0.37418294, 0.2493752, 0.074196324, -0.12882401, 0.110751845, -0.35041156, 0.053631373) * go_1(-1.0, 0.0);
    result += mat4(-0.11804666, -0.10199131, 0.10630716, -0.01206235, 0.026888067, 0.03108525, 0.015087878, -0.0035447583, 0.031981766, -0.04104012, 0.020024989, -0.02971923, 0.02702686, -0.035011098, 0.033086978, 0.0030342713) * go_1(-1.0, 1.0);
    result += mat4(-0.051415972, 0.11041454, -0.04673248, -0.09430956, 0.48422512, 1.4999274, 0.17711246, 0.82195246, 0.17857751, -0.14529507, 0.093914986, 0.20069627, -0.13462864, -0.00040549313, 0.062078603, -0.17192666) * go_1(0.0, -1.0);
    result += mat4(-0.21802187, -0.00013253676, 0.2282858, -0.018199977, -0.16591288, 0.45694497, 0.20808274, 0.31256077, 1.2147218, 0.82408065, -0.54772323, 0.17467864, -1.2242019, 0.11421448, -0.1986136, -0.13087954) * go_1(0.0, 0.0);
    result += mat4(0.31314602, -0.13354945, -0.5400101, -0.35992262, -0.12641391, 0.022703301, -0.11267518, -0.06507543, 0.09549485, -0.053692233, 0.27858952, 0.013190721, 0.18878396, 0.079813905, 0.079195805, 0.07547436) * go_1(0.0, 1.0);
    result += mat4(0.012542412, -0.011674002, 0.008842758, 0.035795026, -0.41933018, -0.15675484, -0.026548266, -0.10308993, 0.013497662, 0.017492423, 0.009777463, 0.010705498, 0.06263631, -0.0058314167, 0.044254348, 0.039414644) * go_1(1.0, -1.0);
    result += mat4(-0.006892704, -0.106901474, -0.063283555, -0.14529623, -0.16353977, -0.005131243, 0.28413904, 0.28554842, 0.07764489, 0.09755183, -0.0015446906, 0.050363738, -0.19106092, -0.14444263, -0.1880425, -0.09544873) * go_1(1.0, 0.0);
    result += mat4(-0.34555396, -0.37535655, 0.09664299, -0.21944751, 0.15956397, 0.08414597, 0.123782754, 0.11045211, 0.19693631, -0.06894672, 0.09465022, 0.056333944, -0.07573168, 0.008412103, -0.009690411, 0.013243777) * go_1(1.0, 1.0);
    result += vec4(-0.03226335, -0.05124014, 0.033550017, 0.023546405);
    return result;
}

//!DESC ArtCNN C4F8 (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define go_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define go_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.041666843, -0.058812816, -0.12295901, -0.15415077, 0.0004609528, 0.03888736, 0.035586685, 0.039047617, -0.12993033, -0.0013722929, 0.026637783, 0.037736535, 0.13349867, -0.013099527, -0.01890986, -0.059229195) * go_0(-1.0, -1.0);
    result += mat4(-0.05011811, -0.13102321, 0.034324378, -0.0025525584, -0.19756004, 0.09627376, -0.2490509, 0.20004256, 0.19736478, 0.042076204, 0.09897799, 0.037042644, -8.304784e-05, -0.061038595, 0.0063138474, -0.16392091) * go_0(-1.0, 0.0);
    result += mat4(0.08435029, 0.076740034, 0.052438084, -0.015552183, -0.05116559, 0.029329728, -0.1290476, 0.09584286, -0.0025666722, -0.021949962, 0.035025097, -0.0384101, -0.007863508, 0.04455171, -0.06967876, -0.022453109) * go_0(-1.0, 1.0);
    result += mat4(0.26106706, 0.020591905, 0.2000138, 0.086504586, -0.081538245, -0.07679449, 0.054053217, 0.09900766, -0.004836572, 0.016478105, -0.010268765, 0.026118781, 0.1781944, 0.0100991065, -0.11228827, -0.11793544) * go_0(0.0, -1.0);
    result += mat4(0.30281866, 0.4120885, 0.15981385, -0.023659002, 0.29829752, -0.062023357, 0.34327462, -0.062109035, 0.3368359, 0.72325766, 0.241579, 0.4919079, 0.2784163, 0.17079183, 0.7020461, 0.5140463) * go_0(0.0, 0.0);
    result += mat4(0.1092114, 0.15112238, 0.24913952, 0.35568804, -0.058824643, -0.060973022, 0.022007987, -0.25589976, -0.005622282, -0.020753246, 0.05297636, 0.17929742, -0.09452639, -0.12075989, 0.0151247205, -0.05258166) * go_0(0.0, 1.0);
    result += mat4(0.0084449425, 0.22495976, -0.05456929, 0.07372757, 0.043502036, -0.021456946, 0.025341202, 0.005179847, 0.0043676808, -0.044157214, 0.016156076, -0.016825743, -0.07537288, -0.026184466, -0.058202222, -0.091586225) * go_0(1.0, -1.0);
    result += mat4(0.27190372, 0.075443044, 0.25651994, 0.28159362, -0.01021207, -0.03412613, 0.00023889253, -0.024384433, 0.0767741, 0.044886507, 0.07466209, 0.013750286, -0.4122529, -0.019077064, -0.29945716, 0.13108346) * go_0(1.0, 0.0);
    result += mat4(-0.06801873, -0.019712446, 0.09428028, 0.1228291, 0.022815196, 0.031181231, -0.020333644, -0.063103594, -0.008604745, 0.0074949227, 0.012235069, 0.016016124, -0.008777928, -0.027563415, -0.16824277, -0.106479384) * go_0(1.0, 1.0);
    result += mat4(0.2618167, -0.023461286, -0.025872704, -0.098774225, -0.10289071, 0.019516798, 0.033110872, 0.070524104, 0.006787337, -0.06548862, -0.03560846, -0.041315302, -0.16141215, -0.0066391975, -0.024049187, 0.020341828) * go_1(-1.0, -1.0);
    result += mat4(-0.33004576, -0.1720343, -0.14238498, -0.06489719, 0.014106532, -0.048020545, 0.07796756, -0.002427037, -0.07170401, -0.08704777, 0.0044125533, -0.1936678, -0.0038521765, -0.19315413, 0.2190321, -0.1806361) * go_1(-1.0, 0.0);
    result += mat4(0.015088045, 0.096322864, -0.14225446, 0.037396125, 0.019981174, -0.022908794, -0.022954296, -0.03462717, -0.00018365827, 0.013131081, -0.04068844, -0.01099443, -0.048370916, -0.08326861, 0.012816074, -0.102100655) * go_1(-1.0, 1.0);
    result += mat4(-0.21280286, -0.04723577, -0.052148126, -0.025716651, -0.007429302, 0.049633507, -0.024000628, -0.0006670736, -0.0012681445, 0.21775532, -0.008545995, 0.0074674445, 0.28267854, 0.09049606, -0.017621454, -0.10476297) * go_1(0.0, -1.0);
    result += mat4(0.15370585, 0.15651466, 0.17587341, 0.2530221, -0.30233905, -0.010466963, -0.03961446, 0.26302356, 0.14261062, -0.027616376, 0.14755665, 0.50057393, 0.11596121, -0.052074503, 0.001024162, -0.021591377) * go_1(0.0, 0.0);
    result += mat4(-0.024108531, -0.014043756, 0.066256784, -0.060170338, 0.118041664, 0.06340023, -0.100185834, -0.13011523, -0.047390442, -0.082114585, 0.090034865, -0.058673847, 0.036025774, 0.06418169, -0.04637225, 0.13829844) * go_1(0.0, 1.0);
    result += mat4(0.04680808, -0.009828551, 0.025119653, 0.029464975, 0.01718148, -0.03782692, 0.012627576, -0.016149811, 0.014192814, -0.05758913, 0.0017353166, 0.0071710213, -0.113246046, 0.07185985, -0.070856795, -0.03698843) * go_1(1.0, -1.0);
    result += mat4(0.059614632, -0.014626234, 0.057541106, -0.013576082, 0.09894395, -0.054895658, 0.08388098, -0.053156056, -0.05603213, -0.10226492, 0.013404318, -0.13214429, -0.01474289, 0.2037808, -0.09227269, 0.17470358) * go_1(1.0, 0.0);
    result += mat4(0.020023841, 0.047627315, 0.0032144252, -0.043644905, 0.044250555, 0.04046534, 0.020747762, -0.049351443, 0.05206553, 0.037587464, -0.031223882, -0.07415587, -0.1302243, -0.12753886, 0.026053386, 0.17779782) * go_1(1.0, 1.0);
    result += vec4(0.114833035, 0.15641062, 0.14629504, 0.17409676);
    return result;
}

//!PARAM ar_strength
//!TYPE float
//!MINIMUM 0.0
//!MAXIMUM 1.0
0.5

//!DESC ArtCNN C4F8 (Depth-to-Space)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *

vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];

    vec2 pp = LUMA_pos * LUMA_size - vec2(0.5);
    vec2 fp = floor(pp);

    vec2 pix_idx[4] = {{0.5, 0.5}, {1.5, 0.5},
                       {0.5, 1.5}, {1.5, 1.5}};

    float luma_pixels[4];

    for (int i = 0; i < 4; i++) {
        luma_pixels[i] = LUMA_tex(vec2((fp + pix_idx[i]) * LUMA_pt)).x;
    }

    float luma_min = min(min(min(luma_pixels[0], luma_pixels[1]), luma_pixels[2]), luma_pixels[3]);
    float luma_max = max(max(max(luma_pixels[0], luma_pixels[1]), luma_pixels[2]), luma_pixels[3]);

    output_pix.x = mix(output_pix.x, clamp(output_pix.x, luma_min, luma_max), ar_strength);
    return clamp(output_pix, 0.0, 1.0);
}
