// MIT License

// Copyright (c) 2024 Joao Chrisostomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(0.05606065, -0.16205873, -0.06744548, 0.102317154) * input_0(-1.0, -1.0);
    result += vec4(0.18186232, 0.29038453, 0.14702061, -0.21449055) * input_0(-1.0, 0.0);
    result += vec4(0.06950167, 0.03814084, -0.13157128, 0.12728645) * input_0(-1.0, 1.0);
    result += vec4(0.04409975, -0.0926296, 0.2295825, -0.3638749) * input_0(0.0, -1.0);
    result += vec4(0.42566386, 0.012273267, 0.444948, 0.7928637) * input_0(0.0, 0.0);
    result += vec4(0.11805404, 0.22412042, -0.1881149, -0.24530376) * input_0(0.0, 1.0);
    result += vec4(-0.017324802, -0.21393242, -0.16470031, 0.07029795) * input_0(1.0, -1.0);
    result += vec4(0.044412095, -0.0391854, 0.14883068, -0.07879292) * input_0(1.0, 0.0);
    result += vec4(-0.15559202, 0.023217754, 0.13561617, -0.05926498) * input_0(1.0, 1.0);
    result += vec4(-0.028808497, -0.0019450301, -0.10220286, -0.02527487);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(-0.13154525, 0.21037114, 0.011722393, -0.22440465) * input_0(-1.0, -1.0);
    result += vec4(-0.09714491, 0.026232203, 0.3571225, 0.010353373) * input_0(-1.0, 0.0);
    result += vec4(-0.106218226, -0.00950985, -0.040633723, 0.045972545) * input_0(-1.0, 1.0);
    result += vec4(0.28405476, -0.07419559, -0.15994127, 0.09044172) * input_0(0.0, -1.0);
    result += vec4(0.41553396, -0.21216054, 0.18486117, 0.22783878) * input_0(0.0, 0.0);
    result += vec4(-0.016779939, 0.2289691, 0.043418467, 0.1276168) * input_0(0.0, 1.0);
    result += vec4(0.07561329, 0.21008377, -0.19550227, -0.0990998) * input_0(1.0, -1.0);
    result += vec4(-0.381104, -0.26568213, 0.01505651, -0.14155756) * input_0(1.0, 0.0);
    result += vec4(-0.013306489, -0.022957662, -0.20943819, -0.023217427) * input_0(1.0, 1.0);
    result += vec4(0.024538051, -0.022951547, -0.053772032, -0.03247772);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.06594259, 0.08844314, 0.008467282, 0.04818018, -0.073808886, 0.07391563, 0.036448322, -0.22967598, 0.06553942, 0.26806965, -0.13101095, -0.1323187, 0.009232229, 0.33652565, -0.011220336, 0.07229487) * input_0(-1.0, -1.0);
    result += mat4(-0.0025739854, -0.13449624, -0.2867584, 0.2121231, -0.3647844, -0.21884026, 0.018203944, -0.328268, 0.04012776, 0.10124714, -0.10839534, -0.14526665, -0.22862774, -0.07146004, -0.16987513, 0.33927646) * input_0(-1.0, 0.0);
    result += mat4(0.33105138, 0.18428946, 0.15685965, -0.3676974, -0.04298255, -0.06393717, -0.12215172, 0.1457391, 0.061098475, -0.4746089, 0.20543997, 0.19260743, -0.13967672, -0.05231207, -0.042586863, 0.2820359) * input_0(-1.0, 1.0);
    result += mat4(-0.18186979, 0.05814903, -0.05218185, 0.048256982, 0.12577899, 0.7483248, -0.21242529, 0.14597031, 0.18533711, -0.24412294, 0.14948067, 0.09656383, 0.0379078, -0.79851115, 0.11392025, 0.18553461) * input_0(0.0, -1.0);
    result += mat4(0.32984897, 0.013500975, 0.22928487, 0.006940548, 0.028204236, 0.13987504, 0.56214154, 0.06605242, 0.4441574, 0.1873364, -0.6591146, 0.04206157, 0.6767738, -0.02224178, -1.3581371, -0.41034782) * input_0(0.0, 0.0);
    result += mat4(0.40110853, 0.06286518, 0.39153686, -0.10228458, -0.03963317, -1.0480107, 0.8104508, 0.23939238, 0.15553558, -0.07798022, -0.046337992, -0.34754607, -0.32043943, 0.24737337, 1.0706012, 0.3685816) * input_0(0.0, 1.0);
    result += mat4(-0.0085030645, 0.039913792, -0.16056994, -0.057952512, -0.1395646, 0.19081554, -0.066106595, -0.13234973, -0.048613563, -0.5834329, -0.1032812, -0.0045735748, 0.16082332, -0.13591667, 0.03910853, -0.2257111) * input_0(1.0, -1.0);
    result += mat4(-0.05324928, 0.21076253, -0.018257262, 0.008137617, -0.21106, -0.16975741, 0.2719094, -0.22221205, 0.0332104, -0.19850476, -0.015011479, 0.23709565, 0.4547168, 0.36082402, 0.04125202, 0.41774184) * input_0(1.0, 0.0);
    result += mat4(-0.06539315, -0.1690578, 0.08356363, 0.06716718, 0.027857065, 0.82044756, 0.0053482573, 0.22246069, 0.02040609, 0.23231982, 0.033907983, -0.15807183, 0.009327284, 1.0373368, -0.027137283, 0.10026887) * input_0(1.0, 1.0);
    result += mat4(-0.033140372, -0.019162025, -0.023492051, 0.102415234, 0.16883849, 0.101166986, -0.09751196, 0.24742825, -0.11643518, -0.20248686, 0.09999785, 0.050725285, 0.082239226, 0.23595305, -0.0382576, 0.3361936) * input_1(-1.0, -1.0);
    result += mat4(0.26911077, -0.49020717, 0.16752882, 0.5830792, 0.14273839, -0.24592054, 0.22822428, 0.066750266, 0.21663392, -0.22441864, 0.2681312, 0.41979396, -0.18477513, -0.30320314, 0.118141666, -0.09004165) * input_1(-1.0, 0.0);
    result += mat4(-0.05815557, -0.46843284, -0.18499082, -0.2160416, -0.050546166, -0.38648775, -0.5071973, -0.5185213, -0.10575217, -0.2846546, -0.050582774, 0.4415176, -0.07491562, 0.18484713, -0.21338953, -0.13455024) * input_1(-1.0, 1.0);
    result += mat4(-0.22268617, -0.38372558, -0.16921374, -0.08547124, -0.23846504, 0.5942157, 0.14344679, -0.2707331, -0.44767332, -0.3169693, -0.24426585, -0.06118275, -0.0729386, -0.037228126, 0.06507464, 0.0076635983) * input_1(0.0, -1.0);
    result += mat4(0.5899209, 0.85355294, -0.71807456, 0.055323463, 0.084752925, -0.63000685, 0.9431681, -0.5815521, 0.055357195, -0.20866558, -0.38637778, 0.056092177, 0.04166646, 0.4113294, 0.05193345, 0.05938968) * input_1(0.0, 0.0);
    result += mat4(0.1562472, -0.08454525, 0.5150156, -0.39505386, -0.08443745, 0.6538523, 0.00041182936, 0.2642864, -0.1136141, 0.4831204, -0.8822545, 0.17224139, -0.11878744, -0.4249068, 0.44174317, -0.051173467) * input_1(0.0, 1.0);
    result += mat4(0.052244, -0.18406932, -0.13466315, 0.032541633, -0.23955244, 0.33760545, -0.017473225, 0.07871805, 0.04402134, -0.113244265, 0.05816643, 0.16930616, -0.026019525, 0.13451402, 0.13394172, 0.00031216818) * input_1(1.0, -1.0);
    result += mat4(0.124531046, -0.2688899, -0.28220284, -0.047908753, -0.5049498, 0.12190054, 0.19792315, -0.0026191012, -0.23047186, -0.27990168, -0.15004687, -0.37891105, 0.254351, 0.063823074, 0.023492018, 0.26755026) * input_1(1.0, 0.0);
    result += mat4(0.1731557, -0.0841505, 0.3327864, -0.089117266, -0.11797788, 0.47555044, -0.22210021, -0.019596772, -0.04726157, -0.28722098, -0.021370605, -0.04637979, 0.19712527, -0.039468694, -0.04516379, 0.37736818) * input_1(1.0, 1.0);
    result += vec4(0.08778424, -0.073937215, -0.09435107, 0.22818378);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.0021582565, -0.22699508, -0.030275995, -0.14288013, -0.040258944, 0.06518147, -0.039108302, 0.0868597, 0.05119967, 0.23472577, 0.0667181, 0.41770715, 0.16437882, -0.7233007, -0.1005974, 0.13744535) * input_0(-1.0, -1.0);
    result += mat4(0.18252012, -0.035088897, -0.06800512, -0.062662706, -0.31290275, -0.20951368, -0.15828873, -0.38042054, -0.22148538, 0.19237393, -0.07749552, -0.27006102, 0.25913042, -0.04529954, -0.109627336, -0.18988605) * input_0(-1.0, 0.0);
    result += mat4(0.021657966, -0.34150913, -0.016446218, 0.034939975, 0.01057524, 0.18941021, 0.21164355, 0.2871199, 0.15004617, 0.09692896, 0.09334126, 0.16371831, 0.2192829, 0.3767183, 0.08948799, 0.4878636) * input_0(-1.0, 1.0);
    result += mat4(0.08598265, 0.21528739, -0.060556043, 0.2448572, 0.16228655, 1.0221566, -0.12277239, 0.7489926, -0.15710256, -0.34647703, -0.02842962, -0.7692237, -0.14804, -0.95037735, -0.06975693, -0.75975364) * input_0(0.0, -1.0);
    result += mat4(0.21449277, -0.019282194, -0.21116245, 0.10577392, -0.22839446, -0.49031383, -0.18198444, -0.57847977, 0.58208644, 0.123668626, -0.15893054, 0.09726401, 0.745819, 0.12091401, -0.97963834, 0.48668253) * input_0(0.0, 0.0);
    result += mat4(0.27515, 0.13579416, -0.17149937, 0.080348924, 0.30647624, 0.29380515, 0.0123141585, -0.2996903, -0.16142437, -0.24420652, -0.03369531, -0.16828257, 0.21744539, 0.8613438, 0.1188845, -0.08174539) * input_0(0.0, 1.0);
    result += mat4(-0.124210455, -0.0152182765, -0.01384309, 0.2593593, 0.023866165, 0.15552932, 0.08481831, 0.16932385, -0.0045048194, 0.00487204, 0.028037684, 0.05574065, -0.13245218, 0.11432855, 0.023380155, 0.029882638) * input_0(1.0, -1.0);
    result += mat4(0.084487356, 0.032728266, 0.16465339, -0.012569381, -0.038299687, -0.007302244, -0.26452634, 0.21526876, 0.0087123765, -0.20129868, 0.4582749, -0.1572839, -0.29673055, 0.8449196, 1.646489, -0.31655172) * input_0(1.0, 0.0);
    result += mat4(0.17736588, -0.09286208, 0.11094182, 0.1458055, -0.17888997, 0.3248054, 0.034723584, 0.027289065, -0.027274653, 0.27482498, 0.11344091, -0.1274814, -0.11355779, 0.08802145, 0.22959612, -0.26544535) * input_0(1.0, 1.0);
    result += mat4(0.025846941, -0.57764286, -0.063148476, -0.17561592, 0.0016715724, 0.0029825785, 0.025180325, 0.11909161, -0.19540799, -0.22007301, 0.0027740458, -0.41395006, 0.038252022, -0.20716728, -0.009405709, 0.010592207) * input_1(-1.0, -1.0);
    result += mat4(0.0058889766, -1.1135428, 0.19379932, -1.6274594, 0.1395895, -0.60648096, -0.103424355, -1.4645251, 0.29046735, -0.48737398, 0.20666483, 0.0637994, 0.017118895, -0.09917521, -0.0659956, -0.52184623) * input_1(-1.0, 0.0);
    result += mat4(0.091010034, 0.43429255, -0.020638738, 0.4800069, -0.033330377, 0.47299257, -0.09648123, 0.4861576, -0.15948611, -0.16293935, -6.6547545e-05, -0.44012403, -0.29025212, -0.18129429, -0.11571864, 0.070170045) * input_1(-1.0, 1.0);
    result += mat4(-0.21300578, -0.5308176, -0.12733178, -0.06340011, -0.07782353, 0.6645872, -0.37219152, 0.70237094, -0.082604, -0.49339563, -0.12808312, -0.03966944, -0.028281309, 0.30496028, -0.07137646, 0.38328975) * input_1(0.0, -1.0);
    result += mat4(0.64527076, -0.00362749, -1.3174168, 0.5678162, -0.23883417, 0.2221812, -0.25892588, 0.024697287, -0.19011915, -0.5333608, -0.46653602, -0.17219044, 0.14044495, 0.030214615, -0.113499925, -0.017785791) * input_1(0.0, 0.0);
    result += mat4(0.090938315, 0.2170637, -0.095372364, 0.3049883, -0.16972181, -0.29251045, 0.45511118, 0.0068699373, -0.07839834, 0.59401333, -0.20585446, 0.22361386, 0.06478358, 0.035683267, -0.09820405, -0.3383976) * input_1(0.0, 1.0);
    result += mat4(-0.055541232, 0.03968253, 0.12995407, -0.18410888, 0.08200062, 0.16906402, 0.2796823, 0.18841113, -0.0020307514, -0.08725308, 0.1430103, -0.15085414, -0.11999434, 0.033208683, 0.13641909, 0.14593361) * input_1(1.0, -1.0);
    result += mat4(-0.0628038, 0.14314896, 0.13662781, -0.30822948, 0.2559769, 0.0673314, -0.39723012, 0.2312215, 0.2229833, -0.012280569, -0.8243618, -0.020737197, 0.22401172, 0.1396876, 0.1195511, -0.0078107174) * input_1(1.0, 0.0);
    result += mat4(-0.13028204, 0.092159525, 0.3677944, -0.062309522, 0.11230734, 0.23820896, -0.2715034, 0.04957954, -0.05119263, -0.6508936, -0.12699214, 0.016720204, -0.005322899, -0.04705473, 0.11026014, 0.075259894) * input_1(1.0, 1.0);
    result += vec4(0.09492787, -0.04549154, -0.025774121, -0.09115732);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.13667068, 0.067533456, -0.022799028, 0.021029323, -1.3019131, -0.0013282929, 0.00897113, -0.07159167, -1.3727299, 0.023227375, 0.038380355, 0.006837613, -0.87841916, 0.07358155, 0.01932685, 0.012155106) * input_0(-1.0, -1.0);
    result += mat4(0.5305516, 0.31205127, -0.012231441, -0.14763694, 0.11638059, 0.0767181, -0.060814403, 0.14392833, -0.21363908, 0.10529863, 0.039073654, 0.019442128, -0.11408677, 0.11670204, 0.09717543, 0.09115577) * input_0(-1.0, 0.0);
    result += mat4(-0.34241208, 0.29112753, -0.038104016, 0.039165493, 0.08656464, 0.1023524, -0.033264276, 0.02762459, 0.07534694, 0.03788351, -0.0027545707, 0.03431059, 0.07412195, 0.12982658, -0.0089838, 0.039438937) * input_0(-1.0, 1.0);
    result += mat4(0.2302706, 0.105864294, 0.07461815, 0.34920728, 0.07858687, 0.0279209, 0.034542464, 0.3554487, -0.0700392, -0.93343884, 0.035005033, -0.7602079, -0.11179086, 0.024388338, -0.035575017, 0.14150676) * input_0(0.0, -1.0);
    result += mat4(0.23330979, -0.0042668884, 0.8447579, 0.5646672, -0.0053307624, 0.0016708021, 0.08893375, -0.16112877, -0.24966553, -1.4292997, 0.0079944115, -0.08841313, 0.108680464, 0.5354662, -0.017287286, 0.24665548) * input_0(0.0, 0.0);
    result += mat4(0.257738, 0.5371163, 0.0075380765, 0.30282772, -0.037418254, -0.0039506834, 0.029542765, 0.037118047, -0.03062597, 0.009852057, -0.012217395, 0.01574319, 0.075263046, 0.0117496895, 0.006556963, -0.05512095) * input_0(0.0, 1.0);
    result += mat4(-0.06015858, 0.051619474, -0.040341977, -0.13826716, 0.018098874, 0.045147724, 0.005896552, -0.023308901, -0.04857987, -0.054954555, -0.02487553, -0.41960275, -0.3186589, -0.060833447, 0.026432574, -0.100811735) * input_0(1.0, -1.0);
    result += mat4(0.13158084, 0.09979598, -0.14192282, 0.033074696, 3.975119e-05, 0.05197559, 0.0022722888, 0.05597159, 0.044058062, 0.03572001, -0.010155915, 0.014612242, 0.035182543, 0.017177498, 0.0012163284, -0.113811314) * input_0(1.0, 0.0);
    result += mat4(-0.088957936, 0.045855064, 0.10618237, -0.03450991, 0.004376752, 0.05906014, 0.010049372, 0.022250991, 0.020586923, 0.01669739, -0.0070233345, 0.0681723, 0.0019507038, -0.091782704, 0.024773847, 0.025175625) * input_0(1.0, 1.0);
    result += mat4(-2.681774, 0.058628768, 0.02794684, -0.051875833, -2.3029003, 0.025190629, 0.02651773, -0.0047408757, -2.8976002, 0.005710825, 0.008682319, 0.0045432947, -0.01858988, 0.018211367, -0.026394835, 0.082037985) * input_1(-1.0, -1.0);
    result += mat4(-0.26356816, -0.602481, 0.016119186, 0.008631943, 0.18766147, 0.08497548, 0.057496898, -0.06271687, -0.47221336, -1.2087919, -0.0055924444, -0.30473, -0.10820933, -0.13215134, -0.11528626, 0.06680031) * input_1(-1.0, 0.0);
    result += mat4(-0.0035995776, -0.30420798, -0.06836157, 0.018080283, 0.002759099, 0.009358363, 0.035836842, -0.0046200715, -0.020312868, -0.13192041, 0.04322216, 0.009453677, -0.09987285, -0.15058753, -0.037892062, -0.0022225839) * input_1(-1.0, 1.0);
    result += mat4(0.0049456637, -0.3439602, 0.004675881, -0.72090656, -0.18134755, -0.05564239, -0.035117067, 0.2197315, 0.053044043, -0.011217851, 0.0018477135, -0.23087668, 0.24148296, 0.0994056, -0.016144902, -0.2954584) * input_1(0.0, -1.0);
    result += mat4(0.45102608, -0.4618013, 0.39617175, -0.100976236, 0.068222456, 0.4814056, -0.06797371, 0.2449423, -0.019406583, -1.4085536, -0.087404765, -0.45100138, 0.35678446, 1.718039, 0.0921695, 0.57070947) * input_1(0.0, 0.0);
    result += mat4(0.13617846, -0.027422266, -0.027276644, -0.3738862, 0.02611538, 0.23107728, -0.042570993, -0.056127112, -0.008454396, -0.011804577, 0.029547757, -0.058072932, 0.015722105, 0.053097166, -0.04933669, 0.10536835) * input_1(0.0, 1.0);
    result += mat4(-0.4805259, -0.10749545, -0.17259704, -0.23315546, -0.050693434, 0.016895086, 0.00081135496, 0.02813612, 0.03222541, -0.00923465, -0.009136517, 0.053616233, 0.1417563, 0.019592382, -0.052866872, -0.11661173) * input_1(1.0, -1.0);
    result += mat4(-0.072461635, 0.33643568, 0.0025364272, 0.26527664, -0.07238174, 0.089160815, 0.008881339, 0.2920773, 0.0035717466, 0.02418333, -0.0140101435, 0.00035471108, -0.18540157, -0.11956355, 0.055458836, -0.13237678) * input_1(1.0, 0.0);
    result += mat4(-0.023736713, -0.090327874, 0.031330124, 0.120645806, 0.03565922, -0.07272249, -0.020664714, 0.0015661276, 0.005453536, 0.033700425, -0.021017697, 0.025242593, -0.0031529258, -0.04395041, 0.015478855, -0.034154583) * input_1(1.0, 1.0);
    result += vec4(-0.009901888, -0.09567268, 0.017869817, -0.0058747716);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.38015732, -0.18393269, -0.1547847, -0.1594678, -0.30785206, -0.084007606, -0.11758177, 0.008061204, -0.15086745, 0.06901361, -0.074648306, -0.11314113, 0.0924419, 0.09375099, -0.06282585, 0.12292227) * input_0(-1.0, -1.0);
    result += mat4(0.42410183, 0.013898144, -0.26671526, 0.2013842, -0.49090144, -0.07811747, -0.28526878, 0.19329838, -0.13637832, 0.031755272, -0.18504561, -0.106808655, -0.12190091, 0.018534364, 0.10898488, 0.094484866) * input_0(-1.0, 0.0);
    result += mat4(-0.14727592, -0.12213259, -0.4794863, -0.01256218, -0.2685752, 0.06853807, -0.016326457, 0.07010527, -0.042165264, 0.008545573, -0.021250404, 0.045128927, -0.020529749, 0.056760706, -0.05575089, 0.060253356) * input_0(-1.0, 1.0);
    result += mat4(-0.42991692, -0.068828575, -0.005420094, 0.0138886385, -0.4002142, -0.087656446, -0.1423702, 0.07819953, 0.16598848, 0.004040783, 0.12764655, -0.86233014, 0.08596066, 0.072358415, 0.031731695, 0.1355885) * input_0(0.0, -1.0);
    result += mat4(0.29675892, 0.15439041, 0.29374057, -0.59707683, -0.7022859, 0.049251717, -0.1927395, 0.083767645, 0.15153293, -0.57293487, 0.19683513, -0.5527252, -0.3742, 0.07372936, -0.0792917, 1.0093765) * input_0(0.0, 0.0);
    result += mat4(-0.51850975, -0.15180588, -0.14131851, 0.715843, -0.4254029, -0.03423438, -0.02162415, -0.020898031, -0.01783912, 0.008765372, 0.015879294, 0.003343272, -0.016934063, -0.1711864, 0.036528736, -0.08159079) * input_0(0.0, 1.0);
    result += mat4(-0.07460229, 0.16047788, -0.061096963, 0.038819697, -0.16067861, 0.05155704, -0.057962496, 0.07117835, 0.10111474, -0.5971459, -0.15535325, -0.048756823, 0.017128523, 0.32173708, 0.02781437, 0.02321141) * input_0(1.0, -1.0);
    result += mat4(-0.10282777, -0.082551025, 0.01982406, -0.105103776, -0.38932762, 0.037649192, -0.05091734, -0.04681181, -0.15179972, -0.20570126, -0.101263985, -0.0046411348, 0.15343277, 0.7412764, 0.08921953, 0.20788106) * input_0(1.0, 0.0);
    result += mat4(0.20058712, 0.36945233, 0.086931065, -0.13876933, -0.115117714, 0.040454246, 0.017513692, 0.022879468, -0.05437523, -0.06370174, 0.013068221, 0.0012678807, 0.14546847, 0.13751608, 0.09565453, 0.026663037) * input_0(1.0, 1.0);
    result += mat4(0.20346577, 0.2787533, -0.052239124, 0.18190007, 0.058262657, 0.075910315, -0.028198667, 0.10897956, -0.25709754, 0.08038266, -0.022517817, 0.003988385, 0.011254892, 0.012598208, 0.11515845, -0.074088715) * input_1(-1.0, -1.0);
    result += mat4(-0.008068561, -0.17501271, 0.60204756, -0.6092965, 0.082336806, 0.032336246, -0.12436695, 0.1549061, 0.11728747, 0.22848774, 0.36600655, -0.6717451, 0.3535411, -0.05444859, 0.34920567, -0.2542004) * input_1(-1.0, 0.0);
    result += mat4(-0.019547964, 0.12630098, 0.40593323, 0.3317831, 0.12263496, 0.021103652, -0.03400826, 0.06348112, 0.062435973, 0.21929573, 0.11639971, 0.115208685, 0.23596199, 0.0033169189, 0.27788118, -0.15258421) * input_1(-1.0, 1.0);
    result += mat4(0.7466271, 0.09097296, 0.4451607, -0.12635611, 0.24932128, 0.17537625, -0.11097611, 0.08152199, -0.13157107, 0.13542488, -0.00071864564, 0.13277778, 0.21461886, -0.23247181, 0.24121983, -0.089746006) * input_1(0.0, -1.0);
    result += mat4(0.09219799, 0.19710743, -0.45800638, -0.10900867, 0.3040143, 0.32159567, -0.06094884, 0.4114139, 0.19907092, -1.3955475, 0.056642488, -0.1810288, -0.07224381, -0.23837133, -0.10873456, 0.50300163) * input_1(0.0, 0.0);
    result += mat4(-0.19586933, 0.2372145, -0.014508897, 0.3077701, 0.41354486, -0.06495754, -0.08243583, 0.0194253, -0.19085, 0.3087831, 0.052209217, 0.090024516, 0.09804168, -0.20347022, -0.04887634, -0.07820874) * input_1(0.0, 1.0);
    result += mat4(0.04085486, -0.46960196, -0.17451671, 0.103721984, 0.075427, 0.06759797, 0.055815667, -0.003972988, -0.038966175, -0.07387682, 0.002787154, 0.031976663, 0.12944275, 0.03149534, 0.025558066, -0.0937732) * input_1(1.0, -1.0);
    result += mat4(-0.34796795, -0.37092847, -0.090601325, 0.24877031, 0.29196537, 0.44767043, 0.120949976, 0.083649054, -0.006704199, -0.18182135, -0.022280801, 0.03083207, 0.006258043, 0.87924826, 0.22169217, -0.09494702) * input_1(1.0, 0.0);
    result += mat4(0.30684933, 0.20337546, 0.092574805, -0.13798112, 0.4590427, -0.24060947, 0.016346876, 0.025576275, -0.011400425, 0.0004549789, -0.004965095, 0.024532838, 0.20992817, -0.33323017, 0.11103213, 0.033744406) * input_1(1.0, 1.0);
    result += vec4(0.0059735756, -0.22812925, -0.037011903, -0.21520045);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.0070985537, 0.02600079, -0.00208699, 0.038820036, 0.3295426, -0.12428512, 0.08168335, -0.058921196, 0.11937845, 0.0127146235, 0.07867038, -0.008357948, -0.06017473, -0.02166624, -0.027799409, -0.024714734) * input_0(-1.0, -1.0);
    result += mat4(0.028356329, 0.0050110985, 0.018132946, -0.031950846, -0.38766724, -0.028596057, 0.09386611, -0.07538322, -0.35519534, 0.0032216888, -0.08100125, 0.03897166, 0.21419908, 0.09194637, 0.11949416, 0.010543576) * input_0(-1.0, 0.0);
    result += mat4(0.0070690433, 0.023493944, -0.009152445, -7.5282616e-05, -0.046106398, 0.013705817, 0.043950867, -0.03961017, 0.032763354, -0.31359562, -0.27217016, 0.061095677, 0.011387756, -0.007877569, -0.024899617, 0.044499896) * input_0(-1.0, 1.0);
    result += mat4(0.07895597, 0.038818058, -0.077417634, 0.029355634, -0.24461138, -0.22502965, 0.03875693, -0.17380646, -0.48070797, 0.011012176, -0.105192944, -0.10758922, -0.039956477, -0.053521298, -0.08274836, -0.031678688) * input_0(0.0, -1.0);
    result += mat4(-0.30849996, -0.14609131, 0.2969599, -0.10943722, -0.40091205, 0.6186181, -0.88953567, 0.237161, 0.5841884, 0.64172447, 0.1761364, 0.64947426, -0.15445487, 0.14551115, -0.39790234, -0.05661819) * input_0(0.0, 0.0);
    result += mat4(-0.0056178183, -0.37201715, -0.3238909, -0.029264826, 0.04105844, 0.34348175, 0.09424736, 0.03975933, 0.056061123, -0.41768557, 0.27611682, 0.009711023, 0.04476853, 0.25810376, -0.013212214, 0.103236035) * input_0(0.0, 1.0);
    result += mat4(0.023195894, 0.078393996, 0.10165408, 0.0073417895, 0.027375087, -0.15101187, 0.11493096, -0.13631874, 0.046391934, 0.034191683, 0.013451965, 0.042781226, -0.03311223, -0.04532368, 0.015691802, -0.0011076283) * input_0(1.0, -1.0);
    result += mat4(-0.13899961, 0.12445277, -0.018088164, -0.49314657, 0.072528, -0.14986777, -0.41114497, 0.020059938, 0.059227366, -0.12260756, -0.00048755828, 0.0005314562, -0.11636157, -0.11803603, 0.018329866, -0.014243153) * input_0(1.0, 0.0);
    result += mat4(-1.3259492, -2.3684647, -0.31274483, 0.27968222, -0.11211984, 0.3540704, -0.014986274, 0.022272686, -0.074116856, 0.14576161, -0.02183452, 0.0055228462, 0.009839971, 0.00015656115, 0.18693879, -0.009310159) * input_0(1.0, 1.0);
    result += mat4(-0.03608175, 0.0066164676, -0.015701784, 0.0028390542, -0.15234551, -0.031782698, 0.009982443, -0.006262573, 0.054091424, -0.016805606, 0.037112296, -0.00057638506, 0.05052618, -0.03274129, 0.12217699, -0.04504708) * input_1(-1.0, -1.0);
    result += mat4(0.23349217, 0.27743983, -0.107654355, 0.13455857, 0.124387994, 0.04286234, -0.061164092, 0.00089737365, -0.13051337, -0.06449722, 0.06336918, -0.06807787, 0.090930544, 0.09869014, 0.12558368, 0.009852901) * input_1(-1.0, 0.0);
    result += mat4(0.17617431, 0.1849169, 0.1871417, 0.036814228, 0.020530734, 0.0018506557, 0.13120042, -0.0012617215, 0.022975186, -0.041817702, -0.11607411, 0.03634303, 0.022581534, 0.06842587, 0.03808461, -0.019735703) * input_1(-1.0, 1.0);
    result += mat4(0.30071732, 0.19182467, 0.028602522, 0.1497835, 0.056852072, 0.07998185, 0.14600183, 0.067909725, 0.0014604393, 0.04805687, 0.034247022, -0.026952857, 0.33274338, 0.13608356, -0.014197677, 0.024304545) * input_1(0.0, -1.0);
    result += mat4(0.38710907, -0.08932648, 0.29991022, 0.024587868, 0.070201, 0.14537866, 0.16623583, -0.031784046, -0.036709312, -0.30532774, 0.26729456, -0.015530646, -0.3935933, -0.24525605, -0.046038944, -0.011789185) * input_1(0.0, 0.0);
    result += mat4(0.17927898, -0.11730548, 0.11539937, 0.03558019, -0.0064122123, -0.058276504, 0.011872111, 0.00063731964, -0.1355893, 0.309189, 0.202823, -0.0052646496, -0.19095427, -0.2914908, -0.3786598, -0.027367344) * input_1(0.0, 1.0);
    result += mat4(0.2714345, 0.062151622, 0.0348113, 0.017956229, 0.091410205, 0.040365957, 0.08458409, 0.038270887, -0.096196525, -0.020448064, -0.10816543, -0.05323189, -0.029764995, 0.08880895, -0.04703615, 0.059545603) * input_1(1.0, -1.0);
    result += mat4(0.1672253, 0.085056834, -0.15757929, -0.061859652, -0.0025155193, 0.056047365, 0.07026058, -0.041253563, -0.1465473, -0.015146781, 0.0570663, 0.089016326, -0.117212236, -0.30611503, 0.020466873, -0.011299368) * input_1(1.0, 0.0);
    result += mat4(0.0161081, 0.2968023, 0.09074087, 0.0022714436, -0.040911123, 0.18442482, 0.038199745, -0.021049568, -0.029118124, -0.16271757, 0.09373028, 0.020308672, 0.041512523, 0.064227104, -0.10719809, -0.007887529) * input_1(1.0, 1.0);
    result += vec4(-0.010642404, -0.0001369307, 0.06662433, -0.032345448);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.010435489, -0.012290149, 0.030600797, 0.03422546, -0.1603496, -0.13153903, -0.09238054, -0.10605299, 0.01701921, 0.028737396, -0.031628057, -0.022696689, 0.022314467, 0.08399061, -0.06453739, 0.059155468) * input_0(-1.0, -1.0);
    result += mat4(-0.091358736, 0.026512044, -0.1310214, 0.015748115, -0.037441142, 0.11712056, 0.0115214195, -0.16613005, -0.06814702, -0.072561145, 0.0015191347, -0.13710453, 0.38318807, 0.11886445, 0.16339342, 0.10333218) * input_0(-1.0, 0.0);
    result += mat4(0.1539193, -0.039283305, 0.083381385, -0.028913414, -0.15747997, -0.010782647, -0.048133828, -0.08944418, -0.58064204, 0.08174951, 0.14438874, 0.0068867845, 0.24628697, 0.35882616, 0.0040151803, 0.14108351) * input_0(-1.0, 1.0);
    result += mat4(0.04536907, -0.018215826, 0.12655823, -0.005772587, -0.06676229, 0.13469724, -0.08453237, 0.19447628, -0.000795296, 0.19245882, -0.046199087, -0.01675303, -0.13810977, 0.0484854, -0.10374382, 0.013785254) * input_0(0.0, -1.0);
    result += mat4(-0.1982508, -0.092975006, -0.17019634, -0.18815167, 0.2238102, 0.4856464, 0.20004287, 0.36243427, 0.5794155, -0.050156824, 0.65230745, 0.5954336, -0.0017916373, 0.49791393, 0.23064113, 0.3919504) * input_0(0.0, 0.0);
    result += mat4(-0.68819785, 0.1404026, 0.22873455, -0.09374077, -1.1479936, -0.20491172, -0.33548242, -0.19864263, -0.021892803, -0.21953732, -0.6427541, 0.05677691, -0.924612, 0.3351333, -0.05837024, 0.1002982) * input_0(0.0, 1.0);
    result += mat4(0.011669392, -0.00591039, -0.09642594, -0.028316965, -0.039361697, 0.013215156, -0.12715453, 0.023562048, 0.020455409, -0.030239549, 0.01233043, 0.01373305, 0.08403332, -0.08162924, 0.12466479, -0.054847065) * input_0(1.0, -1.0);
    result += mat4(0.05969248, 0.855306, -0.23090087, 0.91456443, -0.04624198, 0.11861927, 0.29584172, 0.08748869, -0.17340887, 0.053424694, 0.016682956, 0.072910525, -0.09576646, 0.008433973, 0.15408155, -0.05887311) * input_0(1.0, 0.0);
    result += mat4(-1.2718468, -1.1366442, -0.9962998, -0.07283597, 0.31027254, -0.15839316, -0.2014646, -0.06026341, 0.23409042, -0.011473531, -0.07386561, -0.071574815, 0.3782846, 0.0044555296, 0.043162677, 0.009676134) * input_0(1.0, 1.0);
    result += mat4(-0.17323582, -0.0041561536, 0.009204606, 0.025013937, 0.022774778, 0.0011783292, -0.0044657295, 0.0012126497, 0.049153123, -0.045056462, -0.033516087, -0.024430443, -0.0045468058, -0.0462339, 0.077557184, -0.011779272) * input_1(-1.0, -1.0);
    result += mat4(0.09988373, 0.24633695, 0.04861228, 0.2097499, 0.03953716, 0.06478535, -0.0041505503, 0.08605636, -0.014131002, -0.02370514, -0.027482476, -0.10623286, 0.092041455, 0.072903216, 0.11389775, 0.060071822) * input_1(-1.0, 0.0);
    result += mat4(-0.061448112, 0.054728832, 0.028691776, 0.08016383, -0.051900122, -0.078819394, -0.11638235, -0.0307617, -0.031223688, 0.08854844, 0.07891451, 0.024814121, 0.18970338, -0.098898694, -0.17250235, -0.06512328) * input_1(-1.0, 1.0);
    result += mat4(0.16209103, -0.030176736, 0.19167103, -0.048990544, 0.026587598, -0.040621176, 0.07570658, -0.0038789676, 0.12079031, 0.04507705, 0.050591026, 0.05015075, 0.44889084, 0.1855035, 0.4373436, -0.058819365) * input_1(0.0, -1.0);
    result += mat4(-0.81741273, 0.20716527, -0.16245711, 0.1597044, 0.08694008, 0.4226398, -0.22830458, 0.10705376, -0.27176958, -0.2947007, -0.12966226, 0.21339767, -0.903067, 0.45351747, -0.52588207, 0.021724751) * input_1(0.0, 0.0);
    result += mat4(-0.44836205, 0.18909602, 0.20103976, 0.023685979, -0.2859706, -0.10437771, 0.086285606, -0.15357105, 0.73743045, 0.051955495, -0.11347591, 0.088535585, -1.024208, 0.16432199, -0.6319601, 0.014209002) * input_1(0.0, 1.0);
    result += mat4(0.0032629305, -0.0027100733, 0.024701253, 0.038315628, 0.06615342, -0.02895901, -0.046319216, 0.04346509, -0.09847817, 0.085369155, -0.06267896, 0.10701257, 0.1870679, -0.0025317967, 0.17929377, -0.01821012) * input_1(1.0, -1.0);
    result += mat4(-0.27519646, 0.30046502, 0.019964444, 0.1511195, 0.053623665, 0.102747984, -0.0985222, 0.07996473, -0.040675975, -0.26744905, 0.11819283, -0.05644041, -0.21070345, -0.17908493, 0.13724236, -0.07664975) * input_1(1.0, 0.0);
    result += mat4(0.17637536, 0.1407843, -0.08612013, 0.027836708, 0.17454778, 0.03472037, -0.15199006, -6.347784e-05, 0.14016129, -0.14100863, 0.036830585, 0.043988384, -0.19197194, 0.05256982, -0.116920024, -0.042196907) * input_1(1.0, 1.0);
    result += vec4(0.021091787, -0.007124719, -0.03794402, -0.02659726);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.045872603, -0.013360952, -0.21528058, -0.04341348, 0.20011494, -0.0039774133, 0.73287374, -0.08705127, -0.10571429, -0.008152644, -0.08491046, -0.022277527, -0.12619609, 0.025036456, -0.2925827, 0.17866002) * input_0(-1.0, -1.0);
    result += mat4(0.11752347, -0.0034036986, 0.1509092, 0.05418407, 0.24697661, 0.05423829, 0.75501615, 0.29861212, 0.048396807, 0.013856333, -0.062187564, 0.010888966, 0.17172384, -0.05317516, 0.2264286, -0.38812524) * input_0(-1.0, 0.0);
    result += mat4(-0.12081593, -0.12563051, -2.218435, 0.067961596, -0.20268917, 0.05771226, -3.1264591, -0.10103711, 0.13336375, 0.026714386, -0.9032923, -0.026836123, 0.06265892, 0.046279546, -5.192173, 0.28562385) * input_0(-1.0, 1.0);
    result += mat4(0.016418427, 0.0089459205, -0.00024578554, 0.044994038, 0.34323084, 0.014672184, -0.018641071, 0.024785617, -0.18145616, -0.0005591351, -0.056359727, 0.002908276, -0.62397844, -0.02563044, 0.039604284, -0.027371278) * input_0(0.0, -1.0);
    result += mat4(-0.117967844, 0.02390322, 0.019975433, -0.3295419, 0.15391009, -0.14602545, -0.042934764, 0.3078264, 0.13042429, -0.08979322, 0.06490823, -0.23278262, 0.9603832, 0.2249703, 0.23690754, -0.35909343) * input_0(0.0, 0.0);
    result += mat4(0.18686746, 0.10394145, -0.15626894, 0.35111552, -0.1835579, 0.03658603, -0.0119643565, -0.12591872, 0.14933929, -0.030452432, 0.02084763, 0.13445278, -0.07620482, 0.19965068, 0.30644524, 0.54308987) * input_0(0.0, 1.0);
    result += mat4(0.048201635, 0.0030640154, -0.011221265, 0.040292118, 0.06906272, -0.009627841, -0.023413526, 0.024639761, -0.18784958, -0.032785505, 0.010028, 0.014443971, -0.16538402, 0.0068325414, 0.0022849487, 0.0093853315) * input_0(1.0, -1.0);
    result += mat4(-0.12068371, -0.0036357436, 0.049579836, 0.009243076, 0.1551515, 0.09516125, -0.031396836, 0.06718229, -0.028687406, 0.09314836, -0.05091233, -0.05719645, 0.025485037, -0.20171495, -0.026608845, -0.0013250845) * input_0(1.0, 0.0);
    result += mat4(-0.02372904, 0.070060894, 0.06536844, 0.106628105, -0.023279758, -0.031067716, -0.0001663207, 0.011403166, 0.15030955, 0.11072583, -0.032506697, 0.05699147, 0.22060136, -0.43487975, -0.049841143, 0.07900743) * input_0(1.0, 1.0);
    result += mat4(0.018122122, -0.031205533, -0.3523223, 0.11421868, -0.11747307, 0.012292074, -0.17866403, 0.037930742, 0.4075802, -0.005495832, -0.08719674, 0.14405136, 0.034037385, -0.022342382, 0.05996061, -0.021240007) * input_1(-1.0, -1.0);
    result += mat4(-0.155334, -0.052440606, -0.0833563, -0.19363973, -0.06709741, 0.027809054, -0.96362126, 0.032010984, -0.1829417, 0.09345619, -0.549661, 0.19637746, -0.13683867, -0.04934959, -0.455418, -0.114646174) * input_1(-1.0, 0.0);
    result += mat4(0.078807, -0.024753144, -0.65471774, 0.029364089, 0.03559591, 0.06222091, -0.63531363, -0.21199489, 0.1788284, -0.04665778, -1.0937687, 0.18657108, -0.10926469, -0.101991676, -0.2942879, -0.0042941845) * input_1(-1.0, 1.0);
    result += mat4(0.34756434, 0.03134357, -0.06582574, 0.028415883, -0.28500035, 0.0122057265, -0.08461487, 0.21550877, 0.26070875, -0.03488308, 0.057377733, 0.50127226, -0.04592321, 0.004966021, 0.09499433, -0.13758437) * input_1(0.0, -1.0);
    result += mat4(-0.30238128, 0.121124655, -0.01886854, -0.14670454, -0.35008982, 0.046118762, 0.017276775, -0.67920375, -0.50048137, -0.22359867, 0.120459676, 0.06586698, 0.57614577, 0.018972637, 0.15033473, 0.4720143) * input_1(0.0, 0.0);
    result += mat4(0.09043706, -0.016190814, -0.013193562, 0.100590035, 0.37645677, -0.1629082, 0.001643796, 0.27867106, 0.10316124, -0.013145058, -0.0047196927, 0.17163718, -0.89547753, 0.20637767, 0.028532388, -0.6647833) * input_1(0.0, 1.0);
    result += mat4(0.0033279082, 0.031977385, 0.04029518, -0.068005994, -0.21798876, -0.01134484, 0.005835418, -0.031927176, 0.26008254, -0.045778714, 0.0010666784, 0.095612735, 0.13895988, 0.006032901, -0.0032381902, -0.00096187176) * input_1(1.0, -1.0);
    result += mat4(-0.016889673, 0.01370759, 0.036529817, -0.034605756, -0.010205609, -0.23422474, -0.001998657, -0.07603903, 0.042725634, -0.013332131, -0.015200642, 0.08513002, -0.046723682, 0.15821293, -0.020907827, 0.04832435) * input_1(1.0, 0.0);
    result += mat4(-0.00803287, 0.0055422266, 0.004994853, -0.002089426, 0.084455386, -0.073241316, -0.009098506, 0.025317285, -0.0039725807, 0.013370043, -0.009330176, -0.009082231, -0.18883717, 0.023426304, 0.013215234, -0.14823455) * input_1(1.0, 1.0);
    result += vec4(-0.018075453, -0.006781558, -0.004839215, 0.008844576);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.05907281, 0.0026352126, -0.01974823, -0.015704324, 0.08964029, 0.0023023789, -0.05800753, -0.0037336552, 0.018058226, -0.022481235, 0.10307588, 0.005895195, -0.52071303, 0.042111743, 0.16054833, -0.065879844) * input_0(-1.0, -1.0);
    result += mat4(-0.04732173, -0.0038418274, -0.18918175, -0.0016688405, 0.008843559, 0.053872548, 0.035595495, -0.29876158, -0.021210369, 0.018732237, 0.3266202, -0.16417384, 0.14626127, -0.12985864, 0.29911515, 0.3684495) * input_0(-1.0, 0.0);
    result += mat4(0.01098511, 0.037202105, -0.10299577, 0.15535714, 0.015488927, -0.07509866, 0.044594623, 0.019631755, -0.008177235, 0.012844793, 0.016583575, 0.023175038, -0.012208452, 0.11004092, -0.016880982, -0.34038123) * input_0(-1.0, 1.0);
    result += mat4(0.03436525, -0.010995954, -0.07599639, -0.10803021, -0.03623303, -0.055815805, -0.028109167, 0.20977773, -0.012908557, -0.045000948, 0.2540843, -0.01563427, -0.17041808, 0.066857696, -0.29078636, -0.0910867) * input_0(0.0, -1.0);
    result += mat4(0.0286902, -0.043116778, 0.675092, -0.19614838, -0.032461166, 0.38265, -0.12317462, 0.76534325, -0.013948637, -0.033811633, -0.19224085, 0.893116, -0.06660411, -0.24818233, -0.95337594, -0.5721887) * input_0(0.0, 0.0);
    result += mat4(0.004369388, 0.12381299, 0.008717267, -0.3990886, 0.0025421605, -0.25465468, 0.010639583, -0.06654041, -0.011188487, 0.18059802, 0.033064302, 0.3501388, -0.050102614, 0.55324304, -0.038843494, 0.616982) * input_0(0.0, 1.0);
    result += mat4(-0.05876424, 0.01418657, 0.025727708, -0.008094545, 0.013763017, 0.045093138, 0.17003141, -0.1608372, -0.015893277, -0.047432393, -0.05410571, 0.11474751, -0.09252235, -0.050983325, -0.047909286, 0.15474953) * input_0(1.0, -1.0);
    result += mat4(0.033839688, -0.064079076, -0.29119843, 0.09298143, -0.0026289665, 0.10466553, 0.041083876, -0.20940407, 0.019639144, -0.019359063, 0.23002687, -0.10267917, 0.0010175825, 0.017656503, 0.26080224, 0.012284223) * input_0(1.0, 0.0);
    result += mat4(-0.0048541287, 0.21305668, 0.00846289, 0.20019525, 0.015724981, -0.007815468, 0.013864247, 0.10600722, -0.016934093, 0.091075554, -0.07268244, -0.15532447, -0.017333835, 0.12247598, 0.07747986, -0.40713814) * input_0(1.0, 1.0);
    result += mat4(-0.06777113, 0.023493506, -0.07478596, 0.01272579, 0.018353848, 0.03638432, 0.14973392, 0.02307894, 0.016761908, 0.019222617, -0.10054509, -0.2287943, 0.16918784, -0.034380127, -0.17064092, 0.060577262) * input_1(-1.0, -1.0);
    result += mat4(-0.01481156, -0.045471914, -0.08958501, 0.07809741, 0.03702308, -0.018456692, -0.029352497, -0.22631195, 0.008060029, 0.10953928, -0.023075003, -0.14991409, -0.020859424, 0.0060067126, -0.040729124, 0.21721677) * input_1(-1.0, 0.0);
    result += mat4(0.0013203382, 0.012473868, -0.040279, -0.042397697, -0.009185599, -0.030172255, -0.015328022, -0.10059075, -0.018085225, 0.15705413, 0.0049319603, -0.041571114, -0.023078194, -0.035261188, -0.14750479, 0.26777393) * input_1(-1.0, 1.0);
    result += mat4(-0.039389472, 0.06678102, 0.24708487, -0.07079086, -0.21600638, 0.062296655, -0.5470543, -0.21891199, -0.055306323, -0.11323709, -0.08926222, 0.28527182, 0.31853637, -0.005347573, 0.51230043, -0.010695272) * input_1(0.0, -1.0);
    result += mat4(-0.00041480674, -0.19836529, 0.13461518, -0.3604959, -0.0016930472, -0.34513298, -0.5362198, 0.21210407, 0.0281072, 0.30210444, 0.02979232, -0.0785198, 0.060479566, 0.22432855, 0.28810832, -0.2926312) * input_1(0.0, 0.0);
    result += mat4(0.004562709, 0.17035739, -0.027474176, 0.030000452, -0.015474415, 0.14253831, -0.040667173, -0.10659273, -0.011638537, 0.16664591, -0.024950981, 0.044530317, 0.068036735, -0.76326567, 0.34553668, -0.4467598) * input_1(0.0, 1.0);
    result += mat4(-0.016871978, -0.021864897, -0.16712728, -0.0014592672, -0.06811436, -0.057767186, -0.005002417, 0.101113014, -0.07528176, 0.07011354, 0.039158802, -0.1635235, 0.043187626, 0.021365594, -0.06224649, 0.037431225) * input_1(1.0, -1.0);
    result += mat4(0.009535441, -0.03835515, -0.06124039, 0.2755876, 0.04037181, -0.10034874, 0.18330275, -0.13631763, -0.011728232, 0.090140864, 0.0025948675, -0.034996796, -0.032958183, 0.055428818, -0.0065245107, 0.15847111) * input_1(1.0, 0.0);
    result += mat4(0.006050086, 0.02197269, -0.012843852, -0.025855003, 0.0019400369, 0.049390208, 0.008554068, -0.0895549, -0.0034833292, 0.06346683, 0.012419257, -0.022088902, -0.018529039, -0.24349362, -0.17543148, 0.24857962) * input_1(1.0, 1.0);
    result += vec4(-0.008101378, -0.008827521, -0.029178977, -0.05946852);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0077544083, -0.023648735, -0.008710661, 0.007954096, -0.041208364, 0.28647533, -0.2872957, 0.15229324, 0.05843872, -0.02536601, -0.010772626, 0.06967758, 0.03013006, -0.050237257, 0.02560473, -0.005405337) * input_0(-1.0, -1.0);
    result += mat4(0.14377198, 0.032778926, -0.29305527, 0.11002241, -0.17777605, -0.13560238, 0.2033187, -0.20757587, 0.03746799, 0.05328729, 0.0009802905, -0.05061719, 0.08096272, 0.11702902, -0.10970599, 0.09988192) * input_0(-1.0, 0.0);
    result += mat4(0.006454853, -0.004098447, -0.07077437, -0.0055219275, -0.01722524, -0.015105012, 0.046365783, -0.04189885, 0.0047769984, 0.02082954, -0.019884264, 0.024980472, 0.0077145146, -0.016880397, -0.06417742, 0.05062637) * input_0(-1.0, 1.0);
    result += mat4(-0.027001781, 0.10800837, -0.061391436, 0.021717275, 0.05227487, -0.28901166, 0.34723452, 0.002280569, 0.15221992, -0.060107693, -0.26262054, 0.10688705, -0.026529538, -0.05358223, -0.024429772, -0.029122403) * input_0(0.0, -1.0);
    result += mat4(-0.28274277, -0.4342989, 0.60739684, -0.2731521, 0.0012162685, -0.28402036, -0.02897043, 0.19160585, 0.52294856, 0.55036235, -0.08796888, 0.25206885, -0.043113135, -0.1546156, 0.42191568, -0.70875704) * input_0(0.0, 0.0);
    result += mat4(-0.016751397, 0.23430194, 0.12683885, -0.111744955, -0.016083913, -0.086233914, -0.012644016, 0.016393863, -0.043878715, -0.081628665, 0.05427722, -0.2397484, -0.044582926, -0.03192416, -0.09650943, -0.087298825) * input_0(0.0, 1.0);
    result += mat4(-0.0053720744, -0.014025139, 0.076917976, -0.009847578, -0.0061634127, -0.012122123, 0.0047650235, -0.008700062, -0.014653641, 1.0894526, -0.19862473, 0.24893251, 0.012758397, 0.03649337, -0.020453678, 0.023138456) * input_0(1.0, -1.0);
    result += mat4(-0.0356714, 0.07365035, -0.01895331, 0.00058368174, 0.0061102067, 0.07862683, -0.007192795, -0.015222822, -0.07291438, 0.23918499, -0.682309, 0.0187766, -0.06845819, -0.7002033, -0.024847131, 0.10760854) * input_0(1.0, 0.0);
    result += mat4(-0.0028088884, 0.030873206, -0.025409263, 0.0040160124, 0.013146605, -0.018638091, -0.010138497, 0.011209658, 0.09774351, 0.006749337, 0.043027494, 0.10477484, 0.021468326, 0.06733604, -0.034148738, 0.012513587) * input_0(1.0, 1.0);
    result += mat4(-0.015608083, 0.057174955, 0.040900264, -0.029260768, -0.07258015, 0.044636868, 0.37171254, -0.0038057836, -0.00794065, -0.014336664, -0.028300833, 0.022878222, 0.018451577, 0.035653576, 0.04385482, 0.0042120935) * input_1(-1.0, -1.0);
    result += mat4(-0.059345927, -0.09196758, -0.046612523, -0.0015675861, 0.071626574, -0.041456986, -0.030340813, 0.068978556, -0.1125354, 0.04017262, 0.3799702, -0.32148886, 0.015606256, -0.0043423525, -0.31784534, 0.3283623) * input_1(-1.0, 0.0);
    result += mat4(-0.04648332, 0.0057440456, -0.19310458, -0.0044679344, -0.00093752093, 0.019600196, -0.0015585583, -0.028733399, -0.061197035, -0.07465821, 0.109177776, -0.052294083, -0.011064873, 0.0053121606, 0.07002162, -0.052227933) * input_1(-1.0, 1.0);
    result += mat4(0.017735008, -0.088840336, -0.059302457, 0.019325066, 0.18740977, 0.81192285, -1.0854574, 0.41008633, -0.013467385, 0.3053852, 0.16815685, -0.058617182, -0.030691879, -0.28331342, -0.11328977, -0.031855665) * input_1(0.0, -1.0);
    result += mat4(0.16025265, 0.12599559, 0.09718212, 0.015508541, -0.20650737, -0.24267308, -0.03803779, 0.5532308, -0.30679962, -0.78381056, 0.061189618, -0.013790975, 0.70769274, 1.0511013, -0.3588087, 0.43854907) * input_1(0.0, 0.0);
    result += mat4(-0.25121284, -0.761959, 0.69176203, -0.15453506, 0.027456762, 0.18358734, 0.23848096, 0.05945453, 0.04814332, -0.16753846, -0.13787267, 0.105009116, -0.06742062, -0.11770659, -0.005540047, -0.12057626) * input_1(0.0, 1.0);
    result += mat4(-0.0026499343, 0.044480104, -0.008779688, -0.0040195487, 0.060097948, 0.30477193, 0.18183985, 0.026732964, 0.013515392, -0.028597133, -0.045543104, 0.01305303, -0.005613101, 0.13246314, -0.034573734, -0.009597739) * input_1(1.0, -1.0);
    result += mat4(-0.03638213, -0.2752864, 0.014079348, 0.009448037, 0.09851902, 0.7922916, 0.054251444, -0.0701482, 0.040600173, -0.03397581, -0.14444405, 0.050005198, -0.051029153, 0.2129836, 0.069197446, -0.04916407) * input_1(1.0, 0.0);
    result += mat4(0.06648865, 0.08399973, -0.039827608, -0.04620533, -0.020826152, -0.07993016, 0.016728617, -0.010670224, 0.014482286, -0.07165773, -0.062477298, 0.00067437324, -0.026912246, 0.028112976, 0.06731357, -0.0069858963) * input_1(1.0, 1.0);
    result += vec4(-0.005467797, -0.07113456, -0.07799458, -0.04949682);
    return result;
}

//!DESC ArtCNN C4F8 (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.003340556, 0.001863822, -0.02592736, 0.0022758623, -0.24983805, -0.33699545, -0.04746658, 0.29826754, -0.026073197, 0.1213465, -0.070246145, -0.03879064, 0.024055392, 0.1490946, 0.00962803, -0.081721485) * input_0(-1.0, -1.0);
    result += mat4(-0.19510303, 0.3121094, 0.03263163, -0.13009417, 0.15281856, -0.08624607, 0.1799449, -0.15738118, -0.05666051, 0.019513074, 0.15891306, -0.043373164, -0.112973705, 0.081757806, -0.034393866, 0.03287761) * input_0(-1.0, 0.0);
    result += mat4(-0.0016588479, 0.050468612, -0.03431455, 0.0010472921, 0.031285852, 0.0017220065, 0.021771505, -0.012088235, -0.02011804, 0.005163909, -0.012765775, 0.02192189, -0.024949322, 0.009858002, -0.039331608, -0.0011391271) * input_0(-1.0, 1.0);
    result += mat4(-0.07060874, -0.05760906, 0.07335404, 0.0022518956, -0.32513255, 0.436587, -0.08583349, -0.17840773, -0.17711715, 0.35343033, -0.11957079, -0.07458461, 0.06343719, -0.12774678, 0.015179009, 0.07761948) * input_0(0.0, -1.0);
    result += mat4(-0.2555965, -1.1431239, 0.20156701, -0.23464939, 0.005821142, -0.16607468, -0.08714654, -0.19934285, -0.39645356, -0.19711387, 0.28811243, 0.0515094, 0.23852713, -0.79103136, 0.3185451, -0.17087433) * input_0(0.0, 0.0);
    result += mat4(-0.1227536, -0.08701791, -0.23947544, -0.026945787, 0.035340887, -0.010886248, -0.0033497135, -0.024118448, 0.056761824, -0.11911052, 0.26771632, -0.021655371, -0.014575723, -0.09445404, -0.022491513, -0.014549366) * input_0(0.0, 1.0);
    result += mat4(-0.0021380866, -0.09565096, 0.037073854, 0.004996267, -0.068011045, -0.04844647, -0.0025110182, -0.03206164, -0.19591047, 0.8966058, -0.12593229, 0.16233271, -0.029068923, 0.054850955, -0.020823285, 0.013380228) * input_0(1.0, -1.0);
    result += mat4(0.15886828, 0.08968559, -0.03031848, 0.09349652, 0.043528214, -0.0850318, 0.005677957, -0.005070725, 1.1259792, 1.0592545, -0.012184034, 0.61561584, 0.22181016, 0.05762424, -0.23895006, -0.22342186) * input_0(1.0, 0.0);
    result += mat4(-0.025636844, 0.13330236, -0.0151651595, 0.044604577, 0.028150804, 0.030073714, 0.046162866, 0.024609344, -0.166842, 0.5251661, 0.24426444, 0.22811136, -0.13910301, -0.06342588, -0.11291058, -0.083329216) * input_0(1.0, 1.0);
    result += mat4(0.031198371, -0.0868748, 0.03809959, 0.06841409, 0.19997534, -0.2685272, -0.14160506, 0.17732717, -0.060570687, -0.049318243, 0.021500597, -0.03237468, 0.08598719, 0.10156981, -0.025591461, 0.035979547) * input_1(-1.0, -1.0);
    result += mat4(0.03445497, 0.025878228, -0.061670225, -0.049700662, -0.044051066, 0.09039695, 0.031551927, -0.08601028, 0.18384613, -0.37919545, 0.28810662, 0.080439925, -0.13639502, 0.1252956, -0.38186198, 0.07125276) * input_1(-1.0, 0.0);
    result += mat4(-0.12616026, -0.08873282, 0.09309885, -0.03314892, 0.017814819, 0.03949793, -0.0134245595, 0.0019498515, 0.0795234, -0.07288185, 0.048468836, -0.028363828, 0.02925999, -0.02528962, 0.0296222, -0.007501812) * input_1(-1.0, 1.0);
    result += mat4(-0.027785433, 0.0849427, -0.04256617, -0.08171679, 0.43761587, 1.5585318, 0.25567532, 0.80609554, 0.16933681, -0.13973448, 0.07790078, 0.21751726, -0.09931391, 0.06330544, 0.047575958, -0.14197074) * input_1(0.0, -1.0);
    result += mat4(-0.2734914, -0.052887134, 0.20031425, -0.039021794, -0.20100932, 0.46959493, 0.16767886, 0.3003665, 1.2298944, 0.8786859, -0.5616326, 0.123738974, -1.2723927, 0.0762268, -0.20856091, -0.12589623) * input_1(0.0, 0.0);
    result += mat4(0.19940448, -0.20803122, -0.60172623, -0.44450587, -0.14552033, -0.012740837, -0.13994826, -0.06960041, 0.059142828, 0.048209105, 0.2768837, 0.034157503, 0.18626256, 0.05114557, 0.06378816, 0.07315117) * input_1(0.0, 1.0);
    result += mat4(0.022471685, 0.019495282, 0.0010010707, 0.027838819, -0.3807182, -0.13665311, -0.08576973, -0.14637218, 0.011366259, 0.061530236, -0.010172056, -0.012400699, 0.06963795, -0.03530766, 0.045713983, 0.08226259) * input_1(1.0, -1.0);
    result += mat4(-0.028714763, -0.12548172, -0.027539639, -0.114934504, -0.17945375, 0.0022789054, 0.26919633, 0.26100802, 0.028654171, 0.1318647, 0.021321349, 0.03848693, -0.13690679, -0.1898533, -0.23514742, -0.093371645) * input_1(1.0, 0.0);
    result += mat4(-0.36323944, -0.28126824, 0.0386169, -0.23737423, 0.15619384, 0.07593041, 0.11130497, 0.08950498, 0.14440697, -0.08462286, 0.092011474, 0.031064752, -0.047391232, 0.05635415, -0.008054442, 0.020364169) * input_1(1.0, 1.0);
    result += vec4(-0.044854224, -0.052708387, 0.043901574, 0.020610511);
    return result;
}

//!DESC ArtCNN C4F8 (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define input_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.04684254, -0.061442196, -0.128818, -0.14015275, -0.024019029, 0.022235809, 0.01950005, 0.021192499, -0.127092, 0.011945784, 0.019604033, 0.032572355, 0.14100526, -0.032037817, -0.012280388, -0.055487834) * input_0(-1.0, -1.0);
    result += mat4(-0.04955578, -0.12209969, 0.041126937, -0.00949945, -0.18128929, 0.12401965, -0.24880213, 0.16046867, 0.19397554, 0.02617344, 0.091755286, 0.039046668, 0.027770039, -0.06447701, 0.025285898, -0.15997665) * input_0(-1.0, 0.0);
    result += mat4(0.083418466, 0.072862476, 0.040497456, -0.017670428, -0.03416582, 0.04039236, -0.12334795, 0.0710165, -0.001614993, -0.022144927, 0.037198644, -0.028366316, -0.0067810114, 0.040757377, -0.060275674, -0.018729974) * input_0(-1.0, 1.0);
    result += mat4(0.26557705, 0.023063106, 0.19484517, 0.08259842, -0.045805223, -0.07512472, 0.05112879, 0.064002804, -0.0009506178, 0.014493562, 0.003382406, 0.02419458, 0.17334166, 0.019145662, -0.10621163, -0.08852662) * input_0(0.0, -1.0);
    result += mat4(0.30883014, 0.41852757, 0.16688012, -0.02625062, 0.31764865, -0.04933958, 0.35335505, -0.08216252, 0.3288116, 0.73168457, 0.26094064, 0.49143147, 0.3318228, 0.22684796, 0.7333793, 0.5606467) * input_0(0.0, 0.0);
    result += mat4(0.102108404, 0.14880815, 0.23720925, 0.35373002, -0.0075312965, -0.026787464, 0.043992475, -0.25694823, -0.008059402, -0.011859809, 0.057406846, 0.18910348, -0.07369499, -0.0960314, 0.022226043, -0.029017692) * input_0(0.0, 1.0);
    result += mat4(0.001153531, 0.20631191, -0.043061975, 0.07144776, 0.031168336, -0.026787618, 0.016807597, -0.004287602, 0.009371624, -0.039550137, 0.013398259, -0.007141903, -0.062469117, -0.0027847448, -0.054534644, -0.06688206) * input_0(1.0, -1.0);
    result += mat4(0.26960143, 0.07953502, 0.25852945, 0.28584257, -0.022112748, -0.047749892, -0.0071229134, -0.027156064, 0.07083345, 0.044744976, 0.06725188, 0.003965356, -0.36567187, 0.014371967, -0.26225638, 0.16966178) * input_0(1.0, 0.0);
    result += mat4(-0.058006402, -0.015577973, 0.096383154, 0.12668273, 0.025399035, 0.015376676, -0.010650417, -0.07275624, -0.01239371, 0.0015962761, 0.012962038, 0.010481388, 0.01303232, -0.006382243, -0.14290011, -0.0891434) * input_0(1.0, 1.0);
    result += mat4(0.24683654, -0.05332156, -0.030316286, -0.10010785, -0.10363558, 0.033131916, 0.033471264, 0.06897343, 0.031701956, -0.039802283, -0.011275337, -0.0145037705, -0.12137149, 0.020265168, -0.006912039, 0.03622654) * input_1(-1.0, -1.0);
    result += mat4(-0.28741342, -0.12359215, -0.11460031, -0.076012775, 0.021841245, -0.039648347, 0.08656139, 0.006238015, -0.03916191, -0.07329831, 0.029720236, -0.15815835, 0.0010728805, -0.16013935, 0.23178248, -0.112903774) * input_1(-1.0, 0.0);
    result += mat4(0.017121041, 0.1024824, -0.14572346, 0.025816962, -0.002758313, -0.038078286, -0.01822271, -0.029737884, -0.009680186, 0.004618473, -0.036926784, -0.0069281026, -0.035620205, -0.065512404, 0.025432153, -0.048923902) * input_1(-1.0, 1.0);
    result += mat4(-0.1699541, -0.0015564167, -0.037808992, 0.006130788, -0.02061738, 0.03283169, -0.024148213, -0.016224014, -0.019107955, 0.20027296, 0.0034378495, 0.019822774, 0.20424242, 0.05692321, -0.05656022, -0.11302044) * input_1(0.0, -1.0);
    result += mat4(0.21614063, 0.22251116, 0.20448707, 0.26880345, -0.3573632, -0.014433041, -0.051203143, 0.26146165, 0.13088205, -0.005596057, 0.16430807, 0.51956546, 0.095331386, -0.16096461, -0.01855157, 0.009704643) * input_1(0.0, 0.0);
    result += mat4(0.01909772, 0.028321879, 0.06594602, -0.06076916, 0.062595636, 0.020156799, -0.14589195, -0.1364457, -0.05807426, -0.09634995, 0.0812165, -0.05961699, 0.016349033, 0.055387594, 0.01861505, 0.15201822) * input_1(0.0, 1.0);
    result += mat4(0.046804618, -0.016911797, 0.02728843, 0.015413412, 0.016055252, -0.040256917, 0.013391743, -0.010279985, 0.02289868, -0.058229726, 0.0063115223, 0.003010407, -0.10059771, 0.07038758, -0.058310688, -0.015776087) * input_1(1.0, -1.0);
    result += mat4(0.06941772, -0.02228019, 0.062441938, -0.025204582, 0.06338509, -0.06520183, 0.049347963, -0.06551849, -0.08591994, -0.09863842, -0.022526853, -0.13354203, -0.023326637, 0.22144899, -0.08987778, 0.17179003) * input_1(1.0, 0.0);
    result += mat4(0.016606022, 0.022038972, 0.016271813, -0.06315939, 0.028027302, 0.018908728, 0.015431072, -0.06937094, 0.039732445, 0.023048213, -0.041799337, -0.08947798, -0.096422486, -0.06419304, 0.017366888, 0.2326912) * input_1(1.0, 1.0);
    result += vec4(0.11313864, 0.1620533, 0.14889485, 0.17330672);
    return result;
}

//!DESC ArtCNN C4F8 (Pixel-Shuffle)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *

vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];
    return clamp(output_pix, 0.0, 1.0);
}
