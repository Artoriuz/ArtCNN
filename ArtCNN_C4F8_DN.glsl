// MIT License

// Copyright (c) 2024 Joao Chrisostomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 DN (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(0.056423564, -0.15215547, -0.07722366, 0.086346515) * input_0(-1.0, -1.0);
    result += vec4(0.18322352, 0.27707145, 0.15432635, -0.21424732) * input_0(-1.0, 0.0);
    result += vec4(0.057552587, 0.08232305, -0.14623082, 0.099944495) * input_0(-1.0, 1.0);
    result += vec4(0.035894435, -0.08357545, 0.23191808, -0.35598668) * input_0(0.0, -1.0);
    result += vec4(0.43409896, -0.041464813, 0.44290084, 0.7749198) * input_0(0.0, 0.0);
    result += vec4(0.12142475, 0.2884018, -0.17736498, -0.21673238) * input_0(0.0, 1.0);
    result += vec4(-0.02641428, -0.19324231, -0.16743681, 0.07189955) * input_0(1.0, -1.0);
    result += vec4(0.042009726, -0.037065055, 0.15498838, -0.039562717) * input_0(1.0, 0.0);
    result += vec4(-0.14895764, -0.034981005, 0.12929393, -0.07823356) * input_0(1.0, 1.0);
    result += vec4(-0.017984178, -0.0037392438, -0.10598496, -0.022271203);
    return result;
}

//!DESC ArtCNN C4F8 DN (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(-0.11520804, 0.18853723, -0.022325782, -0.24091007) * input_0(-1.0, -1.0);
    result += vec4(-0.10068051, 0.02830994, 0.38197958, -0.017142363) * input_0(-1.0, 0.0);
    result += vec4(-0.12582545, -0.021614624, -0.042763945, 0.082961045) * input_0(-1.0, 1.0);
    result += vec4(0.27422547, -0.0718543, -0.16305003, 0.12088376) * input_0(0.0, -1.0);
    result += vec4(0.38782758, -0.18901806, 0.1535425, 0.22676378) * input_0(0.0, 0.0);
    result += vec4(0.03156191, 0.20666172, 0.06338178, 0.13458636) * input_0(0.0, 1.0);
    result += vec4(0.067651734, 0.2087075, -0.18406709, -0.09215683) * input_0(1.0, -1.0);
    result += vec4(-0.36202928, -0.19757527, 0.030129304, -0.1189475) * input_0(1.0, 0.0);
    result += vec4(-0.006790231, -0.03608655, -0.20739518, -0.0642435) * input_0(1.0, 1.0);
    result += vec4(0.02494311, -0.03246315, -0.05889497, -0.050930414);
    return result;
}

//!DESC ArtCNN C4F8 DN (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.039619375, 0.071681336, 0.010525592, 0.010861677, -0.042244233, 0.053718414, 0.045846332, -0.19507846, 0.08307384, 0.28111774, -0.1373114, -0.055314068, 0.0843611, 0.27107033, -0.035038333, -0.028106328) * input_0(-1.0, -1.0);
    result += mat4(0.019434223, -0.13202477, -0.2927475, 0.1827635, -0.3587584, -0.16527638, 0.018143458, -0.3716742, -0.0063421, 0.11696153, -0.1113005, -0.13239373, -0.20657705, -0.05376614, -0.20021412, 0.21206154) * input_0(-1.0, 0.0);
    result += mat4(0.31667188, 0.18738529, 0.16125625, -0.36357865, 0.06563364, -0.050443728, -0.11860642, 0.024046298, 0.06258256, -0.48926356, 0.24786289, 0.14780451, -0.11022643, -0.12762347, -0.014516502, 0.15265954) * input_0(-1.0, 1.0);
    result += mat4(-0.15677477, 0.042812437, -0.055085275, 0.04274171, 0.15786839, 0.66605717, -0.15535003, 0.14251678, 0.14125742, -0.18502744, 0.092967324, -0.018888004, 0.10726477, -0.61414707, 0.054259777, 0.15469803) * input_0(0.0, -1.0);
    result += mat4(0.343588, 0.014163544, 0.23604538, -0.014345338, 0.003945227, 0.17978306, 0.5513086, 0.09303708, 0.48555782, 0.17522621, -0.6511017, -0.058635514, 0.7347679, -0.09160187, -1.2533218, -0.4639735) * input_0(0.0, 0.0);
    result += mat4(0.4015382, 0.068844385, 0.3824052, -0.08399209, -0.09859607, -0.9600701, 0.7615823, 0.22831613, 0.15973663, -0.09257983, -0.025246797, -0.26454103, -0.3880316, 0.32742402, 1.0257753, 0.8470416) * input_0(0.0, 1.0);
    result += mat4(0.013218005, 0.045762163, -0.1677276, -0.025273168, -0.07300585, 0.18753786, -0.049681727, -0.16993256, -0.050936442, -0.5521776, -0.1127389, 0.05730398, 0.053299006, -0.12903768, 0.0032345494, -0.25836292) * input_0(1.0, -1.0);
    result += mat4(-0.025466634, 0.21493222, -0.038387574, 0.045482274, -0.1725769, -0.25964418, 0.23207645, -0.102607526, 0.09191323, -0.2152108, 0.032538127, 0.18528247, 0.46604088, 0.44065285, 0.00746822, 0.35602376) * input_0(1.0, 0.0);
    result += mat4(-0.025838196, -0.194589, 0.098464884, -0.016074874, -0.043838337, 0.87256616, -0.010442441, 0.40289566, 0.03089381, 0.10723153, 0.0053224075, -0.14578007, 0.15040757, 1.1888373, -0.022636637, 0.08031893) * input_0(1.0, 1.0);
    result += mat4(-0.122831725, -0.06731588, 0.0051717404, -0.06946929, 0.20721057, -0.0066848984, -0.074718356, 0.3130827, -0.12040434, -0.14490873, 0.099955305, -0.077203065, 0.11776082, 0.26874354, -0.07081161, 0.5052545) * input_1(-1.0, -1.0);
    result += mat4(0.23442684, -0.62452745, 0.1947879, 0.45045215, 0.118601926, -0.34323364, 0.29011485, 0.17464668, 0.22298977, -0.12597533, 0.2501112, 0.39484712, -0.0565862, -0.43128368, 0.17008857, -0.051431835) * input_1(-1.0, 0.0);
    result += mat4(0.001982052, -0.38196543, -0.21871516, -0.46608374, -0.0033549068, -0.52225006, -0.6281317, -0.49969503, -0.112537436, -0.3165755, -0.06090307, 0.30165657, -0.041167922, 0.41014165, -0.24448991, -0.20264217) * input_1(-1.0, 1.0);
    result += mat4(-0.2373538, -0.41678196, -0.20660271, -0.18640622, -0.17657766, 0.5056139, 0.13558398, -0.15972133, -0.46387696, -0.35577902, -0.23833977, -0.10804911, -0.047857717, -0.16509338, 0.050930105, 0.07966207) * input_1(0.0, -1.0);
    result += mat4(0.5864971, 0.87979925, -0.7042557, 0.04522565, 0.08947043, -0.582512, 0.89621747, -0.48763585, 0.03226079, -0.1593705, -0.37276065, -0.033678155, 0.02864925, 0.4750532, 0.07454452, 0.0073702205) * input_1(0.0, 0.0);
    result += mat4(0.2273656, -0.08480438, 0.5154491, -0.33870798, -0.07405231, 0.6855068, -0.15083066, 0.17705588, -0.19756724, 0.6281428, -0.9637481, 0.2536416, -0.20992827, -0.43479675, 0.3856742, -0.11220263) * input_1(0.0, 1.0);
    result += mat4(0.029710367, -0.14107981, -0.09389863, 0.12901598, -0.17867458, 0.27155587, 0.019322215, 0.012400602, 0.06099483, -0.20335935, 0.08127116, 0.26165292, -0.1520978, 0.32735646, 0.14841129, -0.09030832) * input_1(1.0, -1.0);
    result += mat4(0.106925346, -0.17705895, -0.3240495, -0.09066534, -0.43790397, 0.155367, 0.14107549, 0.0074175717, -0.1142718, -0.29223254, -0.21697533, -0.23581377, 0.124055676, 0.07136887, -0.038884517, 0.17529775) * input_1(1.0, 0.0);
    result += mat4(0.15618582, -0.16623808, 0.31174394, -0.055455357, -0.13588582, 0.69656366, -0.21654637, -0.026088009, -0.027137887, -0.4363558, 0.03069535, -0.2656414, 0.12322039, -0.095568106, 0.024443889, 0.22562975) * input_1(1.0, 1.0);
    result += vec4(0.063878216, -0.07431384, -0.101424456, 0.32229757);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0006454515, -0.23229097, -0.05579433, -0.18296319, -0.022616144, 0.06362929, -0.04677498, 0.0444258, 0.11392411, 0.27730122, 0.08550316, 0.3930185, 0.2389627, -0.7381168, -0.060004186, 0.051836945) * input_0(-1.0, -1.0);
    result += mat4(0.20554255, -0.048472077, -0.06165242, -0.071389236, -0.30818996, -0.12544109, -0.18342055, -0.3933739, -0.26057664, 0.22499713, -0.117917046, -0.24553482, 0.34343258, 0.0100082485, -0.08607542, -0.16722311) * input_0(-1.0, 0.0);
    result += mat4(0.02307776, -0.35957274, -0.0046998933, 0.054912217, 0.041124158, 0.20869274, 0.1982024, 0.30793867, 0.12472901, 0.12124934, 0.0792132, 0.20294659, 0.23795325, 0.45225984, 0.078911655, 0.511065) * input_0(-1.0, 1.0);
    result += mat4(0.09975981, 0.23228982, -0.09301259, 0.22805785, 0.082393415, 1.1009636, -0.18892846, 0.73915213, -0.14587983, -0.35337576, 0.053133037, -0.799456, -0.20329672, -0.7035509, -0.1001507, -0.67902625) * input_0(0.0, -1.0);
    result += mat4(0.21556816, -0.032197297, -0.19887315, 0.1009873, -0.35139278, -0.55691934, -0.14003575, -0.58733547, 0.5995034, 0.13430648, -0.16209437, 0.09635763, 0.82092166, 0.02000997, -0.8666937, 0.47430754) * input_0(0.0, 0.0);
    result += mat4(0.26499507, 0.11579871, -0.14936209, 0.09012866, 0.14342491, 0.25792205, 0.020221274, -0.27977312, -0.16444524, -0.2839769, 0.024859529, -0.20865853, 0.23929556, 0.8751837, 0.18875206, -0.030031946) * input_0(0.0, 1.0);
    result += mat4(-0.06782987, -0.027377395, -0.0040922067, 0.27927998, 0.054309614, 0.187618, 0.08134452, 0.2060038, -0.02984788, -0.038981266, 0.04902055, 0.13137802, -0.03439291, 0.14188051, -0.027570615, -0.020771151) * input_0(1.0, -1.0);
    result += mat4(0.14245486, 0.035681717, 0.16863067, 0.024679298, 0.036693417, -0.010343854, -0.22495317, 0.26976973, -0.10824714, -0.25862157, 0.40722004, -0.15715328, -0.28444093, 0.8923379, 1.62572, -0.26199323) * input_0(1.0, 0.0);
    result += mat4(0.18345739, -0.058573402, 0.09834649, 0.16146722, 0.0042390088, 0.30499458, 0.11608418, -0.008834221, 0.02250836, 0.2508221, 0.04021807, -0.11132009, -0.15086538, -0.009199818, 0.37488666, -0.36379787) * input_0(1.0, 1.0);
    result += mat4(-0.14090016, -0.47710073, -0.031767238, -0.15800773, 0.0028506403, 0.041141503, 0.073900424, 0.090636194, -0.23046522, -0.06983258, -0.024777928, -0.3752152, 0.1297715, -0.14954226, 0.019517832, 0.0879812) * input_1(-1.0, -1.0);
    result += mat4(-0.033528984, -0.97255003, 0.2062983, -1.6706449, 0.09616889, -0.81982785, -0.04732171, -1.4261785, 0.30237067, -0.4637745, 0.2306468, 0.02519098, 0.06464429, 0.0663182, -0.10666398, -0.59651774) * input_1(-1.0, 0.0);
    result += mat4(0.109407976, 0.3263486, -0.09284333, 0.46632174, -0.0154376505, 0.3402458, -0.12297374, 0.48386446, -0.118967816, -0.07328381, -0.04442486, -0.44574174, -0.26932755, -0.2802242, -0.09212522, 0.118353635) * input_1(-1.0, 1.0);
    result += mat4(-0.26344326, -0.5403886, -0.24574052, -0.11785134, -0.03697212, 0.72499645, -0.47165033, 0.58407354, -0.13924262, -0.37579727, -0.12931883, -0.056844473, 0.017445065, 0.39302424, -0.0019942704, 0.39807168) * input_1(0.0, -1.0);
    result += mat4(0.65185887, 0.01555572, -1.3045402, 0.4964058, -0.23887718, 0.09721447, -0.21670282, -0.044921238, -0.2393417, -0.5962763, -0.43074846, -0.16337143, 0.03297538, 0.004151027, -0.06582196, -0.034352984) * input_1(0.0, 0.0);
    result += mat4(0.035382926, 0.1574375, -0.012507766, 0.2402542, -0.11351505, -0.26813918, 0.40181002, 0.064927034, -0.002916802, 0.5559193, -0.15977067, 0.27752727, -0.07881818, 0.049195893, -0.05402062, -0.3401005) * input_1(0.0, 1.0);
    result += mat4(-0.024599884, 0.08545796, 0.17185783, -0.064365394, 0.04063044, 0.26765844, 0.38424945, 0.112540714, -0.040228672, -0.17023875, 0.21040067, -0.13355507, -0.15203461, -0.0012579929, 0.18669638, 0.015033905) * input_1(1.0, -1.0);
    result += mat4(-0.17079446, 0.07304659, 0.17869242, -0.3045132, 0.22156034, 0.0581777, -0.43659982, 0.25591034, 0.32745573, -0.089794524, -0.8445783, 0.035946142, 0.092721835, 0.024472952, 0.11978592, -0.10271045) * input_1(1.0, 0.0);
    result += mat4(-0.15086117, 0.19041222, 0.30368814, -0.10198662, 0.13427167, 0.22993277, -0.123845905, -0.012070306, 0.035469927, -0.5882601, -0.22153533, 0.030319925, -0.24534108, 0.0251612, -0.055665314, 0.012714609) * input_1(1.0, 1.0);
    result += vec4(0.09303649, -0.038173385, -0.029546797, -0.117189355);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.22790241, 0.1309293, -0.05893724, -0.074820034, -1.343904, -0.0053732195, -0.005544864, -0.12853904, -1.1409513, 0.038262796, 0.01772437, -0.004281622, -0.6420458, -0.029787706, 0.025989166, 0.09484907) * input_0(-1.0, -1.0);
    result += mat4(0.58748454, 0.33700085, -0.25538796, -0.20057334, 0.17098764, 0.10933852, -0.062229592, 0.18252283, -0.15919319, -0.020798914, 0.0036800336, 0.085102886, -0.09921643, 0.23144662, 0.045210995, 0.019538598) * input_0(-1.0, 0.0);
    result += mat4(-0.34528983, 0.33202824, -0.0920546, 0.03528128, 0.033127956, 0.08863955, -0.05178061, 0.19259678, 0.10914988, 0.03929818, -0.012838288, 0.04194673, -0.027021771, 0.09296525, 0.011771041, 0.034898244) * input_0(-1.0, 1.0);
    result += mat4(0.28507763, 0.24573478, 0.07522217, 0.23664887, 0.29484218, 0.1055958, 0.0073464643, 0.17605385, -0.034900993, -0.8815003, 0.06940465, -0.74687856, 0.025946813, 0.08917789, -0.07469242, 0.0024694658) * input_0(0.0, -1.0);
    result += mat4(0.36428726, 0.11023643, 0.7964555, 0.4709842, -0.038816154, 0.12549625, -0.0068111923, 0.04360362, -0.23883711, -1.0728589, -0.0050257193, -0.6099336, 0.1062773, 0.71757007, -0.007928265, 0.3784055) * input_0(0.0, 0.0);
    result += mat4(0.27362758, 0.5644982, -0.06600651, 0.3649559, -0.05410329, 0.028171498, -0.002669638, -0.12826332, -0.0040918943, -0.039596055, 0.03030191, 0.019308615, 0.04741267, 0.16195865, -0.058992438, -0.0041196193) * input_0(0.0, 1.0);
    result += mat4(-0.05152876, -0.016148398, -0.071677715, -0.26774865, 0.054532617, 0.052411463, -0.022138882, -0.113267265, 0.062482774, 0.027022563, -0.016578713, -0.8474154, -0.3775696, -0.042008348, 0.0013523285, -0.01782438) * input_0(1.0, -1.0);
    result += mat4(0.03170278, 0.02260024, -0.16311483, 0.30223817, 0.0066556125, 0.05464846, -0.023219394, 0.14484546, 0.030985553, 0.038039442, 0.025361523, -0.0029079565, 0.058151886, 0.11827827, -0.016402746, -0.054876886) * input_0(1.0, 0.0);
    result += mat4(-0.12127317, -0.0014421598, 0.043035887, -0.062664665, -0.001774863, 0.02434868, -0.019337693, -0.041611694, 0.021054199, 0.03464646, -0.0023811532, 0.09950311, 0.004167459, -0.07747117, 0.016397882, 0.018342778) * input_0(1.0, 1.0);
    result += mat4(-2.3523376, -0.07540023, 0.03810708, 0.146947, -2.3029003, -0.02246337, 0.024630459, 0.05367682, -2.9780037, 0.011934762, 0.03863427, 0.057572186, -0.005705356, 0.12796254, -0.023344697, 0.038043085) * input_1(-1.0, -1.0);
    result += mat4(-0.24799673, -0.63401693, 0.13104776, 0.032957546, 0.12891015, -0.0038522694, 0.019670025, -0.21991272, -0.77404267, -1.1691644, 0.13612212, -0.25076798, -0.029237004, 0.006152527, -0.005606553, 0.119651616) * input_1(-1.0, 0.0);
    result += mat4(0.00062241196, -0.26083842, 0.055289067, -0.004024885, 0.09712674, 0.04167645, 0.016669326, 0.012728701, 0.04603911, -0.077524215, 0.03183393, -0.04578027, -0.065838546, -0.09811551, 0.007043882, -0.054359537) * input_1(-1.0, 1.0);
    result += mat4(0.005247019, -0.36489528, 0.049151547, -0.62669736, -0.17755507, -0.07176307, -0.03233885, 0.19507329, 0.06230058, -0.022401568, 0.025529416, -0.15035966, 0.16468646, 0.14555705, 0.0034009824, -0.21875264) * input_1(0.0, -1.0);
    result += mat4(0.51899004, -0.49565113, 0.5523516, -0.17358652, -0.027969787, 0.4175617, 0.033452645, 0.16211995, 0.13053295, -1.0494299, 0.001629348, -0.89097255, 0.35462913, 1.6607177, 0.07422247, 0.67087483) * input_1(0.0, 0.0);
    result += mat4(0.102352254, -0.008660396, 0.026859071, -0.32538855, 0.033851605, 0.14193882, 0.0019641179, 0.11069084, -0.03381394, 0.044031143, 0.08105759, -0.057565644, 0.011482141, -0.07144169, -0.0013021135, 0.21550973) * input_1(0.0, 1.0);
    result += mat4(-0.50567657, -0.09312934, -0.054919578, -0.21140456, -0.14411768, 0.05038173, 0.0051015792, 0.046006367, 0.060608134, 0.023807496, 0.014047284, 0.035436228, 0.10759057, 0.0452707, -0.01677996, 0.022552518) * input_1(1.0, -1.0);
    result += mat4(-0.10957241, 0.30178952, 0.07981427, 0.22203532, -0.13807026, 0.009151866, 0.034855157, 0.17215922, -0.008915747, 0.0073429556, 0.03206554, -0.06303751, -0.20008276, -0.049270425, 0.03762273, 0.2773512) * input_1(1.0, 0.0);
    result += mat4(-0.0017359493, -0.13653423, 0.00423569, 0.09830285, 0.05253082, -0.17533338, 0.0016904247, -0.011428473, 0.0092441235, 0.03764859, 0.013796881, 0.012576473, -0.03068565, -0.124885, 0.0024029785, -0.0805176) * input_1(1.0, 1.0);
    result += vec4(-0.01114204, -0.25298527, 0.029642968, -0.048593372);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.40131083, -0.14573981, -0.07796102, -0.14670338, -0.33515805, -0.17898293, -0.1930099, -0.1348492, -0.1351967, -0.056308392, 0.030805515, -0.14269945, -0.017844165, 0.056611, -0.14342073, 0.17732657) * input_0(-1.0, -1.0);
    result += mat4(0.40522552, 0.126456, -0.20213695, 0.24024108, -0.4804347, -0.14810634, -0.18201593, 0.12774809, -0.09856902, -0.0525667, -0.16952248, -0.050237454, -0.080892846, 0.015452504, 0.07746132, 0.17335005) * input_0(-1.0, 0.0);
    result += mat4(-0.15890576, -0.081783585, -0.45756787, -0.15192364, -0.33025923, -0.0013501128, -0.035966873, 0.10013108, -0.03950089, 0.0511297, 0.0105734635, 0.03904884, 0.020239146, -0.0366055, -0.06553493, -0.03891613) * input_0(-1.0, 1.0);
    result += mat4(-0.39091823, -0.25939322, 0.026295828, 0.11568121, -0.511742, -0.24443412, -0.16988169, 0.07271492, 0.16551512, 0.106092736, 0.25703675, -0.94356346, -0.067561045, -0.21647924, -0.050735552, 0.11712246) * input_0(0.0, -1.0);
    result += mat4(0.35649392, 0.21470164, 0.209398, -0.49923688, -0.7692164, -0.37914756, -0.09388187, 0.021247212, 0.1262632, -0.27642253, 0.20699182, -0.45006865, -0.25455907, -0.048284877, -0.06579752, 1.0402538) * input_0(0.0, 0.0);
    result += mat4(-0.4840936, -0.34357238, -0.18505476, 0.58270454, -0.36828756, -0.12846872, -0.043777425, -0.10901719, -0.00093856966, -0.044999775, 0.005309861, -0.006460587, -0.11728713, -0.21523546, 0.049026277, 0.04882639) * input_0(0.0, 1.0);
    result += mat4(0.05649619, 0.14325613, -0.05518274, -0.059472032, -0.21752952, -0.07146509, -0.068127304, 0.09732376, 0.116783194, -0.15280612, -0.13012008, -0.065900765, -0.021953892, 0.23252703, -0.12929516, -0.03796289) * input_0(1.0, -1.0);
    result += mat4(-0.100433625, -0.09108289, 0.048228033, -0.1404769, -0.40944052, -0.013383455, -0.051219165, -0.09946281, -0.1392193, -0.16363035, -0.16302451, -0.09662859, -0.02466546, 0.65958446, 0.071162224, 0.051770814) * input_0(1.0, 0.0);
    result += mat4(0.1814043, 0.28993595, 0.19052029, -0.011247036, -0.15938224, 0.034746442, 0.060568504, 0.00855429, -0.05884314, -0.1112414, 0.016991345, 0.048412696, 0.1331366, 0.3011163, 0.033678237, -0.03736063) * input_0(1.0, 1.0);
    result += mat4(0.21152551, 0.12026973, -0.058258723, 0.2636478, 0.092803024, -0.027476447, -0.105360016, 0.112815775, -0.18763465, 0.005983227, -0.09383158, -0.10209839, -0.007985089, 0.09568192, 0.18648498, 7.692804e-05) * input_1(-1.0, -1.0);
    result += mat4(-0.023867864, -0.34710988, 0.48262385, -0.5508785, 0.20498617, -0.0031061373, -0.102427796, 0.18689778, 0.14686835, 0.3214026, 0.3401301, -0.69218475, 0.32417235, 0.16914795, 0.2699323, -0.16102552) * input_1(-1.0, 0.0);
    result += mat4(-0.014629402, 0.22366773, 0.36393338, 0.3255824, 0.18933052, -0.10676395, -0.08792794, 0.027727222, -0.00898229, 0.24985394, -0.013361524, 0.08757229, 0.26694068, 0.06349983, 0.2165728, -0.11539989) * input_1(-1.0, 1.0);
    result += mat4(0.71211785, 0.26966107, 0.44135904, -0.07236817, 0.22941007, 0.18235974, -0.04572725, 0.08949092, -0.14246124, 0.089003846, 0.008058507, 0.13262491, 0.2663475, -0.07066174, 0.26262558, 0.03935883) * input_1(0.0, -1.0);
    result += mat4(-0.0002024328, 0.5109999, -0.56598586, 0.11218092, 0.3204004, 0.35382828, -0.14847721, 0.48718482, 0.20923127, -0.7881819, 0.051745314, -0.09826118, -0.18064143, -0.20971955, -0.0639007, 0.91574335) * input_1(0.0, 0.0);
    result += mat4(-0.16902113, 0.17222351, 0.038069252, 0.11414796, 0.31555396, -0.00045471042, -0.044166163, 0.046005193, -0.20222418, 0.33060268, -0.037811115, 0.0049307747, 0.2651721, -0.1198971, 0.20670466, -0.025170615) * input_1(0.0, 1.0);
    result += mat4(-0.059272625, -0.20311214, -0.20836477, 0.02485278, 0.16521679, 0.07720376, 0.07253004, -0.032670435, -0.067978896, -0.032253806, 0.023613194, 0.077910475, 0.24757393, 0.05665406, 0.08008448, -0.109056376) * input_1(1.0, -1.0);
    result += mat4(-0.47673923, -0.4894085, -0.099776715, 0.26389697, 0.28209037, 0.32549277, 0.19873218, 0.16790663, 0.021033684, -0.12721772, -0.021922333, 0.056173686, 0.03174233, 0.37531883, 0.24781902, -0.023801934) * input_1(1.0, 0.0);
    result += mat4(0.35320887, 0.124493115, 0.063739024, -0.14258891, 0.4481749, -0.14569955, 0.014993605, 0.07335487, -0.070806965, -0.049148977, -0.040011857, 0.035542615, 0.17358553, -0.33844304, 0.18167111, 0.1234629) * input_1(1.0, 1.0);
    result += vec4(0.08112004, -0.25991333, 0.059672978, -0.3628053);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0024186918, 0.01809922, -0.0095258225, 0.00041956292, 0.23699173, -0.020528687, 0.13964003, 0.042159505, 0.09839021, 0.020261845, 0.06077966, 0.0008428466, -0.06763821, -0.12490673, -0.014362984, -0.036152333) * input_0(-1.0, -1.0);
    result += mat4(0.086006865, 0.040089007, 0.0067790793, 0.0024077825, -0.5361758, -0.020083306, 0.18136463, 0.041133508, -0.38567224, -0.07424969, 0.088583976, 0.07255803, 0.21607493, 0.18514228, -0.29254875, 0.038540468) * input_0(-1.0, 0.0);
    result += mat4(-0.00052378944, 0.024336416, -0.0033461615, -0.01585374, -0.05475307, 0.07932624, 0.0018921014, 0.02580876, 0.0034697072, -0.27757415, -0.25969625, 0.04896501, -0.09963182, 0.07869156, -0.11989966, -5.837271e-05) * input_0(-1.0, 1.0);
    result += mat4(0.09569051, 0.09092923, -0.021100078, 0.034109224, -0.53050566, -0.07354594, -0.0040036715, -0.08695127, -0.4234906, -0.1015726, 0.0020537972, -0.10292109, -0.17389558, -0.12742412, -0.033357978, -0.09689671) * input_0(0.0, -1.0);
    result += mat4(-0.43180117, -0.2400473, 0.34440917, -0.11380425, -0.6001688, 0.5699981, -0.8875058, 0.2410872, 0.59873664, 0.75056756, 0.39645675, 0.6576807, -0.11700251, 0.27010822, -0.42975372, 0.10838134) * input_0(0.0, 0.0);
    result += mat4(0.0033462308, -0.3731837, -0.29195037, -0.016141374, -0.012261156, 0.37175748, -0.0009182842, 0.1766572, 0.107387245, -0.33364058, 0.23280576, 0.020599838, 0.082434066, 0.054614875, -0.08784536, 0.043969154) * input_0(0.0, 1.0);
    result += mat4(0.08196164, 0.102786824, 0.01937234, 0.06842769, 0.064947635, -0.08706506, 0.13329536, -0.03092924, 0.05571988, 0.044346012, 0.07107579, 0.02226771, -0.027569823, -0.02565768, 0.09803927, -0.027598893) * input_0(1.0, -1.0);
    result += mat4(-0.037734598, -0.11471205, 0.08280728, -0.42311093, 0.101095274, 0.020703528, -0.273132, 0.14570697, 0.012861931, -0.09740341, -0.04576423, -0.017074535, 0.010569958, -0.024251662, 0.014388774, 0.017285753) * input_0(1.0, 0.0);
    result += mat4(-1.4646578, -2.181028, -0.22517116, 0.1503274, -0.05330414, 0.16871606, -0.03806062, 0.076925136, -0.08560012, 0.06775941, -0.06648976, -0.0021272746, 0.04628784, 0.0081549715, 0.09609854, -0.011770538) * input_0(1.0, 1.0);
    result += mat4(-0.048310403, -0.002282688, -0.03379121, 0.0010743247, -0.05158042, -0.041559584, 0.04601005, -0.02318014, -0.03781957, -0.0083381515, 0.016185962, -0.013058894, 0.1411932, 0.0732097, 0.034587886, -0.0020832676) * input_1(-1.0, -1.0);
    result += mat4(0.24098638, 0.12473818, -0.23282363, 0.05781511, 0.18963143, 0.03203949, -0.11946742, 0.00395094, 0.014991009, -0.040892474, 0.13149166, -0.065923974, 0.18836239, -0.036160033, 0.085955836, -0.04894657) * input_1(-1.0, 0.0);
    result += mat4(0.21327496, 0.14923151, 0.054408863, -0.013445631, 0.039944224, 0.089157276, 0.09060214, -0.004230607, -0.031503852, 0.0720833, -0.03516529, 0.0085189175, 0.14419071, 0.08622127, 0.08263693, -0.02976577) * input_1(-1.0, 1.0);
    result += mat4(0.31217316, 0.18707955, -0.05583214, 0.13979691, -0.018955084, 0.018343773, 0.09316952, -0.0014965975, 0.032484975, 0.017138848, 0.07585369, 0.006187575, 0.19274776, -0.018089643, -0.14354044, -0.0076427017) * input_1(0.0, -1.0);
    result += mat4(0.2754643, -0.17113297, 0.27996862, 0.0031528303, -0.048960794, 0.043431107, 0.23622477, -0.050543584, -0.08886622, -0.1528405, 0.05320071, -0.13865794, -0.29358932, -0.051840425, -0.20902656, -0.0036960866) * input_1(0.0, 0.0);
    result += mat4(0.17256825, -0.08238283, 0.03370668, 0.0063221133, 0.034540705, -0.14767976, -0.056293163, 0.058232035, -0.16548558, 0.30628482, 0.18028566, -0.097379066, -0.03048748, -0.21780173, -0.3687425, 0.013581014) * input_1(0.0, 1.0);
    result += mat4(0.35086682, 0.03250094, -0.01885906, 0.0009620359, 0.085943945, -0.0042765494, 0.06805103, 0.009560201, -0.024773398, -0.020826234, 0.047567014, -0.012443041, -0.0047879163, 0.08198965, 0.004307114, 0.031183993) * input_1(1.0, -1.0);
    result += mat4(0.23480633, -0.012526601, -0.17484428, -0.06263193, -0.013751423, 0.0013044467, 0.15586038, -0.072551556, -0.15227498, 0.057336736, 0.034683045, 0.037006076, 0.016535832, -0.23674388, 0.03805705, -0.03672168) * input_1(1.0, 0.0);
    result += mat4(0.02176467, 0.1527532, -0.09297924, 0.03235531, -0.0046243616, 0.019168874, 0.114773214, -0.06830066, -0.07784647, -0.06121326, 0.13256712, -0.027028866, 0.034972303, 0.08716761, 0.020331072, -0.015091456) * input_1(1.0, 1.0);
    result += vec4(-0.010545296, 0.017661026, 0.07002991, -0.031593032);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.009060534, 0.0155295655, 0.051925898, 0.017124305, -0.20105706, -0.09364403, -0.057849653, -0.06444099, 0.010550638, 0.016745718, 0.021279382, -0.011324009, -0.09692312, 0.008559637, -0.071254, -0.014942013) * input_0(-1.0, -1.0);
    result += mat4(0.033414878, 0.008172901, -0.077620186, 0.03282815, -0.13619061, -0.059115794, -0.0045135515, -0.058910593, -0.07742949, -0.15946874, 0.06586865, -0.16156645, 0.42634052, 0.44375417, 0.29430452, 0.16332859) * input_0(-1.0, 0.0);
    result += mat4(0.109668955, -0.059429683, 0.0051561184, -0.009405434, -0.1450586, -0.14601067, -0.16696225, -0.06682791, -0.50239295, 0.12132605, -0.07850717, 0.032257542, 0.08098438, 0.25684783, -0.011822874, 0.07858003) * input_0(-1.0, 1.0);
    result += mat4(0.01662372, 0.051032282, 0.0497831, 0.043458246, 0.13766088, 0.17887868, -0.043040507, 0.13675591, -0.1217817, 0.08756223, -0.041128587, -0.025229344, -0.09451534, 0.160389, -0.035407823, 0.13465026) * input_0(0.0, -1.0);
    result += mat4(-0.33812815, -0.24089135, -0.11334369, -0.0897395, 0.19824702, 0.8668122, 0.121200934, 0.41492167, 0.615391, 0.010627986, 0.6783694, 0.60170066, 0.03451002, 0.43300372, 0.28647587, 0.26670736) * input_0(0.0, 0.0);
    result += mat4(-0.45159805, 0.101998135, 0.10979826, -0.094869606, -1.0299532, -0.18001242, -0.43456358, -0.12458815, 0.09692934, -0.17034428, -0.635529, 0.045659415, -0.7555824, 0.04216647, 0.13897511, 0.03923983) * input_0(0.0, 1.0);
    result += mat4(0.0747395, -0.13029224, 0.007301221, -0.15948509, 0.01639493, -0.06581251, -0.08194244, -0.025193451, 0.04699175, -0.04816564, -0.010667534, 0.005060944, 0.037317075, -0.03980315, -0.028633071, 0.0053754826) * input_0(1.0, -1.0);
    result += mat4(-0.07102381, 0.95083094, -0.29139793, 1.012879, 0.14153536, 0.26766136, 0.061579306, 0.17206293, -0.19945678, 0.09045941, 0.011877063, 0.0362607, -0.056702424, 0.030300282, 0.044412144, 0.029858975) * input_0(1.0, 0.0);
    result += mat4(-1.1734469, -1.3474807, -0.9962998, -0.062134616, 0.24150433, -0.075603865, -0.36850476, -0.0771297, 0.10387094, 0.015182344, 0.0018253379, -0.080742165, 0.28516218, 0.0050110063, -0.1088015, 0.007237863) * input_0(1.0, 1.0);
    result += mat4(-0.1640941, 0.026866646, -0.03611441, 0.0112793045, 0.11577485, -0.0521631, 0.03619472, -0.01050561, 0.02577359, -0.019171689, -0.05023606, -0.011456936, 0.0593461, -0.031440288, 0.016802149, -0.016361224) * input_1(-1.0, -1.0);
    result += mat4(0.071739584, 0.24008355, 0.04978803, 0.11955176, 0.07550196, 0.09086481, -0.017221468, 0.079461984, 0.05573897, -0.037823524, 0.006960665, -0.061749082, 0.06945543, -0.010650519, 0.04826333, -0.02876983) * input_1(-1.0, 0.0);
    result += mat4(0.01878046, 0.046782915, 0.06868587, -0.0266032, 0.09195307, -0.07243257, -0.102055945, -0.04862311, 0.059230473, 0.059684977, 0.027144166, 0.018223438, 0.08100353, 0.035765696, -0.111677796, -0.033355508) * input_1(-1.0, 1.0);
    result += mat4(0.13262753, 0.04152944, 0.10958725, -0.035769437, 0.092282064, 0.0026975558, 0.06799783, 0.010296767, -0.098347835, -0.046485353, -0.040462736, -0.003197418, 0.06931064, 0.06746327, 0.2724315, -0.09280166) * input_1(0.0, -1.0);
    result += mat4(-0.9065646, -0.015607679, -0.21348414, 0.09483967, 0.05155643, 0.17293999, -0.27830264, 0.0022463736, -0.009351864, -0.16367647, -0.32337993, 0.054798763, -0.64741075, 0.19309506, -0.042508304, 0.018710472) * input_1(0.0, 0.0);
    result += mat4(-0.69254047, 0.036179263, 0.18565926, -0.055802558, -0.47784868, -0.028658064, -0.1282545, -0.05731356, 0.72898483, -0.040070944, 0.13129038, -0.023216218, -0.83484626, 0.2828786, -0.3422644, 0.087608494) * input_1(0.0, 1.0);
    result += mat4(-0.12068377, 0.036936194, -0.010838529, 0.045007616, 0.13019198, -0.020798052, -0.06298051, 0.019796032, -0.053122874, 0.018865913, -0.06383839, 0.043157153, 0.1646292, -0.028756764, 0.17848195, -0.029438099) * input_1(1.0, -1.0);
    result += mat4(-0.47558084, 0.37483913, 0.07754133, 0.1492837, 0.153747, 0.0058353506, -0.09189368, -0.030181296, 0.23443359, -0.15118317, 0.071364805, -0.080171995, -0.40289134, -0.00025344896, -0.055448577, 0.055639423) * input_1(1.0, 0.0);
    result += mat4(0.18478838, 0.17453344, -0.056127563, 0.015478443, 0.10658147, 0.0400405, -0.1012266, 0.01569607, 0.063730754, -0.25421256, 0.048724417, -0.047426213, -0.20587394, 0.070692904, -0.027073728, 0.011990188) * input_1(1.0, 1.0);
    result += vec4(0.04322888, 0.03401333, -0.057564594, -0.03246103);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.035883363, -0.012308941, -0.03951088, 0.0075979293, 0.049747486, -0.021539705, 0.24750313, -0.05088723, 0.00977983, 0.0012627409, 0.032088824, -0.05332761, -0.043794096, 0.015630636, -0.2037928, 0.09042785) * input_0(-1.0, -1.0);
    result += mat4(0.018829511, -0.0056105778, -0.035637416, -0.063560896, 0.18371587, -6.536979e-05, 0.95098203, 0.30619487, 0.079970144, 0.00069116073, -0.14648026, 0.23438787, -0.070067175, -0.021720951, -0.35819697, -0.15938306) * input_0(-1.0, 0.0);
    result += mat4(-0.03528339, -0.035653293, -2.1735053, -0.07639501, -0.036609046, 0.01351544, -3.2110856, -0.09550003, -0.00051487936, 0.018957525, -1.662858, -0.011687516, 0.045157, 0.030187054, -6.2313805, 0.29905942) * input_0(-1.0, 1.0);
    result += mat4(0.017676948, 0.0078001195, -0.04205118, 0.00833065, 0.5772549, -0.0061484673, 0.044732343, 0.022033155, -0.11920532, -0.011378067, -0.042368222, 0.2799971, -0.79400533, 0.0054773684, -0.061757762, -0.024605416) * input_0(0.0, -1.0);
    result += mat4(0.1764237, -0.0083482005, 0.092078075, 0.06446314, 0.251172, -0.090596765, -0.06486533, 0.37254488, 0.402867, -0.06319285, 0.055135295, -0.426486, 0.8124349, 0.18001351, 0.23987557, -0.78495) * input_0(0.0, 0.0);
    result += mat4(0.1088934, 0.0387825, -0.2989397, 0.2918043, -0.069425, -0.018097578, -0.06509863, -0.11383569, 0.03450907, 0.09420891, 0.1098834, 0.1954882, 0.12314736, 0.19946244, 0.27441797, 0.3147282) * input_0(0.0, 1.0);
    result += mat4(-0.01825426, -0.0006940518, -0.04909027, -0.0021155113, 0.05422325, 0.008636089, 0.019335512, 0.14386362, -0.07652747, -0.014882775, 0.04517711, -0.083972186, 0.014584394, 0.012678804, 0.013232426, -0.028414674) * input_0(1.0, -1.0);
    result += mat4(-0.03342378, 0.024959762, 0.041302692, -0.037235666, 0.014914853, 0.17177573, -0.06753152, 0.14947928, 0.029237546, 0.0521142, -0.038982544, 0.044986967, 0.07098554, -0.24771531, 0.013623518, -0.039908756) * input_0(1.0, 0.0);
    result += mat4(0.031826448, 0.099052615, 0.064015195, -0.054316126, -0.043329775, 0.011025048, -3.3846332e-05, 0.010119437, 0.015718922, -0.011503421, -0.03218298, 0.05077847, 0.017858936, -0.36195046, -0.021657517, 0.096014045) * input_0(1.0, 1.0);
    result += mat4(0.04980991, -0.005800828, -0.30834645, 0.047127858, -0.055674203, -0.01119323, -0.054070644, -0.07430081, 0.110262856, 0.020876627, 0.2169579, 0.3370186, 0.036315016, 0.0089300675, 0.18391894, 0.053314403) * input_1(-1.0, -1.0);
    result += mat4(-0.09011134, -0.039504454, -0.110467136, -0.19009599, -0.03303517, 0.007910967, -0.5404279, 0.12164677, -0.08052551, 0.03722024, -0.24233447, 0.043548323, -0.13457885, -0.004149705, -0.46180877, -0.18207796) * input_1(-1.0, 0.0);
    result += mat4(0.02509215, -0.022205597, -0.62694395, 0.04696124, -0.12901281, 0.038671467, -0.84954846, -0.18585083, 0.02881636, -0.031637184, -1.0752854, 0.13224897, 0.04742513, -0.030841198, 1.2910825, -0.060548086) * input_1(-1.0, 1.0);
    result += mat4(0.15290111, 0.023237623, -0.15268068, 0.1428069, -0.15914728, 0.010722286, -0.10540084, 0.13653223, 0.5692923, -0.0021304004, -0.15411288, 0.5354986, -0.087042496, -0.0034678502, 0.09114022, -0.039495997) * input_1(0.0, -1.0);
    result += mat4(-0.04407228, 0.08280672, -0.015286543, 0.02822439, -0.10428773, 0.027023857, 0.00024403453, -0.7881637, -0.27066582, -0.1061635, 0.18015534, -0.085237704, 0.102055974, -0.004742431, 0.08389702, 0.65083706) * input_1(0.0, 0.0);
    result += mat4(0.03912756, 0.0071633975, -0.019043468, 0.021466563, 0.19317915, -0.055327393, 0.03491413, 0.31354266, 0.08389791, 0.05795534, 0.055143975, 0.085946135, -0.47574976, 0.17453112, 0.083520256, -0.44899556) * input_1(0.0, 1.0);
    result += mat4(-0.03791571, 0.034321617, -0.006786512, -0.124531254, -0.031322893, 0.0141724255, 0.016573168, -0.08786858, 0.12927389, -0.039185844, 0.04089177, 0.03631309, 0.028755596, -0.012167779, -0.0052534593, 0.06212894) * input_1(1.0, -1.0);
    result += mat4(0.028673708, 0.030450849, 0.041493062, -0.040304713, 0.02653695, -0.20032948, -0.004140637, -0.050022222, -0.016919835, -0.02989232, -0.0063071265, 0.033360876, -0.08070825, 0.15530382, -0.005377695, 0.07790546) * input_1(1.0, 0.0);
    result += mat4(-0.0013316446, -0.035600655, 0.0104752835, -0.004260621, 0.048953954, -0.06343598, -0.041549675, 0.05123426, 0.024869274, -0.03631356, -0.03726584, -0.0011771973, -0.11963671, -0.055732843, 0.025896262, -0.05914217) * input_1(1.0, 1.0);
    result += vec4(-0.06146998, -0.006935454, 0.004995745, -0.00041516873);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0049912333, 0.0016681887, 0.0085629085, 0.026008125, 0.0033753484, 0.005815509, -0.13000503, -0.011998806, -0.0112327775, -0.008717379, 0.11414192, -0.03639085, -0.415489, 0.010559804, 0.12504007, 0.041423954) * input_0(-1.0, -1.0);
    result += mat4(-0.02307903, 0.010637554, -0.123367436, 0.09425879, 0.014536775, 0.09371762, 0.109372206, -0.19774882, -0.009268794, 0.032736864, 0.26184565, -0.22790968, 0.19747926, -0.09676105, 0.22788455, 0.25480142) * input_0(-1.0, 0.0);
    result += mat4(0.021294959, -0.01394265, -0.038777143, 0.1546437, -0.00046386052, 0.004720562, 0.025926787, 0.092803545, 0.0014768884, -0.047752783, -0.028432176, -0.03811993, -0.054790974, 0.034476645, 0.008563794, -0.14276007) * input_0(-1.0, 1.0);
    result += mat4(0.065198146, -0.02414438, -0.015485795, -2.537377e-05, 0.029523788, -0.021236554, -0.08258026, -0.10486003, -0.07146356, -0.031971376, 0.12743902, 0.033229623, -0.18893789, 0.08280026, -0.3706091, -0.0735847) * input_0(0.0, -1.0);
    result += mat4(0.06322695, 0.020925855, 0.7914649, -0.13032068, -0.037207443, 0.34794632, -0.233257, 0.3229834, -0.0153319985, -0.014309364, -0.16495599, 1.0248544, -0.16776125, -0.3560437, -0.8328513, -0.88552535) * input_0(0.0, 0.0);
    result += mat4(-0.012553752, 0.07845104, -0.057563737, -0.12988131, 0.014359044, -0.42126897, -0.0042651724, -0.28920344, -0.0027956727, 0.058153253, 0.054388836, 0.25121218, -0.024846451, 0.69024515, -0.03764149, 0.43417042) * input_0(0.0, 1.0);
    result += mat4(-0.0682596, 0.0037588563, 0.022770807, -0.00034193764, 0.12626266, 0.053636085, 0.24008888, -0.1334215, -0.032002598, 0.0143908, -0.116281696, 0.010155142, -0.10406715, -0.025247727, -0.11261531, 0.022480398) * input_0(1.0, -1.0);
    result += mat4(0.04054006, -0.10933502, -0.25708875, 0.16028646, -0.00018558622, 0.09632122, 0.036264677, -0.18331304, 0.01192742, -0.047208156, 0.26036283, -0.121078126, 0.010825664, 0.031225216, 0.22897588, 0.059239097) * input_0(1.0, 0.0);
    result += mat4(-0.012383541, 0.20640562, 0.04325503, 0.11866461, 0.017953975, 0.004510394, 0.09298919, 0.17858115, -0.00928275, -0.0050015, -0.104769915, -0.098617874, -0.026751839, 0.110889226, -0.061133023, -0.34486875) * input_0(1.0, 1.0);
    result += mat4(-0.05311052, -0.018685179, -0.07728462, 0.014393837, -0.007893572, 0.0054872087, 0.2711945, 0.048105784, -0.021538949, 0.055750046, -0.075787395, -0.17679064, 0.23791187, -0.0074063614, -0.24424413, 0.001482583) * input_1(-1.0, -1.0);
    result += mat4(-0.008827995, -0.06256608, -0.0674419, 0.15103103, 0.03216727, -0.023166005, -0.13577956, -0.30282542, -0.021538986, 0.023401693, -0.1505101, 0.062071405, -0.046321813, 0.013107054, 0.110851765, 0.3408933) * input_1(-1.0, 0.0);
    result += mat4(0.0074094245, -0.0020311687, -0.015560214, -0.056062903, 0.00646421, -0.12775494, -0.03469884, -0.11608282, -0.012537643, 0.09135498, -0.018043196, -0.0101110535, -0.03289711, -0.06222042, -0.08389611, 0.21476103) * input_1(-1.0, 1.0);
    result += mat4(-0.024666132, 0.037537247, 0.33511788, 0.13203569, -0.2676938, 0.06525618, -0.5889263, -0.03581446, -0.112615824, -0.13045485, 0.006592342, 0.30113372, 0.34795037, -0.03827994, 0.5678173, -0.024941895) * input_1(0.0, -1.0);
    result += mat4(-0.0024936118, -0.13324867, 0.17933169, -0.34708208, -0.017908564, -0.40884048, -0.26117912, 0.55756956, 0.0077283713, 0.36761934, 0.07345824, -0.1734262, 0.15925412, 0.32154834, 0.098969474, -0.66540253) * input_1(0.0, 0.0);
    result += mat4(0.0098813465, 0.19298545, -0.019306872, 0.08095986, 0.0048276912, 0.2758208, -0.017777707, 0.13311319, -0.023517083, 0.2824303, -0.039289575, 0.08004505, 0.021945992, -0.8349723, 0.37596795, -0.42329422) * input_1(0.0, 1.0);
    result += mat4(-0.044668343, -0.04880789, -0.15743683, -0.033357676, -0.119482696, -0.0030002124, -0.12153955, -0.09262493, -0.11695288, 0.043537833, -0.031337027, -0.15144616, 0.10688731, -0.005872524, 0.053040415, 0.09223812) * input_1(1.0, -1.0);
    result += mat4(0.0031460705, -0.038478263, -0.06445477, 0.21644087, -0.003018835, -0.12154782, 0.15691988, -0.30209714, -0.013600385, 0.037990432, 0.010425017, 0.030750427, -0.018022848, 0.116271846, -0.006542311, 0.36808717) * input_1(1.0, 0.0);
    result += mat4(-0.0068642898, 0.015193144, -0.014491428, -0.058326006, -0.014208238, 0.038392745, -0.08549596, -0.12118139, -0.003642598, 0.013406476, -0.018709736, -0.06825711, 0.030338861, -0.2680566, -0.030483538, 0.24792282) * input_1(1.0, 1.0);
    result += vec4(0.021977212, 0.011639527, -0.015738595, -0.075649895);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DN (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.001392978, -0.035977922, 0.020374244, -0.008849956, -0.1610606, 0.33323944, -0.13847667, -0.016697802, -0.011202943, -0.036918156, 0.039610356, -0.0077253985, -0.010734357, 0.00030890922, 0.022584727, -0.03630186) * input_0(-1.0, -1.0);
    result += mat4(0.12549867, -0.056854453, -0.19449474, -0.04601196, -0.145827, -0.114164375, 0.23054802, -0.15756151, 0.02219815, 0.007885649, 0.0004082159, -0.0820571, 0.05492467, 0.053568687, -0.073442094, 0.18995474) * input_0(-1.0, 0.0);
    result += mat4(0.026705226, -0.017804997, -0.07609733, -0.031266827, 0.01619991, 0.009322306, 0.0070647504, -0.099091634, -0.0306384, 0.01314479, -0.004977474, 0.041976176, 0.01773222, -0.0129991565, -0.06925941, 0.035312533) * input_0(-1.0, 1.0);
    result += mat4(0.020699888, 0.025566991, -0.06989757, -0.013076852, -0.0030539385, -0.23301396, 0.23290993, 0.04910741, 0.1432327, -0.14367664, -0.14648955, 0.12507743, -0.07925983, 0.06349705, 0.060855664, 0.08039514) * input_0(0.0, -1.0);
    result += mat4(-0.2749458, -0.08654918, 0.6171868, 0.065660484, -0.00061403355, -0.25007594, 0.11583145, 0.11574161, 0.4971933, 0.4955547, -0.05570916, 0.2873578, -0.06802348, -0.45815933, 0.30737907, -0.9610493) * input_0(0.0, 0.0);
    result += mat4(-0.087786, 0.11742587, 0.053577162, -0.20412765, -0.04757482, -0.095645905, 0.0017400419, 0.033138122, -0.040393047, -0.05726877, -0.06445799, -0.42697427, -0.038924668, 0.09789678, 0.07578578, 0.07365279) * input_0(0.0, 1.0);
    result += mat4(0.0014864448, 0.035985667, 0.0079915, 0.0025794047, -0.0031928823, 0.034556795, -0.01817923, -0.022583403, 0.28211913, 0.6857371, -0.4968426, -0.2480178, 0.009800493, -0.05807524, 0.04287503, -0.010121446) * input_0(1.0, -1.0);
    result += mat4(-0.00034252153, 0.16003117, -0.063165374, -0.04410937, 0.023832617, 0.026521444, -0.026498962, -0.011308509, -0.33251455, -0.020511556, -0.27105007, -0.09895757, -0.10376899, -0.45312726, 0.10857849, 0.20225622) * input_0(1.0, 0.0);
    result += mat4(-0.010250858, -0.035720225, 0.042882156, 0.04884541, 0.0035765856, 0.047183342, 0.013382544, -0.0021027299, -0.0008791434, -0.15784048, 0.19801791, 0.102931626, 0.09105168, 0.026492056, -0.16663378, 0.002647934) * input_0(1.0, 1.0);
    result += mat4(-0.026203617, 0.028020212, 0.037671223, -0.023461962, -0.071729526, 0.11221587, 0.13090329, 0.06269935, 0.039541386, -0.014891275, -0.04854109, 0.08708692, -0.026678404, 0.018927673, 0.0075385286, -0.07295992) * input_1(-1.0, -1.0);
    result += mat4(-0.029231973, -0.042220026, -0.014259704, 0.056297515, 0.0036152052, 0.000564932, 0.054574426, 0.1358567, -0.10028632, -0.023812516, 0.2009758, -0.31961104, 0.0539716, 0.18176107, -0.2162966, 0.5663322) * input_1(-1.0, 0.0);
    result += mat4(-0.060868233, 0.08080216, -0.18578778, -0.15553905, 0.032309614, -0.027452767, -0.09369077, -0.022449853, -0.010117676, -0.00027011483, 0.104721524, -0.090819284, -0.009519577, -0.051937364, 0.022708565, -0.05818025) * input_1(-1.0, 1.0);
    result += mat4(0.0063921325, -0.10843897, -0.021257687, -0.0071931146, 0.316228, 0.9009722, -1.3286697, 0.72716904, 0.008840802, 0.25731483, 0.11598979, -0.1511024, 0.05991683, -0.16686182, -0.1971025, 0.0932703) * input_1(0.0, -1.0);
    result += mat4(0.15441714, 0.045658153, 0.014155774, -0.1020548, -0.13830978, -0.2023764, 0.1557008, 0.54270667, -0.28469524, -0.77986455, -0.008760628, 0.30627593, 0.59062433, 1.0066823, -0.5786787, 0.31270668) * input_1(0.0, 0.0);
    result += mat4(-0.16955978, -0.7066539, 0.8808081, -0.07381691, 0.041415136, 0.19288045, 0.12344012, -0.14213526, 0.0191672, -0.17588691, 0.015400424, 0.11305585, -0.01257026, -0.102851756, -0.025610156, -0.01681896) * input_1(0.0, 1.0);
    result += mat4(0.012476731, 0.025602937, -0.037809122, -0.0007050758, 0.1512286, 0.3645396, 0.056458753, -0.08255773, -0.03680984, -0.16801316, -0.054416753, 0.03764988, 0.0017012451, 0.22813118, 0.07239695, -0.03236521) * input_1(1.0, -1.0);
    result += mat4(-0.05094617, -0.13372952, -0.0010260013, 0.040158074, 0.08672134, 0.51136017, -0.021879327, -0.15314426, 0.09463118, -0.0948654, -0.0492633, 0.0031577365, -0.036773276, 0.25522825, -0.03340035, -0.102712646) * input_1(1.0, 0.0);
    result += mat4(-0.017675823, 0.12513186, -0.070628345, -0.09277717, -0.08874086, -0.14428364, 0.12253491, 0.00947218, -0.034674272, -0.0703456, -0.017553922, -0.0050108894, 0.0020521793, 0.049758524, 0.0685449, -0.004645088) * input_1(1.0, 1.0);
    result += vec4(0.004174465, -0.100520484, -0.08269216, -0.055819392);
    return result;
}

//!DESC ArtCNN C4F8 DN (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0037821343, -0.019909494, 0.0038488137, -0.021667235, -0.059489846, -0.42818376, -0.0023541085, 0.36097887, 0.020401198, -0.0070933816, -0.003606641, -0.005791951, 0.021222603, -0.043975227, 0.007027763, 0.01752913) * input_0(-1.0, -1.0);
    result += mat4(-0.08507553, 0.22302978, 0.03729786, -0.12204004, 0.027794655, -0.13033055, 0.08701364, -0.26354188, 0.013631946, 0.014289169, 0.06873388, -0.032783005, -0.05756997, 0.19776367, -0.12822033, -0.01970165) * input_0(-1.0, 0.0);
    result += mat4(-0.017631782, 0.039720006, 0.035416715, -0.002348914, -0.007264549, 0.059304915, 0.03553036, -0.0050846604, -0.018908734, -0.04085337, -0.019388394, 0.010100123, -0.035012405, 0.042724505, 0.026808733, 0.018442154) * input_0(-1.0, 1.0);
    result += mat4(-0.0011690654, 0.034878515, 0.0051720017, 0.009552592, -0.18182763, 0.34931093, 0.18347555, -0.03669301, -0.13811392, 0.27118242, -0.15137567, -0.13042368, -0.012807075, -0.14723462, 0.046037186, 0.030525759) * input_0(0.0, -1.0);
    result += mat4(-0.18460622, -1.0005858, 0.03725601, -0.16724484, -0.06015783, -0.09895146, -0.08048176, -0.14903904, -0.48358595, -0.06361134, 0.304887, 0.1959041, 0.16237241, -0.69629693, 0.42552316, -0.22961445) * input_0(0.0, 0.0);
    result += mat4(0.008707845, -0.1259278, -0.07454907, 0.01475782, 0.04429656, -0.02226381, -0.023692096, -0.015025399, 0.013928271, -0.14884433, 0.2059412, -0.1763427, 0.024325475, -0.24005081, -0.2516377, -0.017216045) * input_0(0.0, 1.0);
    result += mat4(0.0140762525, 0.01522137, -0.0059741056, 0.013913316, 0.013279955, -0.005203407, 0.028062215, 0.02193574, 0.37131226, 0.82145816, 0.14199904, 0.58495086, -0.082756735, -0.09235543, 0.013622958, -0.05086968) * input_0(1.0, -1.0);
    result += mat4(0.085883446, 0.024911234, 0.07865412, 0.117247194, -0.07214693, -0.042375527, 0.0076070777, -0.0337748, 1.5805129, 0.055382356, 0.18371394, 0.7840171, 0.2981887, 0.017399294, -0.30078304, -0.1396515) * input_0(1.0, 0.0);
    result += mat4(0.07154792, 0.10802865, -0.02039502, 0.027908081, -0.0077025676, -0.014459924, -0.0043611187, 0.0060302448, -0.15371577, 0.22828832, 0.017824337, -0.04611605, -0.15466502, 0.13670358, 0.104086705, -0.012004931) * input_0(1.0, 1.0);
    result += mat4(-0.00035712117, -0.10317355, 0.0395344, 0.015947385, 0.1259204, -0.034606256, -0.16925174, 0.16323113, -0.0982172, 0.059272368, 0.0071792547, -0.08926443, 0.09203014, -0.03071212, 0.0044185966, 0.10353393) * input_1(-1.0, -1.0);
    result += mat4(-0.0117808785, 0.052686814, 0.0052483412, -0.09275909, 0.0026937819, -0.054915592, 0.029256238, -0.083830886, 0.113641255, -0.28295532, 0.23455356, 0.046793077, -0.19249259, 0.2379009, -0.41008082, 0.14892438) * input_1(-1.0, 0.0);
    result += mat4(-0.093546145, -0.16581663, 0.20901008, -0.048787836, -0.0024937354, 0.14566873, -0.023135401, -0.0025251403, 0.06589917, -0.09255655, 0.019891782, -0.043019764, 0.015906837, 0.003672759, 0.06745722, -0.0329683) * input_1(-1.0, 1.0);
    result += mat4(-0.011811323, -0.00014704227, -0.024776796, -0.06125915, 0.209964, 2.1176455, 0.11754634, 0.90604585, 0.13697147, -0.039564893, 0.15038867, 0.1656373, -0.15132451, 0.123686425, 0.06523788, -0.13009436) * input_1(0.0, -1.0);
    result += mat4(-0.2800756, -0.13941947, 0.12597558, -0.061948568, -0.2373244, 0.3419371, 0.28637004, 0.19356552, 1.0108211, 0.9653192, -0.4807749, -0.038400795, -1.4921973, 0.10686667, -0.28928825, -0.19704117) * input_1(0.0, 0.0);
    result += mat4(0.3346076, -0.39035848, -0.3669438, -0.34629196, -0.3746765, 0.08583686, -0.01611475, -0.14694141, 0.25747344, 0.29138926, 0.34346136, 0.19546695, 0.07416318, 0.062352877, 0.048368115, 0.011847532) * input_1(0.0, 1.0);
    result += mat4(0.03635087, 0.07465727, -0.0047394484, 0.030003525, -0.6285924, -0.14133036, 0.007455944, -0.21161976, 0.061628062, 0.01630743, -0.06382339, -0.049711738, 0.07838699, -0.022440659, 0.031191885, 0.10860573) * input_1(1.0, -1.0);
    result += mat4(0.038280006, -0.11198585, -0.029850623, -0.018758185, -0.22823551, -0.10594207, 0.13973467, 0.11146289, -0.03604622, 0.14951348, 0.22492659, 0.056045637, -0.16865566, -0.21820325, -0.15644231, -0.05683626) * input_1(1.0, 0.0);
    result += mat4(-0.44062555, -0.25758213, -0.0544708, -0.28294438, 0.2085501, -0.09226722, -0.028116636, 0.024544833, 0.2410189, -0.07408732, 0.08614932, 0.10445466, -0.11169194, 0.029723119, -0.028429335, -0.026390646) * input_1(1.0, 1.0);
    result += vec4(-0.054949306, -0.06361221, 0.050933123, 0.027802227);
    return result;
}

//!DESC ArtCNN C4F8 DN (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define input_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.052088406, -0.068688914, -0.13242754, -0.13172817, -0.04674839, -0.00063557195, -0.042479437, -0.021666175, -0.10630959, 0.016022056, 0.0016326067, 0.018149309, 0.14154941, -0.053897295, -0.03770263, -0.07827817) * input_0(-1.0, -1.0);
    result += mat4(-0.05104062, -0.108126245, 0.04484794, -0.017357912, -0.15367027, 0.095641196, -0.16346017, 0.08309723, 0.19655399, 0.0115949735, 0.11088093, 0.03136185, -0.0043078973, -0.06462184, 0.04452003, -0.106288545) * input_0(-1.0, 0.0);
    result += mat4(0.06401235, 0.06317641, 0.032116726, -0.011284287, -0.022166219, -0.009274639, -0.08351801, 0.02979269, -0.011261406, -0.014722781, 0.020975132, -0.018296162, -0.005364487, 0.0013337393, -0.017502861, -0.02049659) * input_0(-1.0, 1.0);
    result += mat4(0.28202164, 0.026111387, 0.20019723, 0.07948519, -0.08490838, -0.14234087, 0.006089966, 0.0024300164, 0.018975912, 0.017097415, 0.018233487, 0.021371448, 0.22976352, 0.09324265, 0.06768571, 0.01405001) * input_0(0.0, -1.0);
    result += mat4(0.31331447, 0.4150992, 0.15482092, -0.012636275, 0.30973855, -0.010525511, 0.34033147, -0.023260824, 0.31338266, 0.7436943, 0.2829303, 0.49935728, 0.16936797, 0.05700701, 0.4620311, 0.33544722) * input_0(0.0, 0.0);
    result += mat4(0.09095085, 0.15415983, 0.25079793, 0.35240424, 0.05847606, 0.031165836, 0.11138938, -0.15411456, -0.025835471, -0.0062420825, 0.03616034, 0.19479154, 0.017455209, 0.0024275878, 0.08301888, -0.014933153) * input_0(0.0, 1.0);
    result += mat4(-0.011165052, 0.17492774, -0.04054572, 0.051873207, 0.022004776, -0.004177551, 0.010872144, 0.011520245, 0.00076933467, -0.034966376, 0.010679819, -0.0020674523, -0.028266454, 0.07474145, -0.06955468, -0.011496884) * input_0(1.0, -1.0);
    result += mat4(0.27413657, 0.10683387, 0.2634282, 0.30437088, -0.039421372, -0.053101573, -0.006929393, -0.011810184, 0.06655094, 0.030195234, 0.047166023, -0.008264029, -0.22749308, 0.09519233, -0.12915155, 0.18518358) * input_0(1.0, 0.0);
    result += mat4(-0.04167146, -0.010624274, 0.082930066, 0.12531075, 0.016020274, 0.015185158, -0.031929266, -0.08626974, -0.0042866278, -0.00568825, 0.026307365, 0.013537015, -0.018928546, -0.031936225, -0.1391502, -0.039266907) * input_0(1.0, 1.0);
    result += mat4(0.18849176, -0.08166412, -0.09644392, -0.1311363, -0.09762694, 0.039822113, 0.04614669, 0.068404816, 0.024964245, -0.029126152, 0.0010211994, -0.004130986, -0.04130955, 0.03204062, 0.04365648, 0.045083307) * input_1(-1.0, -1.0);
    result += mat4(-0.230958, -0.043105554, -0.011864224, -0.013677721, 0.07246137, 0.020657152, 0.044826675, 0.018880097, -0.027602088, -0.08064197, 0.010636182, -0.13716711, 0.023703815, -0.070973784, 0.1399758, -0.010447514) * input_1(-1.0, 0.0);
    result += mat4(0.015313555, 0.029247701, -0.094445184, -0.0048250305, -0.022312563, -0.020143727, -0.03615751, -0.00174983, -0.012683918, -0.016968032, -0.02342682, -0.0323442, -0.011789564, -0.02564759, 0.0035656688, -0.049085826) * input_1(-1.0, 1.0);
    result += mat4(-0.11577222, -0.022994917, -0.010570501, -0.017958011, -0.056362126, 0.0045035686, -0.04175328, -0.019198675, -0.046484537, 0.1725082, 0.04216049, 0.045778926, 0.23693012, 0.14682364, -0.023284143, -0.03229053) * input_1(0.0, -1.0);
    result += mat4(0.053924624, 0.10274441, 0.07225762, 0.1504963, -0.19614574, 0.109191455, 0.03983913, 0.28035042, 0.18832274, 0.0006355138, 0.0929483, 0.41523772, -0.020291224, -0.24636264, -0.04890862, -0.059260633) * input_1(0.0, 0.0);
    result += mat4(0.082277685, 0.06784886, 0.09101934, -0.032162726, 0.02207389, 0.00055960286, -0.13026595, -0.11977572, -0.017293926, -0.023007715, 0.14703245, 0.0352555, -0.11340074, -0.0744401, -0.12110031, 0.04585631) * input_1(0.0, 1.0);
    result += mat4(0.040492475, 0.024020946, 0.026373155, 0.05284044, 0.025093539, -0.04817354, 0.035098974, -0.0016550231, 0.048454706, -0.024982551, 0.020199038, 0.020896206, -0.10160941, 0.023340693, -0.06765447, -0.067379445) * input_1(1.0, -1.0);
    result += mat4(0.07013403, -0.06949517, 0.08348611, -0.029426016, 0.021973517, -0.09478133, 0.01953959, -0.09153557, -0.10454555, -0.11176335, -0.034844212, -0.14007667, 0.0031175544, 0.26206675, -0.08781362, 0.17079866) * input_1(1.0, 0.0);
    result += mat4(0.017314399, 0.03628391, 0.00090954686, -0.06969315, 0.018746732, 0.027243132, 0.023783436, -0.041869987, 0.015899273, 0.006214525, -0.056015927, -0.102549136, -0.04797977, -0.067212224, 0.075618155, 0.25218) * input_1(1.0, 1.0);
    result += vec4(0.10728079, 0.16176946, 0.15294653, 0.16772838);
    return result;
}

//!DESC ArtCNN C4F8 DN (Pixel-Shuffle)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *

vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];
    return clamp(output_pix, 0.0, 1.0);
}
