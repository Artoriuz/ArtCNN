// MIT License

// Copyright (c) 2024 Joao Chrisostomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 DS (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(0.059912488, -0.15151615, -0.07705385, 0.08519023) * input_0(-1.0, -1.0);
    result += vec4(0.18476607, 0.28682667, 0.15230726, -0.22033389) * input_0(-1.0, 0.0);
    result += vec4(0.05834031, 0.062311944, -0.14634946, 0.106909595) * input_0(-1.0, 1.0);
    result += vec4(0.03825787, -0.07446352, 0.23090447, -0.36207104) * input_0(0.0, -1.0);
    result += vec4(0.43163127, -0.040185854, 0.4405177, 0.77353895) * input_0(0.0, 0.0);
    result += vec4(0.12045837, 0.28293988, -0.17815877, -0.21875791) * input_0(0.0, 1.0);
    result += vec4(-0.022624487, -0.19881894, -0.16615905, 0.06816403) * input_0(1.0, -1.0);
    result += vec4(0.041313715, -0.045717824, 0.1546232, -0.05202339) * input_0(1.0, 0.0);
    result += vec4(-0.15114143, -0.028808342, 0.13451569, -0.07119192) * input_0(1.0, 1.0);
    result += vec4(-0.019886103, 0.0008498285, -0.10433774, -0.025136635);
    return result;
}

//!DESC ArtCNN C4F8 DS (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(-0.12451394, 0.18751036, -0.025217915, -0.2378826) * input_0(-1.0, -1.0);
    result += vec4(-0.10397491, 0.02799169, 0.37756664, -0.0069234543) * input_0(-1.0, 0.0);
    result += vec4(-0.12715279, -0.038639832, -0.0446342, 0.077979855) * input_0(-1.0, 1.0);
    result += vec4(0.27491233, -0.07581658, -0.16393346, 0.1073521) * input_0(0.0, -1.0);
    result += vec4(0.38907793, -0.18520957, 0.14991222, 0.2340375) * input_0(0.0, 0.0);
    result += vec4(0.011820003, 0.2269759, 0.069444776, 0.13047224) * input_0(0.0, 1.0);
    result += vec4(0.08695018, 0.21967818, -0.1931556, -0.09700809) * input_0(1.0, -1.0);
    result += vec4(-0.38003686, -0.21044084, 0.040475406, -0.12085518) * input_0(1.0, 0.0);
    result += vec4(0.0009693965, -0.038399413, -0.20134974, -0.05813) * input_0(1.0, 1.0);
    result += vec4(0.019385735, -0.03632197, -0.051703896, -0.03602434);
    return result;
}

//!DESC ArtCNN C4F8 DS (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.050055187, 0.063845605, 0.020326076, 0.018211665, -0.0067329234, 0.06814244, 0.020509485, -0.22698733, 0.070528075, 0.28027582, -0.13280517, -0.10726761, 0.057234928, 0.26503512, -0.0057114465, -0.011895324) * input_0(-1.0, -1.0);
    result += mat4(-0.0040012565, -0.12508115, -0.28974015, 0.18539998, -0.3908393, -0.148918, 0.009869118, -0.3333906, 0.01752217, 0.13360168, -0.10399497, -0.183759, -0.26143152, -0.065341555, -0.117174804, 0.2465279) * input_0(-1.0, 0.0);
    result += mat4(0.3082762, 0.19101804, 0.14812113, -0.36243322, 0.07946413, -0.07222512, -0.13427839, 0.04054016, 0.08648988, -0.4832178, 0.2337737, 0.1390582, -0.08500718, -0.182407, -0.011847205, 0.17902099) * input_0(-1.0, 1.0);
    result += mat4(-0.17118733, 0.05036529, -0.053112116, 0.038561825, 0.16427004, 0.6716732, -0.19875085, 0.0858748, 0.12585592, -0.21743877, 0.111372195, 0.009741593, 0.11143705, -0.6514628, 0.115844674, 0.27023143) * input_0(0.0, -1.0);
    result += mat4(0.33181068, 0.01646541, 0.23012973, -0.022476733, 0.004428293, 0.17237553, 0.5444298, 0.13893276, 0.46854743, 0.18059836, -0.64806235, -0.051999465, 0.7506356, -0.073698826, -1.3248276, -0.55608916) * input_0(0.0, 0.0);
    result += mat4(0.39760602, 0.07012101, 0.3805844, -0.060115896, -0.08914209, -0.94062877, 0.73382616, 0.22824271, 0.1323014, -0.08229411, -0.033766925, -0.2906995, -0.46198666, 0.31278595, 1.0376744, 0.80843854) * input_0(0.0, 1.0);
    result += mat4(0.004788812, 0.057570014, -0.17483896, -0.029407324, -0.12184826, 0.13963713, -0.038789283, -0.21024741, -0.038562287, -0.5216743, -0.10756225, 0.012618758, 0.058454003, -0.13809334, 0.00975185, -0.23493242) * input_0(1.0, -1.0);
    result += mat4(-0.042900827, 0.2215063, -0.030022888, 0.04352116, -0.14167239, -0.2609648, 0.24142388, -0.06516319, 0.07520172, -0.23001967, 0.020548688, 0.15470411, 0.41163003, 0.43254584, 0.05483139, 0.37608075) * input_0(1.0, 0.0);
    result += mat4(-0.021793664, -0.20240524, 0.0849397, 0.023680821, -0.08557378, 0.8723178, -0.008827412, 0.34030735, 0.051122535, 0.13906567, 0.03301037, -0.13027227, 0.050983693, 1.234864, -0.0078072147, 0.1927332) * input_0(1.0, 1.0);
    result += mat4(-0.14886609, -0.093053855, 0.00016411734, -0.07034328, 0.24397928, -0.08146291, -0.093348145, 0.3686489, -0.12148546, -0.22529186, 0.13329396, -0.030910827, 0.113397665, 0.255889, -0.08056622, 0.4917915) * input_1(-1.0, -1.0);
    result += mat4(0.24301429, -0.66982746, 0.22901995, 0.5813205, 0.08745903, -0.40884918, 0.25039527, 0.28402153, 0.205555, -0.108515464, 0.27636355, 0.4021092, -0.07437364, -0.41580996, 0.21349926, -0.018776586) * input_1(-1.0, 0.0);
    result += mat4(-0.023013664, -0.21590422, -0.29232177, -0.4665965, 0.011925992, -0.40743774, -0.6789729, -0.6059704, -0.09688019, -0.2843095, -0.060793765, 0.24576882, -0.0427838, 0.39584067, -0.23459272, -0.25509635) * input_1(-1.0, 1.0);
    result += mat4(-0.27122957, -0.3940785, -0.19344786, -0.16595146, -0.15845124, 0.5932407, 0.08916521, -0.19127512, -0.4556442, -0.3798976, -0.23302206, -0.08576856, -0.057745837, -0.12016282, 0.012006045, 0.06311495) * input_1(0.0, -1.0);
    result += mat4(0.5844065, 0.87545335, -0.7033983, 0.0127489995, 0.081150666, -0.56733745, 0.92243564, -0.50466084, 0.03365068, -0.15357427, -0.3773896, -0.046247866, 0.032282736, 0.465233, 0.05541385, 0.027147058) * input_1(0.0, 0.0);
    result += mat4(0.22939584, -0.12805302, 0.53732765, -0.31717148, -0.039526816, 0.5162334, -0.07328047, 0.30148315, -0.23667336, 0.64579564, -0.928584, 0.22118545, -0.15002342, -0.38054544, 0.38484347, -0.11088058) * input_1(0.0, 1.0);
    result += mat4(0.015012519, -0.13605456, -0.07212349, 0.12168298, -0.11735337, 0.13402212, 0.013495539, 0.014055201, 0.1166584, -0.15211728, 0.059224773, 0.28222635, -0.14996357, 0.32766855, 0.12201034, -0.09814366) * input_1(1.0, -1.0);
    result += mat4(0.10370663, -0.12427195, -0.3164372, -0.09070117, -0.3906685, 0.27483675, 0.15211876, 0.0148722185, -0.14096634, -0.2514164, -0.18037786, -0.2799665, 0.17511441, 0.085511945, -0.0035088684, 0.22489296) * input_1(1.0, 0.0);
    result += mat4(0.1581519, -0.15076093, 0.30034778, -0.015587234, -0.14533852, 0.7064691, -0.27495685, -0.14215207, 0.0042714737, -0.48124763, -0.02255552, -0.33446693, 0.14364398, -0.1842551, 0.036358256, 0.24754195) * input_1(1.0, 1.0);
    result += vec4(0.06408136, -0.08175567, -0.104482874, 0.3092614);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.010450951, -0.22419928, -0.048100036, -0.18231453, -0.007927484, 0.11504244, -0.053478003, 0.03730207, 0.10116593, 0.2572259, 0.059027035, 0.4018399, 0.23122784, -0.63189965, -0.047273908, 0.082013585) * input_0(-1.0, -1.0);
    result += mat4(0.1994378, -0.046924762, -0.059561145, -0.06888413, -0.3199052, -0.1327818, -0.17209263, -0.39432842, -0.2558512, 0.23183769, -0.13587318, -0.25522673, 0.25777832, -0.047021884, -0.008284812, -0.16672808) * input_0(-1.0, 0.0);
    result += mat4(0.024983382, -0.33902955, -0.00056690903, 0.048551396, 0.04161214, 0.2242162, 0.1863722, 0.30657694, 0.12377745, 0.078197174, 0.05297979, 0.20127368, 0.20368543, 0.5188172, 0.10505216, 0.5344759) * input_0(-1.0, 1.0);
    result += mat4(0.09648369, 0.24044918, -0.08592125, 0.22591831, 0.13862258, 1.1505717, -0.16939071, 0.65959555, -0.16933872, -0.35364076, 0.04364034, -0.80091333, -0.29761055, -0.74091476, -0.054361943, -0.6576773) * input_0(0.0, -1.0);
    result += mat4(0.20151561, -0.02063444, -0.19742182, 0.09589578, -0.38525435, -0.5232656, -0.11811389, -0.581954, 0.57055223, 0.14331912, -0.1643335, 0.081221, 0.8188464, 0.045555167, -0.91203636, 0.47172642) * input_0(0.0, 0.0);
    result += mat4(0.25618023, 0.114849016, -0.14605445, 0.0859832, 0.129387, 0.13093361, 0.016463898, -0.28426057, -0.16810094, -0.25261256, 0.015058675, -0.19300003, 0.1104264, 0.9234991, 0.2611376, -0.08381688) * input_0(0.0, 1.0);
    result += mat4(-0.0800477, -0.02691951, -0.0082934, 0.27289397, 0.039938826, 0.16592216, 0.07770005, 0.1177115, 0.016158588, -0.056559265, 0.024573963, 0.14644313, -0.027856916, 0.12988545, -0.0002625571, -0.0052081076) * input_0(1.0, -1.0);
    result += mat4(0.1308064, 0.025725612, 0.17059407, 0.017444663, 0.03067828, -0.008475687, -0.21663758, 0.26852694, -0.09685148, -0.22931935, 0.40021583, -0.15042904, -0.36444673, 0.9333006, 1.6399584, -0.32766056) * input_0(1.0, 0.0);
    result += mat4(0.16353813, -0.059155237, 0.07496435, 0.15835328, -0.020784969, 0.33495522, 0.16301456, -0.013383285, -0.00037917358, 0.2874851, 0.07470947, -0.12885357, -0.113385364, -0.20450601, 0.30568722, -0.2964697) * input_0(1.0, 1.0);
    result += mat4(-0.15393952, -0.4461771, -0.00085156393, -0.1303285, -0.0028587948, 0.053159166, 0.09346797, 0.023371425, -0.28858942, -0.15206961, 0.034641474, -0.37610796, 0.12458641, -0.012144975, 0.0022256684, 0.14302939) * input_1(-1.0, -1.0);
    result += mat4(-0.17208652, -1.0180174, 0.34373936, -1.6587197, 0.028301803, -0.9082841, 0.06590679, -1.3381164, 0.30672863, -0.50111413, 0.25219783, 0.06195479, 0.014326655, 0.043386027, -0.04866705, -0.5847065) * input_1(-1.0, 0.0);
    result += mat4(0.14936945, 0.22219452, -0.13298619, 0.52130765, 0.029370822, 0.37889934, -0.18912786, 0.5429413, -0.1355109, -0.10285526, -0.04677478, -0.4530524, -0.21699113, -0.23696521, -0.10923155, 0.18980533) * input_1(-1.0, 1.0);
    result += mat4(-0.27407274, -0.52677983, -0.176286, -0.09601968, -0.0018573955, 0.7967936, -0.5091957, 0.57640105, -0.13560127, -0.348666, -0.11521637, -0.027275419, 0.033517547, 0.4481071, 0.005859828, 0.35339585) * input_1(0.0, -1.0);
    result += mat4(0.65946275, 0.0070528537, -1.2532513, 0.49281776, -0.1800398, 0.07406595, -0.20370106, -0.0423423, -0.2536461, -0.5514576, -0.42367497, -0.16167213, 0.0017315926, 0.021537477, -0.03283398, -0.050428733) * input_1(0.0, 0.0);
    result += mat4(0.06406827, 0.2032321, 0.018267462, 0.2524424, -0.12539127, -0.27835855, 0.44943812, 0.05198864, -0.024710106, 0.4716662, -0.13355553, 0.26446173, -0.08850177, -0.029049672, -0.08668925, -0.32975468) * input_1(0.0, 1.0);
    result += mat4(-0.043910053, 0.06928649, 0.17559995, -0.043813195, 0.024935432, 0.32780713, 0.46172076, 0.026520867, -0.0566315, -0.16066235, 0.20200986, -0.087612376, -0.1481341, -0.0005455248, 0.164149, -0.0047090636) * input_1(1.0, -1.0);
    result += mat4(-0.19579376, 0.19833484, 0.17841636, -0.33976758, 0.25395662, 0.04633774, -0.3906528, 0.2746379, 0.4147926, -0.1322097, -0.78090715, 0.10688448, 0.110113464, 0.0639846, 0.14890659, -0.1641273) * input_1(1.0, 0.0);
    result += mat4(-0.16278443, 0.12576467, 0.31290165, -0.14888258, 0.17422098, 0.11195685, -0.16575815, 0.010688399, 0.032182477, -0.54138035, -0.2775249, 0.05722479, -0.2532645, 0.0653116, -0.017711688, 0.028149005) * input_1(1.0, 1.0);
    result += vec4(0.093458265, -0.036595885, -0.021277262, -0.10340774);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.2120747, 0.13849427, -0.005540005, -0.026300952, -1.3177781, -0.0058226576, -0.00039216373, -0.13415532, -1.1994082, 0.06298202, 0.006313952, 0.0404749, -0.76731414, -0.019338295, 0.016928032, 0.11436032) * input_0(-1.0, -1.0);
    result += mat4(0.5943718, 0.35308164, -0.15654247, -0.1334227, 0.17667264, 0.10787629, -0.050072912, 0.23883978, -0.11634717, -0.008305031, 0.003919575, 0.11716897, -0.14130633, 0.24721776, 0.04537678, -0.005807643) * input_0(-1.0, 0.0);
    result += mat4(-0.32202646, 0.29647473, -0.07023105, 0.04232211, -0.0018407034, 0.11817581, -0.06147149, 0.18393387, 0.08248504, 0.018275956, -0.007673095, 0.06180247, 0.035140757, 0.11963716, 0.015168497, -0.0034674334) * input_0(-1.0, 1.0);
    result += mat4(0.28457537, 0.2492778, 0.097271636, 0.19636475, 0.21131113, 0.041879974, 0.02994049, 0.082784414, -0.06275506, -0.87468106, 0.06794639, -0.83149797, 0.018104771, 0.08372755, -0.03887886, -0.05688048) * input_0(0.0, -1.0);
    result += mat4(0.33321252, 0.08869059, 0.8166565, 0.5220605, -0.078697056, 0.1638241, -0.0043598805, -0.06492853, -0.25573733, -1.1682409, -0.013487317, -0.5206673, 0.08681995, 0.63513416, -0.0015278689, 0.28534922) * input_0(0.0, 0.0);
    result += mat4(0.25395355, 0.5482365, -0.083871946, 0.33083442, -0.03215161, 0.06553629, 0.005417237, -0.10936557, 0.00025141923, -0.09861547, 0.037450038, -0.017898744, 0.019464022, 0.19842975, -0.042230092, 0.014789603) * input_0(0.0, 1.0);
    result += mat4(-0.03989888, 0.0102043385, -0.08066086, -0.31336796, 0.04475823, 0.06388218, -0.025316233, -0.16214946, 0.033090528, 0.029380368, -0.03521092, -0.9691502, -0.3834243, -0.059169002, -0.0026253539, -0.039032944) * input_0(1.0, -1.0);
    result += mat4(0.09900757, 0.08246882, -0.16360322, 0.26149988, 0.05027427, 0.10135793, -0.015449749, -0.020334225, 0.06426485, -0.073615745, 0.03337832, 0.022146657, 0.030169822, 0.18196832, -0.01619852, -0.07488816) * input_0(1.0, 0.0);
    result += mat4(-0.13890177, 0.044919405, 0.031716492, -0.08889274, 0.019315943, 0.068362124, -0.026938774, -0.027672315, 0.031274766, 0.0313576, -0.00034375704, 0.085336, 0.016334347, -0.074669644, 0.020459691, 0.061512586) * input_0(1.0, 1.0);
    result += mat4(-2.591146, -0.09781879, -0.008176988, 0.10895763, -2.3029003, -0.060079563, 0.015798287, -0.0057147555, -2.8973355, -0.028410563, 0.03980519, 0.010176238, -0.018583579, 0.15445822, -0.033026244, 0.12806092) * input_1(-1.0, -1.0);
    result += mat4(-0.2598049, -0.6214285, 0.09581535, -0.018957162, 0.1640135, -0.05315149, 0.018512279, -0.17515913, -0.7981564, -1.1649073, 0.14933491, -0.23541394, -0.010333263, 0.036933366, -0.010280185, 0.10549634) * input_1(-1.0, 0.0);
    result += mat4(0.038087178, -0.28930122, 0.055552173, -0.051071968, 0.09408351, -0.0067926864, 0.018477663, -0.0020466784, 0.037836842, -0.0712542, 0.03684464, -0.0059055784, -0.117881134, -0.11402365, 0.001966318, -0.11470634) * input_1(-1.0, 1.0);
    result += mat4(-0.0882443, -0.34524223, 0.018226063, -0.6833201, -0.1979593, -0.041666955, -0.04718087, 0.27179125, -0.014627256, -0.06249733, 0.012684098, -0.286073, 0.27430388, 0.22303633, -0.013848791, -0.29006663) * input_1(0.0, -1.0);
    result += mat4(0.5099025, -0.46615624, 0.5374562, -0.13400146, 0.030832222, 0.5737438, 0.024590962, 0.19912072, 0.08808027, -1.1097158, -0.022257518, -0.922974, 0.32032004, 1.5913059, -0.0047686067, 0.5783713) * input_1(0.0, 0.0);
    result += mat4(0.12424331, 0.001840085, 0.034581043, -0.34227368, 0.11128116, 0.16126783, 0.007180075, 0.0376717, -0.023067428, -0.0020722828, 0.09714158, -0.08070742, -0.005120122, -0.16178545, -0.0239833, 0.17996596) * input_1(0.0, 1.0);
    result += mat4(-0.5268545, -0.14458573, -0.09492705, -0.20244662, -0.11923414, 0.036922604, -0.00021238596, 0.052515388, 0.06983796, 0.0017999046, 0.012858466, -0.089058764, 0.16161533, 0.099679485, -0.01666597, 0.06535111) * input_1(1.0, -1.0);
    result += mat4(-0.087921984, 0.28898475, 0.091775276, 0.29049104, -0.12822682, 0.011197178, 0.03296401, 0.3108404, 0.0006289776, -0.012917061, 0.021718333, -0.071169674, -0.23072304, -0.15743338, 0.047728382, 0.21870032) * input_1(1.0, 0.0);
    result += mat4(-0.014648398, -0.194995, 0.057062916, 0.15228312, 0.030432222, -0.13877593, 0.0012833482, 0.032630354, 0.0033244088, 0.030099962, 0.019808372, 0.046444412, -0.058178183, -0.15245837, -0.03292392, -0.04239476) * input_1(1.0, 1.0);
    result += vec4(0.019204669, -0.25289604, 0.011099589, 0.010182093);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.40349308, -0.11125318, -0.105800815, -0.17721048, -0.27177835, -0.19756316, -0.18262805, -0.10309219, -0.102937184, -0.028915642, 0.06258201, -0.14979269, 0.013066931, 0.09270555, -0.118493214, 0.15562803) * input_0(-1.0, -1.0);
    result += mat4(0.40122935, 0.167415, -0.2232905, 0.2818877, -0.47501916, -0.14291157, -0.18033126, 0.18737955, -0.089944296, -0.077971324, -0.15877779, -0.017306438, -0.089833364, 0.073150955, 0.07957168, 0.06101307) * input_0(-1.0, 0.0);
    result += mat4(-0.17894776, -0.033846073, -0.4809697, -0.15731867, -0.3048531, -0.015277995, 0.0029887306, 0.12556417, -0.023221292, 0.06788209, 0.03005737, 0.07532593, -0.022582492, -0.061539125, -0.035001703, -0.0151494) * input_0(-1.0, 1.0);
    result += mat4(-0.37768164, -0.17784066, 0.047060758, 0.071946405, -0.49819565, -0.28856903, -0.2012447, 0.05712594, 0.16687316, 0.17496754, 0.26743066, -0.853738, -0.03081587, -0.25338352, -0.05784569, 0.07224633) * input_0(0.0, -1.0);
    result += mat4(0.352025, 0.22943395, 0.2486833, -0.48859748, -0.766865, -0.36866665, -0.0657988, 0.10004334, 0.19637412, -0.28322437, 0.15894128, -0.5282646, -0.2969845, 0.004481597, -0.06851689, 1.1373948) * input_0(0.0, 0.0);
    result += mat4(-0.49096742, -0.26378435, -0.1358927, 0.5567695, -0.36986357, -0.10935897, -0.046564694, -0.06061799, 0.025597567, -0.04738505, 0.0051464066, -0.019184323, -0.13856988, -0.1084641, -0.021095322, -0.058176897) * input_0(0.0, 1.0);
    result += mat4(0.04585932, 0.11953847, -0.06225168, -0.02256968, -0.23006837, -0.12496413, -0.09561745, 0.16313535, 0.16334105, -0.2106609, -0.09129019, -0.08535407, -0.020625679, 0.2202452, -0.14087361, -0.05109372) * input_0(1.0, -1.0);
    result += mat4(-0.12842835, -0.08492924, -0.001953179, -0.08232982, -0.42828873, -0.049579766, -0.10050209, -0.086493865, -0.103367135, -0.22367111, -0.10573386, -0.03587154, -0.011747351, 0.81003696, 0.109255284, 0.016917903) * input_0(1.0, 0.0);
    result += mat4(0.16290203, 0.3130445, 0.19350159, -0.09667471, -0.22819522, 0.0030201706, 0.036136054, 0.022693017, -0.06666088, -0.099718735, 0.030635988, 0.048945192, 0.16013293, 0.28414506, 0.040833905, -0.05143875) * input_0(1.0, 1.0);
    result += mat4(0.23026113, 0.10051067, -0.019199634, 0.27016613, 0.06306476, -0.026164282, -0.14982177, 0.1281047, -0.14793523, 0.0313187, -0.08662065, -0.05607261, -0.01027238, 0.13434055, 0.23929441, -0.002263678) * input_1(-1.0, -1.0);
    result += mat4(0.016991343, -0.34480855, 0.5186545, -0.5433978, 0.19666503, -0.047222435, -0.078445256, 0.16813794, 0.16089003, 0.26515573, 0.35822454, -0.66732866, 0.30528983, 0.16199733, 0.27955905, -0.2213477) * input_1(-1.0, 0.0);
    result += mat4(0.0033846, 0.10770314, 0.39517725, 0.27825746, 0.1856309, -0.071344726, -0.113138914, -0.017674457, 0.020847036, 0.23456493, 0.0056008073, 0.057165775, 0.25767592, 0.078861885, 0.2508098, -0.1442302) * input_1(-1.0, 1.0);
    result += mat4(0.7163194, 0.21011102, 0.3947102, -0.116231166, 0.17515834, 0.15998462, -0.07945453, 0.07423553, -0.1470946, 0.13874416, 0.024063677, 0.15000542, 0.2152208, -0.00586005, 0.34862557, -0.007362946) * input_1(0.0, -1.0);
    result += mat4(0.030214084, 0.47323504, -0.5272697, 0.114655994, 0.2504755, 0.28085443, -0.18922693, 0.49432367, 0.26265272, -0.895538, 0.094765596, -0.13818337, -0.16581939, -0.20650858, -0.040453814, 0.82474184) * input_1(0.0, 0.0);
    result += mat4(-0.18432447, 0.16169472, -0.04784261, 0.19949554, 0.2871623, 0.0064461078, -0.033463772, 0.05129114, -0.18217637, 0.2680299, -0.023843378, 0.04614112, 0.20382279, -0.094896026, 0.20584774, -0.14525312) * input_1(0.0, 1.0);
    result += mat4(-0.04744991, -0.27792248, -0.22223353, 0.006765097, 0.17672984, 0.13068151, 0.054473124, -0.09203761, -0.06508578, -0.046199147, 0.00917707, 0.07583459, 0.2542508, 0.03255925, 0.13340524, -0.08097892) * input_1(1.0, -1.0);
    result += mat4(-0.4899433, -0.41954067, -0.06725681, 0.2691168, 0.22619115, 0.35847068, 0.20601717, 0.15042655, 0.021996977, -0.109199606, -0.021414956, 0.0733858, 0.06526743, 0.59326017, 0.30044016, -0.15029693) * input_1(1.0, 0.0);
    result += mat4(0.34089425, 0.17059188, 0.061999604, -0.08693264, 0.42021987, -0.1441788, 0.013415288, 0.03956268, -0.07252939, -0.08457678, -0.050242957, 0.05145459, 0.23184112, -0.32507184, 0.15147379, 0.039855316) * input_1(1.0, 1.0);
    result += vec4(0.06474984, -0.37241042, 0.041514225, -0.31699312);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.0060018203, 0.019632865, -0.013422453, 0.0057287044, 0.14760292, -0.017138582, 0.16862702, 0.03734834, 0.10210469, 0.0006219995, 0.081711195, 0.0056875935, -0.03234891, -0.13193846, -0.037018, -0.058311425) * input_0(-1.0, -1.0);
    result += mat4(0.094032384, 0.026206288, 0.035279144, 0.00016392287, -0.38888085, 0.06155307, 0.19049034, 0.0788569, -0.42213368, -0.04454061, 0.07171294, 0.07624255, 0.2833031, 0.2486336, -0.42640093, 0.025564719) * input_0(-1.0, 0.0);
    result += mat4(-0.021045608, -0.009407808, -0.035696197, -0.004767023, -0.064355314, 0.053824496, 0.124561585, 0.009751911, -0.0048749414, -0.25133023, -0.26638368, 0.054993458, -0.13441676, 0.17639405, -0.3004762, 0.014795435) * input_0(-1.0, 1.0);
    result += mat4(0.044520553, 0.104880154, -0.007456803, 0.052271746, -0.4289428, -0.08992937, 0.007349785, -0.11697087, -0.4085477, -0.122517675, -0.024983965, -0.12616429, -0.17717133, -0.12764947, -0.05626842, -0.10702513) * input_0(0.0, -1.0);
    result += mat4(-0.42707726, -0.26312926, 0.40075934, -0.11025628, -0.74108434, 0.49963155, -0.74979067, 0.1544721, 0.60526204, 0.744338, 0.40060413, 0.67771876, -0.13448486, 0.26687264, -0.43944645, 0.10142657) * input_0(0.0, 0.0);
    result += mat4(0.013262719, -0.35168442, -0.37092242, 0.0056939176, -0.021585058, 0.40898272, -0.0054707048, 0.21612246, 0.115050614, -0.34434694, 0.23177196, 0.023838436, 0.1698483, 0.1022234, -0.041885633, 0.08411045) * input_0(0.0, 1.0);
    result += mat4(0.14095257, 0.13075548, 0.060763728, 0.10277971, 0.06350709, -0.108779386, 0.1112567, -0.040194746, 0.053965714, 0.050962225, 0.05216326, 0.025034575, -0.04670511, -0.027019776, 0.050639585, -0.037836995) * input_0(1.0, -1.0);
    result += mat4(-0.040627386, -0.19025171, 0.10263391, -0.42331004, 0.03650065, -0.004392901, -0.3046609, 0.13672435, 0.023828864, -0.0764751, 0.019217195, -0.0137215, -0.010099844, 0.016320366, -0.057027463, 0.024942657) * input_0(1.0, 0.0);
    result += mat4(-1.3258919, -2.37838, -0.27422398, 0.35281488, -0.068891354, 0.112920254, -0.13586189, 0.10805038, -0.08538641, 0.056757905, -0.06811098, 0.012784939, 0.043620355, 0.008323283, 0.039948422, -0.004813546) * input_0(1.0, 1.0);
    result += mat4(-0.015510123, 0.021467524, -0.030779459, -0.009269682, -0.0065660924, -0.052782066, 0.03000602, -0.024429712, -0.08183291, -0.015190517, 0.017052779, -0.0030559907, 0.21202825, 0.12854922, 0.06358158, 0.0245946) * input_1(-1.0, -1.0);
    result += mat4(0.22641852, 0.10930034, -0.2707094, 0.038107883, 0.14477398, 0.0007597289, -0.118807696, -0.0072679524, 0.015878348, -0.018061548, 0.12342973, -0.048329037, 0.03563311, -0.063694045, 0.11057538, -0.06846139) * input_1(-1.0, 0.0);
    result += mat4(0.238407, 0.2064545, 0.031750415, -0.00097351137, 0.030483348, 0.052772883, 0.094614565, -0.0046642385, -0.031337604, 0.014258089, -0.05453242, -0.010625908, 0.14210054, 0.12815164, 0.003191622, -0.0069281342) * input_1(-1.0, 1.0);
    result += mat4(0.29463023, 0.20689997, -0.069298975, 0.16398838, -0.008987376, 0.0043423227, 0.08093668, -0.012629727, 0.05529192, 0.039212894, 0.08363084, 0.022451669, 0.056969345, -0.044877507, -0.21512856, -0.045750216) * input_1(0.0, -1.0);
    result += mat4(0.27795127, -0.1892804, 0.3339315, -0.016227659, -0.017701475, 0.10477389, 0.24142429, -0.025354356, -0.09038527, -0.18364884, 0.07210507, -0.16494021, -0.18609084, 0.0040853596, -0.17655304, 0.0074457466) * input_1(0.0, 0.0);
    result += mat4(0.17100541, -0.090966836, -0.014887223, 0.028037054, 0.01985335, -0.15116246, -0.04118966, 0.06178511, -0.14300191, 0.2728844, 0.21522279, -0.119248316, -0.08372223, -0.16647033, -0.34689444, 0.014477476) * input_1(0.0, 1.0);
    result += mat4(0.31704664, 0.02495183, -0.03208745, 0.0062938156, 0.098099016, -0.016069595, 0.092336215, 0.007750948, -0.058149382, -0.020086821, 0.04319231, 0.0020140985, -0.0005637785, 0.10954224, -0.009614974, 0.045900088) * input_1(1.0, -1.0);
    result += mat4(0.21119526, -0.01834634, -0.13604762, -0.06046671, -0.035660323, -0.04352364, 0.1672361, -0.08386569, -0.07194454, 0.08506529, 0.03561371, 0.089092016, -0.03956435, -0.23604466, 0.04338721, -0.07484683) * input_1(1.0, 0.0);
    result += mat4(-0.00083029905, 0.08420849, -0.102469854, 0.019029306, -0.039383505, 0.02894608, 0.12056199, -0.065446876, -0.06879053, -0.061318196, 0.13745302, -0.03926422, 0.05283834, 0.12941684, 0.008228874, -0.024479877) * input_1(1.0, 1.0);
    result += vec4(-0.007624661, 0.012759331, 0.07087726, -0.027952235);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.018974649, 0.0073166136, 0.051005684, 0.017323926, -0.21356581, -0.11413403, -0.08027768, -0.08693342, 0.028168164, 0.030521141, 0.03330646, -0.0021767037, -0.06822539, -0.008071281, -0.0822517, -0.027650364) * input_0(-1.0, -1.0);
    result += mat4(0.060847927, -0.0073844655, -0.10013381, 0.035689164, -0.17705789, 0.011068345, 0.08566127, 0.007663089, -0.08301103, -0.13163602, 0.098074876, -0.14091392, 0.3664505, 0.53591335, 0.21971744, 0.18239172) * input_0(-1.0, 0.0);
    result += mat4(0.09165832, -0.05722514, 0.038658448, -0.0021994764, -0.4222354, -0.16097349, -0.16241387, -0.08433619, -0.4960698, 0.13533433, -0.094292976, 0.052122224, 0.042194348, 0.32650328, -0.04810943, 0.09372963) * input_0(-1.0, 1.0);
    result += mat4(0.033216737, 0.07009666, 0.07476217, 0.043906078, 0.104396224, 0.14521982, -0.043850075, 0.13385357, -0.15128893, 0.097252205, -0.09602468, -0.014590001, -0.062152565, 0.17907718, 0.0057475823, 0.16878784) * input_0(0.0, -1.0);
    result += mat4(-0.3580238, -0.2559995, -0.09342885, -0.029498607, 0.100516535, 0.6797103, 0.106400505, 0.28912732, 0.599451, -0.00063338573, 0.696923, 0.5595996, 0.0023930452, 0.44367903, 0.1822695, 0.27289113) * input_0(0.0, 0.0);
    result += mat4(-0.36906064, 0.14376596, 0.12677518, -0.061951958, -1.0392698, -0.09439457, -0.24524929, -0.094404615, 0.111246474, -0.18725644, -0.6401409, 0.029599816, -0.70877767, 0.0751314, 0.14097212, 0.102719165) * input_0(0.0, 1.0);
    result += mat4(0.08191326, -0.14506692, -0.0372676, -0.16891633, -0.00042157123, -0.09078799, -0.096482396, -0.04594433, 0.035356175, -0.050835148, 0.005961426, -0.003948275, 0.010108215, -0.03796447, 0.0042534326, 0.006206843) * input_0(1.0, -1.0);
    result += mat4(-0.07271376, 0.8807212, -0.22209604, 1.020808, 0.3244154, 0.24521275, 0.052679993, 0.19795996, -0.19115473, 0.08147427, 0.0031724467, 0.0683999, -0.063029505, 0.080354884, 0.035218354, 0.0531988) * input_0(1.0, 0.0);
    result += mat4(-1.2597109, -1.1342667, -0.9962998, -0.1834756, 0.1347315, -0.047597352, -0.23810373, -0.059990946, 0.113832906, 0.014376559, 0.0018006765, -0.08227208, 0.16226816, 0.018884258, -0.12500538, -0.0063436036) * input_0(1.0, 1.0);
    result += mat4(-0.21070716, 0.055478137, -0.017794538, 0.038518105, 0.06461707, -0.03617205, 0.025637846, -0.005392668, 0.048467565, -0.0153240105, -0.045648422, -0.010754278, 0.0963936, 0.031062905, 0.089826636, 0.020854587) * input_1(-1.0, -1.0);
    result += mat4(0.047452774, 0.26270548, -0.015852587, 0.15393643, 0.093036324, 0.082440294, -0.034707446, 0.07578997, 0.13991658, -0.029970445, 0.02084473, -0.06500133, 0.12448066, -0.0029195272, -0.04364129, -0.039357327) * input_1(-1.0, 0.0);
    result += mat4(-0.029872667, 0.022415517, 0.08364908, -0.04600764, 0.0078203, -0.07238142, -0.097542234, -0.061170317, 0.018797692, 0.07230761, 0.052888233, 0.009623079, 0.1724853, 0.096574284, -0.20744404, -0.0066767526) * input_1(-1.0, 1.0);
    result += mat4(0.15818658, 0.028463073, 0.2066309, -0.0711957, 0.06294818, 0.00792398, 0.11267987, 0.007998222, -0.05454231, -0.071898974, -0.04001528, -0.02062662, 0.09706728, 0.10477865, 0.35968903, -0.07015832) * input_1(0.0, -1.0);
    result += mat4(-0.92440474, -0.021439075, -0.2747199, 0.07787201, -0.021531079, 0.23013332, -0.1895415, 0.021463044, -0.012598015, -0.22453916, -0.31191215, 0.011078509, -0.66247064, 0.23433831, -0.08023652, 0.123586535) * input_1(0.0, 0.0);
    result += mat4(-0.5791645, 0.01406545, 0.20302768, -0.07177921, -0.4628557, -0.06923236, -0.21459842, -0.0701589, 0.7462778, -0.024927713, 0.090861894, -0.021876026, -0.8744342, 0.23518464, -0.5290329, 0.0568983) * input_1(0.0, 1.0);
    result += mat4(-0.10804718, 0.045926698, 0.02752914, 0.054332558, 0.1172344, -0.017104724, -0.0346362, 0.009074496, -0.025740528, 0.004046493, -0.10846073, 0.042176176, 0.21613449, 0.0073355315, 0.13641116, 5.6389323e-05) * input_1(1.0, -1.0);
    result += mat4(-0.41771358, 0.31975472, 0.067875065, 0.15050346, 0.07514282, 0.057578202, -0.08099126, -0.004860941, 0.32660294, -0.17641492, 0.18427624, -0.08590277, -0.36230558, 0.006583198, -0.102108985, 0.055976458) * input_1(1.0, 0.0);
    result += mat4(0.14009567, 0.18769968, -0.046121266, 0.01827286, 0.14963384, 0.047416564, -0.109653495, 0.0025018936, 0.12830427, -0.27239743, -0.05968975, -0.07149637, -0.24109624, 0.13018504, 0.030413387, 0.03765485) * input_1(1.0, 1.0);
    result += vec4(0.032713845, 0.011609673, -0.05199043, -0.043476224);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.054881066, -0.009929772, -0.029335247, 0.004890617, 0.0634309, -0.02382561, 0.20704001, -0.01502626, 0.026661316, -0.0030668522, 0.048490625, -0.049053315, -0.07228465, 0.018767126, -0.20221952, 0.099800736) * input_0(-1.0, -1.0);
    result += mat4(0.04608683, 0.00069536385, -0.04504348, -0.06381677, 0.18298616, 0.0054476364, 0.8503409, 0.25385684, 0.06509244, -0.00067861576, -0.19077174, 0.1834505, -0.09750707, -0.011401012, -0.2005825, -0.18900234) * input_0(-1.0, 0.0);
    result += mat4(-0.046323325, -0.037378833, -2.1904278, -0.067967504, -0.029345183, 0.0038017903, -2.9932914, -0.09923836, 0.021937655, 0.027283676, -0.7323906, 0.0066228234, 0.048188437, 0.03627321, -6.197214, 0.35172716) * input_0(-1.0, 1.0);
    result += mat4(0.040013954, -0.00014877437, -0.06308413, 0.024620458, 0.6054424, -0.003297006, 0.059364066, -0.019998562, -0.1413812, -0.018356258, -0.047552425, 0.26806837, -0.7565088, 0.0029380037, -0.010702837, -0.0431621) * input_0(0.0, -1.0);
    result += mat4(0.2009937, -0.0034961207, 0.15065126, 0.00382514, 0.20547809, -0.05238813, -0.0553655, 0.46022972, 0.33987188, -0.06624078, 0.06966883, -0.347261, 0.82758397, 0.14291911, 0.2537803, -0.82180005) * input_0(0.0, 0.0);
    result += mat4(0.1105888, 0.029845877, -0.35871333, 0.256669, -0.12357277, -0.063802324, -0.06334766, -0.19685328, 0.02907584, 0.11099157, 0.11157635, 0.1895439, 0.10648598, 0.21756832, 0.2833824, 0.341944) * input_0(0.0, 1.0);
    result += mat4(-0.009139265, 0.0049069556, -0.061732072, 0.015605783, 0.11064409, 0.0075069983, -0.0036061313, 0.13700241, -0.11404008, -0.008923794, 0.03605293, -0.08262935, 0.0058994135, 0.011596853, 0.014144814, -0.041237652) * input_0(1.0, -1.0);
    result += mat4(-0.04800871, 0.04183598, 0.042479206, -0.0051538837, 0.026462168, 0.101541735, -0.05226729, 0.13217722, 0.032649603, 0.07076099, -0.044126183, 0.016175069, 0.09639529, -0.23477486, -0.020200685, -0.0152028) * input_0(1.0, 0.0);
    result += mat4(0.020574953, 0.107222915, 0.082251385, -0.08653204, -0.032735888, 0.034106303, -0.020169735, 0.027788764, 0.018938955, -0.06605399, -0.033186555, 0.06210742, 0.04043708, -0.34883946, -0.037818767, 0.098042645) * input_0(1.0, 1.0);
    result += mat4(0.05448922, -0.004602371, -0.3163812, 0.036421426, -0.07448481, -0.0063614477, -0.0755353, -0.08745595, 0.09817337, 0.0169922, 0.30671218, 0.33758602, 0.044863608, 0.0072499183, 0.16285937, 0.07171064) * input_1(-1.0, -1.0);
    result += mat4(-0.10163259, -0.041627772, 0.122550376, -0.13827619, -0.057710648, 0.0004913576, -0.64016974, 0.07452394, -0.03761234, 0.021650113, -0.35379133, 0.12018944, -0.13629991, 0.0020871006, -0.63738734, -0.16593534) * input_1(-1.0, 0.0);
    result += mat4(0.009031333, -0.02570063, -0.3370184, 0.037892554, -0.12026671, 0.05410386, -0.54270154, -0.15579748, 0.028175708, -0.014263669, -1.0624214, 0.13201512, 0.04655482, -0.044877864, 0.94528615, -0.07098268) * input_1(-1.0, 1.0);
    result += mat4(0.19855633, 0.03722087, -0.24231018, 0.16472262, -0.19241898, 0.007412142, -0.08731637, 0.11594522, 0.5899071, -0.0024397178, -0.17080359, 0.5966228, -0.045382086, -0.003084861, 0.07173188, -0.024508286) * input_1(0.0, -1.0);
    result += mat4(0.0027491506, 0.06476027, -0.021327624, 0.00042605642, -0.17274958, -0.007013341, 0.018153675, -0.6869878, -0.27930388, -0.08198472, 0.23257402, -0.113455236, 0.18327868, 0.014050927, 0.06562945, 0.52673185) * input_1(0.0, 0.0);
    result += mat4(0.05025941, 0.0249366, -0.023521574, 0.04509088, 0.25927013, -0.04063068, 0.0058295745, 0.3443366, 0.09598643, 0.06869957, 0.068902776, 0.13284853, -0.5110662, 0.23168181, 0.08246502, -0.39284748) * input_1(0.0, 1.0);
    result += mat4(-0.04579157, 0.033076767, 0.02078355, -0.095511116, -0.07730527, 0.010802827, 0.016733116, -0.09479294, 0.14106533, -0.035727277, 0.07260397, 0.0390298, 0.05989639, -0.009723276, -0.002004776, 0.04985645) * input_1(1.0, -1.0);
    result += mat4(0.010217299, 0.08073333, 0.05324195, -0.021378037, 0.050109107, -0.17026663, -0.011538797, -0.042994462, -0.027208691, -0.028832786, 0.027245408, 0.05771881, -0.099827684, 0.13179456, -0.019349722, 0.06320027) * input_1(1.0, 0.0);
    result += mat4(0.004192449, -0.012102815, 0.019346593, -0.009661804, 0.0687996, -0.061514433, -0.03385426, 0.037048064, 0.024074512, -0.05686772, -0.018922472, -0.0022362021, -0.1730406, -0.087352596, 0.044541676, -0.039151464) * input_1(1.0, 1.0);
    result += vec4(-0.04579288, -0.0035053582, 0.004276513, 0.0051358123);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.014249054, -0.00644616, 0.01512387, 0.016698387, 0.02711867, 0.012633021, -0.11822338, -0.011408875, -0.012496436, -0.007681448, 0.055594154, -0.041183293, -0.4412808, 0.016420187, 0.18430369, 0.057086993) * input_0(-1.0, -1.0);
    result += mat4(-0.04240404, 0.009324764, -0.10998922, 0.13897519, 0.02026673, 0.09690146, 0.035970896, -0.07832761, -0.037580293, 0.033193834, 0.2986079, -0.30919874, 0.18937622, -0.09251697, 0.2386848, 0.27797234) * input_0(-1.0, 0.0);
    result += mat4(0.010278298, -0.0066647143, -0.017471084, 0.20977709, -0.009044133, 0.008133769, 0.024215527, 0.18404138, 0.018899072, -0.051191073, -0.024927795, -0.039629932, -0.05655739, 0.044463478, -0.020507267, -0.186071) * input_0(-1.0, 1.0);
    result += mat4(0.109749846, -0.03470193, 0.014065207, 0.019659486, 0.072262906, -0.00062314386, -0.13352425, -0.067298874, 0.0023923698, -0.026984079, 0.20337707, 0.035099804, -0.23577191, 0.082380906, -0.43973345, -0.14536755) * input_0(0.0, -1.0);
    result += mat4(0.04753326, 0.03999743, 0.75914717, -0.16959909, -0.06066105, 0.3443771, -0.20513172, 0.1177185, -0.024055067, -0.011740327, -0.20460728, 1.0665545, -0.11423606, -0.35436296, -0.8350184, -0.8480951) * input_0(0.0, 0.0);
    result += mat4(-0.02842238, 0.053283762, -0.12637292, -0.14003088, 0.046032555, -0.44514367, -0.0084856, -0.3803515, 0.002879893, 0.003644343, 0.09361991, 0.29565912, -0.032955904, 0.6436727, -0.04894877, 0.4124504) * input_0(0.0, 1.0);
    result += mat4(-0.07001351, 0.018946897, 0.033251327, -0.00613966, 0.16319004, 0.072633654, 0.24572246, -0.1846444, -0.03859666, 0.010285299, -0.13487893, 0.033239856, -0.1344064, -0.03589139, -0.08632894, 0.08048628) * input_0(1.0, -1.0);
    result += mat4(0.048319254, -0.12940677, -0.32793537, 0.19026236, -0.01576322, 0.0898015, 0.08308881, -0.20898637, 0.0024064896, -0.035243608, 0.26800382, -0.15044217, 0.0011825495, 0.039316695, 0.25348443, 0.025941655) * input_0(1.0, 0.0);
    result += mat4(-0.0041430583, 0.22555126, 0.086695835, 0.05935216, 0.023109773, -0.04685599, 0.110133536, 0.19812623, -0.009899378, -0.03987308, -0.08809747, -0.11432925, -0.03904515, 0.14687218, -0.054723807, -0.33393154) * input_0(1.0, 1.0);
    result += mat4(-0.043820728, -0.018201651, -0.05725149, 0.026414141, 0.0018270902, -0.011044054, 0.2951386, 0.08074081, -0.02113281, 0.050427, -0.09567581, -0.21608472, 0.24743907, 0.0034632948, -0.21956217, -0.01814033) * input_1(-1.0, -1.0);
    result += mat4(-0.0058579813, -0.06423991, -0.030125074, 0.13807589, -0.004545599, -0.036742404, -0.10305819, -0.36547798, -0.01261807, 0.008758445, -0.120162494, -0.024465004, -0.01735833, 0.0113936355, 0.07449637, 0.40645358) * input_1(-1.0, 0.0);
    result += mat4(0.0021639634, -0.0055309823, -0.035129867, -0.09091386, 0.008686163, -0.10887139, -0.03140211, -0.21326853, -0.01875279, 0.073902585, -0.013085209, -0.042831223, -0.01611456, -0.059140753, -0.08314141, 0.23047264) * input_1(-1.0, 1.0);
    result += mat4(-0.0084675895, 0.031047706, 0.35672942, 0.101364136, -0.254387, 0.0760783, -0.57752925, -0.09637283, -0.098258115, -0.15363961, 0.023717465, 0.3223483, 0.31692263, -0.044797126, 0.5030971, 0.02047202) * input_1(0.0, -1.0);
    result += mat4(0.0007568145, -0.13127433, 0.13370815, -0.25826427, 0.0265359, -0.43104, -0.30384213, 0.61925304, 0.023383075, 0.34377652, 0.036224026, -0.106294766, 0.14055972, 0.3469059, 0.17089485, -0.672341) * input_1(0.0, 0.0);
    result += mat4(-0.0011355223, 0.18049745, -0.01976058, 0.07378576, -0.024573477, 0.25228244, -0.020731568, 0.21081966, -0.046491034, 0.3371453, -0.032193564, 0.11383937, 0.034051437, -0.80257607, 0.44079208, -0.39937252) * input_1(0.0, 1.0);
    result += mat4(-0.039332885, -0.05578743, -0.17127052, -0.013688266, -0.107502684, -0.020161385, -0.11367608, -0.017531957, -0.14264792, 0.007913497, -0.028399128, -0.12116514, 0.090838335, 0.0027107992, 0.043700896, 0.037389766) * input_1(1.0, -1.0);
    result += mat4(0.012168647, -0.024300992, -0.05636947, 0.2549459, -0.039608665, -0.10872315, 0.17817838, -0.3233424, -0.021064486, 0.06593871, -0.019385582, 0.027900646, 0.019969463, 0.09921287, -0.0600224, 0.36288905) * input_1(1.0, 0.0);
    result += mat4(-0.007519426, 0.03558952, -0.02051394, -0.043245956, -0.006869415, 0.05924672, -0.08020494, -0.11318332, -0.0121826595, 0.058076236, -0.03909936, -0.09673113, 0.023884824, -0.27402276, -0.09640263, 0.24337628) * input_1(1.0, 1.0);
    result += vec4(0.011826455, 0.01494026, -0.010918734, -0.055808567);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 DS (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0065413895, -0.040182848, 0.015080015, 0.011686418, -0.014518184, 0.36486942, -0.26798773, -0.12801984, -0.018101867, -0.06527489, 0.032176185, 0.0059043295, -0.010318651, -0.0069673164, 0.036895085, -0.03946189) * input_0(-1.0, -1.0);
    result += mat4(0.11368833, -0.041921224, -0.18033886, -0.04983922, -0.046260078, -0.10988525, 0.15384072, -0.11977004, 0.02007355, -0.0070498995, -0.0068810703, -0.1025692, 0.052965693, 0.09475183, -0.05085109, 0.19724302) * input_0(-1.0, 0.0);
    result += mat4(0.019640636, -0.02221156, -0.08385739, -0.0327412, 0.008344106, 0.008515822, 0.003937656, -0.11275353, 0.0034569844, 0.04785954, -0.016508723, 0.05605505, 0.00067841646, -0.022123894, -0.06708031, 0.028300207) * input_0(-1.0, 1.0);
    result += mat4(0.008804701, 0.040227167, -0.09891147, -0.028417243, 0.015934845, -0.18434057, 0.2606865, 0.052671093, 0.14122818, -0.12996493, -0.1685261, 0.1341776, -0.07577412, 0.01293582, 0.07554239, 0.06730998) * input_0(0.0, -1.0);
    result += mat4(-0.24263169, -0.12327134, 0.64053625, 0.04263933, -0.005034689, -0.26231703, 0.078621626, 0.111808494, 0.4863394, 0.5273302, -0.049852896, 0.2939545, -0.07121626, -0.44123566, 0.22177523, -0.96543956) * input_0(0.0, 0.0);
    result += mat4(-0.064327955, 0.1265779, 0.065638915, -0.16570793, -0.049825504, -0.10224969, 0.0026543501, 0.053068228, -0.039036423, -0.078788444, -0.07006333, -0.40573582, -0.01970132, 0.098535016, 0.10294952, 0.09939908) * input_0(0.0, 1.0);
    result += mat4(0.006605342, 0.044882566, -0.0033272067, 0.0007295414, 0.009182165, 0.0441106, -0.055041373, -0.028227657, 0.24301139, 1.1421742, -0.73083615, 0.04502389, 0.016479287, -0.066874824, 0.055894505, -0.0014254324) * input_0(1.0, -1.0);
    result += mat4(-0.01717515, 0.092596956, -0.041293234, -0.056142002, 0.023546686, -0.004249569, -0.019653745, -0.009232545, -0.33449414, -0.020252373, -0.21704462, -0.15288028, -0.08830583, -0.41164702, 0.06553661, 0.2236893) * input_0(1.0, 0.0);
    result += mat4(-0.0021578942, 0.0064374865, 0.030547159, 0.02763199, 0.010864631, 0.055985015, 0.017152265, -0.0036521312, 0.0031239965, -0.1974657, 0.13319513, 0.116616376, 0.09778807, -0.03296492, -0.19520581, 0.023920277) * input_0(1.0, 1.0);
    result += mat4(-0.029063318, 0.022739097, 0.044518624, -0.0330806, 0.014731322, 0.12649252, 0.080528185, 0.030678853, 0.040250983, 0.010765885, -0.03506243, 0.105301134, -0.006948473, 0.02027648, -0.033241764, -0.09748047) * input_1(-1.0, -1.0);
    result += mat4(-0.035408027, -0.033417985, -0.021133125, 0.048547037, 0.022672353, -0.030541632, 0.04715909, 0.1080187, -0.14492697, -0.037033007, 0.26376712, -0.35907328, 0.09338133, 0.19597359, -0.2321201, 0.58936936) * input_1(-1.0, 0.0);
    result += mat4(-0.0037749643, 0.06777411, -0.20123604, -0.1501446, 0.034066692, -0.020531734, -0.09658995, -0.048335604, -0.022161989, -0.034673303, 0.12589802, -0.080403246, 0.004927396, -0.053124532, -0.0056567066, -0.068430364) * input_1(-1.0, 1.0);
    result += mat4(0.00030350106, -0.1103329, -0.030084005, 0.002717889, 0.2652754, 0.899143, -1.2839704, 0.60794884, -0.007876898, 0.24476399, 0.17982516, -0.112990975, 0.0705019, -0.13577218, -0.2391366, 0.102730796) * input_1(0.0, -1.0);
    result += mat4(0.14457573, 0.05435856, -0.01468279, -0.072281115, -0.14555494, -0.24240875, 0.1501145, 0.51376545, -0.2637649, -0.7745976, -0.027670315, 0.30719858, 0.62399346, 1.0098965, -0.5909462, 0.30509537) * input_1(0.0, 0.0);
    result += mat4(-0.21552573, -0.54916203, 0.87799394, -0.058293402, 0.0393243, 0.17262438, 0.13827893, -0.14398761, -0.024041174, -0.2274779, -0.036563348, 0.102252364, -0.017952412, -0.06626859, 0.0013967793, -0.022077298) * input_1(0.0, 1.0);
    result += mat4(0.009338459, 0.029283492, -0.02576298, -0.0015824841, 0.1265841, 0.2597375, 0.05406518, -0.0349452, -0.044140704, -0.1534851, -0.036767766, 0.027424732, -0.0031015694, 0.27765507, 0.07942295, -0.054249275) * input_1(1.0, -1.0);
    result += mat4(-0.049402524, -0.14084531, -0.03310408, 0.03729955, 0.082191594, 0.48061338, 0.0071713477, -0.15341783, 0.07405344, -0.09620045, -0.040239293, 0.038779993, -0.059644993, 0.21038434, -0.043101277, -0.112136625) * input_1(1.0, 0.0);
    result += mat4(-0.0069148387, -0.0105465455, -0.029155498, -0.06943728, -0.10030679, -0.13360403, 0.143882, -0.005059326, -0.05933808, -0.053427815, 0.031274576, -0.038841497, -0.005570468, 0.057477254, 0.07366844, 0.014455107) * input_1(1.0, 1.0);
    result += vec4(0.0041321255, -0.091114685, -0.08132804, -0.060323574);
    return result;
}

//!DESC ArtCNN C4F8 DS (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.013642393, -0.00058984326, 0.0065272534, -0.04367687, -0.07492369, -0.30788335, -0.10757145, 0.34213018, 0.00600478, 0.015965346, 0.011991395, -0.04551931, 0.022561619, -0.04561605, 0.015880618, 0.013564152) * input_0(-1.0, -1.0);
    result += mat4(-0.1135511, 0.19823945, 0.07242616, -0.1334584, -0.10248762, -0.06490584, 0.14555094, -0.28662884, 0.005848684, 0.014289354, 0.04840978, -0.027890459, -0.04597326, 0.17174894, -0.10608675, 0.012158738) * input_0(-1.0, 0.0);
    result += mat4(-0.02465443, 0.041805513, 0.023828534, -0.012096659, -0.0067486046, 0.07858148, 0.0051326808, -0.020378994, -0.060436085, -0.024064187, 0.012308861, 0.00294839, -0.032971695, 0.02901726, 0.015384824, 0.015360661) * input_0(-1.0, 1.0);
    result += mat4(0.002783722, 0.013798984, 0.011999755, 0.024949223, -0.17779648, 0.3704452, 0.14713493, 0.00810951, -0.14499603, 0.25919887, -0.10022454, -0.15441136, 0.025038302, -0.123242065, 0.03468149, 0.03270661) * input_0(0.0, -1.0);
    result += mat4(-0.12314368, -0.9902031, 0.1253367, -0.16116014, -0.10765793, -0.032457266, -0.08947721, -0.19192535, -0.47316453, -0.056314114, 0.30244794, 0.18149732, 0.1492748, -0.63166726, 0.40918586, -0.20816916) * input_0(0.0, 0.0);
    result += mat4(0.0117999865, -0.07808654, -0.095000155, 0.014403483, -0.0061427923, 0.02163465, -0.011650261, -0.03608439, 0.03226618, -0.13674685, 0.21291436, -0.149553, 2.8979699e-05, -0.23590034, -0.22085224, -0.026330644) * input_0(0.0, 1.0);
    result += mat4(0.021107871, 0.030597456, -0.009389558, 0.018171998, -0.035371672, 0.007978192, 0.024515126, 0.011165025, 0.26968402, 1.4021251, 0.1358138, 0.51938766, -0.08266003, -0.087431446, 0.018822137, -0.041855063) * input_0(1.0, -1.0);
    result += mat4(0.08270833, -0.009341538, 0.04410063, 0.09455047, -0.10060591, -0.046992153, 0.011856966, -0.057053205, 1.4893134, -0.0916951, 0.17678621, 0.7074129, 0.36516368, 0.04726057, -0.28880322, -0.12135886) * input_0(1.0, 0.0);
    result += mat4(0.01605633, 0.14406872, -0.0063143964, 0.037187804, -0.0037688632, -0.016817907, 0.0043001906, 0.011949807, -0.13491507, 0.31671545, 0.05171139, -0.050839033, -0.1473267, 0.10981962, 0.11984608, -0.039206244) * input_0(1.0, 1.0);
    result += mat4(0.020013623, -0.08200685, 0.03479337, 0.024924718, 0.10089484, -0.0021467258, -0.14234146, 0.14710657, -0.09756555, 0.054092042, -0.0077010253, -0.06308764, 0.10050763, -0.0042722053, -0.0054534758, 0.13545237) * input_1(-1.0, -1.0);
    result += mat4(0.012383869, 0.054638118, -0.0032341774, -0.066170186, -0.0034002005, -0.07524801, 0.06342975, -0.09026786, 0.15169644, -0.365284, 0.1998808, 0.068971746, -0.16439205, 0.2464429, -0.4069149, 0.14152223) * input_1(-1.0, 0.0);
    result += mat4(-0.12034177, -0.17191075, 0.1108222, 0.0048712236, -0.0003500158, 0.16227545, -0.020334262, -0.016915116, 0.09101074, -0.095064424, -0.0014206237, -0.052111607, 0.010203713, -0.0022307243, 0.08300052, -0.03140065) * input_1(-1.0, 1.0);
    result += mat4(-0.03302322, -0.03971939, -0.0240776, -0.06432986, 0.36472738, 2.1036701, 0.079204544, 0.9869069, 0.101593316, -0.043845624, 0.15739714, 0.11214795, -0.1842019, 0.1674865, 0.07349646, -0.13663237) * input_1(0.0, -1.0);
    result += mat4(-0.27888188, -0.10055793, 0.14345342, -0.08077018, -0.25646463, 0.4194674, 0.25812367, 0.20786744, 1.0106564, 1.0397189, -0.5110509, 0.018365, -1.4572724, 0.12528461, -0.33822247, -0.1893319) * input_1(0.0, 0.0);
    result += mat4(0.36174065, -0.28382024, -0.38397783, -0.2761059, -0.3380561, 0.105007984, -0.032307066, -0.15594593, 0.15851568, 0.24113736, 0.36879584, 0.12619886, 0.12514327, 0.07456563, 0.047265522, 0.06439091) * input_1(0.0, 1.0);
    result += mat4(0.021274546, 0.041369036, 0.0016553887, 0.024272406, -0.60098547, -0.057461433, -0.08296942, -0.25399664, 0.08382525, 0.0006599821, -0.030855771, -0.026898246, 0.12307326, -0.025479592, 0.007882461, 0.14734618) * input_1(1.0, -1.0);
    result += mat4(-0.012460131, -0.06545414, -0.0068869507, -0.06314066, -0.28403747, -0.13260813, 0.091149434, 0.08983839, 0.011064698, 0.1568768, 0.19463876, 0.06595438, -0.11221812, -0.21864167, -0.20607461, -0.048869424) * input_1(1.0, 0.0);
    result += mat4(-0.45724463, -0.27463478, 0.003235265, -0.29993775, 0.20997271, -0.11404888, -0.044903047, 0.034445588, 0.2667526, -0.16026723, 0.080873474, 0.1052694, -0.05923627, 0.057284337, -0.038054056, -0.0006493025) * input_1(1.0, 1.0);
    result += vec4(-0.029459497, -0.065923735, 0.045993462, 0.027672255);
    return result;
}

//!DESC ArtCNN C4F8 DS (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define input_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.04506857, -0.07233498, -0.13146931, -0.13353933, -0.044439673, 0.028403532, -0.021422505, -0.006554333, -0.10621703, 0.019750534, 0.012380374, 0.021015454, 0.13476306, -0.066272415, -0.062192727, -0.08702267) * input_0(-1.0, -1.0);
    result += mat4(-0.055482317, -0.11674906, 0.04889164, -0.014150669, -0.14592457, 0.12875073, -0.1924764, 0.06955527, 0.20166199, -0.0028116703, 0.112759255, 0.040232647, 0.0054372316, -0.050620347, 0.04395574, -0.09131743) * input_0(-1.0, 0.0);
    result += mat4(0.059981495, 0.065910436, 0.030551407, -0.008805252, -0.030935526, -0.013677192, -0.1003971, 0.034016654, -0.021737637, -0.021248998, 0.018224927, -0.027776733, -0.0018538737, 0.0009766321, -0.012716407, -0.01983246) * input_0(-1.0, 1.0);
    result += mat4(0.2811214, 0.022833154, 0.19211426, 0.08408488, -0.072946586, -0.13059738, 0.017516537, 0.015243202, 0.023286723, 0.016666947, 0.012950687, 0.021574043, 0.22136106, 0.097918674, 0.031086069, 0.000986065) * input_0(0.0, -1.0);
    result += mat4(0.3113952, 0.4154861, 0.15423666, -0.020512935, 0.3209879, -0.039395418, 0.34930545, -0.033603095, 0.31823418, 0.75027615, 0.28077194, 0.49198842, 0.1629896, 0.056971245, 0.45370296, 0.33294773) * input_0(0.0, 0.0);
    result += mat4(0.10321217, 0.15816118, 0.2520116, 0.35196292, 0.060663387, 0.033899676, 0.09855906, -0.16758052, -0.030485224, -0.018841455, 0.032269154, 0.18896158, 0.031151928, 0.009854213, 0.083870955, -0.011920824) * input_0(0.0, 1.0);
    result += mat4(-0.0069091036, 0.1860511, -0.032138202, 0.057372436, 0.03022556, 0.00052034005, 0.008527038, 0.0067063444, 0.00836798, -0.046798054, 0.01452185, -0.0025020773, -0.056364786, 0.06705412, -0.08582567, -0.031401854) * input_0(1.0, -1.0);
    result += mat4(0.2724192, 0.11014817, 0.26233625, 0.30194825, -0.053002726, -0.049437, -0.01350406, -0.013612718, 0.0688729, 0.0253173, 0.056717888, -0.0073061953, -0.2384548, 0.10770266, -0.13019247, 0.21790247) * input_0(1.0, 0.0);
    result += mat4(-0.04652144, -0.0025226062, 0.08124213, 0.12631655, 0.013432551, 0.01677572, -0.039103333, -0.08905033, -0.0011702521, 0.0014659878, 0.029630026, 0.012522524, -0.025930839, -0.0342019, -0.1379463, -0.03652764) * input_0(1.0, 1.0);
    result += mat4(0.16576527, -0.08804438, -0.124495, -0.13907787, -0.103104055, 0.039703365, 0.046940804, 0.06911592, 0.020047268, -0.061142337, -0.036844037, -0.034573883, -0.030733565, 0.012457767, 0.04238856, 0.036810443) * input_1(-1.0, -1.0);
    result += mat4(-0.22942933, -0.028889585, -0.03275333, -0.0293198, 0.071675114, 0.0076131383, 0.055527125, 0.021085864, -0.053039793, -0.081180505, 0.010608344, -0.12672602, 0.0177825, -0.09156782, 0.19426633, 0.0065732286) * input_1(-1.0, 0.0);
    result += mat4(0.022673197, 0.033875383, -0.09297294, -0.00040787118, -0.022993725, -0.027087903, -0.041046295, -0.019104596, -0.020042796, -0.016255967, -0.048177384, -0.039365876, -0.0077679185, -0.02038147, 0.0050373925, -0.052162036) * input_1(-1.0, 1.0);
    result += mat4(-0.13101147, -0.025023881, -0.0068267384, -0.023952633, -0.061501656, -0.013311391, -0.047231093, -0.034764856, -0.017598815, 0.18748833, 0.077840775, 0.062393792, 0.2569261, 0.15373935, -0.03244809, -0.03536921) * input_1(0.0, -1.0);
    result += mat4(0.06237795, 0.123060755, 0.06099673, 0.16209956, -0.1964032, 0.11665674, 0.033390366, 0.27553612, 0.19465733, -0.0035462168, 0.10187764, 0.39434144, -0.048326347, -0.28789386, -0.02782217, -0.02008929) * input_1(0.0, 0.0);
    result += mat4(0.11157338, 0.09638089, 0.106559746, -0.012057914, 0.040503487, 0.018952327, -0.100366466, -0.08987733, -0.024262935, -0.02996837, 0.15062352, 0.028268194, -0.12170417, -0.085651696, -0.118033856, 0.012108239) * input_1(0.0, 1.0);
    result += mat4(0.05073011, 0.031069586, 0.029216833, 0.049433433, 0.039989136, -0.048045844, 0.041598782, 0.0035546948, 0.05853068, -0.012747904, 0.024132654, 0.027791183, -0.12315526, 0.010140339, -0.07048532, -0.0661855) * input_1(1.0, -1.0);
    result += mat4(0.05870111, -0.06601878, 0.071484715, -0.04426916, 0.045599654, -0.08666032, 0.023080388, -0.10645013, -0.09059003, -0.098495156, -0.024074068, -0.1395554, -0.0019699696, 0.25160477, -0.08995239, 0.19548978) * input_1(1.0, 0.0);
    result += mat4(0.007022484, 0.035407867, -0.0071198284, -0.05871853, 0.019443097, 0.029639484, 0.033302043, -0.026382405, 0.017270874, 0.008447186, -0.050405376, -0.0897987, -0.03571544, -0.05365244, 0.078895785, 0.23871824) * input_1(1.0, 1.0);
    result += vec4(0.11137734, 0.16369894, 0.15010153, 0.16687983);
    return result;
}

//!DESC ArtCNN C4F8 DS (Pixel-Shuffle)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *

vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];
    return clamp(output_pix, 0.0, 1.0);
}
