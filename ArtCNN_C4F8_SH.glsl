// MIT License

// Copyright (c) 2024 Joao Chrisostomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 SH (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(0.05359424, -0.14888099, -0.077168345, 0.09835909) * input_0(-1.0, -1.0);
    result += vec4(0.18985464, 0.27638575, 0.1503384, -0.23555298) * input_0(-1.0, 0.0);
    result += vec4(0.059093464, 0.04393093, -0.14771265, 0.113875896) * input_0(-1.0, 1.0);
    result += vec4(0.038461503, -0.083877936, 0.2291363, -0.3905976) * input_0(0.0, -1.0);
    result += vec4(0.4329754, -0.015264764, 0.4513798, 0.8072398) * input_0(0.0, 0.0);
    result += vec4(0.11595248, 0.29518482, -0.18346585, -0.2340372) * input_0(0.0, 1.0);
    result += vec4(-0.019257907, -0.19410299, -0.1674021, 0.07341247) * input_0(1.0, -1.0);
    result += vec4(0.038908698, -0.05494921, 0.15470472, -0.07364656) * input_0(1.0, 0.0);
    result += vec4(-0.15070897, -0.020603184, 0.12839046, -0.066938765) * input_0(1.0, 1.0);
    result += vec4(-0.020885924, 0.00056781963, -0.10415177, -0.022719108);
    return result;
}

//!DESC ArtCNN C4F8 SH (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(-0.124158256, 0.18975589, -0.020693598, -0.24383138) * input_0(-1.0, -1.0);
    result += vec4(-0.10130272, 0.024565494, 0.3544832, -0.008584216) * input_0(-1.0, 0.0);
    result += vec4(-0.11731123, -0.038289104, -0.047432985, 0.055024307) * input_0(-1.0, 1.0);
    result += vec4(0.26969135, -0.07091607, -0.18887897, 0.096021704) * input_0(0.0, -1.0);
    result += vec4(0.40700677, -0.18479152, 0.19571847, 0.23091651) * input_0(0.0, 0.0);
    result += vec4(-0.0074001374, 0.20638931, 0.07517088, 0.13736089) * input_0(0.0, 1.0);
    result += vec4(0.07861576, 0.19982436, -0.18605426, -0.083585665) * input_0(1.0, -1.0);
    result += vec4(-0.39543167, -0.1858999, 0.03336722, -0.12553996) * input_0(1.0, 0.0);
    result += vec4(0.0129703935, -0.036255714, -0.21530692, -0.04541837) * input_0(1.0, 1.0);
    result += vec4(0.024700696, -0.03311172, -0.05304064, -0.040223073);
    return result;
}

//!DESC ArtCNN C4F8 SH (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.06197524, 0.06285829, 0.01276623, 0.015110002, -0.029872801, 0.06339333, 0.005776207, -0.21701364, 0.06854651, 0.26757252, -0.11742813, -0.045268994, 0.07913799, 0.35614306, -0.05296148, -0.107478954) * input_0(-1.0, -1.0);
    result += mat4(0.0002816006, -0.13423745, -0.2898785, 0.18049118, -0.37636253, -0.13886395, -0.018334763, -0.37535927, -0.014918489, 0.12037345, -0.07241037, -0.1512466, -0.2399083, -0.09294814, -0.12804353, 0.2209227) * input_0(-1.0, 0.0);
    result += mat4(0.30183804, 0.19016254, 0.16592495, -0.35424182, 0.06341978, -0.050141625, -0.1332439, -0.00560755, 0.06801102, -0.48572642, 0.21819405, 0.1590137, -0.048837703, -0.21341729, -0.05199584, 0.12180023) * input_0(-1.0, 1.0);
    result += mat4(-0.16284145, 0.038912848, -0.05793739, 0.035377257, 0.20166829, 0.6525804, -0.2126018, 0.114296354, 0.109142214, -0.2202497, 0.10650445, -0.015058017, 0.090788364, -0.68518007, 0.1397121, 0.2492646) * input_0(0.0, -1.0);
    result += mat4(0.32118922, 0.0146829225, 0.23712794, -0.018646577, 0.010274873, 0.1903607, 0.5828858, 0.13014401, 0.4486527, 0.17036091, -0.6549394, -0.07038682, 0.59302264, -0.043792386, -1.3123772, -0.5285841) * input_0(0.0, 0.0);
    result += mat4(0.3973582, 0.07303314, 0.38116112, -0.068449445, -0.075348705, -0.94665253, 0.6950086, 0.18333943, 0.15886234, -0.08475604, -0.040952932, -0.26009357, -0.42162117, 0.37881798, 1.1315197, 0.9255511) * input_0(0.0, 1.0);
    result += mat4(0.010706411, 0.058106728, -0.18263438, -0.035114173, -0.09988781, 0.1585341, -0.05983908, -0.15031835, -0.025701735, -0.50050724, -0.09986584, 0.01958224, 0.09475065, -0.19586037, -0.059246108, -0.28696415) * input_0(1.0, -1.0);
    result += mat4(-0.035787456, 0.22300363, -0.045566462, 0.030989526, -0.13167538, -0.23529226, 0.22177953, -0.13096996, 0.10249345, -0.23482308, 0.03220972, 0.17398451, 0.39767608, 0.39888322, 0.08282931, 0.4199256) * input_0(1.0, 0.0);
    result += mat4(-0.023518031, -0.19277525, 0.081242256, -0.0019436791, -0.086834684, 0.9095859, -0.037316635, 0.358785, 0.022214852, 0.11919915, 0.028223585, -0.113981105, 0.10404268, 1.1979126, -0.12718098, 0.07210754) * input_0(1.0, 1.0);
    result += mat4(-0.1425339, -0.067778, -0.021016117, -0.05695923, 0.23734209, 0.018076155, -0.08924068, 0.28103933, -0.15360685, -0.15762544, 0.13281536, -0.03258273, 0.13286904, 0.26758263, -0.06775879, 0.48213413) * input_1(-1.0, -1.0);
    result += mat4(0.20497523, -0.6349094, 0.2539775, 0.46821478, 0.12129034, -0.38838768, 0.2606088, 0.25524402, 0.21500966, -0.10450369, 0.2499327, 0.3814252, -0.06889038, -0.40857935, 0.17881761, -0.030473454) * input_1(-1.0, 0.0);
    result += mat4(0.05134439, -0.22297671, -0.27096283, -0.44684184, 0.09486656, -0.42818168, -0.5202156, -0.4476498, -0.13145538, -0.29302776, -0.08214698, 0.2532251, -0.067325324, 0.4196963, -0.203291, -0.21667443) * input_1(-1.0, 1.0);
    result += mat4(-0.24659094, -0.42764643, -0.18563361, -0.19538389, -0.11840645, 0.5994228, 0.038842414, -0.20955753, -0.43990764, -0.395184, -0.22845028, -0.09336592, 0.002392705, -0.16110331, 0.026799344, 0.014231263) * input_1(0.0, -1.0);
    result += mat4(0.534615, 0.8868044, -0.71696496, 0.03386969, 0.121813774, -0.5607508, 0.89220625, -0.47292483, 0.0059136776, -0.17070787, -0.299752, -0.040068537, 0.00816777, 0.5031859, 0.07304788, 0.02862027) * input_1(0.0, 0.0);
    result += mat4(0.26954406, -0.117034346, 0.5160184, -0.31219414, -0.1455111, 0.5779116, -0.17854898, 0.26155075, -0.24709839, 0.6085141, -0.9836473, 0.24834009, -0.1152329, -0.44269937, 0.34935227, -0.13235147) * input_1(0.0, 1.0);
    result += mat4(-0.011296174, -0.18543059, -0.0664663, 0.119476736, -0.13973528, 0.0770717, 0.026759343, 0.073027276, 0.11032544, -0.13383122, 0.12424439, 0.29526225, -0.1945892, 0.33549848, 0.12100874, -0.113278024) * input_1(1.0, -1.0);
    result += mat4(0.14946917, -0.17377317, -0.27384648, -0.07995132, -0.41718984, 0.26356208, 0.15236692, 0.030298136, -0.087035544, -0.2564387, -0.20601335, -0.2955347, 0.13016836, 0.08956144, -0.02890763, 0.19275257) * input_1(1.0, 0.0);
    result += mat4(0.11420573, -0.13143548, 0.29273877, -0.04831142, -0.113740556, 0.7647297, -0.270824, -0.029887335, -0.039947353, -0.50406724, 0.059863508, -0.23968577, 0.15774956, -0.18000783, -0.028422974, 0.26003683) * input_1(1.0, 1.0);
    result += vec4(0.053804763, -0.07100313, -0.09414874, 0.32230756);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.02082714, -0.23577188, -0.045757934, -0.18643653, -0.026900332, 0.08816686, -0.040496957, 0.0217259, 0.12783396, 0.27720562, 0.07060045, 0.40358227, 0.25049904, -0.69981605, -0.1182233, 0.15250325) * input_0(-1.0, -1.0);
    result += mat4(0.19541752, -0.045527693, -0.059225023, -0.07235203, -0.3285102, -0.10844785, -0.1769295, -0.39183852, -0.25855318, 0.22396831, -0.11134731, -0.23758325, 0.2404845, -0.025394343, -0.06302395, -0.19506942) * input_0(-1.0, 0.0);
    result += mat4(0.011440288, -0.34284067, -0.0014911183, 0.035210747, -0.0037134849, 0.2727811, 0.17527275, 0.30968422, 0.119888544, 0.064309604, 0.082737856, 0.18612912, 0.25310326, 0.4992013, 0.044499975, 0.5686758) * input_0(-1.0, 1.0);
    result += mat4(0.0972667, 0.22812456, -0.07711184, 0.2221786, 0.15446101, 1.1196507, -0.14249837, 0.72615135, -0.18313567, -0.34805307, 0.02384527, -0.7992825, -0.31649318, -0.7927526, 0.028168589, -0.75776446) * input_0(0.0, -1.0);
    result += mat4(0.18929483, -0.029112715, -0.18917814, 0.09684626, -0.38810012, -0.526054, -0.12003358, -0.58817774, 0.55528903, 0.13073014, -0.14533445, 0.08817235, 0.7480569, 0.042432263, -0.8960118, 0.49278575) * input_0(0.0, 0.0);
    result += mat4(0.25287005, 0.11415175, -0.14438234, 0.079221144, 0.11265388, 0.1593873, -0.011453618, -0.27661306, -0.15778519, -0.24911304, 0.028863318, -0.20355223, 0.077361725, 0.9447162, 0.26173538, -0.033906717) * input_0(0.0, 1.0);
    result += mat4(-0.078799695, -0.03631942, -0.0039310157, 0.2668512, 0.011012661, 0.13824284, 0.11031454, 0.15797217, -0.012731817, -0.054268993, -0.02422963, 0.12581602, -0.0054202457, 0.19073084, -0.07845185, 0.044037152) * input_0(1.0, -1.0);
    result += mat4(0.124812275, 0.02428793, 0.16904938, 0.016474007, 0.051174335, -0.00457195, -0.22206189, 0.31143633, -0.13466553, -0.25758028, 0.39663896, -0.16983089, -0.3548998, 0.9058166, 1.6740359, -0.3465869) * input_0(1.0, 0.0);
    result += mat4(0.1667886, -0.05561634, 0.090302564, 0.16402474, -0.03331036, 0.3420671, 0.17756428, 0.008188583, -0.012125551, 0.30284446, 0.050381605, -0.12530854, -0.09537635, -0.15395999, 0.26056424, -0.3478034) * input_0(1.0, 1.0);
    result += mat4(-0.15487333, -0.4374676, -0.016599087, -0.047067165, 0.042001717, -0.012259672, 0.06127396, 0.07110104, -0.3069776, -0.095072575, 0.014019053, -0.33582267, 0.19072391, -0.059643853, -0.011001378, 0.09844881) * input_1(-1.0, -1.0);
    result += mat4(-0.17449677, -0.96439904, 0.3150949, -1.6413249, 0.077675186, -0.84360963, 0.01243449, -1.4305538, 0.31729248, -0.45183122, 0.24927995, 0.088604584, 0.030671088, 0.039919913, -0.04401571, -0.63943106) * input_1(-1.0, 0.0);
    result += mat4(0.12609014, 0.321486, -0.13291481, 0.5295239, 0.103265464, 0.538092, -0.1721935, 0.53504425, -0.17338525, -0.09893102, -0.030413639, -0.46669424, -0.21023631, -0.1855285, -0.087650366, 0.16550441) * input_1(-1.0, 1.0);
    result += mat4(-0.28168273, -0.5464771, -0.16205542, -0.10147966, 0.06805853, 0.7455759, -0.4914476, 0.6056687, -0.101616636, -0.35025296, -0.12923974, -0.006156375, 0.124193974, 0.42018706, 0.008751999, 0.38533518) * input_1(0.0, -1.0);
    result += mat4(0.6068582, -0.0063900948, -1.2488489, 0.49649188, -0.17508024, 0.07122654, -0.23935638, -0.052915588, -0.26313016, -0.57142276, -0.4124693, -0.15946658, -0.04515237, 0.0025245217, -0.014792353, -0.050293412) * input_1(0.0, 0.0);
    result += mat4(0.07732425, 0.14947632, 0.048236646, 0.23038223, -0.08518523, -0.38605112, 0.48494884, -0.069675945, -0.019821472, 0.4840165, -0.15674357, 0.23651396, -0.0023975768, 0.031204434, -0.06088204, -0.3009173) * input_1(0.0, 1.0);
    result += mat4(-0.02265999, 0.053481717, 0.17942117, -0.07183809, -0.004299444, 0.2368034, 0.4188707, 0.015777228, -0.0045898748, -0.19345067, 0.19492829, -0.15230803, -0.17909728, -7.812497e-05, 0.11369387, 0.0027021705) * input_1(1.0, -1.0);
    result += mat4(-0.14700614, 0.15955707, 0.2062579, -0.2549467, 0.18229654, 0.00017319943, -0.4121473, 0.26159167, 0.38570175, -0.17435978, -0.84729034, 0.053369377, 0.0659458, 0.09576457, 0.09297212, -0.09448921) * input_1(1.0, 0.0);
    result += mat4(-0.16605909, 0.12599833, 0.24992478, -0.1546241, 0.15011258, 0.18331772, -0.24269383, 0.012934443, 0.012346839, -0.5347213, -0.21581489, 0.06639317, -0.23486865, 0.043656465, -0.08526203, 0.0069942814) * input_1(1.0, 1.0);
    result += vec4(0.08821401, -0.029790146, -0.026220605, -0.10688527);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.28906342, 0.14055273, -0.0069302493, -0.054355603, -1.4149802, 0.009138584, 0.03163988, -0.15188622, -1.3133014, 0.06024832, 0.036507994, 0.039295938, -0.6302274, -0.022179123, 0.045943055, 0.026211174) * input_0(-1.0, -1.0);
    result += mat4(0.5975047, 0.36082482, -0.16768362, -0.1977313, 0.17536381, 0.10942055, -0.07611067, 0.18948632, -0.12454059, -0.04296548, -0.010104082, 0.12219746, -0.044141307, 0.26656085, 0.08064489, -0.03832333) * input_0(-1.0, 0.0);
    result += mat4(-0.34326407, 0.31619787, -0.07277299, 0.022764986, 0.019746674, 0.111416005, -0.048787467, 0.12734748, 0.10355401, 0.028695254, -0.009019954, 0.02708677, 0.038061168, 0.09515237, -0.011252156, 0.047748532) * input_0(-1.0, 1.0);
    result += mat4(0.27223027, 0.24397875, 0.090937145, 0.1929428, 0.118135236, 0.0697358, 0.03190849, 0.16385867, -0.00013892878, -0.8645448, 0.076495975, -0.8167792, 0.07216566, 0.093760796, -0.040511314, -0.02895841) * input_0(0.0, -1.0);
    result += mat4(0.36138245, 0.11423205, 0.75999266, 0.4674839, -0.033449437, 0.10223095, -0.011497423, 0.025967887, -0.23883724, -1.1171823, 0.05630427, -0.64251, 0.13432734, 0.67996246, 0.00012223069, 0.3474724) * input_0(0.0, 0.0);
    result += mat4(0.24136251, 0.54745656, -0.07098274, 0.3219406, -0.072708815, 0.040827498, 0.0034240675, -0.07632845, -0.00046697826, -0.08337089, 0.03568641, 0.047255162, 0.0713018, 0.24158403, -0.006627773, 0.022066738) * input_0(0.0, 1.0);
    result += mat4(-0.052670024, -0.005577145, -0.107726015, -0.33607844, 0.08000898, 0.05122911, -0.020733936, -0.15496242, 0.027169626, -0.00030397426, 0.00753028, -1.0499508, -0.32998902, -0.05011301, 0.00022555237, -0.015706142) * input_0(1.0, -1.0);
    result += mat4(0.05784825, 0.066471204, -0.14505406, 0.2848677, 0.038217414, 0.07742428, -0.040288214, 0.09801815, 0.019514464, -0.046548497, 0.027295724, -0.062111568, 0.08333388, 0.15807629, -0.033070784, -0.033280592) * input_0(1.0, 0.0);
    result += mat4(-0.13496444, 0.025995031, 0.048683114, -0.09289853, 0.03166201, 0.03763612, -0.011212544, -0.006725868, 0.017477779, 0.019193359, 0.0048516435, 0.06931556, -0.016572924, -0.085845925, 0.025497617, 0.05682822) * input_0(1.0, 1.0);
    result += mat4(-2.4606402, -0.11160007, 0.011553112, 0.1626708, -2.3029003, -0.032323845, 0.027675109, -0.015123553, -2.9135356, -0.0052016876, 0.022875465, 0.09525184, -0.0022358603, 0.124161385, -0.07284391, 0.15301543) * input_1(-1.0, -1.0);
    result += mat4(-0.25077328, -0.65261716, 0.11785593, 0.019836629, 0.21527573, 0.0014311478, 0.037621938, -0.22167012, -0.70519084, -1.161726, 0.099984, -0.22145107, 0.012385007, -0.012136105, -0.057862733, 0.11889126) * input_1(-1.0, 0.0);
    result += mat4(-0.013495051, -0.31304958, 0.05098094, -0.01242047, 0.04848462, -0.044407945, 0.0145286005, -0.037871823, 0.012818404, -0.08745805, 0.07351184, -0.06469744, -0.1256474, -0.084518395, 0.006130819, -0.034915496) * input_1(-1.0, 1.0);
    result += mat4(-0.039409086, -0.37622756, 0.010428987, -0.61849856, -0.19673854, -0.08881253, -0.041271105, 0.23270108, 0.08718674, -0.050193988, 0.022570608, -0.17213756, 0.20310329, 0.2079522, -0.033999275, -0.317828) * input_1(0.0, -1.0);
    result += mat4(0.5262976, -0.46973875, 0.49588042, -0.14167905, 0.026800677, 0.45209622, -0.033214413, 0.3740981, 0.07202292, -0.99766666, 0.015736224, -0.95498073, 0.29136926, 1.6567175, 0.05095838, 0.6224443) * input_1(0.0, 0.0);
    result += mat4(0.078312136, -0.026432155, -0.0111080855, -0.29383698, 0.04961975, 0.18577446, -0.01642296, 0.11764377, -0.035608627, 0.025052715, 0.09051028, -0.013099231, 0.026747297, -0.12970842, -0.05508843, 0.16155842) * input_1(0.0, 1.0);
    result += mat4(-0.56545347, -0.12818344, -0.021025969, -0.1971749, -0.11531048, -0.014264447, -0.012816678, 0.14658335, 0.044067092, 0.005132086, 0.019845871, -0.08021892, 0.18734981, 0.10341134, -0.026807632, -0.046459034) * input_1(1.0, -1.0);
    result += mat4(-0.07736378, 0.279374, 0.036687203, 0.309806, -0.06448461, 0.06888437, 0.0054413695, 0.4524059, -0.022359477, 0.011090422, 0.044353012, -0.10005911, -0.248354, -0.119940594, 0.0366468, 0.25584996) * input_1(1.0, 0.0);
    result += mat4(-0.0060222046, -0.1527725, 0.022448307, 0.11641439, 0.06047165, -0.113678396, -0.0033303911, -0.017840827, 0.023786914, 0.03453672, 0.019727038, 0.070775874, -0.01950957, -0.122534044, -0.0028618318, -0.16152088) * input_1(1.0, 1.0);
    result += vec4(-0.057793517, -0.28248546, 0.014399194, -0.06610985);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.41423547, -0.12730904, -0.07498864, -0.18120137, -0.26438302, -0.14813894, -0.2366693, -0.088528395, -0.15415794, -0.08203906, 0.05610018, -0.1737489, 0.0527715, 0.10591101, -0.09657569, 0.15199098) * input_0(-1.0, -1.0);
    result += mat4(0.39274746, 0.13395837, -0.17253111, 0.26946518, -0.47109377, -0.20325862, -0.2384361, 0.2233067, -0.15393347, -0.012949331, -0.140783, -0.023039633, -0.065169856, -0.017608862, 0.03442021, 0.08649573) * input_0(-1.0, 0.0);
    result += mat4(-0.16459711, -0.0791145, -0.4343279, -0.19281213, -0.3147041, 0.012471202, -0.070183605, 0.095421396, -0.035320066, 0.08686766, 0.044885926, 0.06079427, 0.010606479, -0.09269255, -0.061252728, -0.02710755) * input_0(-1.0, 1.0);
    result += mat4(-0.36307245, -0.29101083, 0.057503108, 0.093172684, -0.50235134, -0.283965, -0.25493395, 0.035629842, 0.23822778, 0.08756214, 0.31069848, -1.067529, -0.05930826, -0.116289005, -0.035065647, 0.10057223) * input_0(0.0, -1.0);
    result += mat4(0.36601236, 0.2400582, 0.23988521, -0.49944726, -0.7770548, -0.3643125, -0.11275775, 0.11587659, 0.1557711, -0.16524558, 0.2133468, -0.503308, -0.28302947, -0.14837418, -0.061678845, 1.09041) * input_0(0.0, 0.0);
    result += mat4(-0.47362792, -0.3287503, -0.16624591, 0.53715545, -0.3777602, -0.12008923, -0.06084658, -0.05211569, 0.018859671, -0.011578964, 0.035732377, 0.0153688025, -0.15597875, -0.1969611, -0.031580426, -0.014079989) * input_0(0.0, 1.0);
    result += mat4(0.054179206, 0.15181656, -0.06959713, -0.027577503, -0.20127045, -0.16888514, -0.088259675, 0.13766825, 0.15128903, -0.13179776, -0.105610445, -0.08915133, 0.0036203745, 0.20871176, -0.12677838, -0.08531374) * input_0(1.0, -1.0);
    result += mat4(-0.11912164, -0.06604667, 0.01249494, -0.07839824, -0.4404426, -0.06697537, -0.0705022, -0.052147448, -0.11691568, -0.23831518, -0.121085726, -0.033071063, -0.035619166, 0.689089, 0.024214063, -0.009870239) * input_0(1.0, 0.0);
    result += mat4(0.16440207, 0.31051776, 0.19034936, 0.00027813658, -0.21633244, 0.011720546, 0.06823927, 0.00035583647, -0.044943724, -0.11145268, 0.023093397, 0.052501045, 0.08925217, 0.31715837, 0.039720308, -0.011970082) * input_0(1.0, 1.0);
    result += mat4(0.23973307, 0.16589397, -0.030835928, 0.26255277, 0.11583205, 0.03522278, -0.09581988, 0.08975657, -0.18481433, -0.012408179, -0.14084116, -0.061082233, -0.06408889, 0.02465809, 0.18173155, -0.007434588) * input_1(-1.0, -1.0);
    result += mat4(-0.0020334001, -0.33005604, 0.5012473, -0.5013904, 0.208686, 0.00010505513, -0.052273657, 0.2692296, 0.13616708, 0.32355103, 0.33971143, -0.710003, 0.34708443, 0.14161527, 0.27302644, -0.30720064) * input_1(-1.0, 0.0);
    result += mat4(-0.014632156, 0.13513136, 0.34257534, 0.33781737, 0.20874882, -0.1255297, -0.096572325, 0.026344694, -0.01593782, 0.32390323, 0.014231093, 0.09988254, 0.27546364, 0.10601967, 0.26522428, -0.17411673) * input_1(-1.0, 1.0);
    result += mat4(0.7071153, 0.25093776, 0.3853662, -0.06886674, 0.18485083, 0.16522844, -0.03918211, 0.058749404, -0.17645079, 0.018576035, 0.018819122, 0.16682287, 0.25360587, -0.0065432186, 0.35270607, 0.002226948) * input_1(0.0, -1.0);
    result += mat4(-0.005885054, 0.53664273, -0.56220305, 0.16237888, 0.18055177, 0.3247033, -0.25141996, 0.51078683, 0.22439575, -0.77458966, 0.08183615, -0.14047094, -0.15048149, -0.11323226, -0.028687475, 0.9273134) * input_1(0.0, 0.0);
    result += mat4(-0.15833788, 0.15627578, -0.021897744, 0.16308813, 0.28578758, -0.054843593, -0.007845928, 0.064463854, -0.20615987, 0.23779714, -0.014225959, 0.056609184, 0.26691574, -0.15916274, 0.19291474, -0.17414334) * input_1(0.0, 1.0);
    result += mat4(-0.039146066, -0.1970019, -0.2124845, -0.0028377452, 0.16437815, 0.111411, 0.09219095, -0.101240695, -0.0805806, -0.051809352, 0.015089598, 0.07214214, 0.241482, 0.09207412, 0.09988551, -0.08275511) * input_1(1.0, -1.0);
    result += mat4(-0.46902424, -0.4795626, -0.08345731, 0.20826581, 0.22137119, 0.3310215, 0.12951727, 0.07915576, 0.023877742, -0.07497572, -0.008491225, 0.03725613, 0.113010824, 0.2968924, 0.2978891, -0.016292758) * input_1(1.0, 0.0);
    result += mat4(0.34668484, 0.11780451, 0.053988315, -0.12155414, 0.41236135, -0.06750544, 0.009728765, 0.020113192, -0.054008003, -0.093273, -0.039339717, 0.039506912, 0.26045272, -0.20021509, 0.153315, 0.07128539) * input_1(1.0, 1.0);
    result += vec4(0.08441608, -0.25249732, 0.067883596, -0.3303021);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.016846033, 0.026397843, -0.012863838, 0.004356793, 0.2823346, 0.011247976, 0.09538646, 0.039296325, 0.11484474, 0.016418368, 0.0580883, -0.0026428513, -0.077383615, -0.14803915, -0.033859827, -0.048912395) * input_0(-1.0, -1.0);
    result += mat4(0.10884351, 0.03343553, 0.023791462, 0.016255813, -0.48923045, 0.00031481683, 0.28081933, 0.024310144, -0.4164728, -0.018632324, 0.11407918, 0.089288466, 0.25451526, 0.2786566, -0.2793261, 0.027655708) * input_0(-1.0, 0.0);
    result += mat4(-0.021497505, -0.023827277, -0.0066829394, -0.011326256, -0.07870868, 0.13691694, 0.007938721, -0.013039672, 0.006060983, -0.23353955, -0.2507507, 0.061152767, -0.015864806, 0.1910622, -0.08809214, 0.02533221) * input_0(-1.0, 1.0);
    result += mat4(0.069547996, 0.11275143, 0.0067422343, 0.041214347, -0.5649666, -0.15975103, -0.073363, -0.13785365, -0.42630517, -0.12650143, -0.018039726, -0.12141912, -0.20153116, -0.13732453, -0.074762605, -0.13091485) * input_0(0.0, -1.0);
    result += mat4(-0.43322963, -0.31123754, 0.29916435, -0.123717576, -0.58358145, 0.7504741, -0.7576291, 0.32706988, 0.60329807, 0.71539867, 0.37783182, 0.6116639, -0.11000711, 0.28365055, -0.49903604, 0.14496595) * input_0(0.0, 0.0);
    result += mat4(0.040478863, -0.15339401, -0.20012228, 0.0102616, 0.0059743496, 0.29341975, -0.031299658, 0.22118944, 0.11464712, -0.36791798, 0.27104974, 0.0477877, 0.030636908, 0.0513271, -0.18039191, 0.07183212) * input_0(0.0, 1.0);
    result += mat4(0.15534477, 0.13314752, 0.052219834, 0.11649156, 0.11125593, -0.059758354, 0.096215874, -0.0008000414, 0.05038302, 0.06478663, 0.06156224, 0.016914263, -0.009683098, -0.017432978, 0.05515543, -0.016030405) * input_0(1.0, -1.0);
    result += mat4(-0.057154275, -0.124923065, 0.24619271, -0.44260013, 0.12153004, -0.06222544, -0.3547645, 0.17604873, 0.025449807, -0.092549466, -0.048721224, 0.0035746887, -0.00350254, -0.027961193, -0.047926348, 0.019734908) * input_0(1.0, 0.0);
    result += mat4(-1.3989639, -2.2968447, -0.3620499, 0.3634548, -0.17730351, 0.08667987, -0.026471494, 0.058576047, -0.08853424, 0.050310772, -0.11774152, 0.0066378443, 0.010789873, 0.06406437, 0.13783066, -0.0031916574) * input_0(1.0, 1.0);
    result += mat4(-0.06870773, -0.013639506, -0.029743632, -0.0061007594, -0.05229242, -0.032060653, 0.0632675, -0.012302172, -0.044017866, 0.020056825, 0.011497559, -0.007653604, 0.059266664, 0.033416767, 0.060799398, -0.035735212) * input_1(-1.0, -1.0);
    result += mat4(0.20218183, 0.11442866, -0.21938777, 0.05706678, 0.16904569, -0.0021117614, -0.13054335, -0.0013673581, -0.0016081777, -0.052993976, 0.068843804, -0.080694064, 0.16545698, -0.022982633, 0.106857605, -0.030279078) * input_1(-1.0, 0.0);
    result += mat4(0.2275347, 0.13199756, 0.023533162, 0.020535165, 0.025050672, 0.027426569, 0.089361526, -0.0024786699, -0.0025141875, 0.053891785, -0.032672025, -0.022213984, 0.12837002, 0.04417106, 0.10333316, -0.020481039) * input_1(-1.0, 1.0);
    result += mat4(0.2590144, 0.2043533, -0.010350029, 0.15156691, -0.0312887, 0.019754337, 0.07509063, -0.0015869576, 0.07137767, 0.004862426, 0.07023902, 0.011238387, 0.13217676, 0.049681813, -0.12438338, 0.010798706) * input_1(0.0, -1.0);
    result += mat4(0.25470254, -0.23681925, 0.25917652, 0.03782052, -0.01811338, 0.051484022, 0.28818676, -0.043956365, -0.073493645, -0.17181511, 0.059536558, -0.19648494, -0.27190092, -0.104112536, -0.20953955, -0.017092329) * input_1(0.0, 0.0);
    result += mat4(0.1628488, -0.06636168, -0.035715055, 0.01715627, 0.029769717, -0.15113387, -0.04974474, 0.04424177, -0.17930105, 0.25711295, 0.15906917, -0.123502, -0.035013583, -0.09437392, -0.38685197, 0.030893097) * input_1(0.0, 1.0);
    result += mat4(0.3068116, 0.03867538, -0.03680456, 0.030547554, 0.11479993, -0.0103154695, 0.08222845, 0.008232089, -0.037026364, -0.012735854, -0.021468816, -0.022533666, -0.01274177, 0.085288584, -0.03643345, 0.01664194) * input_1(1.0, -1.0);
    result += mat4(0.17768319, -0.046612453, -0.19177212, -0.07734875, -0.052906644, 0.019590668, 0.14701869, -0.09040544, -0.13687012, 0.036959086, -0.02825125, 0.020375106, -0.011872577, -0.21771373, 0.11195, -0.036976125) * input_1(1.0, 0.0);
    result += mat4(0.000100176054, 0.110001184, -0.083412275, -0.00473977, -0.0045859083, 0.023427723, 0.117748246, -0.06388745, -0.082395785, -0.03590132, 0.12714697, -0.022895167, 0.06035621, 0.062539, 0.003070478, -0.019763373) * input_1(1.0, 1.0);
    result += vec4(-0.0087569365, 0.01309224, 0.06106431, -0.040271647);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0179019, 0.019221032, 0.016171573, 0.024777798, -0.072429344, -0.06769867, 0.022565871, -0.061067462, 0.05635753, 0.01191344, 0.03908094, -0.01032397, -0.14494576, -0.0042873616, -0.16418959, -0.008119293) * input_0(-1.0, -1.0);
    result += mat4(0.08799345, 0.0043741036, -0.04358806, 0.041043542, -0.23814793, -0.108415075, -0.07392876, -0.069303125, -0.12514879, -0.13113016, 0.036269262, -0.14226864, 0.36198556, 0.46649283, 0.2669707, 0.20456518) * input_0(-1.0, 0.0);
    result += mat4(0.054091327, -0.056894775, 0.01904515, -0.024965573, -0.2614687, -0.060772236, -0.16155668, -0.05818018, -0.4867493, 0.11565029, -0.036780942, 0.04837298, -0.07967358, 0.21861044, 0.0068414626, 0.07600159) * input_0(-1.0, 1.0);
    result += mat4(0.05260899, 0.035997394, 0.17237681, 0.025886368, 0.08211802, 0.21182075, -0.10401306, 0.21732904, -0.18569143, 0.09736165, -0.103972256, -0.037497636, -0.124099694, 0.16843301, -0.096409485, 0.14428274) * input_0(0.0, -1.0);
    result += mat4(-0.35307717, -0.2563493, -0.2032065, -0.13460392, 0.22376089, 0.8448557, 0.22512458, 0.517783, 0.66754806, 0.007576051, 0.641767, 0.6041031, -0.0011611179, 0.42745072, 0.34106794, 0.26956135) * input_0(0.0, 0.0);
    result += mat4(-0.44213134, 0.12374105, 0.08754516, -0.017933523, -1.2735718, -0.23554507, -0.81432, -0.1858248, 0.10655971, -0.18078661, -0.5837425, 0.03267098, -0.5430903, 0.092018105, 0.10689373, 0.03486717) * input_0(0.0, 1.0);
    result += mat4(0.13942541, -0.12705503, 0.020682769, -0.14304999, 0.018026687, -0.097492464, -0.026229467, -0.057136524, 0.07559453, -0.044843674, 0.016279122, 0.0036845347, 0.036521643, -0.055570725, 0.008315712, -0.010801768) * input_0(1.0, -1.0);
    result += mat4(-0.043686602, 0.927005, -0.30520093, 1.0036366, 0.15693009, 0.28631338, -0.004935995, 0.2184795, -0.20670012, 0.083866045, -0.012526604, 0.04284066, -0.041918974, 0.051462963, 0.028107895, 0.055587113) * input_0(1.0, 0.0);
    result += mat4(-1.0286255, -1.2901745, -0.9962998, -0.04848416, 0.37245712, -0.09011178, -0.39023876, -0.067846365, 0.0642862, 0.021255435, 0.0086060455, -0.063812114, 0.2860134, -0.034921028, -0.010025615, 0.0053533446) * input_0(1.0, 1.0);
    result += mat4(-0.17083924, 0.017233234, -0.05107239, -0.0012921422, 0.09405038, -0.03776438, 0.02289848, 0.010708934, 0.029567141, -0.008041653, -0.03335022, -0.019428458, -0.00082016864, -0.034712773, 0.023162164, -0.04242402) * input_1(-1.0, -1.0);
    result += mat4(0.061009258, 0.23959036, 0.05284592, 0.12130518, 0.1541395, 0.06512809, -0.027041487, 0.049979206, 0.016280646, -0.03122371, -0.019586284, -0.07293683, 0.062004477, 0.014525137, 0.03257136, -0.0014030146) * input_1(-1.0, 0.0);
    result += mat4(-0.007557315, 0.023353342, 0.027003624, -0.021636048, 0.14420184, -0.06459577, -0.12484397, -0.03809742, 0.037126694, 0.04983172, 0.08857844, 0.012054406, 0.16275789, 0.018191151, -0.11190063, -0.021151286) * input_1(-1.0, 1.0);
    result += mat4(0.14956464, 0.034195542, 0.20851561, -0.031792093, 0.08893252, 0.007974784, 0.100720875, 0.016037378, -0.104150824, -0.044115636, -0.023743477, 0.011041506, 0.21090418, 0.097957686, 0.42696765, -0.071785025) * input_1(0.0, -1.0);
    result += mat4(-0.90454906, -0.026291663, -0.21341792, 0.11318529, 0.079445064, 0.13254458, -0.15711702, -0.005935673, 0.0036810082, -0.16382578, -0.3262174, 0.0032216788, -0.62773865, 0.22978783, -0.093618125, 0.043756466) * input_1(0.0, 0.0);
    result += mat4(-0.6872021, 0.060825065, 0.14983755, -0.054688826, -0.40176728, -0.0386888, -0.13229486, -0.0416985, 0.57555705, -0.02427386, 0.033267822, -0.056949943, -0.6986189, 0.30433488, -0.46558222, 0.0650078) * input_1(0.0, 1.0);
    result += mat4(-0.09695749, 0.044359826, 0.09386733, 0.04176106, 0.08187646, 0.0052266703, -0.10377266, 0.032197136, -0.02978188, 0.02564315, -0.10660931, 0.021219227, 0.16260454, 0.031215921, 0.2057699, 0.0036749458) * input_1(1.0, -1.0);
    result += mat4(-0.3857424, 0.31082946, -0.013905123, 0.08767433, 0.14611894, 0.018236373, -0.03913933, -0.027214395, 0.18791044, -0.15310201, 0.16146697, -0.085202836, -0.19442879, -0.0103688985, -0.13123794, 0.048865773) * input_1(1.0, 0.0);
    result += mat4(0.13027059, 0.16846046, -0.00030438442, 0.0273102, 0.1692601, 0.048719544, -0.07653461, 0.027634693, 0.049574222, -0.24108484, -0.022506129, -0.059011716, -0.3231434, 0.11414887, -0.0031773115, 0.026847804) * input_1(1.0, 1.0);
    result += vec4(0.049391855, 0.009853954, -0.035089117, -0.03658641);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0364353, -0.021960504, 0.003723749, 0.021254996, 0.024357432, -0.019878587, 0.23920202, -0.020559998, -0.032021996, -0.016498774, 0.051289126, -0.07851685, 0.049786773, 0.023875425, -0.25247356, 0.12526608) * input_0(-1.0, -1.0);
    result += mat4(0.038589887, 0.0082045635, 0.07378519, -0.0700064, 0.13357195, 0.0118889045, 0.9219756, 0.25313488, 0.09881653, 0.0230666, -0.30581927, 0.27813894, -0.12283267, -0.018420229, -0.31393102, -0.17119732) * input_0(-1.0, 0.0);
    result += mat4(-0.073504575, -0.11062598, -2.2185795, -0.07332166, -0.047281403, 0.017033933, -2.963544, -0.11052013, -0.054235987, 0.05723007, -1.454655, 0.031156737, 0.020478435, 0.022519618, -6.2339835, 0.34247378) * input_0(-1.0, 1.0);
    result += mat4(0.011038797, 0.004473709, -0.06576167, 0.018171532, 0.47917986, -0.029539976, 0.08179453, -0.021086592, -0.1077767, 0.0045221453, -0.042730574, 0.26566023, -0.60162324, 0.022423768, -0.026409587, -0.027091244) * input_0(0.0, -1.0);
    result += mat4(0.13452867, -0.0043025296, 0.12669994, 0.106407896, 0.20606649, -0.1036218, -0.0046334686, 0.33888656, 0.32078865, -0.083244465, 0.10294981, -0.38493845, 0.7734677, 0.1767019, 0.24898233, -0.9036663) * input_0(0.0, 0.0);
    result += mat4(0.112471126, 0.08623265, -0.20319408, 0.27935308, -0.27628753, 0.007261909, -0.023423143, -0.1277754, 0.031457864, 0.09915567, 0.084534265, 0.20893218, 0.21071057, 0.19896361, 0.2799789, 0.26026335) * input_0(0.0, 1.0);
    result += mat4(-0.0062763025, 0.008685615, -0.036554966, 0.0019448143, 0.16307016, 0.009079199, -0.016815545, 0.119579636, -0.12694655, -0.021683885, 0.04096115, -0.08194362, -0.088013984, 0.005627279, 0.026296442, -0.043789558) * input_0(1.0, -1.0);
    result += mat4(-0.07494558, 0.0492107, 0.044880863, -0.039855618, 0.0944071, 0.10442838, -0.093965836, 0.19537242, 0.052693747, 0.043857798, -0.04049296, 0.051497653, 0.0182662, -0.25663593, -0.018935245, 0.022381626) * input_0(1.0, 0.0);
    result += mat4(-0.016022585, 0.078827776, 0.09275228, -0.077138595, -0.0166646, -0.016299337, -0.022797436, 0.016929083, 0.094988704, -0.0021235934, -0.04704602, 0.053464472, 0.059488826, -0.39184085, -0.06586806, 0.11810222) * input_0(1.0, 1.0);
    result += mat4(0.016855408, -0.024141304, -0.2989332, 0.07527371, -0.06014583, -0.019076416, -0.11939055, -0.03446857, 0.116076715, 0.020851998, 0.19066359, 0.22420429, 0.064972594, 0.013264344, 0.21588047, 0.011654158) * input_1(-1.0, -1.0);
    result += mat4(-0.111537665, -0.07338637, -0.08542899, -0.16347231, -0.024172276, 0.038042426, -0.6274983, 0.10577546, 0.0030997281, 0.007823518, -0.28603435, 0.05425672, -0.16009043, -0.02854872, -0.49162182, -0.16441524) * input_1(-1.0, 0.0);
    result += mat4(0.017462324, -0.032328825, -0.71936303, 0.022522654, -0.11978825, 0.060067806, -0.9612898, -0.16967955, 0.054928742, -0.04053159, -1.0770017, 0.15126608, 0.012827626, -0.09856525, 1.3450152, -0.075703114) * input_1(-1.0, 1.0);
    result += mat4(0.10835698, 0.042254116, -0.14867003, 0.10626151, -0.16675559, 0.04199717, -0.12434552, 0.15711306, 0.6366963, 0.004300724, -0.107564054, 0.3088106, -0.039096978, -0.025115341, 0.101490155, -0.079095356) * input_1(0.0, -1.0);
    result += mat4(-0.11929321, 0.15919586, -0.019161856, 0.080601096, -0.060240746, 0.032658245, 0.009693287, -0.73921937, -0.4324086, -0.1492483, 0.17113553, -0.09214355, 0.1402997, 0.0001162809, 0.06855178, 0.61356074) * input_1(0.0, 0.0);
    result += mat4(0.110938326, -0.0138066355, -0.018894909, 0.017538298, 0.32219395, -0.043534208, -0.0039980216, 0.30566466, 0.26486832, 0.038272064, 0.017209979, 0.11348031, -0.701294, 0.27474505, 0.06570005, -0.33914262) * input_1(0.0, 1.0);
    result += mat4(-0.09126645, 0.0282211, 0.021534404, -0.112933904, -0.14961492, -0.016364047, 0.029330742, -0.11612929, 0.12963563, -0.060218677, 0.039965063, 0.016957378, 0.1296372, 0.012742043, -0.01150352, 0.086464964) * input_1(1.0, -1.0);
    result += mat4(0.0057517677, 0.05190313, 0.07768039, -0.0633058, -0.0065649753, -0.19969687, 0.020347532, -0.013470693, -0.034666583, 0.037300985, 0.02571799, 0.012855706, -0.041821193, 0.14875616, -0.02842184, 0.02329135) * input_1(1.0, 0.0);
    result += mat4(-0.044842243, -0.033316474, 0.040276147, 0.0028038146, 0.12129652, -0.0886977, -0.030470088, 0.07398512, 0.0035749169, -0.011198439, -0.0047161193, 0.019296058, -0.14223377, -0.07586925, 0.016027816, -0.0886384) * input_1(1.0, 1.0);
    result += vec4(-0.04244742, -0.010731234, 0.00605563, -0.014017714);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.0343162, -0.0026608582, 0.039814528, 0.04247528, 0.0046586418, -0.0012081105, -0.11255287, -0.06710009, 0.012776952, -0.007498741, 0.10536606, -0.028129542, -0.36267754, 0.029528271, 0.12974866, 0.035978537) * input_0(-1.0, -1.0);
    result += mat4(-0.029480254, 0.009136296, -0.07796225, 0.123975426, -0.0018735004, 0.080757946, -0.0009800526, -0.15927234, -0.025682105, 0.02427918, 0.2729889, -0.25698963, 0.21036468, -0.09712206, 0.2306789, 0.23567188) * input_0(-1.0, 0.0);
    result += mat4(0.017333476, -0.017373584, -0.05561196, 0.20411994, -0.0030718183, -0.028014174, 0.028086403, 0.119655095, 0.00805231, -0.053814128, -0.010012679, -0.029348224, -0.05825646, 0.039806776, -0.045017615, -0.14395462) * input_0(-1.0, 1.0);
    result += mat4(0.08430765, -0.019981043, -0.014472927, -0.0009988165, 0.051603023, 0.026039073, -0.13578996, -0.055250946, -0.04509194, -0.025622707, 0.13403994, -0.0066908197, -0.22299048, 0.07457851, -0.43909338, -0.0701212) * input_0(0.0, -1.0);
    result += mat4(0.03701438, 0.033489764, 0.78128695, -0.1640442, -0.06519521, 0.3467167, -0.28817245, 0.2166656, -0.032060236, -0.0030897316, -0.1258693, 1.0473071, -0.13014188, -0.34866217, -0.8874567, -0.8890887) * input_0(0.0, 0.0);
    result += mat4(-0.026563954, 0.057682976, -0.06920411, -0.13112263, 0.033892862, -0.39919245, -0.008402909, -0.35762843, -0.0110002095, 0.07032194, 0.041327793, 0.27810273, -0.034836132, 0.6621175, -0.0022834577, 0.38722345) * input_0(0.0, 1.0);
    result += mat4(-0.046865877, 0.020587366, 0.04741679, -0.03312152, 0.12595902, 0.029536048, 0.24955249, -0.08205859, -0.026513338, 0.0068502873, -0.116242565, 0.024992324, -0.12453906, -0.025197081, -0.06781981, -0.00022394361) * input_0(1.0, -1.0);
    result += mat4(0.04867851, -0.1306851, -0.30457014, 0.23371775, -0.023246007, 0.11085506, 0.1564143, -0.16378212, -0.001970333, -0.020722412, 0.235834, -0.13106036, 0.011236714, 0.02061005, 0.26118937, 0.059252184) * input_0(1.0, 0.0);
    result += mat4(-0.0017611455, 0.20192158, 0.0887155, 0.08439513, 0.021154804, -0.036039613, 0.068156295, 0.20985407, -0.022508636, -0.0029143526, -0.07351912, -0.078794226, -0.048842605, 0.110123456, -0.0815627, -0.28791362) * input_0(1.0, 1.0);
    result += mat4(-0.064649194, -0.00328717, -0.053606205, 0.056469493, -0.010529534, 0.005388011, 0.30345398, 0.04197872, -0.05247517, 0.052492347, -0.060037535, -0.11954063, 0.2365332, -0.013188699, -0.24702734, 0.014216084) * input_1(-1.0, -1.0);
    result += mat4(0.010317614, -0.04954485, -0.06809802, 0.14986926, 0.0007434456, -0.04780976, -0.16748908, -0.30047712, -0.017185187, 0.02343305, -0.058019497, -0.0038493688, -0.013507128, 0.03694987, 0.11625744, 0.34437189) * input_1(-1.0, 0.0);
    result += mat4(0.0010861568, -0.005285189, -0.04216371, -0.083240665, 0.024772521, -0.09460924, -0.041144937, -0.21359344, -0.019028531, 0.12258999, -0.022399422, 0.005456328, -0.010257643, -0.04476254, -0.017391987, 0.26259664) * input_1(-1.0, 1.0);
    result += mat4(-0.03139991, 0.029440615, 0.30166316, 0.111749515, -0.26054642, 0.06719641, -0.5196999, 0.0053095357, -0.1421773, -0.18720706, 0.12819763, 0.28042617, 0.3299497, -0.044786364, 0.462688, -0.055552498) * input_1(0.0, -1.0);
    result += mat4(0.003907771, -0.10838562, 0.1626247, -0.32136402, -0.03747253, -0.3917166, -0.288667, 0.4922249, 0.07652168, 0.28383613, 0.12370529, -0.019093242, 0.12572366, 0.31627205, 0.16015387, -0.67240644) * input_1(0.0, 0.0);
    result += mat4(0.00091758335, 0.16321628, -0.01932236, 0.053124778, -0.0059953243, 0.30141616, -0.044758633, 0.24333413, -0.037961535, 0.3793658, -0.044413432, 0.1410797, 0.06577049, -0.83799356, 0.40822077, -0.45248175) * input_1(0.0, 1.0);
    result += mat4(-0.047573358, -0.040178146, -0.1605913, -0.054255925, -0.12273543, -0.0077392096, -0.13586435, -0.10401861, -0.16695619, 0.039675742, -0.08536143, -0.14497033, 0.10292792, -0.004360255, 0.08197772, 0.10565745) * input_1(1.0, -1.0);
    result += mat4(0.0069499123, -0.04378882, -0.08587532, 0.19446139, -0.014388529, -0.090604946, 0.16035214, -0.26720536, -0.010969816, 0.041648768, -0.06484248, 0.039024655, 0.0017911055, 0.079047635, -0.049429916, 0.36661956) * input_1(1.0, 0.0);
    result += mat4(-0.0031305726, 0.049549434, -0.009122334, -0.036242153, -0.032539412, 0.05399858, -0.07156032, -0.15333535, -0.016566785, 0.020998497, 0.00035937896, -0.12793916, 0.046917714, -0.23040111, -0.0640176, 0.28940862) * input_1(1.0, 1.0);
    result += vec4(0.014510296, 0.0023102472, -0.02101346, -0.06682211);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 SH (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.005075061, -0.04222142, 0.014202459, -0.030899249, -0.06528864, 0.24470632, -0.17764409, -0.120735034, -0.0012648597, -0.03187275, 0.034450695, -0.015143509, 0.003438509, 0.028347867, 0.038692955, -0.009252667) * input_0(-1.0, -1.0);
    result += mat4(0.11189522, -0.017429914, -0.21322867, -0.05747101, -0.05178062, 0.009954399, 0.07946657, -0.115592755, 0.017158667, -0.010570035, 0.014680517, -0.09344436, 0.015092396, 0.014928694, -0.10982548, 0.1447644) * input_0(-1.0, 0.0);
    result += mat4(0.045270424, 0.01938625, -0.08436276, 0.005246357, -0.01142857, -0.015627282, 0.023931658, -0.06407053, 0.001652832, 0.043917127, -0.007666785, 0.047619104, 0.014426771, 0.0038813557, -0.06811067, 0.042220227) * input_0(-1.0, 1.0);
    result += mat4(0.019574305, 0.046413936, -0.06283184, 0.01580425, 0.0054133623, -0.31270802, 0.29784808, -0.016697243, 0.121275865, -0.12595922, -0.18734871, 0.18507993, -0.054103192, -0.023120567, -0.022339553, -0.0279362) * input_0(0.0, -1.0);
    result += mat4(-0.24821135, -0.22112167, 0.42176694, -0.07706818, 0.0005982007, -0.26073813, 0.074112855, 0.05064337, 0.47849163, 0.5196139, -0.15921462, 0.21563895, -0.1265279, -0.41463017, 0.44866455, -0.790829) * input_0(0.0, 0.0);
    result += mat4(-0.012051134, 0.1662218, 0.11378579, -0.09332113, -0.03419476, -0.08713113, -0.0043138852, 0.023864618, 0.007081655, -0.08262829, 0.019618746, -0.346934, 0.008748613, 0.11646131, 0.042076398, 0.04375812) * input_0(0.0, 1.0);
    result += mat4(-3.6535617e-05, -0.04215766, 0.005536013, 0.00272766, 0.020012435, -0.025078109, -0.015898084, -0.0037408513, 0.19778754, 0.8779378, -0.36141768, -0.06325016, 0.0089061465, 0.055401612, 0.054065246, 0.032329455) * input_0(1.0, -1.0);
    result += mat4(-0.013240631, 0.11886982, 0.019673267, -0.06138904, 0.009928486, 0.043287918, 0.0029696329, 0.0010565812, -0.26997238, 0.2439185, -0.27086726, -0.37767154, -0.10049628, -0.5720188, 0.018781938, 0.13120449) * input_0(1.0, 0.0);
    result += mat4(-0.010466581, 0.014286294, 0.002454806, 0.014963742, 0.022059422, 0.015630279, 0.0035403455, 0.016346516, -0.1289548, -0.25330514, 0.16782045, 0.025723288, 0.051360138, -0.0053211395, -0.1564025, -0.011900644) * input_0(1.0, 1.0);
    result += mat4(-0.013173155, 0.021918276, 0.01640744, -0.020965992, -0.034071755, 0.20277774, 0.3600364, 0.13343933, -0.0032190613, -0.017473113, 0.013582562, 0.010882501, 0.0022734306, 0.03176984, -0.020792006, 0.02574374) * input_1(-1.0, -1.0);
    result += mat4(-0.039939187, -0.10383739, -0.046077628, -0.001083225, 0.030248042, -0.11351933, -0.037451506, 0.017543584, -0.09109475, -0.021060986, 0.2997138, -0.2896032, 0.11184645, 0.1187849, -0.38315076, 0.41237253) * input_1(-1.0, 0.0);
    result += mat4(0.013908083, 0.015675591, -0.24825543, -0.15116364, 0.02330475, -0.03053828, -0.098281845, -0.029720057, -0.045652457, -0.026818853, 0.09670012, -0.051844943, 0.01132228, -0.013008404, 0.010163455, -0.047914583) * input_1(-1.0, 1.0);
    result += mat4(0.011385065, -0.09015862, -0.0072906404, 0.0027188167, 0.26861808, 0.7520356, -1.1804764, 0.46402627, -0.0017956254, 0.22268397, 0.1208711, -0.011071454, -0.0041276547, -0.14538841, -0.2197294, 0.055322196) * input_1(0.0, -1.0);
    result += mat4(0.11279984, 0.12903617, 0.01414364, 0.02928749, -0.13166204, -0.28751075, -0.02307604, 0.4303799, -0.28529245, -0.87348986, 0.07310091, 0.27740481, 0.72769153, 1.1104451, -0.30691415, 0.43888175) * input_1(0.0, 0.0);
    result += mat4(-0.20521908, -0.7523684, 0.78188825, -0.21023682, 0.04353681, 0.16305812, 0.19723943, -0.02745684, -0.040620375, -0.19098456, -0.12736978, -0.02705506, -0.05722863, -0.039428424, 0.049782827, -0.06255424) * input_1(0.0, 1.0);
    result += mat4(0.010315829, 0.04492911, -0.0070827003, 0.0096267015, 0.13492967, 0.18845558, 0.060363412, 0.12520818, 0.027783725, -0.038011074, -0.025442393, 0.032174807, -0.016091798, 0.13573417, -0.0065629473, -0.034068506) * input_1(1.0, -1.0);
    result += mat4(-0.06680073, -0.20679978, -0.012435016, 0.04382343, 0.053362314, 0.64914864, 0.13831834, -0.081059486, 0.08407779, 0.009963291, -0.074831985, 0.0066200728, -0.04483912, 0.26675075, -0.0064159464, -0.039084915) * input_1(1.0, 0.0);
    result += mat4(0.021111168, 0.18828893, -0.036607895, -0.06456423, -0.09354861, -0.06568299, 0.11027824, -0.020828173, -0.035788465, -0.06770947, 0.006878945, -0.046953566, -0.008522748, 0.008841274, 0.042316787, 0.01627852) * input_1(1.0, 1.0);
    result += vec4(0.0021256928, -0.08991885, -0.08131484, -0.048552465);
    return result;
}

//!DESC ArtCNN C4F8 SH (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.008584614, -0.0620589, 0.005015313, -0.0010969962, -0.034855343, -0.4257339, -0.15845773, 0.45833036, -0.018300476, -0.032328855, 0.042389672, -0.04237532, 0.032450277, 0.026478935, 0.010280802, 0.014010955) * input_0(-1.0, -1.0);
    result += mat4(-0.10687753, 0.1873051, 0.081026874, -0.12345758, -0.011508067, -0.05229212, 0.10280805, -0.28742674, 0.012669599, 0.083554134, 0.12576002, -0.056123678, -0.015618965, 0.15218297, -0.21083573, 0.025887724) * input_0(-1.0, 0.0);
    result += mat4(-0.032833073, 0.06495591, -0.01689745, -0.026380105, 0.037396297, 0.13155389, 0.03619762, 0.019580876, -0.03670273, -0.059839696, -0.020349419, 0.014116411, -0.04463754, 0.028435608, -0.0052532097, 0.02403118) * input_0(-1.0, 1.0);
    result += mat4(0.0349889, 0.14396717, -0.009170662, -0.008931132, -0.1929047, 0.4865669, 0.103456706, -0.07502969, -0.15975013, 0.22928238, -0.15941098, -0.16664444, -0.0009040353, -0.20890689, 0.09487942, 0.07939046) * input_0(0.0, -1.0);
    result += mat4(-0.20545432, -1.0636946, -0.0012071811, -0.27150318, -0.092357874, -0.1402355, -0.18053669, -0.15938923, -0.5410082, -0.08325625, 0.2135042, 0.1718979, 0.1303357, -0.7865603, 0.6928577, -0.1704208) * input_0(0.0, 0.0);
    result += mat4(-0.07189318, 0.06834689, -0.08225192, 0.058969047, -0.05316676, 0.024530511, -0.02159046, -0.05337113, 0.07398804, -0.17934254, 0.39687777, -0.20290776, -0.029436283, -0.24315771, -0.18643688, -0.086037904) * input_0(0.0, 1.0);
    result += mat4(-0.015830271, -0.02833398, -0.01666462, -0.024814617, -0.07057779, 0.00833436, 0.0691285, -0.000740857, 0.19277671, 0.9095643, -0.022220032, 0.45704153, -0.0074397265, -0.029144589, 0.01265781, 0.027613832) * input_0(1.0, -1.0);
    result += mat4(0.08858936, -0.06739369, 0.016819201, 0.112032674, -0.06312908, -0.0571667, -0.0057551125, -0.05677647, 0.8957288, 0.24245617, 0.18768007, 0.98185426, 0.3059497, -0.022482194, -0.31211147, -0.1922066) * input_0(1.0, 0.0);
    result += mat4(-0.047504395, 0.1572402, -0.027875772, 0.013220992, -0.019029252, -0.009595094, 0.011628322, -0.009894142, 0.051481854, 0.2719669, -0.05106852, 0.03616668, -0.054612625, -0.0383531, 0.059076544, -0.017586285) * input_0(1.0, 1.0);
    result += mat4(0.01340461, -0.068830006, 0.025212169, 0.025350463, 0.065106384, -0.258911, -0.10836057, 0.18393272, -0.029548436, -0.014401276, 0.041386664, -0.0710504, 0.03922212, 0.042338368, -0.06488424, 0.124068365) * input_1(-1.0, -1.0);
    result += mat4(0.019099576, 0.063268065, -0.031595487, -0.08315055, 0.015696123, 0.12461238, -0.045524273, -0.16728593, 0.103667304, -0.32478175, 0.3300002, -0.02292667, -0.14568052, 0.32847506, -0.52134067, 0.12470666) * input_1(-1.0, 0.0);
    result += mat4(-0.12599985, -0.1616043, 0.12836976, 0.05274447, -0.0028935282, 0.18114337, -0.0033298938, 0.0053322795, 0.059369553, -0.098826304, 0.0077320444, -0.0014105614, -0.007182935, 0.019745955, 0.076496445, -0.039743282) * input_1(-1.0, 1.0);
    result += mat4(-0.031174082, 0.004671287, -0.01830245, -0.051274136, 0.4110547, 2.2503042, 0.07680879, 0.81878096, 0.17014949, -0.022695964, 0.08361235, 0.13012414, -0.24059147, 0.13931645, 0.009498179, -0.10528563) * input_1(0.0, -1.0);
    result += mat4(-0.19794026, 0.022279706, 0.1168354, -0.08420743, -0.22646469, 0.36537096, 0.01777334, 0.33092335, 0.977285, 0.96651644, -0.62951815, -0.04456024, -1.3716938, 0.07399789, -0.15138988, -0.21374075) * input_1(0.0, 0.0);
    result += mat4(0.22669709, -0.4214298, -0.5165648, -0.41827768, -0.27778533, 0.010538991, -0.040956423, -0.16880654, 0.098436356, 0.17236012, 0.2783534, 0.14906469, 0.102447174, 0.03235955, -0.007914992, 0.064257696) * input_1(0.0, 1.0);
    result += mat4(0.03334066, 0.08596176, -0.018064493, 0.02223536, -0.52189916, -0.0071834223, -0.058141597, -0.26867738, -0.048549555, 0.06913866, -0.0019914063, -0.0841371, 0.010862701, -0.060169734, 0.04096616, 0.07653523) * input_1(1.0, -1.0);
    result += mat4(-0.0014786253, -0.10613823, -0.061989818, -0.026423963, -0.22601116, -0.07057687, 0.16846608, 0.1672617, -0.040760994, 0.09306912, 0.22345768, 0.10063547, -0.060972296, -0.13792475, -0.19424047, -0.049173407) * input_1(1.0, 0.0);
    result += mat4(-0.3189571, -0.33779633, -0.052089315, -0.2214, 0.1573655, -0.005822896, -0.034172386, 0.07502437, 0.2140626, -0.026595755, 0.07585217, 0.1233104, -0.037467062, 0.0718051, -0.025925271, -0.0039585344) * input_1(1.0, 1.0);
    result += vec4(-0.034421384, -0.053248852, 0.05280067, 0.033571973);
    return result;
}

//!DESC ArtCNN C4F8 SH (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define input_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.043684784, -0.07436313, -0.13719253, -0.124134205, -0.026284054, 0.05469557, 0.008976917, 0.01887966, -0.09108778, 0.039108012, 0.015251941, 0.03132497, 0.11527592, -0.08585242, -0.03452764, -0.047285803) * input_0(-1.0, -1.0);
    result += mat4(-0.053151883, -0.11375087, 0.045371704, -0.015758794, -0.21183966, 0.10646251, -0.24955288, 0.058786467, 0.19241786, 0.00093192654, 0.12251733, 0.049398128, 0.0013970593, -0.17247863, 0.024401449, -0.23280494) * input_0(-1.0, 0.0);
    result += mat4(0.0636079, 0.06417036, 0.028358212, -0.016831772, 0.006290179, 0.0058548315, -0.078937024, 0.04821177, -0.011555337, -0.0150438165, 0.01343831, -0.016398638, 0.010735904, 0.030873895, -0.019371867, -0.03933367) * input_0(-1.0, 1.0);
    result += mat4(0.2777499, 0.02309932, 0.19747564, 0.07807264, -0.020915259, -0.04775277, 0.08790082, 0.10780959, 0.022710422, 0.0049270396, 0.0053175394, 0.020397643, 0.19649862, 0.013374009, -0.13435838, -0.16016594) * input_0(0.0, -1.0);
    result += mat4(0.3156274, 0.42145386, 0.16413645, -0.010653149, 0.36450803, -0.041302927, 0.41086873, -0.051585507, 0.322848, 0.7605817, 0.2871242, 0.5113285, 0.35435638, 0.25443375, 0.7183933, 0.6215323) * input_0(0.0, 0.0);
    result += mat4(0.089457065, 0.16455086, 0.24609119, 0.35379937, -0.015368658, -0.016168434, -0.012738136, -0.24199168, -0.029810991, -0.011634316, 0.03882866, 0.17241158, -0.07435059, -0.08031158, 0.022144195, -0.050294157) * input_0(0.0, 1.0);
    result += mat4(-0.004175459, 0.1815402, -0.03206408, 0.051149312, 0.010184863, -0.0055631497, 0.0019116512, 0.004714688, 0.023448747, -0.042574845, 0.03139217, -0.0048127933, -0.1166977, 0.0063662776, -0.08998715, -0.07579603) * input_0(1.0, -1.0);
    result += mat4(0.27365386, 0.10519932, 0.25903967, 0.30304825, -0.0037580677, -0.010381673, -0.011438642, -0.0047212895, 0.07731835, 0.041434944, 0.06847762, 0.005353399, -0.42891517, 0.04100178, -0.3298868, 0.15417191) * input_0(1.0, 0.0);
    result += mat4(-0.048345525, -0.012903931, 0.075408585, 0.12639631, 0.012740516, -0.005400326, -0.0003297098, -0.058496997, -0.0044004084, -0.000322711, 0.032231923, 0.015191715, 0.046042096, -0.017743194, -0.1294652, -0.051500857) * input_0(1.0, 1.0);
    result += mat4(0.21810466, -0.08427309, -0.05600554, -0.094495244, -0.095247254, 0.041295867, 0.030540952, 0.04884341, -0.020875469, -0.06644471, -0.024888387, -0.013749901, -0.07806445, 0.001892314, 0.002531428, 0.018081252) * input_1(-1.0, -1.0);
    result += mat4(-0.38730085, -0.17004192, -0.17192605, -0.18949227, 0.039361496, -0.01700487, 0.048794266, 0.015118572, -0.05837411, -0.12790623, 0.009432653, -0.16271329, -0.02869129, -0.07331041, 0.15741855, 0.015344576) * input_1(-1.0, 0.0);
    result += mat4(0.07495317, 0.08977635, -0.08843286, 0.012117976, 0.0023231537, -0.009748704, -0.016684646, -0.0032742373, 0.012344564, 0.013423348, -0.010001711, -0.022920672, 0.00157024, -0.012267842, 0.023132382, -0.019514142) * input_1(-1.0, 1.0);
    result += mat4(-0.16754822, 0.0012019115, -0.038622368, -0.026924731, -0.041242, 0.011180424, -0.02136816, -0.0043334546, -0.0016936514, 0.15879554, 0.022047335, -0.020275494, 0.2127952, 0.04754152, -0.09613011, -0.11829135) * input_1(0.0, -1.0);
    result += mat4(0.23932041, 0.29103675, 0.22973406, 0.3460106, -0.31140885, -0.03630718, 0.00079343613, 0.20373234, 0.24861458, 0.060539268, 0.22729044, 0.55207235, 0.094935104, -0.20436662, 0.0706465, 0.0697312) * input_1(0.0, 0.0);
    result += mat4(0.054062366, 0.0614146, 0.06487355, -0.03635024, 0.081101246, 0.07342457, -0.06757098, -0.0609338, -0.11502603, -0.11114638, 0.037197407, -0.045975387, -0.04832858, -0.029713891, 0.020700963, 0.10975929) * input_1(0.0, 1.0);
    result += mat4(0.009856291, 0.014488358, -0.0035217486, 0.028386679, 0.021842109, -0.04317556, 0.0197786, -0.009855351, -9.390558e-05, -0.036735564, -0.02016831, 0.009343868, -0.067774005, 0.023806607, -0.025248693, -0.05488147) * input_1(1.0, -1.0);
    result += mat4(0.068668604, -0.020161957, 0.06505713, 0.010579274, 0.12356471, -0.025772102, 0.06274815, -0.06171496, -0.051427115, -0.0950851, 0.0005497727, -0.12798484, -0.14644025, 0.14840665, -0.15923592, 0.14883272) * input_1(1.0, 0.0);
    result += mat4(0.007806377, 0.0039831325, -0.0019594273, -0.06471304, -0.006575461, 0.008217063, 0.027368806, -0.036059223, 0.037925526, 0.0183012, -0.024247581, -0.096061334, -0.05213156, -0.0347639, 0.006731522, 0.16838309) * input_1(1.0, 1.0);
    result += vec4(0.113182954, 0.16241644, 0.1531669, 0.1673241);
    return result;
}

//!DESC ArtCNN C4F8 SH (Pixel-Shuffle)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *

vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];
    return clamp(output_pix, 0.0, 1.0);
}
