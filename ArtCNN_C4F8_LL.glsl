// MIT License

// Copyright (c) 2024 Joao Chrisostomo

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//!DESC ArtCNN C4F8 LL (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(0.05115253, -0.14174399, -0.07676242, 0.106235206) * input_0(-1.0, -1.0);
    result += vec4(0.18658885, 0.27896065, 0.15135424, -0.21546179) * input_0(-1.0, 0.0);
    result += vec4(0.055849623, 0.052409846, -0.14802061, 0.1078008) * input_0(-1.0, 1.0);
    result += vec4(0.03430292, -0.08873227, 0.22951068, -0.36713323) * input_0(0.0, -1.0);
    result += vec4(0.43357804, -0.024292624, 0.4507384, 0.78382355) * input_0(0.0, 0.0);
    result += vec4(0.11569417, 0.28745323, -0.18112788, -0.23906529) * input_0(0.0, 1.0);
    result += vec4(-0.024696853, -0.20157664, -0.1672545, 0.06109449) * input_0(1.0, -1.0);
    result += vec4(0.03953607, -0.04811719, 0.15366673, -0.059386898) * input_0(1.0, 0.0);
    result += vec4(-0.1458169, -0.003340028, 0.1263938, -0.06821004) * input_0(1.0, 1.0);
    result += vec4(-0.018684331, 0.00038927054, -0.10438079, -0.024504181);
    return result;
}

//!DESC ArtCNN C4F8 LL (Conv-0)
//!HOOK LUMA
//!BIND LUMA
//!SAVE conv2d_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (LUMA_texOff(vec2(x_off, y_off)).x)
vec4 hook() {
    vec4 result = vec4(-0.12351372, 0.18975396, -0.013263266, -0.24238472) * input_0(-1.0, -1.0);
    result += vec4(-0.09627769, 0.023559438, 0.37287703, -0.020017823) * input_0(-1.0, 0.0);
    result += vec4(-0.120874524, -0.02641619, -0.039213702, 0.056879207) * input_0(-1.0, 1.0);
    result += vec4(0.28118265, -0.07088566, -0.17668459, 0.10132053) * input_0(0.0, -1.0);
    result += vec4(0.40058714, -0.1899194, 0.18762487, 0.2295219) * input_0(0.0, 0.0);
    result += vec4(-0.0036210036, 0.21137235, 0.05413208, 0.1425319) * input_0(0.0, 1.0);
    result += vec4(0.07115005, 0.19674543, -0.18349916, -0.08547741) * input_0(1.0, -1.0);
    result += vec4(-0.36997065, -0.1851244, 0.02757837, -0.116112456) * input_0(1.0, 0.0);
    result += vec4(0.0005204831, -0.04439685, -0.21616833, -0.054833654) * input_0(1.0, 1.0);
    result += vec4(0.025458118, -0.03476335, -0.058475625, -0.044681076);
    return result;
}

//!DESC ArtCNN C4F8 LL (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.06910735, 0.068153135, 0.0047295056, 0.022855153, -0.030472787, 0.06928799, 0.03376534, -0.23032479, 0.08540806, 0.27166665, -0.111338615, -0.03019109, 0.065076776, 0.26546678, -0.07511288, -0.018850546) * input_0(-1.0, -1.0);
    result += mat4(-0.001547688, -0.13533936, -0.29885396, 0.1918098, -0.39724526, -0.15451482, -0.013226549, -0.3948291, -0.00937642, 0.11709072, -0.06855592, -0.12063796, -0.21216686, -0.037361067, -0.25008333, 0.12976956) * input_0(-1.0, 0.0);
    result += mat4(0.29367432, 0.18914685, 0.17220344, -0.35564783, 0.07569207, -0.08707522, -0.13920313, -0.01920528, 0.08359533, -0.48821542, 0.24719407, 0.15130271, -0.07786696, -0.17111732, -0.05839639, 0.15326056) * input_0(-1.0, 1.0);
    result += mat4(-0.16203578, 0.039495517, -0.058624938, 0.04450031, 0.200808, 0.68301296, -0.17680421, 0.12150939, 0.10159786, -0.21008642, 0.08988918, -0.02858451, 0.07568195, -0.65380067, 0.08085039, 0.15845524) * input_0(0.0, -1.0);
    result += mat4(0.32252368, 0.013330773, 0.23554453, -0.012420487, 0.018668042, 0.19845836, 0.5815918, 0.079905815, 0.4481257, 0.16641068, -0.6653787, -0.0714248, 0.58766824, -0.10724414, -1.2893956, -0.4556136) * input_0(0.0, 0.0);
    result += mat4(0.39556795, 0.07407305, 0.39084148, -0.08457237, -0.033002052, -0.93215847, 0.76054287, 0.21508712, 0.15938063, -0.08517343, -0.046594, -0.24295929, -0.3260148, 0.4225478, 1.1105562, 0.80219054) * input_0(0.0, 1.0);
    result += mat4(0.00936966, 0.051682577, -0.1824549, -0.044342835, -0.0886499, 0.17906451, -0.064577684, -0.14405246, -0.044711217, -0.52779883, -0.08840501, -0.023170838, 0.0946526, -0.11195429, -0.03249394, -0.27620313) * input_0(1.0, -1.0);
    result += mat4(-0.043010656, 0.22358759, -0.04412152, 0.033978317, -0.16758946, -0.24572898, 0.2435199, -0.14651074, 0.11399667, -0.21440914, 0.034583066, 0.17674255, 0.45217574, 0.42789572, 0.0038665398, 0.46928182) * input_0(1.0, 0.0);
    result += mat4(-0.029342387, -0.18552874, 0.09075949, -0.022992667, -0.075615376, 0.9552015, -0.044128757, 0.36968902, 0.039887525, 0.10047516, 0.013357467, -0.16440046, 0.11396909, 1.1324507, -0.0885268, 0.09716422) * input_0(1.0, 1.0);
    result += mat4(-0.15700808, -0.038060922, -0.0016211055, -0.06311706, 0.250397, 0.10167073, -0.052634176, 0.18338966, -0.15897804, -0.13445081, 0.10937335, -0.092054255, 0.145431, 0.27970353, -0.057865888, 0.4497222) * input_1(-1.0, -1.0);
    result += mat4(0.21229005, -0.617032, 0.20746103, 0.39011303, 0.12074582, -0.34810394, 0.2922911, 0.24424706, 0.2166533, -0.09455194, 0.21746854, 0.39773247, -0.04707832, -0.4079017, 0.16515411, -0.06265277) * input_1(-1.0, 0.0);
    result += mat4(0.06488904, -0.32085815, -0.21755296, -0.38392407, 0.06524797, -0.5392113, -0.46471745, -0.37087098, -0.11491835, -0.277612, -0.07449768, 0.26176402, -0.053562917, 0.4009126, -0.20750344, -0.15438354) * input_1(-1.0, 1.0);
    result += mat4(-0.23835148, -0.45782623, -0.20025851, -0.15915844, -0.13392122, 0.5414681, 0.043715045, -0.31806114, -0.44961485, -0.39378473, -0.23493038, -0.088739604, 0.023237063, -0.18921554, 0.055087324, -0.008687003) * input_1(0.0, -1.0);
    result += mat4(0.5357478, 0.8828971, -0.7275849, 0.027193988, 0.12455794, -0.53488797, 0.91385376, -0.52190566, 0.003781698, -0.18851735, -0.3257441, -0.050798625, 0.011789322, 0.49806136, 0.07597536, -0.03352189) * input_1(0.0, 0.0);
    result += mat4(0.25738803, -0.07477304, 0.49508387, -0.32690766, -0.24006094, 0.69814336, -0.16113056, 0.12874083, -0.23993808, 0.59455407, -0.96499574, 0.25475046, -0.12242997, -0.47051662, 0.37871403, -0.12887761) * input_1(0.0, 1.0);
    result += mat4(0.031562842, -0.17970635, -0.09195472, 0.18592237, -0.20744339, 0.1934693, 0.020967564, -0.0479018, 0.063183606, -0.207881, 0.10151929, 0.27851018, -0.13498467, 0.3626762, 0.103830956, -0.24134247) * input_1(1.0, -1.0);
    result += mat4(0.17838177, -0.22474742, -0.25644118, -0.011138204, -0.41594663, 0.10663906, 0.15707669, -0.101143286, -0.14897878, -0.30618274, -0.19954497, -0.30267462, 0.14798641, 0.10427276, -0.015523958, 0.13579845) * input_1(1.0, 0.0);
    result += mat4(0.11499664, -0.13062048, 0.32013208, -0.037676718, -0.08102295, 0.7770365, -0.22777064, -0.018876277, -0.03809552, -0.45834947, 0.07170927, -0.21157596, 0.19255742, -0.08906546, -0.040197775, 0.22803146) * input_1(1.0, 1.0);
    result += vec4(0.060778223, -0.064462796, -0.09921991, 0.36876318);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-1-ReLU)
//!HOOK LUMA
//!BIND conv2d_tf
//!BIND conv2d_tf1
//!SAVE conv2d_1_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.024936927, -0.23975487, -0.05134709, -0.18822894, -0.023591733, 0.040600713, -0.044702776, 0.022199897, 0.124036975, 0.2937657, 0.08240395, 0.4001927, 0.21006054, -0.7469159, -0.09964379, 0.14494604) * input_0(-1.0, -1.0);
    result += mat4(0.1875667, -0.04658634, -0.062183715, -0.0763267, -0.31080812, -0.1414011, -0.1924594, -0.42400324, -0.25155565, 0.23527966, -0.090851136, -0.21666448, 0.2915732, 0.06431268, -0.10307667, -0.1637966) * input_0(-1.0, 0.0);
    result += mat4(0.012662601, -0.36873415, 0.006728696, 0.029764418, 0.025596566, 0.28057456, 0.15996246, 0.28561953, 0.10737991, 0.075924195, 0.09023448, 0.21518691, 0.19138432, 0.42429525, 0.058152188, 0.53646857) * input_0(-1.0, 1.0);
    result += mat4(0.09124436, 0.21807551, -0.08443846, 0.21820378, 0.102607094, 1.0661693, -0.14676131, 0.76649433, -0.17748578, -0.3498362, 0.022667168, -0.8018445, -0.21828651, -0.70801294, -0.056609314, -0.77722955) * input_0(0.0, -1.0);
    result += mat4(0.19159676, -0.03312967, -0.19148672, 0.097019516, -0.37056383, -0.5170411, -0.16289826, -0.58813024, 0.55809325, 0.12886833, -0.13891067, 0.09124193, 0.7278688, 0.016177492, -0.85295665, 0.4704588) * input_0(0.0, 0.0);
    result += mat4(0.25418895, 0.12022971, -0.15219651, 0.08615116, 0.12519512, 0.22002259, -0.025028167, -0.24827853, -0.17024004, -0.27106977, 0.04553005, -0.21911232, 0.20411196, 0.96000314, 0.14670353, -0.0067879832) * input_0(0.0, 1.0);
    result += mat4(-0.07635442, -0.03115731, 0.0053222207, 0.2718525, 0.034382313, 0.17214751, 0.11333472, 0.2285214, -0.019933654, -0.0278708, -0.0002507063, 0.11388811, -0.04547881, 0.089510545, -0.06344044, 0.009245886) * input_0(1.0, -1.0);
    result += mat4(0.12398741, 0.034613844, 0.17815638, 0.024503954, 0.0025184974, 0.01305726, -0.25263068, 0.33201706, -0.13942607, -0.29330552, 0.41957608, -0.18117681, -0.2585489, 0.8958923, 1.6559054, -0.28398937) * input_0(1.0, 0.0);
    result += mat4(0.15692267, -0.0470783, 0.11435255, 0.17387563, -0.005059717, 0.30546305, 0.17470406, -0.015130098, -0.024553621, 0.29328892, 0.037022013, -0.094468795, -0.11627864, -0.0013648913, 0.3435678, -0.34465927) * input_0(1.0, 1.0);
    result += mat4(-0.14575656, -0.49974215, -0.015385118, -0.094468504, 0.06785972, 0.019047609, 0.041443054, 0.10383177, -0.2469481, -0.04703659, 0.008076464, -0.3730627, 0.18801332, -0.19371808, -0.03710489, 0.09900025) * input_1(-1.0, -1.0);
    result += mat4(-0.05056838, -0.89012897, 0.18255487, -1.6472049, 0.10769013, -0.8324709, -0.09224385, -1.475123, 0.31040522, -0.45068246, 0.19987403, 0.05017496, 0.09085212, -0.011107661, -0.08743645, -0.6556236) * input_1(-1.0, 0.0);
    result += mat4(0.106850676, 0.33253682, -0.0844368, 0.4115149, -0.0011020962, 0.50542426, -0.08773509, 0.49388647, -0.18516736, -0.16772488, -0.027358193, -0.427804, -0.18553376, -0.18130822, -0.070186116, 0.10483827) * input_1(-1.0, 1.0);
    result += mat4(-0.2879652, -0.57975894, -0.23063827, -0.13815908, 0.0068450253, 0.7987867, -0.5058525, 0.60099447, -0.11846762, -0.36750552, -0.16205196, -0.047294974, 0.097851805, 0.35813457, -0.032223243, 0.37956733) * input_1(0.0, -1.0);
    result += mat4(0.59720445, -0.005973147, -1.3215022, 0.49292597, -0.19369316, 0.07963036, -0.24960518, -0.036794536, -0.24959628, -0.5664094, -0.4342471, -0.17189237, -0.020420412, -0.0058140857, -0.063193396, -0.06470054) * input_1(0.0, 0.0);
    result += mat4(0.045188557, 0.11116545, -0.036112785, 0.23474276, -0.17077671, -0.32269892, 0.41376817, -0.02041676, 0.017071344, 0.555655, -0.19132526, 0.2587433, -0.04182434, 0.16416696, -0.085023135, -0.24235518) * input_1(0.0, 1.0);
    result += mat4(0.024399726, 0.08607745, 0.17260271, -0.07995497, 0.010787748, 0.18069029, 0.30831438, 0.13465866, 0.018261, -0.19022183, 0.13895331, -0.19505204, -0.17768916, 0.06981083, 0.10824029, 0.016050603) * input_1(1.0, -1.0);
    result += mat4(-0.14915234, 0.068588816, 0.1913224, -0.2293097, 0.11994111, 0.061753973, -0.47338474, 0.29849583, 0.31405476, -0.12476371, -0.901187, 0.032219145, 0.044231705, 0.06227727, 0.0629688, -0.040323697) * input_1(1.0, 0.0);
    result += mat4(-0.14802876, 0.17057139, 0.28192163, -0.1590232, 0.10885172, 0.28224227, -0.17018393, 0.042078644, 0.013747539, -0.5357969, -0.13268474, 0.025886402, -0.20410213, -0.013255041, -0.03341683, -0.018081905) * input_1(1.0, 1.0);
    result += vec4(0.08587208, -0.028619956, -0.039528355, -0.105083495);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.22443685, 0.14943369, -0.016928062, -0.087070465, -1.4258009, 0.03547623, -0.011377182, -0.10244953, -1.4520353, 0.056709636, 0.044940222, 0.02420857, -0.86908764, -0.033019733, 0.046518214, 0.021707) * input_0(-1.0, -1.0);
    result += mat4(0.59652764, 0.36444974, -0.1668467, -0.21465516, 0.13784993, 0.11317728, -0.09302592, 0.1790459, -0.15969345, -0.027911434, 0.000109727865, 0.08494284, 0.031504657, 0.25430974, 0.03861092, -0.038680058) * input_0(-1.0, 0.0);
    result += mat4(-0.3575208, 0.2956955, -0.046971634, 0.050510798, 0.0024026383, 0.14006451, -0.04951444, 0.067289464, 0.098536536, 0.033052396, -0.009780455, 0.01999697, -0.06537494, 0.045272782, 0.0023079126, 0.033209804) * input_0(-1.0, 1.0);
    result += mat4(0.31910586, 0.23904371, 0.036896292, 0.18364947, 0.16094546, 0.065587364, 0.015297634, 0.11645517, -0.07477861, -0.9426607, 0.017379044, -0.77888954, 0.119070224, 0.08691626, -0.030068366, 0.08310707) * input_0(0.0, -1.0);
    result += mat4(0.36636537, 0.12392948, 0.77217925, 0.42302066, -0.1906061, 0.116223104, -0.030685749, 0.010987476, -0.27176628, -1.068691, 0.005355748, -0.5385392, 0.17464826, 0.55072623, 0.10654677, 0.35562247) * input_0(0.0, 0.0);
    result += mat4(0.24479142, 0.53114235, -0.025398633, 0.3061115, -0.01700782, 0.0011551185, 0.028483713, -0.03374624, -0.0060964003, -0.039464507, 0.026593745, 0.04629972, 0.0979306, 0.2494431, -0.04954294, -0.0164309) * input_0(0.0, 1.0);
    result += mat4(-0.05340812, -0.02921382, -0.08932786, -0.31206766, -0.0071828933, 0.03812847, -0.032185607, -0.17599572, 0.15160277, -0.006650173, 0.05059731, -0.95689845, -0.33025143, -0.061786834, 0.021747734, -0.10503305) * input_0(1.0, -1.0);
    result += mat4(-0.016464507, 0.087184824, -0.12848966, 0.3390404, 0.019337902, 0.038328722, -0.05230102, 0.09644772, 0.021364607, -0.016104605, 0.0027869865, -0.14560145, 0.07869014, 0.19042608, -0.025715139, -0.016449047) * input_0(1.0, 0.0);
    result += mat4(-0.1282963, 0.016062997, 0.054231185, -0.018079842, 0.006465643, 0.008255756, -0.017545933, 0.03462915, 0.0026898668, 0.0087769665, -0.010208768, 0.055104803, -0.03588937, -0.11182769, 0.03452356, 0.08649483) * input_0(1.0, 1.0);
    result += mat4(-2.438251, -0.1213225, -0.01033654, 0.18294393, -2.3073153, -0.046069834, 0.043395214, 0.029867157, -2.9421635, 0.00674681, 0.024832662, 0.1137046, 0.22465979, 0.07969031, -0.054115824, 0.07959023) * input_1(-1.0, -1.0);
    result += mat4(-0.25150898, -0.670302, 0.1076563, 0.041098773, 0.15094985, 0.041461583, 0.05296027, -0.17999947, -0.576567, -1.1839181, 0.032925747, -0.2896311, 0.10238427, -0.042427734, -0.07363078, 0.079408154) * input_1(-1.0, 0.0);
    result += mat4(-0.042556792, -0.3048911, 0.044051792, 0.04362303, 0.07278774, -0.03111827, 0.026057044, -0.050310344, 0.10445808, -0.08379979, 0.07899104, -0.018907726, -0.12652871, -0.06947258, -0.010985091, 0.0033807268) * input_1(-1.0, 1.0);
    result += mat4(0.019147951, -0.34347737, 0.043795343, -0.62010807, -0.27471334, -0.06246581, -0.033850282, 0.0744261, 0.026246589, -0.04064225, 0.024935255, -0.20698717, 0.1924235, 0.09649759, 0.0092237545, -0.085758425) * input_1(0.0, -1.0);
    result += mat4(0.529838, -0.47345048, 0.4820081, -0.19795695, 0.09023166, 0.440616, -0.083223775, 0.28713718, 0.14789699, -1.037146, 0.0067878426, -0.93276787, 0.39853594, 1.6527586, 0.21521002, 0.7980403) * input_1(0.0, 0.0);
    result += mat4(0.059283856, -0.0355799, 0.008611108, -0.28565603, -0.0024486915, 0.105375305, -0.023355504, 0.099089615, -0.05987332, 0.045622233, 0.07881456, 0.043752085, 0.034394927, -0.025884455, -0.07064929, 0.042571414) * input_1(0.0, 1.0);
    result += mat4(-0.5253517, -0.1393968, 0.036351055, -0.21279858, -0.063500635, -0.0064579514, 0.017684538, 0.18185659, 0.05567984, 0.01549554, 0.026881402, -0.08316255, 0.12356501, 0.06898025, -0.0059430446, 0.024111232) * input_1(1.0, -1.0);
    result += mat4(-0.09388286, 0.23278725, 0.009266749, 0.2817197, -0.065352015, 0.032591082, -0.021096852, 0.5304356, -0.005098083, -0.0034385442, 0.05723744, -0.096630074, -0.30518854, -0.00815839, 0.02462858, 0.30494437) * input_1(1.0, 0.0);
    result += mat4(-0.016942095, -0.12878187, 0.016466828, 0.030659014, 0.07514257, -0.064188115, 0.00061391434, 0.009069611, 0.022029925, 0.021790449, 0.010481596, 0.023136076, -0.0077246474, -0.07541252, 0.022286372, -0.1671032) * input_1(1.0, 1.0);
    result += vec4(-0.079681434, -0.32178128, 0.0021011885, -0.10368243);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-2-ReLU)
//!HOOK LUMA
//!BIND conv2d_1_tf
//!BIND conv2d_1_tf1
//!SAVE conv2d_2_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_1_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_1_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.43945292, -0.13443866, -0.12877019, -0.16978423, -0.33145326, -0.15445817, -0.13759428, -0.064795084, -0.16672899, -0.069227636, 0.11304501, -0.13662247, 0.013263767, 0.09395472, -0.07281725, 0.091640756) * input_0(-1.0, -1.0);
    result += mat4(0.42023697, 0.13146783, -0.09362432, 0.21585348, -0.48436674, -0.22573927, -0.3497295, 0.116632655, -0.11802686, -0.050035782, -0.14942276, -0.019653652, 0.009417388, -0.10797859, 0.0093154395, -0.031093672) * input_0(-1.0, 0.0);
    result += mat4(-0.15526871, -0.08053725, -0.42736763, -0.19433789, -0.36959597, 0.060747158, -0.08646114, 0.042949762, -0.0367909, 0.0544577, 0.041623592, 0.047105696, 0.02155218, -0.020179328, -0.06466077, 0.03116186) * input_0(-1.0, 1.0);
    result += mat4(-0.351109, -0.3516165, 0.055357642, 0.14121743, -0.5176045, -0.21544285, -0.20277816, 0.030869242, 0.22146836, -0.035029497, 0.35482618, -0.93997234, 0.016117813, -0.009759418, 0.09310349, 0.06592958) * input_0(0.0, -1.0);
    result += mat4(0.41935632, 0.25909767, 0.2743575, -0.48005134, -0.80202806, -0.27179706, -0.15366164, 0.058526997, 0.17347981, -0.16083944, 0.2488678, -0.45214307, -0.3069365, -0.08224273, -0.25294024, 1.1604223) * input_0(0.0, 0.0);
    result += mat4(-0.46097544, -0.31432757, -0.25448564, 0.55971193, -0.3899969, -0.16248065, 0.0041416883, -0.018857913, -0.011453683, -0.087606, 0.031906985, 0.03665534, -0.10530727, -0.25703433, -0.025032327, -0.10406184) * input_0(0.0, 1.0);
    result += mat4(0.041785546, 0.15455516, -0.051594198, -0.03561487, -0.20092183, -0.19151019, -0.054018505, 0.097848155, 0.14727572, -0.10708981, -0.12562735, -0.093367755, 0.037743703, 0.21429896, -0.060382906, -0.07255718) * input_0(1.0, -1.0);
    result += mat4(-0.12525654, -0.08421066, 0.0026766486, -0.094888106, -0.44110602, 0.040195, -0.082285814, -0.0614265, -0.16413464, -0.11076615, -0.18589503, -0.05492255, -0.034009665, 0.53517085, 0.026082456, -0.03514611) * input_0(1.0, 0.0);
    result += mat4(0.12883575, 0.24768585, 0.11872734, -0.024026608, -0.19182968, 0.11178661, 0.057378702, 0.0068103783, -0.033329695, -0.053915255, 0.021960422, 0.043250274, 0.08119356, 0.22122493, 0.059479184, -0.014882727) * input_0(1.0, 1.0);
    result += mat4(0.22512428, 0.21648946, -0.031727124, 0.25567862, 0.19940548, 0.075854935, -0.061721068, 0.03311956, -0.20943572, -0.048474994, -0.10777539, -0.00613168, -0.10445427, -0.016743364, 0.10915966, 0.04248827) * input_1(-1.0, -1.0);
    result += mat4(0.015207201, -0.35057175, 0.5650635, -0.422546, 0.17920372, 0.08104678, -0.117593676, 0.18278454, 0.11993609, 0.27263945, 0.4309768, -0.6439687, 0.34454626, 0.043890167, 0.25991347, -0.1872083) * input_1(-1.0, 0.0);
    result += mat4(-0.03441156, 0.15207344, 0.2721435, 0.3762123, 0.19462465, -0.09036555, -0.05514499, 0.055807978, -0.004734895, 0.24433815, -0.03541341, 0.053066302, 0.24499571, 0.12730862, 0.30691165, -0.07043328) * input_1(-1.0, 1.0);
    result += mat4(0.6853018, 0.29826313, 0.41278377, -0.17022474, 0.2841314, 0.2637458, 0.043778922, 0.05507249, -0.17290446, 0.040031523, 0.039716918, 0.16187294, 0.26193488, -0.1116489, 0.27569425, 0.025404982) * input_1(0.0, -1.0);
    result += mat4(0.02522758, 0.59921026, -0.44386777, 0.1628679, 0.29662967, 0.3326145, -0.14412603, 0.3911245, 0.1754819, -0.78957945, 0.11492271, -0.20106415, -0.21373388, -0.17902148, -0.33602792, 0.9949306) * input_1(0.0, 0.0);
    result += mat4(-0.17152971, 0.18254003, -0.03196567, 0.16353512, 0.37199363, -0.05198758, 0.057685047, 0.1097538, -0.20258275, 0.23368476, -0.029092899, 0.07545649, 0.18962534, -0.12549038, 0.23639879, -0.10456143) * input_1(0.0, 1.0);
    result += mat4(-0.0110334335, -0.1887909, -0.18592446, -0.014181791, 0.16839054, 0.16370699, 0.016766263, -0.04189239, -0.084504366, -0.005311626, 0.036626656, 0.076441705, 0.19823614, 0.01938059, 0.07840738, -0.062401216) * input_1(1.0, -1.0);
    result += mat4(-0.4441014, -0.47135663, -0.116773844, 0.24078406, 0.26681373, 0.3674566, 0.07127429, 0.12250665, 0.03211897, -0.13084309, 0.009893352, 0.043080065, 0.03628956, 0.10482997, 0.289091, -0.016433803) * input_1(1.0, 0.0);
    result += mat4(0.32984883, 0.10739005, -0.0048660715, -0.08974179, 0.42813078, -0.06754149, 0.042371854, 0.06298577, -0.023734346, -0.062002007, -0.043534532, 0.024062274, 0.24637462, -0.27672893, 0.23670517, 0.04519669) * input_1(1.0, 1.0);
    result += vec4(0.06964741, -0.26107827, 0.080639906, -0.3834944);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(0.021525016, 0.018685862, -0.007304395, 0.004257325, 0.38196227, -0.049790103, 0.11737985, 0.0075422633, 0.10751085, 0.06085271, 0.05987428, -0.0067001157, -0.05306992, -0.16045229, -0.020534525, -0.048276477) * input_0(-1.0, -1.0);
    result += mat4(0.051827405, 0.0046033463, 0.028446643, 0.0007943944, -0.55790055, -0.04207468, 0.22887936, -0.015749477, -0.45322257, -0.02450454, 0.098288506, 0.067963615, 0.26493278, 0.21569619, -0.17255212, 0.06685157) * input_0(-1.0, 0.0);
    result += mat4(0.0024679783, 0.033863217, -0.01482881, -0.0022707928, -0.00243795, 0.124188036, -0.0467373, -0.027633658, 0.03556823, -0.26958984, -0.21775226, 0.064231865, 0.051386535, 0.055425577, -0.10298798, 0.09885134) * input_0(-1.0, 1.0);
    result += mat4(0.064798705, 0.1396781, -0.007735921, 0.013254375, -0.6020197, -0.1428522, -0.03085, -0.13699862, -0.40344176, -0.1213821, -0.066640735, -0.10380112, -0.074546166, -0.12770557, -0.10249673, -0.09904515) * input_0(0.0, -1.0);
    result += mat4(-0.5027913, -0.30797958, 0.24899994, -0.13795972, -0.2970576, 0.62760943, -0.68197966, 0.4793457, 0.5977297, 0.72936857, 0.34148976, 0.5351902, -0.0994446, 0.25911158, -0.48845255, 0.17676535) * input_0(0.0, 0.0);
    result += mat4(0.006632827, -0.18363479, -0.18958823, -0.019191202, 0.0014180942, 0.22253405, 0.008168257, 0.12773196, 0.09768167, -0.36854258, 0.37987056, 0.050739765, 0.062964156, 0.0749143, -0.35913727, 0.10639351) * input_0(0.0, 1.0);
    result += mat4(0.008796305, 0.120164216, 0.069371894, 0.10362349, 0.14635068, -0.07728764, 0.1631785, 0.0075398716, 0.057252895, 0.037658434, 0.0007680133, 0.009613197, -0.0148840435, -0.004805682, 0.051910877, 0.0011169694) * input_0(1.0, -1.0);
    result += mat4(-0.058794938, -0.10107214, 0.27364528, -0.37947375, 0.13898502, -0.018564144, -0.35720503, 0.14259703, 0.0131852, -0.087279245, 0.016811872, -0.04233737, 0.005294153, -0.023660535, -0.021287303, -0.0031088747) * input_0(1.0, 0.0);
    result += mat4(-1.396762, -2.3028507, -0.38177383, 0.33403766, -0.17994748, 0.10646761, 0.04928917, 0.019857736, -0.09663894, 0.037712146, -0.12458386, -0.009783949, 0.045546748, 0.10054034, 0.13266309, -0.0030298834) * input_0(1.0, 1.0);
    result += mat4(-0.013245841, -0.0039249794, -0.022394609, 0.00064202654, -0.03758695, -0.040805064, 0.057702567, -0.02010104, -0.09527713, 0.006312919, -0.011522564, -0.007890718, 0.03443859, -0.005637346, 0.0390758, -0.07234067) * input_1(-1.0, -1.0);
    result += mat4(0.26234078, 0.14492132, -0.1650063, 0.059412695, 0.10663238, 0.06377344, -0.15287301, 0.01868859, -0.049780343, -0.10307222, 0.013067484, -0.07358238, 0.118014134, -0.07971995, 0.032740824, -0.07875411) * input_1(-1.0, 0.0);
    result += mat4(0.21991919, 0.17308615, 0.069889136, 0.035107017, 0.076847486, 0.09076379, 0.14650203, 0.0066976757, -0.00023317488, 0.034731388, -0.022865206, -0.013257458, 0.10710784, 0.008427118, 0.15143698, -0.02728268) * input_1(-1.0, 1.0);
    result += mat4(0.30034572, 0.19984502, -0.00076131104, 0.11178684, -0.07226285, -0.007774112, 0.09094822, -0.051423267, 0.05120823, 0.04232165, 0.08028142, 0.05074374, 0.2127986, 0.040646657, -0.018785788, 0.01312189) * input_1(0.0, -1.0);
    result += mat4(0.27035698, -0.23658976, 0.4156603, -0.024893817, -0.025709428, 0.092929855, 0.30832016, 0.018581523, 0.037661746, -0.2397101, 0.07503378, -0.195068, -0.38425684, -0.21883298, -0.28499526, 0.036376063) * input_1(0.0, 0.0);
    result += mat4(0.19898257, 0.021474881, 0.039045326, 0.027718868, 0.019913705, -0.19980782, -0.0029291937, 0.0028504145, -0.18845528, 0.24791925, 0.19084468, -0.08575185, -0.042465203, -0.16663192, -0.26484782, 0.03867815) * input_1(0.0, 1.0);
    result += mat4(0.30203485, 0.0105270855, 0.04545312, 0.029193927, 0.110813595, -0.013956308, 0.058935814, 0.0049397396, 0.05219418, 0.025669836, -0.03956095, 0.007504495, 0.012308498, 0.044938736, 0.034322564, 0.01545939) * input_1(1.0, -1.0);
    result += mat4(0.17398542, 0.016238248, -0.1719897, -0.07455393, -0.07884152, 0.065052666, 0.08725847, -0.09134115, -0.19299105, -0.005742559, -0.050940283, -0.051410783, -0.06878452, -0.18927336, 0.060761426, -0.03548392) * input_1(1.0, 0.0);
    result += mat4(0.07614636, 0.15915339, -0.0074407104, 0.02966771, 0.02417594, 0.08711202, 0.09661736, -0.04056898, -0.095970176, -0.044743333, 0.029298007, -0.011843192, 0.0108688, 0.08209457, 0.11598132, -0.003046619) * input_1(1.0, 1.0);
    result += vec4(-0.00019325849, 0.014698756, 0.025653925, -0.0482683);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-3-ReLU)
//!HOOK LUMA
//!BIND conv2d_2_tf
//!BIND conv2d_2_tf1
//!SAVE conv2d_3_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_2_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_2_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.00022345397, 0.018241717, 0.03369905, 0.013284243, -0.029710803, -0.12775318, 0.08159119, -0.07269579, 0.041174147, -0.012125198, 0.049597744, 0.009764831, -0.17523055, 0.009264005, -0.18069573, -0.011009952) * input_0(-1.0, -1.0);
    result += mat4(0.066025, 0.017521838, -0.06738549, 0.034916773, -0.2405381, -0.040947292, -0.098250404, -0.10328781, -0.11911735, -0.13922635, 0.0721207, -0.16969742, 0.37715667, 0.39302468, 0.35466895, 0.23176971) * input_0(-1.0, 0.0);
    result += mat4(0.10524761, -0.037622627, 0.033275537, -0.011400146, -0.27122188, -0.03086725, -0.046330336, -0.09399313, -0.5461912, 0.087891325, -0.092472285, 0.054336794, -0.02313913, 0.2222453, 0.11129062, 0.13082726) * input_0(-1.0, 1.0);
    result += mat4(0.11389455, 0.044369627, 0.14995457, 0.023545107, 0.03543804, 0.17235729, -0.0818902, 0.19063918, -0.16728166, 0.12747419, -0.051754635, -0.04983109, -0.15217936, 0.14142387, -0.1315009, 0.12155486) * input_0(0.0, -1.0);
    result += mat4(-0.38302565, -0.2580047, -0.2084743, -0.14960094, 0.18533741, 0.84607995, 0.06789652, 0.58478004, 0.7173621, -0.002557398, 0.62372476, 0.6027762, 0.047266494, 0.39807773, 0.3316002, 0.31168023) * input_0(0.0, 0.0);
    result += mat4(-0.6621869, 0.07924219, 0.16189092, -0.048611443, -0.83807373, -0.17800774, -0.7620757, -0.22487006, 0.13720253, -0.16476013, -0.6355379, 0.06967522, -0.49139485, 0.12005085, 0.10990416, 0.02634558) * input_0(0.0, 1.0);
    result += mat4(0.1359671, -0.12949584, 0.035355188, -0.13485076, 0.0017448502, -0.09030438, -0.026305854, -0.011808302, 0.103926145, -0.047942735, -0.0068587447, -0.023778442, 0.062329415, -0.058535874, 0.018201161, -0.01046525) * input_0(1.0, -1.0);
    result += mat4(0.030159278, 0.98170286, -0.36061394, 1.0035781, 0.024120871, 0.21772279, -0.09621475, 0.23574035, -0.24736916, 0.11613839, -0.009036459, 0.024125185, -0.026183438, -0.008997379, 0.03086416, 0.021721618) * input_0(1.0, 0.0);
    result += mat4(-0.8082372, -0.9941899, -0.99573666, -0.16864301, 0.44413882, -0.11590246, -0.39579254, -0.104795046, 0.061450582, 0.014343713, 0.04164966, -0.070574954, 0.2945487, -0.027426938, -0.008075176, -0.0006963535) * input_0(1.0, 1.0);
    result += mat4(-0.14135295, 0.006340103, -0.030188039, -0.025035715, 0.2093756, -0.07118826, 0.029275283, -0.020801222, 0.042027414, -0.03367731, -0.05074209, -0.023846194, 0.0042918986, -0.06442536, 0.031361274, -0.119345024) * input_1(-1.0, -1.0);
    result += mat4(0.11959606, 0.24730949, 0.046019882, 0.14701675, 0.19197571, 0.09265896, -0.09102305, 0.05538866, -0.15923017, -0.00038196737, -0.077288896, -0.06687716, 0.0044303094, 0.0818703, 0.012247165, 0.04526013) * input_1(-1.0, 0.0);
    result += mat4(0.031523284, 0.0372404, 0.040969, -0.0006802177, 0.18236542, -0.06286764, -0.109954566, -0.026930792, -0.028080424, 0.044829916, 0.0704116, 0.014733907, 0.055614606, 0.02500571, -0.07000466, 0.0057702423) * input_1(-1.0, 1.0);
    result += mat4(0.19053598, 0.028526274, 0.17961131, 0.0003845847, 0.058449678, 0.015589631, -0.0048919288, 0.010459302, -0.09164954, -0.028966315, -0.030099666, 0.03587698, 0.1417426, 0.051113173, 0.43378523, -0.09990357) * input_1(0.0, -1.0);
    result += mat4(-0.79744244, 0.0266129, -0.14409827, 0.16819744, 0.028930627, 0.12633885, -0.12507907, 0.015448997, 0.015361979, -0.1869826, -0.33944646, -0.003480547, -0.68615973, 0.3338624, -0.106101766, 0.08865747) * input_1(0.0, 0.0);
    result += mat4(-0.5722271, 0.10568687, 0.2372008, 0.003628293, -0.36314997, -0.055432174, -0.23936872, -0.063091375, 0.61218196, -0.0006895677, 0.07692169, -0.031113334, -0.78047746, 0.26568612, -0.573268, 0.09177857) * input_1(0.0, 1.0);
    result += mat4(-0.052504245, 0.024789635, 0.059026863, 0.08202069, 0.10905549, 0.030093914, -0.12860407, 0.035529643, -0.026126308, 0.059491083, -0.11329693, 0.03922034, 0.095334, 0.034515727, 0.24132657, 0.0139847705) * input_1(1.0, -1.0);
    result += mat4(-0.3784363, 0.2985752, 0.053522106, 0.098075435, 0.12024044, 0.07951198, -0.012862272, -0.022881258, 0.020785872, -0.14349763, 0.074397564, -0.10974342, -0.1592218, -0.050009158, -0.063401945, 0.01524377) * input_1(1.0, 0.0);
    result += mat4(0.1544076, 0.13868533, -0.038810834, 0.06340369, 0.09140799, 0.060842857, -0.056428123, 0.03533101, 0.07700524, -0.20675956, 0.03215874, -0.08415768, -0.17837171, 0.054377083, 0.05281847, 0.031423982) * input_1(1.0, 1.0);
    result += vec4(0.045659583, 0.0032112717, -0.032197263, -0.04825397);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.04292947, -0.012243, -0.021868318, 0.027838314, -0.0027242482, -0.021209942, 0.32355127, -0.103838265, -0.059614476, -0.017989617, -0.022829153, -0.086622156, 0.013540988, 0.026759868, -0.24473824, 0.12960894) * input_0(-1.0, -1.0);
    result += mat4(0.07049037, 0.012932011, 0.07321633, -0.074258566, 0.1975317, -0.011011473, 0.8597211, 0.33881304, 0.10223588, 0.036123324, -0.3350093, 0.4298735, -0.10911153, 0.0067665563, -0.43698397, -0.22035728) * input_0(-1.0, 0.0);
    result += mat4(-0.067408435, -0.08799025, -2.238303, -0.15329564, -0.13038929, 0.07374846, -2.7880232, -0.052215543, -0.1172999, 0.031035267, -2.6633008, -0.020919142, 0.035016734, -0.04641976, -6.294463, 0.28774545) * input_0(-1.0, 1.0);
    result += mat4(-0.13310044, 0.020097196, -0.06281978, 0.01955104, 0.49213648, -0.032838084, 0.08399881, -0.1311334, -0.2433355, -0.0054573766, -0.05914, 0.21931249, -0.4407272, 0.03366397, -0.061949152, -0.01642188) * input_0(0.0, -1.0);
    result += mat4(0.13012612, -0.0015213003, 0.051195502, 0.12000474, 0.27845505, -0.14211306, -0.00015816849, 0.11876804, 0.32406443, -0.05577308, 0.16216417, -0.17922655, 0.66024107, 0.22545882, 0.24493754, -0.950088) * input_0(0.0, 0.0);
    result += mat4(0.19282259, 0.084754825, -0.2855347, 0.28853467, -0.3689934, 0.009688505, 0.0017541137, -0.02668012, 0.051636416, 0.03038391, 0.07887904, 0.09195348, 0.3105946, 0.22459947, 0.23982365, 0.2954696) * input_0(0.0, 1.0);
    result += mat4(0.107647814, 0.0014264799, -0.025954472, -0.06321155, 0.10431192, 0.011554695, -0.022858322, 0.093214534, -0.1305306, -0.007141181, 0.035503667, -0.12419655, -0.14927888, -0.026879685, 0.043554615, -0.027425006) * input_0(1.0, -1.0);
    result += mat4(-0.20986149, 0.023862952, 0.019637942, -0.020516247, 0.20954895, 0.08188447, -0.06727965, 0.19812343, 0.047260214, 0.0020769227, -0.020540193, 0.1615032, 0.054071244, -0.27245325, 0.0065985383, 0.030316325) * input_0(1.0, 0.0);
    result += mat4(0.07610101, 0.05598519, 0.07256866, -0.12528796, -0.008906082, -0.06778977, 0.0052269255, -0.055653576, 0.030987583, 0.029704608, -0.017789325, -0.00565061, 0.08344681, -0.38039365, -0.054460786, 0.072470866) * input_0(1.0, 1.0);
    result += mat4(0.006583224, -0.022312306, -0.42247024, 0.15517145, -0.049928643, -0.012445603, -0.24249795, 0.00351525, 0.13129596, 0.033942316, 0.18240587, 0.12315303, 0.10353314, 0.0046094167, 0.2571858, -0.027919058) * input_1(-1.0, -1.0);
    result += mat4(-0.12603317, -0.08142653, -0.20442264, -0.25033906, -0.014611571, 0.06131736, -0.51621264, 0.14981031, -0.012481902, 0.03426749, -0.448907, -0.08745841, -0.16744064, -0.054429714, -0.18531345, -0.18794046) * input_1(-1.0, 0.0);
    result += mat4(0.042660855, -0.03494309, -0.7156581, 0.00805952, -0.15515918, 0.0667425, -1.0358219, -0.11353376, 0.09973276, -0.060330663, -1.0791045, 0.10097379, 0.017471535, -0.11624575, 1.3940629, -0.07220251) * input_1(-1.0, 1.0);
    result += mat4(0.062126357, 0.04377154, -0.1247417, 0.29786205, -0.17295028, 0.00766556, -0.13620551, 0.29343417, 0.7471135, -0.008125434, -0.19176897, 0.22043447, 0.037014086, 2.4969258e-05, 0.10854175, -0.23190156) * input_1(0.0, -1.0);
    result += mat4(-0.26922506, 0.13375664, 0.0103894435, 0.18097788, -0.22810297, 0.056180988, -0.0031368632, -0.8162699, -0.46747884, -0.10196789, 0.15170945, -0.25957975, 0.21688752, -0.029781856, 0.09537095, 0.78988427) * input_1(0.0, 0.0);
    result += mat4(0.146095, 0.0066241706, -0.035901513, 0.006092006, 0.4038984, -0.16654706, -0.04279957, 0.30838722, 0.2821472, 0.020980738, 0.028612372, 0.07895617, -0.81828487, 0.23354551, 0.047379058, -0.47654033) * input_1(0.0, 1.0);
    result += mat4(-0.07426868, 0.022580924, 0.018635763, -0.12345099, -0.22415873, -0.015178379, -0.0056714416, -0.09083063, 0.26144135, -0.06662228, 0.029914, 0.04867796, 0.16351937, 0.012451295, 0.0009270081, 0.08199709) * input_1(1.0, -1.0);
    result += mat4(-0.022054812, 0.031983968, 0.035357304, -0.09684497, -0.11179972, -0.20789002, -0.0014925417, 0.060516298, -0.10841325, -0.0147176515, 0.015373485, 0.010602027, 0.06837814, 0.1774359, -0.0014003535, -0.067665346) * input_1(1.0, 0.0);
    result += mat4(-0.030813262, 0.00185991, 0.01890005, 0.010508604, 0.112974025, -0.058844976, -0.022088263, 0.056323662, 0.03330635, 0.013498348, -0.018724095, 0.028990224, -0.20428836, -0.016924577, 0.036484115, -0.00091639126) * input_1(1.0, 1.0);
    result += vec4(-0.011500049, -0.003943121, -0.0033160448, -0.03739203);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-4-ReLU)
//!HOOK LUMA
//!BIND conv2d_3_tf
//!BIND conv2d_3_tf1
//!SAVE conv2d_4_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_3_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_3_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.12904927, 0.0065172384, 0.04236625, -0.004733502, 0.033720665, 0.006690193, -0.05582763, -0.049905315, -0.010217443, -0.002869628, 0.15244286, -0.017554225, -0.32359004, 0.008691474, 0.037127, 0.053340055) * input_0(-1.0, -1.0);
    result += mat4(0.008396172, 0.0009049791, -0.124507815, 0.11461689, -0.024182873, 0.058251113, 0.11922318, -0.18121868, 0.013369362, -0.009736881, 0.3178026, -0.16022551, 0.24233009, -0.08431486, 0.18648636, 0.09657778) * input_0(-1.0, 0.0);
    result += mat4(0.015481816, -0.03328913, -0.14114521, 0.106432825, 0.010490521, -0.038104314, 0.024367396, 0.046392173, -0.015041702, -0.022865433, 0.009480526, -0.043695107, -0.06448355, 0.036828514, 0.010403436, -0.018869802) * input_0(-1.0, 1.0);
    result += mat4(-0.07726069, -0.0118790995, -0.08564836, 0.015395962, -0.036484107, 0.0041047223, -0.17942318, 0.020159144, -0.13047048, -0.020603055, 0.08659741, -0.016155204, -0.22424157, 0.054422114, -0.49336037, -0.068651415) * input_0(0.0, -1.0);
    result += mat4(0.04106784, -0.011554146, 0.82503766, -0.18120286, -0.04720629, 0.3270916, -0.5022841, 0.46552217, 0.0015408277, -0.0424034, -0.008147237, 1.070475, -0.07384801, -0.32105285, -0.7944444, -0.87568736) * input_0(0.0, 0.0);
    result += mat4(-0.015493726, 0.13716261, -0.083453886, -0.124391295, 0.018273922, -0.40940437, 0.08416327, -0.27062887, -0.025741098, 0.17971396, -0.0065928632, 0.19059236, -0.03537537, 0.6486841, 0.017883085, 0.47093853) * input_0(0.0, 1.0);
    result += mat4(-0.069139466, 0.0128823975, -0.014940179, -0.030628607, 0.089698486, 0.017406588, 0.25895527, -0.07902283, -0.04487834, 0.01401274, -0.09244347, -0.014088068, -0.15367587, -0.024303028, -0.112868905, -0.00823179) * input_0(1.0, -1.0);
    result += mat4(0.019774787, -0.100318395, -0.27480263, 0.021748744, -0.003928975, 0.10226942, 0.06802452, -0.016858209, 0.027508784, -0.03944081, 0.20726442, -0.0894881, 0.04098832, -0.027304603, 0.23738162, 0.05712039) * input_0(1.0, 0.0);
    result += mat4(0.0015885214, 0.14673088, -0.020867804, 0.11636677, 0.013099677, 0.046951964, 0.05190706, 0.17282392, -0.014094008, 0.027725287, -0.07171173, -0.102947414, -0.029316645, 0.15135142, -0.054639064, -0.22953269) * input_0(1.0, 1.0);
    result += mat4(-0.07742932, -0.008600982, -0.15401337, 0.05278262, -0.0074069556, 0.017305197, 0.22412029, -0.0034841537, -0.087790884, 0.055534482, -0.01941948, -0.05844922, 0.23978932, -0.020650802, -0.22376698, 0.04305298) * input_1(-1.0, -1.0);
    result += mat4(-0.0063723223, -0.03366155, -0.08595672, 0.12040902, -0.034995474, -0.045026165, -0.15300061, -0.28866255, -0.009878108, 0.011928131, -0.12219209, 0.064931825, -0.013234254, 0.035895217, 0.002663808, 0.321653) * input_1(-1.0, 0.0);
    result += mat4(0.005235037, -0.018919807, -0.042090695, -0.04767623, 0.019687988, -0.060457386, -0.0062476867, -0.106300265, -0.034885667, 0.12379746, -0.027443733, 0.021996578, -0.033967122, -0.04314047, -0.013489567, 0.096203774) * input_1(-1.0, 1.0);
    result += mat4(-0.015607402, 0.059702188, 0.45647103, 0.21175848, -0.25603527, 0.048669763, -0.38561693, 0.08491016, -0.051576886, -0.116689675, 0.060990326, 0.18251376, 0.35492614, -0.03287294, 0.35507363, -0.16437282) * input_1(0.0, -1.0);
    result += mat4(-0.0058483193, -0.114421934, 0.33095524, -0.38458407, -0.0035213002, -0.32200208, -0.042169504, 0.49995652, 0.040800024, 0.3103701, 0.300845, -0.3122741, 0.107717335, 0.27597934, -0.016517129, -0.62346196) * input_1(0.0, 0.0);
    result += mat4(0.004350665, 0.15574455, -0.036110967, 0.080256075, -0.012812608, 0.366309, -0.10609003, 0.2298159, -0.020214725, 0.29980683, -0.085014835, 0.10185668, 0.04340581, -0.7799488, 0.36437848, -0.5782501) * input_1(0.0, 1.0);
    result += mat4(-0.04382658, -0.034633964, -0.1829568, -0.074599914, -0.11928067, 0.0017516657, -0.09918108, -0.08186767, -0.15592384, 0.044772416, -0.04378215, 0.049264833, 0.110443614, -0.00557544, 0.08417114, 0.12409523) * input_1(1.0, -1.0);
    result += mat4(0.00038213257, -0.010752733, -0.0951584, 0.12702139, 0.0062111663, -0.084974796, 0.18424602, -0.1781414, -0.0029421302, 0.0569387, 0.05571008, -0.028602723, -0.021020778, 0.060403164, -0.067365006, 0.25101545) * input_1(1.0, 0.0);
    result += mat4(0.0005714979, 0.024872662, -0.014633357, -0.0038316783, -0.004036725, 0.05198641, -0.05775894, -0.18149623, -0.011368439, -0.01280606, -0.0092090545, -0.087980375, 0.020755613, -0.21733919, 0.0025193463, 0.20315126) * input_1(1.0, 1.0);
    result += vec4(0.006151783, -0.010072697, -0.0390133, -0.06765934);
    return max(result, vec4(0.0));
}

//!DESC ArtCNN C4F8 LL (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.008636949, -0.02538963, 0.017625742, -0.032855548, -0.10490542, 0.20299962, -0.061812624, 0.038324207, 0.0048589194, -0.029584592, 0.02899119, -0.0025281138, 0.011839455, 0.028713137, 0.008652476, -0.0042967787) * input_0(-1.0, -1.0);
    result += mat4(0.08056612, -0.03809299, -0.16019043, -0.04833437, -0.037805222, -0.055086337, 0.08400742, -0.20735635, 0.018170489, 0.021835474, 0.029880373, -0.08955437, 0.031806964, -0.0627864, -0.08947934, 0.08621691) * input_0(-1.0, 0.0);
    result += mat4(0.07118331, 0.049967866, -0.08919668, 0.030475866, -0.01591106, -0.024503924, 0.014507855, -0.054444022, -0.006728311, 0.0051188893, -0.02528197, 0.020269787, 0.054898918, 0.011039907, -0.10588083, 0.06519782) * input_0(-1.0, 1.0);
    result += mat4(0.0043439325, 0.013147638, -0.01694373, 0.027480843, 0.015852543, -0.3294026, 0.3059689, -0.012876353, 0.10685938, -0.14468691, -0.17103492, 0.15957363, -0.03320596, 0.05134195, 0.03327187, -0.042146277) * input_0(0.0, -1.0);
    result += mat4(-0.2900305, -0.3191625, 0.49241012, -0.11005911, 0.0023788454, -0.28709143, 0.10687272, 0.08445797, 0.4952752, 0.5130175, -0.11958084, 0.29258355, -0.16624653, -0.46341085, 0.44205707, -0.93692183) * input_0(0.0, 0.0);
    result += mat4(-0.045529835, 0.101392284, 0.12637682, -0.15452583, -0.010294701, -0.073370345, -0.028690616, 0.03718029, -0.02240455, -0.09926655, 0.02429544, -0.36298454, -0.021519734, 0.16371122, 0.042549256, -0.010753043) * input_0(0.0, 1.0);
    result += mat4(-0.01059717, -0.012037647, 0.0313082, -0.006796765, 0.0095177945, -0.09648451, -0.0046890816, 0.004331399, 0.032332547, 0.5506441, 0.21346255, -0.20179741, -0.012133592, 0.002728578, 0.028767178, 0.010587557) * input_0(1.0, -1.0);
    result += mat4(-0.02626063, 0.09086387, 0.029386114, -0.016614333, 0.0020692837, 0.016221985, -0.024285708, -0.01671124, -0.39669743, 0.07082705, -0.36349338, -0.16547579, -0.15672751, -0.66522884, 0.101787515, 0.07334135) * input_0(1.0, 0.0);
    result += mat4(-0.003997044, -0.104479365, -0.01625643, 0.03668134, 0.017636478, 0.02013704, -0.0051704575, 0.0094018215, 0.012084893, -0.42686316, 0.058548402, 0.17052905, 0.0523879, 0.12726757, -0.07806391, -0.0016254451) * input_0(1.0, 1.0);
    result += mat4(-0.01797477, 0.024733346, 0.016653705, -0.019501956, -0.10554278, 0.10596894, 0.26823175, 0.06681406, 0.0043150694, -0.04122969, -0.02373453, 0.037661858, -0.034587953, 0.010919777, 0.02863436, 0.003877669) * input_1(-1.0, -1.0);
    result += mat4(-0.027514648, -0.077369206, -0.01701943, 0.035210155, -0.011611483, -0.11487451, -0.041411124, 0.022495285, -0.011905041, 0.06285872, 0.18104087, -0.33329642, 0.11537167, 0.14171167, -0.30340004, 0.4883171) * input_1(-1.0, 0.0);
    result += mat4(-0.020279486, 0.03746836, -0.19910443, -0.10194657, 0.06241157, 0.014619167, -0.08641069, 0.022386827, -0.08904073, -0.037991103, 0.12092583, -0.07129829, 0.0018122402, -0.017695382, 0.020720916, -0.0934849) * input_1(-1.0, 1.0);
    result += mat4(0.015593604, -0.11040737, 0.0013163694, 0.0049858293, 0.33925733, 0.7564518, -1.2710335, 0.48237345, -0.026019653, 0.28387585, 0.083011135, -0.013572934, 0.021394573, -0.22636418, -0.19019549, 0.03991862) * input_1(0.0, -1.0);
    result += mat4(0.11296783, 0.084995955, 0.022125572, -0.04618853, -0.087023966, -0.264355, 0.03549478, 0.4886062, -0.2854224, -0.8062416, -0.030409964, 0.26325446, 0.640503, 1.1223061, -0.3937713, 0.32341984) * input_1(0.0, 0.0);
    result += mat4(-0.15424392, -0.6504976, 0.831568, -0.15441169, 0.029449467, 0.17956018, 0.15319547, -0.096994765, 0.006306406, -0.16209778, -0.028189195, 0.08498223, -0.063946724, -0.16469699, 0.022270113, -0.08283186) * input_1(0.0, 1.0);
    result += mat4(0.0083238, 0.06124722, -0.037627194, 0.008460939, 0.100161314, 0.18581083, 0.08882299, 0.03254815, 0.021363271, -0.015336761, -0.03018847, 0.021103738, 0.0016504921, 0.13321964, 0.0068425545, -0.024935093) * input_1(1.0, -1.0);
    result += mat4(-0.050253272, -0.22692017, 0.013990988, 0.011698132, 0.0627709, 0.6625219, 0.030204417, -0.094333746, 0.11880061, 0.092906736, -0.15741035, 0.025116168, -0.04438803, 0.2446575, 0.01458002, -0.07783947) * input_1(1.0, 0.0);
    result += mat4(0.03630635, 0.030220468, -0.076981016, -0.069474846, -0.08163764, -0.16260773, 0.04382106, -0.0219833, -0.030224657, -0.11198655, -0.026012078, -0.0032970386, -0.0016127531, 0.010712101, 0.077086315, 0.010374676) * input_1(1.0, 1.0);
    result += vec4(0.0037313602, -0.08821556, -0.08116831, -0.05118425);
    return result;
}

//!DESC ArtCNN C4F8 LL (Conv-5)
//!HOOK LUMA
//!BIND conv2d_4_tf
//!BIND conv2d_4_tf1
//!SAVE conv2d_5_tf1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) (conv2d_4_tf_texOff(vec2(x_off, y_off)))
#define input_1(x_off, y_off) (conv2d_4_tf1_texOff(vec2(x_off, y_off)))
vec4 hook() {
    vec4 result = mat4(-0.021744773, -0.08381306, 0.04322208, -0.024232581, -0.07499071, -0.4356445, -0.09289851, 0.38842016, -0.016192175, -0.016094767, 0.04155047, -0.045541342, 0.05197913, 0.0554548, -0.046754267, 0.07662671) * input_0(-1.0, -1.0);
    result += mat4(-0.08347141, 0.15775947, 0.08986178, -0.1494119, 0.042901292, -0.06028543, 0.1396899, -0.29585862, 0.01272387, 0.05893631, 0.12915307, -0.067516826, 0.0011675645, 0.13365085, -0.16454068, -0.032810234) * input_0(-1.0, 0.0);
    result += mat4(-0.056366522, 0.11501246, -0.00948103, -0.0048189713, 0.04842212, 0.04019043, 0.04724601, 0.026127538, -0.020114956, -0.008654816, -0.0022081386, 0.0033886498, -0.06787896, 0.07910449, -0.020253327, 0.005373075) * input_0(-1.0, 1.0);
    result += mat4(0.035319317, 0.051649373, -0.016729495, 0.008087431, -0.17001633, 0.53280854, 0.08023958, -0.13833591, -0.17463845, 0.22484525, -0.08721628, -0.24250145, -0.029159768, -0.19232193, 0.09378566, 0.05089167) * input_0(0.0, -1.0);
    result += mat4(-0.25963163, -1.0959153, -0.019913694, -0.4188055, -0.07976299, -0.14936464, -0.11711933, -0.1572327, -0.46312413, -0.112747885, 0.2963878, 0.23315853, 0.14381862, -0.93617463, 0.6993299, -0.08321151) * input_0(0.0, 0.0);
    result += mat4(-0.03521136, -0.08308169, -0.0228923, -0.017221976, -0.024156075, 0.008460136, -0.0010294779, -0.024600873, 0.027773766, -0.19167718, 0.31677365, -0.24339701, -0.11343607, -0.21720366, -0.32285595, -0.10799733) * input_0(0.0, 1.0);
    result += mat4(-0.019911496, -0.05779559, 0.0051740673, -0.010575482, -0.0090940725, -0.007923572, 0.037665494, -0.013987602, 0.43784317, 0.18442266, -0.09276031, 0.7071134, 0.015465937, -0.05307251, -0.0037746218, 0.029080205) * input_0(1.0, -1.0);
    result += mat4(0.2112089, -0.010949294, 0.03728961, 0.13502541, 0.013715783, -0.050142076, 0.0074699847, -0.015610491, 1.5402172, 0.44861495, -0.015308202, 0.8070188, 0.31042537, -0.045888823, -0.26104376, -0.15529329) * input_0(1.0, 0.0);
    result += mat4(0.04597816, 0.1426394, 0.03101109, 0.02940241, -0.0060436525, -0.016668666, 0.0071849846, -0.0050623203, 0.11021862, 0.36668843, 0.13259242, 0.051661152, -0.14239582, 0.027100833, -0.028288309, -0.033380076) * input_0(1.0, 1.0);
    result += mat4(0.019474948, -0.04279174, 0.015331118, 0.020758582, 0.16286893, -0.17962195, -0.12507623, 0.2529687, -0.07854403, -0.009130781, 0.036139224, -0.10600486, 0.044350393, -0.028274788, -0.071907744, 0.08700894) * input_1(-1.0, -1.0);
    result += mat4(-0.026657067, -0.026940344, -0.014223707, -0.111264236, 0.00541566, 0.054144435, -0.02371522, -0.14998008, 0.03218052, -0.29106516, 0.4213338, 0.004390325, -0.1821555, 0.34818223, -0.5114766, 0.096967) * input_1(-1.0, 0.0);
    result += mat4(-0.17869022, -0.07596736, 0.2374858, -0.20574397, -0.04163612, 0.14436331, -0.010451135, -0.0061471025, 0.09455095, -0.17355363, -0.010796906, -0.019763594, 0.008515774, 0.047828674, 0.1441581, -0.019809695) * input_1(-1.0, 1.0);
    result += mat4(-0.018985085, -0.0029885098, -0.025592972, -0.0507945, 0.3587297, 2.089135, 0.22740296, 0.83982366, 0.114367776, -0.06919441, 0.09613372, 0.13957627, -0.19666635, 0.09389933, 0.0033370247, -0.143734) * input_1(0.0, -1.0);
    result += mat4(-0.18365619, -0.008971786, 0.08780469, -0.09525716, -0.14821558, 0.24568783, 0.010326267, 0.23800233, 0.9607543, 0.96460277, -0.54082316, -0.047023017, -1.3849789, 0.050370477, -0.17769702, -0.19317861) * input_1(0.0, 0.0);
    result += mat4(0.1673916, -0.59672135, -0.49438608, -0.465978, -0.17749597, 0.052350882, 0.013289953, -0.057599988, 0.12961638, 0.14995666, 0.29271564, 0.15904093, 0.10173712, -0.06695662, -0.009095361, -0.055447567) * input_1(0.0, 1.0);
    result += mat4(0.009997391, 0.07934105, -0.006839972, 0.021749247, -0.5105175, -0.058011755, -0.023232892, -0.20616126, 0.017918097, 0.1083252, -0.015784448, -0.028746122, -0.019868422, -0.05257082, 0.057222612, 0.067484766) * input_1(1.0, -1.0);
    result += mat4(0.05917969, -0.16055365, -0.04643534, -0.006297407, -0.23123708, -0.059148215, 0.10633711, 0.13602029, -0.043759327, 0.10223221, 0.21360572, 0.1041126, -0.13206032, -0.12727521, -0.12477327, -0.05208506) * input_1(1.0, 0.0);
    result += mat4(-0.24292815, -0.23426025, -0.098381706, -0.31674927, 0.17379726, -0.049528982, -0.017130213, 0.023531664, 0.24315335, -0.046769507, 0.0720387, 0.085644476, -0.09022765, 0.027016688, -0.024392746, -0.028858796) * input_1(1.0, 1.0);
    result += vec4(-0.05078004, -0.041537303, 0.052320544, 0.030801497);
    return result;
}

//!DESC ArtCNN C4F8 LL (Long-Skip-Conv-6)
//!HOOK LUMA
//!BIND conv2d_5_tf
//!BIND conv2d_tf
//!BIND conv2d_5_tf1
//!BIND conv2d_tf1
//!SAVE conv2d_6_tf
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define input_0(x_off, y_off) ((conv2d_5_tf_texOff(vec2(x_off, y_off)))+(conv2d_tf_texOff(vec2(x_off, y_off))))
#define input_1(x_off, y_off) ((conv2d_5_tf1_texOff(vec2(x_off, y_off)))+(conv2d_tf1_texOff(vec2(x_off, y_off))))
vec4 hook() {
    vec4 result = mat4(0.048573636, -0.06965888, -0.1354433, -0.114728175, -0.04041539, 0.0014038992, -0.014544249, 0.005616022, -0.090261556, 0.038668845, 0.0049628126, 0.022215689, 0.12812115, -0.04884463, -0.039410494, -0.050549097) * input_0(-1.0, -1.0);
    result += mat4(-0.05460188, -0.108728416, 0.04917478, -0.014991604, -0.1783962, 0.08502038, -0.20400098, 0.045838587, 0.18165039, 0.0066713537, 0.11184727, 0.046351172, -0.026049415, -0.13339873, 0.034039516, -0.18046792) * input_0(-1.0, 0.0);
    result += mat4(0.06277949, 0.0656522, 0.026301742, -0.021612022, -0.004005809, -0.0009574898, -0.06997303, 0.033007678, -0.008510925, -0.012697197, 0.020089692, -0.004468891, 0.013747057, 0.03048192, -0.017557643, -0.016115107) * input_0(-1.0, 1.0);
    result += mat4(0.2771548, 0.026404614, 0.19686933, 0.081902966, -0.049715985, -0.10629321, 0.08475931, 0.047149464, 0.0204352, 0.0095690545, 0.014938776, 0.01939336, 0.18029216, 0.084412284, -0.07809068, -0.058321383) * input_0(0.0, -1.0);
    result += mat4(0.3175689, 0.42154515, 0.1624759, -0.0074980003, 0.3433979, -0.04945781, 0.35736305, -0.0907867, 0.32361817, 0.7486323, 0.28811726, 0.5177143, 0.3356833, 0.20369978, 0.6671184, 0.579368) * input_0(0.0, 0.0);
    result += mat4(0.08418728, 0.16266124, 0.23885068, 0.34967315, -0.0012221343, -0.007730254, 0.012195301, -0.19772656, -0.017400527, -0.007594434, 0.04988431, 0.17429894, -0.04266883, -0.042102702, 0.035123598, -0.042080477) * input_0(0.0, 1.0);
    result += mat4(-0.0050936183, 0.1764863, -0.031733975, 0.049598604, 0.015742943, -0.007520565, 0.004504434, 0.010521925, 0.007101402, -0.041564967, 0.021229742, -0.008637001, -0.057657607, 0.03852735, -0.060400408, -0.02915511) * input_0(1.0, -1.0);
    result += mat4(0.27720267, 0.103657745, 0.2595615, 0.3026249, -0.022601932, -0.03511883, -0.0134209525, -0.0070200255, 0.07366429, 0.036148064, 0.06809189, 0.009695659, -0.33130214, 0.06446997, -0.24083298, 0.15018171) * input_0(1.0, 0.0);
    result += mat4(-0.04061104, -0.01210873, 0.07867395, 0.12442187, 0.021298338, 0.00342817, -0.017679038, -0.0668022, -0.002969658, 0.003702226, 0.02147847, 0.011092219, 0.021506712, -0.009543716, -0.10777615, -0.05042238) * input_0(1.0, 1.0);
    result += mat4(0.21097781, -0.08958906, -0.07605644, -0.08954544, -0.085950695, 0.04784586, 0.04335758, 0.05504292, 0.021733236, -0.0111962855, -0.003076455, 0.0063646724, -0.07085049, 0.034944896, 0.038844418, 0.025154699) * input_1(-1.0, -1.0);
    result += mat4(-0.31934968, -0.100817494, -0.086215705, -0.11620168, 0.067522444, 0.017458705, 0.06368701, 0.03462638, -0.0344208, -0.0952071, 0.038230628, -0.12931526, 0.032283243, -0.03151681, 0.12430996, 0.020720122) * input_1(-1.0, 0.0);
    result += mat4(0.04114725, 0.06202594, -0.08770979, 0.0045810807, -0.019574828, -0.015313908, -0.02320582, 0.007347423, 0.0076812487, 0.00934441, 0.00012415, -0.010325659, -0.004033489, -0.019389996, 0.025898816, -0.019075172) * input_1(-1.0, 1.0);
    result += mat4(-0.15621796, 0.014406328, -0.010716731, -0.0035151457, -0.039811935, 0.010993062, -0.023587337, -0.01547635, -0.06214259, 0.13979764, -0.0072940807, -0.030145625, 0.21615355, 0.06967663, -0.10424796, -0.067493044) * input_1(0.0, -1.0);
    result += mat4(0.20334762, 0.2009066, 0.21555173, 0.25569504, -0.27505472, 0.0029234388, 0.007031225, 0.20469531, 0.22066614, 0.04890887, 0.18861613, 0.5479643, 0.009820807, -0.22437404, -0.05139891, -0.022645239) * input_1(0.0, 0.0);
    result += mat4(0.03932602, 0.044082783, 0.027619857, -0.0763306, 0.027114704, 0.0132020395, -0.11133262, -0.10695707, -0.06551372, -0.07133977, 0.048321605, -0.010897874, -0.010254746, -0.008910417, 0.06131218, 0.116893634) * input_1(0.0, 1.0);
    result += mat4(0.03256049, 0.008192285, 0.012522049, 0.034061197, 0.0033735952, -0.0564529, 0.012462339, -0.014241961, 0.009840009, -0.05062137, -0.0020315344, 0.008987428, -0.058709737, 0.036476288, -0.029028328, -0.048509095) * input_1(1.0, -1.0);
    result += mat4(0.070048705, -0.0504616, 0.067576654, 0.0015458822, 0.08058164, -0.053373855, 0.051761728, -0.07025454, -0.08417396, -0.13798076, -0.026247874, -0.17882308, -0.03597148, 0.2421742, -0.082279734, 0.16293575) * input_1(1.0, 0.0);
    result += mat4(0.019811934, 0.009412762, -0.0013000594, -0.07516891, 0.009231477, 0.004677106, 0.01996343, -0.05204647, 0.02821276, 0.016534638, -0.036011904, -0.10852786, -0.054232407, -0.019961238, 0.05673367, 0.2542781) * input_1(1.0, 1.0);
    result += vec4(0.11531705, 0.1607336, 0.1570375, 0.16869855);
    return result;
}

//!DESC ArtCNN C4F8 LL (Pixel-Shuffle)
//!HOOK LUMA
//!BIND LUMA
//!BIND conv2d_6_tf
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *

vec4 hook() {
    vec4 output_pix = vec4(0.0, 0.0, 0.0, 1.0);
    vec2 f0 = fract(conv2d_6_tf_pos * conv2d_6_tf_size);
    ivec2 i0 = ivec2(f0 * vec2(2.0));
    output_pix.x = conv2d_6_tf_tex((vec2(0.5) - f0) * conv2d_6_tf_pt + conv2d_6_tf_pos)[i0.y * 2 + i0.x];
    return clamp(output_pix, 0.0, 1.0);
}
